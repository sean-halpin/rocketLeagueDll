///*
//#############################################################################################
//# RocketLeague (1.0.10897.0) SDK
//# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
//# ========================================================================================= #
//# File: ProjectX_functions.h
//# ========================================================================================= #
//# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
//# Thanks: HOOAH07, lowHertz
//# Forums: www.uc-forum.com, www.gamedeception.net
//#############################################################################################
//*/
//
//#ifdef _MSC_VER
//	#pragma pack ( push, 0x4 )
//#endif
//
///*
//# ========================================================================================= #
//# Functions
//# ========================================================================================= #
//*/
//
//// Function ProjectX._SharedHelpers.ScoreDeltaFromDefault
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Object                         ( CPF_Parm )
//
//int U_SharedHelpers::ScoreDeltaFromDefault ( class UObject* Object )
//{
//	static UFunction* pFnScoreDeltaFromDefault = NULL;
//
//	if ( ! pFnScoreDeltaFromDefault )
//		pFnScoreDeltaFromDefault = (UFunction*) UObject::GObjObjects()->Data[ 47696 ];
//
//	U_SharedHelpers_execScoreDeltaFromDefault_Parms ScoreDeltaFromDefault_Parms;
//	ScoreDeltaFromDefault_Parms.Object = Object;
//
//	pFnScoreDeltaFromDefault->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnScoreDeltaFromDefault, &ScoreDeltaFromDefault_Parms, NULL );
//
//	pFnScoreDeltaFromDefault->FunctionFlags |= 0x400;
//
//	return ScoreDeltaFromDefault_Parms.ReturnValue;
//};
//
//// Function ProjectX._SharedHelpers.FindNetId
//// [0x00C22003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            FindId                         ( CPF_Parm )
//// TArray< struct FUniqueNetId >  List                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//int U_SharedHelpers::FindNetId ( struct FUniqueNetId FindId, TArray< struct FUniqueNetId >* List )
//{
//	static UFunction* pFnFindNetId = NULL;
//
//	if ( ! pFnFindNetId )
//		pFnFindNetId = (UFunction*) UObject::GObjObjects()->Data[ 47689 ];
//
//	U_SharedHelpers_execFindNetId_Parms FindNetId_Parms;
//	memcpy ( &FindNetId_Parms.FindId, &FindId, 0x48 );
//
//	this->ProcessEvent ( pFnFindNetId, &FindNetId_Parms, NULL );
//
//	if ( List )
//		memcpy ( List, &FindNetId_Parms.List, 0xC );
//
//	return FindNetId_Parms.ReturnValue;
//};
//
//// Function ProjectX._SharedHelpers.DrawShadowedText
//// [0x00826002] 
//// Parameters infos:
//// class UCanvas*                 Canvas                         ( CPF_Parm )
//// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// int                            ShadowOffsetX                  ( CPF_OptionalParm | CPF_Parm )
//// int                            ShadowOffsetY                  ( CPF_OptionalParm | CPF_Parm )
//// int                            ShadowAlpha                    ( CPF_OptionalParm | CPF_Parm )
//
//void U_SharedHelpers::DrawShadowedText ( class UCanvas* Canvas, struct FString Text, int ShadowOffsetX, int ShadowOffsetY, int ShadowAlpha )
//{
//	static UFunction* pFnDrawShadowedText = NULL;
//
//	if ( ! pFnDrawShadowedText )
//		pFnDrawShadowedText = (UFunction*) UObject::GObjObjects()->Data[ 47680 ];
//
//	U_SharedHelpers_execDrawShadowedText_Parms DrawShadowedText_Parms;
//	DrawShadowedText_Parms.Canvas = Canvas;
//	memcpy ( &DrawShadowedText_Parms.Text, &Text, 0xC );
//	DrawShadowedText_Parms.ShadowOffsetX = ShadowOffsetX;
//	DrawShadowedText_Parms.ShadowOffsetY = ShadowOffsetY;
//	DrawShadowedText_Parms.ShadowAlpha = ShadowAlpha;
//
//	this->ProcessEvent ( pFnDrawShadowedText, &DrawShadowedText_Parms, NULL );
//};
//
//// Function ProjectX._SharedHelpers.IsInTransientPackage
//// [0x00022400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Obj                            ( CPF_Parm )
//
//bool U_SharedHelpers::IsInTransientPackage ( class UObject* Obj )
//{
//	static UFunction* pFnIsInTransientPackage = NULL;
//
//	if ( ! pFnIsInTransientPackage )
//		pFnIsInTransientPackage = (UFunction*) UObject::GObjObjects()->Data[ 47677 ];
//
//	U_SharedHelpers_execIsInTransientPackage_Parms IsInTransientPackage_Parms;
//	IsInTransientPackage_Parms.Obj = Obj;
//
//	pFnIsInTransientPackage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsInTransientPackage, &IsInTransientPackage_Parms, NULL );
//
//	pFnIsInTransientPackage->FunctionFlags |= 0x400;
//
//	return IsInTransientPackage_Parms.ReturnValue;
//};
//
//// Function ProjectX._SharedHelpers.GetAPlayerController
//// [0x00026400] ( FUNC_Native )
//// Parameters infos:
//// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  PlayerControllerClass          ( CPF_OptionalParm | CPF_Parm )
//
//class APlayerController* U_SharedHelpers::GetAPlayerController ( class UClass* PlayerControllerClass )
//{
//	static UFunction* pFnGetAPlayerController = NULL;
//
//	if ( ! pFnGetAPlayerController )
//		pFnGetAPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 47674 ];
//
//	U_SharedHelpers_execGetAPlayerController_Parms GetAPlayerController_Parms;
//	GetAPlayerController_Parms.PlayerControllerClass = PlayerControllerClass;
//
//	pFnGetAPlayerController->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetAPlayerController, &GetAPlayerController_Parms, NULL );
//
//	pFnGetAPlayerController->FunctionFlags |= 0x400;
//
//	return GetAPlayerController_Parms.ReturnValue;
//};
//
//// Function ProjectX._SharedHelpers.GetDefaultObject
//// [0x00022400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  ObjClass                       ( CPF_Parm )
//
//class UObject* U_SharedHelpers::GetDefaultObject ( class UClass* ObjClass )
//{
//	static UFunction* pFnGetDefaultObject = NULL;
//
//	if ( ! pFnGetDefaultObject )
//		pFnGetDefaultObject = (UFunction*) UObject::GObjObjects()->Data[ 47671 ];
//
//	U_SharedHelpers_execGetDefaultObject_Parms GetDefaultObject_Parms;
//	GetDefaultObject_Parms.ObjClass = ObjClass;
//
//	pFnGetDefaultObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetDefaultObject, &GetDefaultObject_Parms, NULL );
//
//	pFnGetDefaultObject->FunctionFlags |= 0x400;
//
//	return GetDefaultObject_Parms.ReturnValue;
//};
//
//// Function ProjectX._SharedHelpers.DumpUnreferencedAnims
//// [0x00022400] ( FUNC_Native )
//// Parameters infos:
//
//void U_SharedHelpers::DumpUnreferencedAnims ( )
//{
//	static UFunction* pFnDumpUnreferencedAnims = NULL;
//
//	if ( ! pFnDumpUnreferencedAnims )
//		pFnDumpUnreferencedAnims = (UFunction*) UObject::GObjObjects()->Data[ 47670 ];
//
//	U_SharedHelpers_execDumpUnreferencedAnims_Parms DumpUnreferencedAnims_Parms;
//
//	pFnDumpUnreferencedAnims->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDumpUnreferencedAnims, &DumpUnreferencedAnims_Parms, NULL );
//
//	pFnDumpUnreferencedAnims->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX._SharedHelpers.GetLanguageExtension
//// [0x00022400] ( FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString U_SharedHelpers::GetLanguageExtension ( )
//{
//	static UFunction* pFnGetLanguageExtension = NULL;
//
//	if ( ! pFnGetLanguageExtension )
//		pFnGetLanguageExtension = (UFunction*) UObject::GObjObjects()->Data[ 47668 ];
//
//	U_SharedHelpers_execGetLanguageExtension_Parms GetLanguageExtension_Parms;
//
//	pFnGetLanguageExtension->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetLanguageExtension, &GetLanguageExtension_Parms, NULL );
//
//	pFnGetLanguageExtension->FunctionFlags |= 0x400;
//
//	return GetLanguageExtension_Parms.ReturnValue;
//};
//
//// Function ProjectX._Types_X.ServiceExecutionDelegate
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void U_Types_X::ServiceExecutionDelegate ( class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnServiceExecutionDelegate = NULL;
//
//	if ( ! pFnServiceExecutionDelegate )
//		pFnServiceExecutionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 47745 ];
//
//	U_Types_X_execServiceExecutionDelegate_Parms ServiceExecutionDelegate_Parms;
//	ServiceExecutionDelegate_Parms.Service = Service;
//
//	this->ProcessEvent ( pFnServiceExecutionDelegate, &ServiceExecutionDelegate_Parms, NULL );
//};
//
//// Function ProjectX._Types_X.ToIntVector3
//// [0x00822003] ( FUNC_Final )
//// Parameters infos:
//// struct FIntVector3             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FVector                 V                              ( CPF_Parm )
//
//struct FIntVector3 U_Types_X::ToIntVector3 ( struct FVector V )
//{
//	static UFunction* pFnToIntVector3 = NULL;
//
//	if ( ! pFnToIntVector3 )
//		pFnToIntVector3 = (UFunction*) UObject::GObjObjects()->Data[ 47746 ];
//
//	U_Types_X_execToIntVector3_Parms ToIntVector3_Parms;
//	memcpy ( &ToIntVector3_Parms.V, &V, 0xC );
//
//	this->ProcessEvent ( pFnToIntVector3, &ToIntVector3_Parms, NULL );
//
//	return ToIntVector3_Parms.ReturnValue;
//};
//
//// Function ProjectX._Types_X.OnPriviledgeChecked
//// [0x00120000] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       PrivilegeCheck                 ( CPF_Parm )
//
//void U_Types_X::OnPriviledgeChecked ( class UPrivilegeCheck_X* PrivilegeCheck )
//{
//	static UFunction* pFnOnPriviledgeChecked = NULL;
//
//	if ( ! pFnOnPriviledgeChecked )
//		pFnOnPriviledgeChecked = (UFunction*) UObject::GObjObjects()->Data[ 47741 ];
//
//	U_Types_X_execOnPriviledgeChecked_Parms OnPriviledgeChecked_Parms;
//	OnPriviledgeChecked_Parms.PrivilegeCheck = PrivilegeCheck;
//
//	this->ProcessEvent ( pFnOnPriviledgeChecked, &OnPriviledgeChecked_Parms, NULL );
//};
//
//// Function ProjectX._Types_X.KeyPressDelegate
//// [0x00120000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool U_Types_X::KeyPressDelegate ( )
//{
//	static UFunction* pFnKeyPressDelegate = NULL;
//
//	if ( ! pFnKeyPressDelegate )
//		pFnKeyPressDelegate = (UFunction*) UObject::GObjObjects()->Data[ 47736 ];
//
//	U_Types_X_execKeyPressDelegate_Parms KeyPressDelegate_Parms;
//
//	this->ProcessEvent ( pFnKeyPressDelegate, &KeyPressDelegate_Parms, NULL );
//
//	return KeyPressDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.ActorComponent_X.Reattach
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UActorComponent_X::Reattach ( )
//{
//	static UFunction* pFnReattach = NULL;
//
//	if ( ! pFnReattach )
//		pFnReattach = (UFunction*) UObject::GObjObjects()->Data[ 48008 ];
//
//	UActorComponent_X_execReattach_Parms Reattach_Parms;
//
//	pFnReattach->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnReattach, &Reattach_Parms, NULL );
//
//	pFnReattach->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ActorComponent_X.Tick
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UActorComponent_X::eventTick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48006 ];
//
//	UActorComponent_X_eventTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.ActorComponent_X.Detached
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//
//void UActorComponent_X::eventDetached ( )
//{
//	static UFunction* pFnDetached = NULL;
//
//	if ( ! pFnDetached )
//		pFnDetached = (UFunction*) UObject::GObjObjects()->Data[ 48005 ];
//
//	UActorComponent_X_eventDetached_Parms Detached_Parms;
//
//	this->ProcessEvent ( pFnDetached, &Detached_Parms, NULL );
//};
//
//// Function ProjectX.ActorComponent_X.Attached
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//
//void UActorComponent_X::eventAttached ( )
//{
//	static UFunction* pFnAttached = NULL;
//
//	if ( ! pFnAttached )
//		pFnAttached = (UFunction*) UObject::GObjObjects()->Data[ 48004 ];
//
//	UActorComponent_X_eventAttached_Parms Attached_Parms;
//
//	this->ProcessEvent ( pFnAttached, &Attached_Parms, NULL );
//};
//
//// Function ProjectX.ActorComponent_X.BeginPlay
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//
//void UActorComponent_X::eventBeginPlay ( )
//{
//	static UFunction* pFnBeginPlay = NULL;
//
//	if ( ! pFnBeginPlay )
//		pFnBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48003 ];
//
//	UActorComponent_X_eventBeginPlay_Parms BeginPlay_Parms;
//
//	this->ProcessEvent ( pFnBeginPlay, &BeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.ExplosionComponent_X.ProcessHit
//// [0x00024802] ( FUNC_Event )
//// Parameters infos:
//// class AActor*                  Victim                         ( CPF_Parm )
//// struct FVector                 HitLocation                    ( CPF_Parm )
//// struct FTraceHitInfo           ExtraHitInfo                   ( CPF_Parm )
//// float                          DamageScale                    ( CPF_OptionalParm | CPF_Parm )
//
//void UExplosionComponent_X::eventProcessHit ( class AActor* Victim, struct FVector HitLocation, struct FTraceHitInfo ExtraHitInfo, float DamageScale )
//{
//	static UFunction* pFnProcessHit = NULL;
//
//	if ( ! pFnProcessHit )
//		pFnProcessHit = (UFunction*) UObject::GObjObjects()->Data[ 49182 ];
//
//	UExplosionComponent_X_eventProcessHit_Parms ProcessHit_Parms;
//	ProcessHit_Parms.Victim = Victim;
//	memcpy ( &ProcessHit_Parms.HitLocation, &HitLocation, 0xC );
//	memcpy ( &ProcessHit_Parms.ExtraHitInfo, &ExtraHitInfo, 0x1C );
//	ProcessHit_Parms.DamageScale = DamageScale;
//
//	this->ProcessEvent ( pFnProcessHit, &ProcessHit_Parms, NULL );
//};
//
//// Function ProjectX.ExplosionComponent_X.Detached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UExplosionComponent_X::eventDetached ( )
//{
//	static UFunction* pFnDetached = NULL;
//
//	if ( ! pFnDetached )
//		pFnDetached = (UFunction*) UObject::GObjObjects()->Data[ 49181 ];
//
//	UExplosionComponent_X_eventDetached_Parms Detached_Parms;
//
//	this->ProcessEvent ( pFnDetached, &Detached_Parms, NULL );
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.__MICParamDispenserComponent_X__Attached
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FFXAttachment           A                              ( CPF_Parm | CPF_Component | CPF_NeedCtorLink )
//
//bool UMICParamDispenserComponent_X::__MICParamDispenserComponent_X__Attached ( struct FFXAttachment A )
//{
//	static UFunction* pFn__MICParamDispenserComponent_X__Attached = NULL;
//
//	if ( ! pFn__MICParamDispenserComponent_X__Attached )
//		pFn__MICParamDispenserComponent_X__Attached = (UFunction*) UObject::GObjObjects()->Data[ 56416 ];
//
//	UMICParamDispenserComponent_X_exec__MICParamDispenserComponent_X__Attached_Parms __MICParamDispenserComponent_X__Attached_Parms;
//	memcpy ( &__MICParamDispenserComponent_X__Attached_Parms.A, &A, 0xD0 );
//
//	this->ProcessEvent ( pFn__MICParamDispenserComponent_X__Attached, &__MICParamDispenserComponent_X__Attached_Parms, NULL );
//
//	return __MICParamDispenserComponent_X__Attached_Parms.ReturnValue;
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.Attached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UMICParamDispenserComponent_X::eventAttached ( )
//{
//	static UFunction* pFnAttached = NULL;
//
//	if ( ! pFnAttached )
//		pFnAttached = (UFunction*) UObject::GObjObjects()->Data[ 56413 ];
//
//	UMICParamDispenserComponent_X_eventAttached_Parms Attached_Parms;
//
//	this->ProcessEvent ( pFnAttached, &Attached_Parms, NULL );
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.SetActorParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// class AActor*                  Value                          ( CPF_Parm )
//
//void UMICParamDispenserComponent_X::SetActorParameter ( struct FName Key, class AActor* Value )
//{
//	static UFunction* pFnSetActorParameter = NULL;
//
//	if ( ! pFnSetActorParameter )
//		pFnSetActorParameter = (UFunction*) UObject::GObjObjects()->Data[ 56414 ];
//
//	UMICParamDispenserComponent_X_execSetActorParameter_Parms SetActorParameter_Parms;
//	memcpy ( &SetActorParameter_Parms.Key, &Key, 0x8 );
//	SetActorParameter_Parms.Value = Value;
//
//	pFnSetActorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetActorParameter, &SetActorParameter_Parms, NULL );
//
//	pFnSetActorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.SetLinearColorParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FLinearColor            Value                          ( CPF_Parm )
//
//void UMICParamDispenserComponent_X::SetLinearColorParameter ( struct FName Key, struct FLinearColor Value )
//{
//	static UFunction* pFnSetLinearColorParameter = NULL;
//
//	if ( ! pFnSetLinearColorParameter )
//		pFnSetLinearColorParameter = (UFunction*) UObject::GObjObjects()->Data[ 56410 ];
//
//	UMICParamDispenserComponent_X_execSetLinearColorParameter_Parms SetLinearColorParameter_Parms;
//	memcpy ( &SetLinearColorParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetLinearColorParameter_Parms.Value, &Value, 0x10 );
//
//	pFnSetLinearColorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetLinearColorParameter, &SetLinearColorParameter_Parms, NULL );
//
//	pFnSetLinearColorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.SetVectorParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FVector                 Value                          ( CPF_Parm )
//
//void UMICParamDispenserComponent_X::SetVectorParameter ( struct FName Key, struct FVector Value )
//{
//	static UFunction* pFnSetVectorParameter = NULL;
//
//	if ( ! pFnSetVectorParameter )
//		pFnSetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 56407 ];
//
//	UMICParamDispenserComponent_X_execSetVectorParameter_Parms SetVectorParameter_Parms;
//	memcpy ( &SetVectorParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetVectorParameter_Parms.Value, &Value, 0xC );
//
//	pFnSetVectorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetVectorParameter, &SetVectorParameter_Parms, NULL );
//
//	pFnSetVectorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.SetFloatParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// float                          Value                          ( CPF_Parm )
//
//void UMICParamDispenserComponent_X::SetFloatParameter ( struct FName Key, float Value )
//{
//	static UFunction* pFnSetFloatParameter = NULL;
//
//	if ( ! pFnSetFloatParameter )
//		pFnSetFloatParameter = (UFunction*) UObject::GObjObjects()->Data[ 56404 ];
//
//	UMICParamDispenserComponent_X_execSetFloatParameter_Parms SetFloatParameter_Parms;
//	memcpy ( &SetFloatParameter_Parms.Key, &Key, 0x8 );
//	SetFloatParameter_Parms.Value = Value;
//
//	pFnSetFloatParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetFloatParameter, &SetFloatParameter_Parms, NULL );
//
//	pFnSetFloatParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.MICParamDispenserComponent_X.SetNameParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FName                   Value                          ( CPF_Parm )
//
//void UMICParamDispenserComponent_X::SetNameParameter ( struct FName Key, struct FName Value )
//{
//	static UFunction* pFnSetNameParameter = NULL;
//
//	if ( ! pFnSetNameParameter )
//		pFnSetNameParameter = (UFunction*) UObject::GObjObjects()->Data[ 56401 ];
//
//	UMICParamDispenserComponent_X_execSetNameParameter_Parms SetNameParameter_Parms;
//	memcpy ( &SetNameParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetNameParameter_Parms.Value, &Value, 0x8 );
//
//	pFnSetNameParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetNameParameter, &SetNameParameter_Parms, NULL );
//
//	pFnSetNameParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ShakeComponent_X.GetColorParameter
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   InName                         ( CPF_Const | CPF_Parm )
//// struct FColor                  OutColor                       ( CPF_Parm | CPF_OutParm )
//
//bool UShakeComponent_X::GetColorParameter ( struct FName InName, struct FColor* OutColor )
//{
//	static UFunction* pFnGetColorParameter = NULL;
//
//	if ( ! pFnGetColorParameter )
//		pFnGetColorParameter = (UFunction*) UObject::GObjObjects()->Data[ 55647 ];
//
//	UShakeComponent_X_execGetColorParameter_Parms GetColorParameter_Parms;
//	memcpy ( &GetColorParameter_Parms.InName, &InName, 0x8 );
//
//	pFnGetColorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetColorParameter, &GetColorParameter_Parms, NULL );
//
//	pFnGetColorParameter->FunctionFlags |= 0x400;
//
//	if ( OutColor )
//		memcpy ( OutColor, &GetColorParameter_Parms.OutColor, 0x4 );
//
//	return GetColorParameter_Parms.ReturnValue;
//};
//
//// Function ProjectX.ShakeComponent_X.GetVectorParameter
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   InName                         ( CPF_Const | CPF_Parm )
//// struct FVector                 OutVector                      ( CPF_Parm | CPF_OutParm )
//
//bool UShakeComponent_X::GetVectorParameter ( struct FName InName, struct FVector* OutVector )
//{
//	static UFunction* pFnGetVectorParameter = NULL;
//
//	if ( ! pFnGetVectorParameter )
//		pFnGetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 55643 ];
//
//	UShakeComponent_X_execGetVectorParameter_Parms GetVectorParameter_Parms;
//	memcpy ( &GetVectorParameter_Parms.InName, &InName, 0x8 );
//
//	pFnGetVectorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetVectorParameter, &GetVectorParameter_Parms, NULL );
//
//	pFnGetVectorParameter->FunctionFlags |= 0x400;
//
//	if ( OutVector )
//		memcpy ( OutVector, &GetVectorParameter_Parms.OutVector, 0xC );
//
//	return GetVectorParameter_Parms.ReturnValue;
//};
//
//// Function ProjectX.ShakeComponent_X.GetFloatParameter
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   InName                         ( CPF_Const | CPF_Parm )
//// float                          OutFloat                       ( CPF_Parm | CPF_OutParm )
//
//bool UShakeComponent_X::GetFloatParameter ( struct FName InName, float* OutFloat )
//{
//	static UFunction* pFnGetFloatParameter = NULL;
//
//	if ( ! pFnGetFloatParameter )
//		pFnGetFloatParameter = (UFunction*) UObject::GObjObjects()->Data[ 55639 ];
//
//	UShakeComponent_X_execGetFloatParameter_Parms GetFloatParameter_Parms;
//	memcpy ( &GetFloatParameter_Parms.InName, &InName, 0x8 );
//
//	pFnGetFloatParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetFloatParameter, &GetFloatParameter_Parms, NULL );
//
//	pFnGetFloatParameter->FunctionFlags |= 0x400;
//
//	if ( OutFloat )
//		*OutFloat = GetFloatParameter_Parms.OutFloat;
//
//	return GetFloatParameter_Parms.ReturnValue;
//};
//
//// Function ProjectX.ShakeComponent_X.SetColorParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ParameterName                  ( CPF_Parm )
//// struct FColor                  Param                          ( CPF_Parm )
//
//void UShakeComponent_X::SetColorParameter ( struct FName ParameterName, struct FColor Param )
//{
//	static UFunction* pFnSetColorParameter = NULL;
//
//	if ( ! pFnSetColorParameter )
//		pFnSetColorParameter = (UFunction*) UObject::GObjObjects()->Data[ 55636 ];
//
//	UShakeComponent_X_execSetColorParameter_Parms SetColorParameter_Parms;
//	memcpy ( &SetColorParameter_Parms.ParameterName, &ParameterName, 0x8 );
//	memcpy ( &SetColorParameter_Parms.Param, &Param, 0x4 );
//
//	pFnSetColorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetColorParameter, &SetColorParameter_Parms, NULL );
//
//	pFnSetColorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ShakeComponent_X.SetVectorRandParameter
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ParameterName                  ( CPF_Parm )
//// struct FVector                 Param                          ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FVector                 ParamLow                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UShakeComponent_X::SetVectorRandParameter ( struct FName ParameterName, struct FVector* Param, struct FVector* ParamLow )
//{
//	static UFunction* pFnSetVectorRandParameter = NULL;
//
//	if ( ! pFnSetVectorRandParameter )
//		pFnSetVectorRandParameter = (UFunction*) UObject::GObjObjects()->Data[ 55632 ];
//
//	UShakeComponent_X_execSetVectorRandParameter_Parms SetVectorRandParameter_Parms;
//	memcpy ( &SetVectorRandParameter_Parms.ParameterName, &ParameterName, 0x8 );
//
//	pFnSetVectorRandParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetVectorRandParameter, &SetVectorRandParameter_Parms, NULL );
//
//	pFnSetVectorRandParameter->FunctionFlags |= 0x400;
//
//	if ( Param )
//		memcpy ( Param, &SetVectorRandParameter_Parms.Param, 0xC );
//
//	if ( ParamLow )
//		memcpy ( ParamLow, &SetVectorRandParameter_Parms.ParamLow, 0xC );
//};
//
//// Function ProjectX.ShakeComponent_X.SetVectorParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ParameterName                  ( CPF_Parm )
//// struct FVector                 Param                          ( CPF_Parm )
//
//void UShakeComponent_X::SetVectorParameter ( struct FName ParameterName, struct FVector Param )
//{
//	static UFunction* pFnSetVectorParameter = NULL;
//
//	if ( ! pFnSetVectorParameter )
//		pFnSetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 55629 ];
//
//	UShakeComponent_X_execSetVectorParameter_Parms SetVectorParameter_Parms;
//	memcpy ( &SetVectorParameter_Parms.ParameterName, &ParameterName, 0x8 );
//	memcpy ( &SetVectorParameter_Parms.Param, &Param, 0xC );
//
//	pFnSetVectorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetVectorParameter, &SetVectorParameter_Parms, NULL );
//
//	pFnSetVectorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ShakeComponent_X.SetFloatRandParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ParameterName                  ( CPF_Parm )
//// float                          Param                          ( CPF_Parm )
//// float                          ParamLow                       ( CPF_Parm )
//
//void UShakeComponent_X::SetFloatRandParameter ( struct FName ParameterName, float Param, float ParamLow )
//{
//	static UFunction* pFnSetFloatRandParameter = NULL;
//
//	if ( ! pFnSetFloatRandParameter )
//		pFnSetFloatRandParameter = (UFunction*) UObject::GObjObjects()->Data[ 55625 ];
//
//	UShakeComponent_X_execSetFloatRandParameter_Parms SetFloatRandParameter_Parms;
//	memcpy ( &SetFloatRandParameter_Parms.ParameterName, &ParameterName, 0x8 );
//	SetFloatRandParameter_Parms.Param = Param;
//	SetFloatRandParameter_Parms.ParamLow = ParamLow;
//
//	pFnSetFloatRandParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetFloatRandParameter, &SetFloatRandParameter_Parms, NULL );
//
//	pFnSetFloatRandParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ShakeComponent_X.SetFloatParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ParameterName                  ( CPF_Parm )
//// float                          Param                          ( CPF_Parm )
//
//void UShakeComponent_X::SetFloatParameter ( struct FName ParameterName, float Param )
//{
//	static UFunction* pFnSetFloatParameter = NULL;
//
//	if ( ! pFnSetFloatParameter )
//		pFnSetFloatParameter = (UFunction*) UObject::GObjObjects()->Data[ 55622 ];
//
//	UShakeComponent_X_execSetFloatParameter_Parms SetFloatParameter_Parms;
//	memcpy ( &SetFloatParameter_Parms.ParameterName, &ParameterName, 0x8 );
//	SetFloatParameter_Parms.Param = Param;
//
//	pFnSetFloatParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetFloatParameter, &SetFloatParameter_Parms, NULL );
//
//	pFnSetFloatParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ShakeComponent_X.IsPlaying
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UShakeComponent_X::IsPlaying ( )
//{
//	static UFunction* pFnIsPlaying = NULL;
//
//	if ( ! pFnIsPlaying )
//		pFnIsPlaying = (UFunction*) UObject::GObjObjects()->Data[ 55620 ];
//
//	UShakeComponent_X_execIsPlaying_Parms IsPlaying_Parms;
//
//	this->ProcessEvent ( pFnIsPlaying, &IsPlaying_Parms, NULL );
//
//	return IsPlaying_Parms.ReturnValue;
//};
//
//// Function ProjectX.ShakeComponent_X.StopShake
//// [0x00024802] ( FUNC_Event )
//// Parameters infos:
//// float                          InBlendOutTime                 ( CPF_OptionalParm | CPF_Parm )
//
//void UShakeComponent_X::eventStopShake ( float InBlendOutTime )
//{
//	static UFunction* pFnStopShake = NULL;
//
//	if ( ! pFnStopShake )
//		pFnStopShake = (UFunction*) UObject::GObjObjects()->Data[ 55618 ];
//
//	UShakeComponent_X_eventStopShake_Parms StopShake_Parms;
//	StopShake_Parms.InBlendOutTime = InBlendOutTime;
//
//	this->ProcessEvent ( pFnStopShake, &StopShake_Parms, NULL );
//};
//
//// Function ProjectX.ShakeComponent_X.InitParams
//// [0x00080400] ( FUNC_Native )
//// Parameters infos:
//
//void UShakeComponent_X::InitParams ( )
//{
//	static UFunction* pFnInitParams = NULL;
//
//	if ( ! pFnInitParams )
//		pFnInitParams = (UFunction*) UObject::GObjObjects()->Data[ 55617 ];
//
//	UShakeComponent_X_execInitParams_Parms InitParams_Parms;
//
//	pFnInitParams->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitParams, &InitParams_Parms, NULL );
//
//	pFnInitParams->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ShakeComponent_X.PlayShake
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UShakeComponent_X::eventPlayShake ( )
//{
//	static UFunction* pFnPlayShake = NULL;
//
//	if ( ! pFnPlayShake )
//		pFnPlayShake = (UFunction*) UObject::GObjObjects()->Data[ 55616 ];
//
//	UShakeComponent_X_eventPlayShake_Parms PlayShake_Parms;
//
//	this->ProcessEvent ( pFnPlayShake, &PlayShake_Parms, NULL );
//};
//
//// Function ProjectX.ShakeComponent_X.Detached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UShakeComponent_X::eventDetached ( )
//{
//	static UFunction* pFnDetached = NULL;
//
//	if ( ! pFnDetached )
//		pFnDetached = (UFunction*) UObject::GObjObjects()->Data[ 55615 ];
//
//	UShakeComponent_X_eventDetached_Parms Detached_Parms;
//
//	this->ProcessEvent ( pFnDetached, &Detached_Parms, NULL );
//};
//
//// Function ProjectX.ShakeComponent_X.Attached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UShakeComponent_X::eventAttached ( )
//{
//	static UFunction* pFnAttached = NULL;
//
//	if ( ! pFnAttached )
//		pFnAttached = (UFunction*) UObject::GObjObjects()->Data[ 55614 ];
//
//	UShakeComponent_X_eventAttached_Parms Attached_Parms;
//
//	this->ProcessEvent ( pFnAttached, &Attached_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBeacon_X.GetNodeCountMax
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UAdHocBeacon_X::GetNodeCountMax ( )
//{
//	static UFunction* pFnGetNodeCountMax = NULL;
//
//	if ( ! pFnGetNodeCountMax )
//		pFnGetNodeCountMax = (UFunction*) UObject::GObjObjects()->Data[ 57285 ];
//
//	UAdHocBeacon_X_execGetNodeCountMax_Parms GetNodeCountMax_Parms;
//
//	pFnGetNodeCountMax->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetNodeCountMax, &GetNodeCountMax_Parms, NULL );
//
//	pFnGetNodeCountMax->FunctionFlags |= 0x400;
//
//	return GetNodeCountMax_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocJoinMatch
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocJoinMatch ( )
//{
//	static UFunction* pFnAdHocJoinMatch = NULL;
//
//	if ( ! pFnAdHocJoinMatch )
//		pFnAdHocJoinMatch = (UFunction*) UObject::GObjObjects()->Data[ 57284 ];
//
//	UAdHocBeacon_X_execAdHocJoinMatch_Parms AdHocJoinMatch_Parms;
//
//	pFnAdHocJoinMatch->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocJoinMatch, &AdHocJoinMatch_Parms, NULL );
//
//	pFnAdHocJoinMatch->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocCreateMatch
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocCreateMatch ( )
//{
//	static UFunction* pFnAdHocCreateMatch = NULL;
//
//	if ( ! pFnAdHocCreateMatch )
//		pFnAdHocCreateMatch = (UFunction*) UObject::GObjObjects()->Data[ 57283 ];
//
//	UAdHocBeacon_X_execAdHocCreateMatch_Parms AdHocCreateMatch_Parms;
//
//	pFnAdHocCreateMatch->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocCreateMatch, &AdHocCreateMatch_Parms, NULL );
//
//	pFnAdHocCreateMatch->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocIsActive
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UAdHocBeacon_X::AdHocIsActive ( )
//{
//	static UFunction* pFnAdHocIsActive = NULL;
//
//	if ( ! pFnAdHocIsActive )
//		pFnAdHocIsActive = (UFunction*) UObject::GObjObjects()->Data[ 57281 ];
//
//	UAdHocBeacon_X_execAdHocIsActive_Parms AdHocIsActive_Parms;
//
//	pFnAdHocIsActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocIsActive, &AdHocIsActive_Parms, NULL );
//
//	pFnAdHocIsActive->FunctionFlags |= 0x400;
//
//	return AdHocIsActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocDisconnectFromAccessPoint
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocDisconnectFromAccessPoint ( )
//{
//	static UFunction* pFnAdHocDisconnectFromAccessPoint = NULL;
//
//	if ( ! pFnAdHocDisconnectFromAccessPoint )
//		pFnAdHocDisconnectFromAccessPoint = (UFunction*) UObject::GObjObjects()->Data[ 57280 ];
//
//	UAdHocBeacon_X_execAdHocDisconnectFromAccessPoint_Parms AdHocDisconnectFromAccessPoint_Parms;
//
//	pFnAdHocDisconnectFromAccessPoint->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocDisconnectFromAccessPoint, &AdHocDisconnectFromAccessPoint_Parms, NULL );
//
//	pFnAdHocDisconnectFromAccessPoint->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocConnectToAccessPoint
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ScanResultIndex                ( CPF_Parm )
//
//void UAdHocBeacon_X::AdHocConnectToAccessPoint ( int ScanResultIndex )
//{
//	static UFunction* pFnAdHocConnectToAccessPoint = NULL;
//
//	if ( ! pFnAdHocConnectToAccessPoint )
//		pFnAdHocConnectToAccessPoint = (UFunction*) UObject::GObjObjects()->Data[ 57278 ];
//
//	UAdHocBeacon_X_execAdHocConnectToAccessPoint_Parms AdHocConnectToAccessPoint_Parms;
//	AdHocConnectToAccessPoint_Parms.ScanResultIndex = ScanResultIndex;
//
//	pFnAdHocConnectToAccessPoint->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocConnectToAccessPoint, &AdHocConnectToAccessPoint_Parms, NULL );
//
//	pFnAdHocConnectToAccessPoint->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocRevertToInitialized
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocRevertToInitialized ( )
//{
//	static UFunction* pFnAdHocRevertToInitialized = NULL;
//
//	if ( ! pFnAdHocRevertToInitialized )
//		pFnAdHocRevertToInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57277 ];
//
//	UAdHocBeacon_X_execAdHocRevertToInitialized_Parms AdHocRevertToInitialized_Parms;
//
//	pFnAdHocRevertToInitialized->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocRevertToInitialized, &AdHocRevertToInitialized_Parms, NULL );
//
//	pFnAdHocRevertToInitialized->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocScanForAccessPoints
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocScanForAccessPoints ( )
//{
//	static UFunction* pFnAdHocScanForAccessPoints = NULL;
//
//	if ( ! pFnAdHocScanForAccessPoints )
//		pFnAdHocScanForAccessPoints = (UFunction*) UObject::GObjObjects()->Data[ 57276 ];
//
//	UAdHocBeacon_X_execAdHocScanForAccessPoints_Parms AdHocScanForAccessPoints_Parms;
//
//	pFnAdHocScanForAccessPoints->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocScanForAccessPoints, &AdHocScanForAccessPoints_Parms, NULL );
//
//	pFnAdHocScanForAccessPoints->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocBecomeStation
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocBecomeStation ( )
//{
//	static UFunction* pFnAdHocBecomeStation = NULL;
//
//	if ( ! pFnAdHocBecomeStation )
//		pFnAdHocBecomeStation = (UFunction*) UObject::GObjObjects()->Data[ 57275 ];
//
//	UAdHocBeacon_X_execAdHocBecomeStation_Parms AdHocBecomeStation_Parms;
//
//	pFnAdHocBecomeStation->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocBecomeStation, &AdHocBecomeStation_Parms, NULL );
//
//	pFnAdHocBecomeStation->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocRejectStation
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            NetworkNodeIndex               ( CPF_Parm )
//
//void UAdHocBeacon_X::AdHocRejectStation ( int NetworkNodeIndex )
//{
//	static UFunction* pFnAdHocRejectStation = NULL;
//
//	if ( ! pFnAdHocRejectStation )
//		pFnAdHocRejectStation = (UFunction*) UObject::GObjObjects()->Data[ 57273 ];
//
//	UAdHocBeacon_X_execAdHocRejectStation_Parms AdHocRejectStation_Parms;
//	AdHocRejectStation_Parms.NetworkNodeIndex = NetworkNodeIndex;
//
//	pFnAdHocRejectStation->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocRejectStation, &AdHocRejectStation_Parms, NULL );
//
//	pFnAdHocRejectStation->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocBecomeAccessPoint
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocBecomeAccessPoint ( )
//{
//	static UFunction* pFnAdHocBecomeAccessPoint = NULL;
//
//	if ( ! pFnAdHocBecomeAccessPoint )
//		pFnAdHocBecomeAccessPoint = (UFunction*) UObject::GObjObjects()->Data[ 57272 ];
//
//	UAdHocBeacon_X_execAdHocBecomeAccessPoint_Parms AdHocBecomeAccessPoint_Parms;
//
//	pFnAdHocBecomeAccessPoint->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocBecomeAccessPoint, &AdHocBecomeAccessPoint_Parms, NULL );
//
//	pFnAdHocBecomeAccessPoint->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocSetAdvertiseData
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 AdvertiseData                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UAdHocBeacon_X::AdHocSetAdvertiseData ( struct FString AdvertiseData )
//{
//	static UFunction* pFnAdHocSetAdvertiseData = NULL;
//
//	if ( ! pFnAdHocSetAdvertiseData )
//		pFnAdHocSetAdvertiseData = (UFunction*) UObject::GObjObjects()->Data[ 57270 ];
//
//	UAdHocBeacon_X_execAdHocSetAdvertiseData_Parms AdHocSetAdvertiseData_Parms;
//	memcpy ( &AdHocSetAdvertiseData_Parms.AdvertiseData, &AdvertiseData, 0xC );
//
//	pFnAdHocSetAdvertiseData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocSetAdvertiseData, &AdHocSetAdvertiseData_Parms, NULL );
//
//	pFnAdHocSetAdvertiseData->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocDestroy
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocDestroy ( )
//{
//	static UFunction* pFnAdHocDestroy = NULL;
//
//	if ( ! pFnAdHocDestroy )
//		pFnAdHocDestroy = (UFunction*) UObject::GObjObjects()->Data[ 57269 ];
//
//	UAdHocBeacon_X_execAdHocDestroy_Parms AdHocDestroy_Parms;
//
//	pFnAdHocDestroy->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocDestroy, &AdHocDestroy_Parms, NULL );
//
//	pFnAdHocDestroy->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocCreate
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UAdHocBeacon_X::AdHocCreate ( )
//{
//	static UFunction* pFnAdHocCreate = NULL;
//
//	if ( ! pFnAdHocCreate )
//		pFnAdHocCreate = (UFunction*) UObject::GObjObjects()->Data[ 57268 ];
//
//	UAdHocBeacon_X_execAdHocCreate_Parms AdHocCreate_Parms;
//
//	pFnAdHocCreate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocCreate, &AdHocCreate_Parms, NULL );
//
//	pFnAdHocCreate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.AdHocCreateWithUsername
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 UserName                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UAdHocBeacon_X::AdHocCreateWithUsername ( struct FString UserName )
//{
//	static UFunction* pFnAdHocCreateWithUsername = NULL;
//
//	if ( ! pFnAdHocCreateWithUsername )
//		pFnAdHocCreateWithUsername = (UFunction*) UObject::GObjObjects()->Data[ 57266 ];
//
//	UAdHocBeacon_X_execAdHocCreateWithUsername_Parms AdHocCreateWithUsername_Parms;
//	memcpy ( &AdHocCreateWithUsername_Parms.UserName, &UserName, 0xC );
//
//	pFnAdHocCreateWithUsername->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAdHocCreateWithUsername, &AdHocCreateWithUsername_Parms, NULL );
//
//	pFnAdHocCreateWithUsername->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AdHocBeacon_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UAdHocBeacon_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 57265 ];
//
//	UAdHocBeacon_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.Destroyed
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void AFXActor_X::eventDestroyed ( )
//{
//	static UFunction* pFnDestroyed = NULL;
//
//	if ( ! pFnDestroyed )
//		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 49375 ];
//
//	AFXActor_X_eventDestroyed_Parms Destroyed_Parms;
//
//	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.SetStateEnabled
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//// class UFXActorEvent_X*         State                          ( CPF_Parm )
//// unsigned long                  bEnable                        ( CPF_Parm )
//
//void AFXActor_X::SetStateEnabled ( class UFXActorEvent_X* State, unsigned long bEnable )
//{
//	static UFunction* pFnSetStateEnabled = NULL;
//
//	if ( ! pFnSetStateEnabled )
//		pFnSetStateEnabled = (UFunction*) UObject::GObjObjects()->Data[ 49376 ];
//
//	AFXActor_X_execSetStateEnabled_Parms SetStateEnabled_Parms;
//	SetStateEnabled_Parms.State = State;
//	SetStateEnabled_Parms.bEnable = bEnable;
//
//	this->ProcessEvent ( pFnSetStateEnabled, &SetStateEnabled_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.OnToggle
//// [0x00020102] 
//// Parameters infos:
//// class USeqAct_Toggle*          Action                         ( CPF_Parm )
//
//void AFXActor_X::OnToggle ( class USeqAct_Toggle* Action )
//{
//	static UFunction* pFnOnToggle = NULL;
//
//	if ( ! pFnOnToggle )
//		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 49373 ];
//
//	AFXActor_X_execOnToggle_Parms OnToggle_Parms;
//	OnToggle_Parms.Action = Action;
//
//	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.OnTriggerFXActor_X
//// [0x00020102] 
//// Parameters infos:
//// class USeqAct_TriggerFXActor_X* SeqAct                         ( CPF_Parm )
//
//void AFXActor_X::OnTriggerFXActor_X ( class USeqAct_TriggerFXActor_X* SeqAct )
//{
//	static UFunction* pFnOnTriggerFXActor_X = NULL;
//
//	if ( ! pFnOnTriggerFXActor_X )
//		pFnOnTriggerFXActor_X = (UFunction*) UObject::GObjObjects()->Data[ 49367 ];
//
//	AFXActor_X_execOnTriggerFXActor_X_Parms OnTriggerFXActor_X_Parms;
//	OnTriggerFXActor_X_Parms.SeqAct = SeqAct;
//
//	this->ProcessEvent ( pFnOnTriggerFXActor_X, &OnTriggerFXActor_X_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.Inherit
//// [0x00880102] 
//// Parameters infos:
//// class AFXActor_X*              Other                          ( CPF_Parm )
//
//void AFXActor_X::Inherit ( class AFXActor_X* Other )
//{
//	static UFunction* pFnInherit = NULL;
//
//	if ( ! pFnInherit )
//		pFnInherit = (UFunction*) UObject::GObjObjects()->Data[ 49363 ];
//
//	AFXActor_X_execInherit_Parms Inherit_Parms;
//	Inherit_Parms.Other = Other;
//
//	this->ProcessEvent ( pFnInherit, &Inherit_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.CopyFrom
//// [0x00020102] 
//// Parameters infos:
//// class AFXActor_X*              Other                          ( CPF_Parm )
//
//void AFXActor_X::CopyFrom ( class AFXActor_X* Other )
//{
//	static UFunction* pFnCopyFrom = NULL;
//
//	if ( ! pFnCopyFrom )
//		pFnCopyFrom = (UFunction*) UObject::GObjObjects()->Data[ 49360 ];
//
//	AFXActor_X_execCopyFrom_Parms CopyFrom_Parms;
//	CopyFrom_Parms.Other = Other;
//
//	this->ProcessEvent ( pFnCopyFrom, &CopyFrom_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.ResetParticles
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//
//void AFXActor_X::ResetParticles ( )
//{
//	static UFunction* pFnResetParticles = NULL;
//
//	if ( ! pFnResetParticles )
//		pFnResetParticles = (UFunction*) UObject::GObjObjects()->Data[ 49358 ];
//
//	AFXActor_X_execResetParticles_Parms ResetParticles_Parms;
//
//	this->ProcessEvent ( pFnResetParticles, &ResetParticles_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.StopAllEffects
//// [0x00080102] 
//// Parameters infos:
//
//void AFXActor_X::StopAllEffects ( )
//{
//	static UFunction* pFnStopAllEffects = NULL;
//
//	if ( ! pFnStopAllEffects )
//		pFnStopAllEffects = (UFunction*) UObject::GObjObjects()->Data[ 49357 ];
//
//	AFXActor_X_execStopAllEffects_Parms StopAllEffects_Parms;
//
//	this->ProcessEvent ( pFnStopAllEffects, &StopAllEffects_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.DeactivateAndDestroy
//// [0x00020903] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//
//void AFXActor_X::eventDeactivateAndDestroy ( )
//{
//	static UFunction* pFnDeactivateAndDestroy = NULL;
//
//	if ( ! pFnDeactivateAndDestroy )
//		pFnDeactivateAndDestroy = (UFunction*) UObject::GObjObjects()->Data[ 49356 ];
//
//	AFXActor_X_eventDeactivateAndDestroy_Parms DeactivateAndDestroy_Parms;
//
//	this->ProcessEvent ( pFnDeactivateAndDestroy, &DeactivateAndDestroy_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.OnDetached
//// [0x00080902] ( FUNC_Event )
//// Parameters infos:
//// class UActorComponent*         AC                             ( CPF_Parm | CPF_EditInline )
//
//void AFXActor_X::eventOnDetached ( class UActorComponent* AC )
//{
//	static UFunction* pFnOnDetached = NULL;
//
//	if ( ! pFnOnDetached )
//		pFnOnDetached = (UFunction*) UObject::GObjObjects()->Data[ 49354 ];
//
//	AFXActor_X_eventOnDetached_Parms OnDetached_Parms;
//	OnDetached_Parms.AC = AC;
//
//	this->ProcessEvent ( pFnOnDetached, &OnDetached_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.DeactivateFXComponent
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// class UActorComponent*         AC                             ( CPF_Parm | CPF_EditInline )
//
//void AFXActor_X::eventDeactivateFXComponent ( class UActorComponent* AC )
//{
//	static UFunction* pFnDeactivateFXComponent = NULL;
//
//	if ( ! pFnDeactivateFXComponent )
//		pFnDeactivateFXComponent = (UFunction*) UObject::GObjObjects()->Data[ 49352 ];
//
//	AFXActor_X_eventDeactivateFXComponent_Parms DeactivateFXComponent_Parms;
//	DeactivateFXComponent_Parms.AC = AC;
//
//	this->ProcessEvent ( pFnDeactivateFXComponent, &DeactivateFXComponent_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.ActivateFXComponent
//// [0x00080902] ( FUNC_Event )
//// Parameters infos:
//// class UActorComponent*         AC                             ( CPF_Parm | CPF_EditInline )
//
//void AFXActor_X::eventActivateFXComponent ( class UActorComponent* AC )
//{
//	static UFunction* pFnActivateFXComponent = NULL;
//
//	if ( ! pFnActivateFXComponent )
//		pFnActivateFXComponent = (UFunction*) UObject::GObjObjects()->Data[ 49350 ];
//
//	AFXActor_X_eventActivateFXComponent_Parms ActivateFXComponent_Parms;
//	ActivateFXComponent_Parms.AC = AC;
//
//	this->ProcessEvent ( pFnActivateFXComponent, &ActivateFXComponent_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.OnAttached
//// [0x00080902] ( FUNC_Event )
//// Parameters infos:
//// class UActorComponent*         AC                             ( CPF_Parm | CPF_EditInline )
//
//void AFXActor_X::eventOnAttached ( class UActorComponent* AC )
//{
//	static UFunction* pFnOnAttached = NULL;
//
//	if ( ! pFnOnAttached )
//		pFnOnAttached = (UFunction*) UObject::GObjObjects()->Data[ 49345 ];
//
//	AFXActor_X_eventOnAttached_Parms OnAttached_Parms;
//	OnAttached_Parms.AC = AC;
//
//	this->ProcessEvent ( pFnOnAttached, &OnAttached_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.UpdateFXStates
//// [0x00080500] ( FUNC_Native )
//// Parameters infos:
//
//void AFXActor_X::UpdateFXStates ( )
//{
//	static UFunction* pFnUpdateFXStates = NULL;
//
//	if ( ! pFnUpdateFXStates )
//		pFnUpdateFXStates = (UFunction*) UObject::GObjObjects()->Data[ 49344 ];
//
//	AFXActor_X_execUpdateFXStates_Parms UpdateFXStates_Parms;
//
//	pFnUpdateFXStates->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUpdateFXStates, &UpdateFXStates_Parms, NULL );
//
//	pFnUpdateFXStates->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.FXActor_X.IsLocallyControlled
//// [0x00080501] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool AFXActor_X::IsLocallyControlled ( )
//{
//	static UFunction* pFnIsLocallyControlled = NULL;
//
//	if ( ! pFnIsLocallyControlled )
//		pFnIsLocallyControlled = (UFunction*) UObject::GObjObjects()->Data[ 49341 ];
//
//	AFXActor_X_execIsLocallyControlled_Parms IsLocallyControlled_Parms;
//
//	pFnIsLocallyControlled->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsLocallyControlled, &IsLocallyControlled_Parms, NULL );
//
//	pFnIsLocallyControlled->FunctionFlags |= 0x400;
//
//	return IsLocallyControlled_Parms.ReturnValue;
//};
//
//// Function ProjectX.FXActor_X.GetControllerOwner
//// [0x00080501] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class AController* AFXActor_X::GetControllerOwner ( )
//{
//	static UFunction* pFnGetControllerOwner = NULL;
//
//	if ( ! pFnGetControllerOwner )
//		pFnGetControllerOwner = (UFunction*) UObject::GObjObjects()->Data[ 49343 ];
//
//	AFXActor_X_execGetControllerOwner_Parms GetControllerOwner_Parms;
//
//	pFnGetControllerOwner->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetControllerOwner, &GetControllerOwner_Parms, NULL );
//
//	pFnGetControllerOwner->FunctionFlags |= 0x400;
//
//	return GetControllerOwner_Parms.ReturnValue;
//};
//
//// Function ProjectX.FXActor_X.ToggleState
//// [0x00020500] ( FUNC_Native )
//// Parameters infos:
//// class UFXActorEvent_X*         NewState                       ( CPF_Parm )
//
//void AFXActor_X::ToggleState ( class UFXActorEvent_X* NewState )
//{
//	static UFunction* pFnToggleState = NULL;
//
//	if ( ! pFnToggleState )
//		pFnToggleState = (UFunction*) UObject::GObjObjects()->Data[ 49339 ];
//
//	AFXActor_X_execToggleState_Parms ToggleState_Parms;
//	ToggleState_Parms.NewState = NewState;
//
//	pFnToggleState->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnToggleState, &ToggleState_Parms, NULL );
//
//	pFnToggleState->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.FXActor_X.RemoveState
//// [0x00020500] ( FUNC_Native )
//// Parameters infos:
//// class UFXActorEvent_X*         OldState                       ( CPF_Parm )
//
//void AFXActor_X::RemoveState ( class UFXActorEvent_X* OldState )
//{
//	static UFunction* pFnRemoveState = NULL;
//
//	if ( ! pFnRemoveState )
//		pFnRemoveState = (UFunction*) UObject::GObjObjects()->Data[ 49337 ];
//
//	AFXActor_X_execRemoveState_Parms RemoveState_Parms;
//	RemoveState_Parms.OldState = OldState;
//
//	pFnRemoveState->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveState, &RemoveState_Parms, NULL );
//
//	pFnRemoveState->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.FXActor_X.AddState
//// [0x00020500] ( FUNC_Native )
//// Parameters infos:
//// class UFXActorEvent_X*         NewState                       ( CPF_Parm )
//
//void AFXActor_X::AddState ( class UFXActorEvent_X* NewState )
//{
//	static UFunction* pFnAddState = NULL;
//
//	if ( ! pFnAddState )
//		pFnAddState = (UFunction*) UObject::GObjObjects()->Data[ 49334 ];
//
//	AFXActor_X_execAddState_Parms AddState_Parms;
//	AddState_Parms.NewState = NewState;
//
//	pFnAddState->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddState, &AddState_Parms, NULL );
//
//	pFnAddState->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.FXActor_X.IsStateActive
//// [0x00020501] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UFXActorEvent_X*         InState                        ( CPF_Parm )
//
//bool AFXActor_X::IsStateActive ( class UFXActorEvent_X* InState )
//{
//	static UFunction* pFnIsStateActive = NULL;
//
//	if ( ! pFnIsStateActive )
//		pFnIsStateActive = (UFunction*) UObject::GObjObjects()->Data[ 49336 ];
//
//	AFXActor_X_execIsStateActive_Parms IsStateActive_Parms;
//	IsStateActive_Parms.InState = InState;
//
//	pFnIsStateActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsStateActive, &IsStateActive_Parms, NULL );
//
//	pFnIsStateActive->FunctionFlags |= 0x400;
//
//	return IsStateActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.FXActor_X.Deactivate
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void AFXActor_X::Deactivate ( )
//{
//	static UFunction* pFnDeactivate = NULL;
//
//	if ( ! pFnDeactivate )
//		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 49333 ];
//
//	AFXActor_X_execDeactivate_Parms Deactivate_Parms;
//
//	pFnDeactivate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
//
//	pFnDeactivate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.FXActor_X.Activate
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void AFXActor_X::Activate ( )
//{
//	static UFunction* pFnActivate = NULL;
//
//	if ( ! pFnActivate )
//		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 49332 ];
//
//	AFXActor_X_execActivate_Parms Activate_Parms;
//
//	pFnActivate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
//
//	pFnActivate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.FXActor_X.HandleParentStatePopped
//// [0x00040103] ( FUNC_Final )
//// Parameters infos:
//// class AFXActor_X*              P                              ( CPF_Parm )
//// class UFXActorEvent_X*         Event                          ( CPF_Parm )
//
//void AFXActor_X::HandleParentStatePopped ( class AFXActor_X* P, class UFXActorEvent_X* Event )
//{
//	static UFunction* pFnHandleParentStatePopped = NULL;
//
//	if ( ! pFnHandleParentStatePopped )
//		pFnHandleParentStatePopped = (UFunction*) UObject::GObjObjects()->Data[ 49329 ];
//
//	AFXActor_X_execHandleParentStatePopped_Parms HandleParentStatePopped_Parms;
//	HandleParentStatePopped_Parms.P = P;
//	HandleParentStatePopped_Parms.Event = Event;
//
//	this->ProcessEvent ( pFnHandleParentStatePopped, &HandleParentStatePopped_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.HandleParentStatePushed
//// [0x00040103] ( FUNC_Final )
//// Parameters infos:
//// class AFXActor_X*              P                              ( CPF_Parm )
//// class UFXActorEvent_X*         Event                          ( CPF_Parm )
//
//void AFXActor_X::HandleParentStatePushed ( class AFXActor_X* P, class UFXActorEvent_X* Event )
//{
//	static UFunction* pFnHandleParentStatePushed = NULL;
//
//	if ( ! pFnHandleParentStatePushed )
//		pFnHandleParentStatePushed = (UFunction*) UObject::GObjObjects()->Data[ 49326 ];
//
//	AFXActor_X_execHandleParentStatePushed_Parms HandleParentStatePushed_Parms;
//	HandleParentStatePushed_Parms.P = P;
//	HandleParentStatePushed_Parms.Event = Event;
//
//	this->ProcessEvent ( pFnHandleParentStatePushed, &HandleParentStatePushed_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.SetHiddenFrom
//// [0x00040103] ( FUNC_Final )
//// Parameters infos:
//// class AActor*                  Other                          ( CPF_Parm )
//
//void AFXActor_X::SetHiddenFrom ( class AActor* Other )
//{
//	static UFunction* pFnSetHiddenFrom = NULL;
//
//	if ( ! pFnSetHiddenFrom )
//		pFnSetHiddenFrom = (UFunction*) UObject::GObjObjects()->Data[ 49322 ];
//
//	AFXActor_X_execSetHiddenFrom_Parms SetHiddenFrom_Parms;
//	SetHiddenFrom_Parms.Other = Other;
//
//	this->ProcessEvent ( pFnSetHiddenFrom, &SetHiddenFrom_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.BindTo
//// [0x00020102] 
//// Parameters infos:
//// class AFXActor_X*              ParentFXActor                  ( CPF_Parm )
//
//void AFXActor_X::BindTo ( class AFXActor_X* ParentFXActor )
//{
//	static UFunction* pFnBindTo = NULL;
//
//	if ( ! pFnBindTo )
//		pFnBindTo = (UFunction*) UObject::GObjObjects()->Data[ 49323 ];
//
//	AFXActor_X_execBindTo_Parms BindTo_Parms;
//	BindTo_Parms.ParentFXActor = ParentFXActor;
//
//	this->ProcessEvent ( pFnBindTo, &BindTo_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.SetAttachmentActor
//// [0x00020102] 
//// Parameters infos:
//// class AActor*                  AttachToActor                  ( CPF_Parm )
//
//void AFXActor_X::SetAttachmentActor ( class AActor* AttachToActor )
//{
//	static UFunction* pFnSetAttachmentActor = NULL;
//
//	if ( ! pFnSetAttachmentActor )
//		pFnSetAttachmentActor = (UFunction*) UObject::GObjObjects()->Data[ 49320 ];
//
//	AFXActor_X_execSetAttachmentActor_Parms SetAttachmentActor_Parms;
//	SetAttachmentActor_Parms.AttachToActor = AttachToActor;
//
//	this->ProcessEvent ( pFnSetAttachmentActor, &SetAttachmentActor_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.PostBeginPlay
//// [0x00020102] 
//// Parameters infos:
//
//void AFXActor_X::PostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49319 ];
//
//	AFXActor_X_execPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.AllAttachments
//// [0x00424505] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UClass*                  ComponentClass                 ( CPF_Parm )
//// class UActorComponent*         OutComponent                   ( CPF_Parm | CPF_OutParm | CPF_EditInline )
//// int                            OutAttachmentIdx               ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//void AFXActor_X::AllAttachments ( class UClass* ComponentClass, class UActorComponent** OutComponent, int* OutAttachmentIdx )
//{
//	static UFunction* pFnAllAttachments = NULL;
//
//	if ( ! pFnAllAttachments )
//		pFnAllAttachments = (UFunction*) UObject::GObjObjects()->Data[ 49315 ];
//
//	AFXActor_X_execAllAttachments_Parms AllAttachments_Parms;
//	AllAttachments_Parms.ComponentClass = ComponentClass;
//
//	pFnAllAttachments->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAllAttachments, &AllAttachments_Parms, NULL );
//
//	pFnAllAttachments->FunctionFlags |= 0x400;
//
//	if ( OutComponent )
//		*OutComponent = AllAttachments_Parms.OutComponent;
//
//	if ( OutAttachmentIdx )
//		*OutAttachmentIdx = AllAttachments_Parms.OutAttachmentIdx;
//};
//
//// Function ProjectX.FXActor_X.GetComponentByName
//// [0x00020501] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UActorComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm | CPF_EditInline )
//// class UClass*                  ComponentClass                 ( CPF_Parm )
//// struct FName                   ComponentName                  ( CPF_Parm )
//
//class UActorComponent* AFXActor_X::GetComponentByName ( class UClass* ComponentClass, struct FName ComponentName )
//{
//	static UFunction* pFnGetComponentByName = NULL;
//
//	if ( ! pFnGetComponentByName )
//		pFnGetComponentByName = (UFunction*) UObject::GObjObjects()->Data[ 49311 ];
//
//	AFXActor_X_execGetComponentByName_Parms GetComponentByName_Parms;
//	GetComponentByName_Parms.ComponentClass = ComponentClass;
//	memcpy ( &GetComponentByName_Parms.ComponentName, &ComponentName, 0x8 );
//
//	pFnGetComponentByName->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetComponentByName, &GetComponentByName_Parms, NULL );
//
//	pFnGetComponentByName->FunctionFlags |= 0x400;
//
//	return GetComponentByName_Parms.ReturnValue;
//};
//
//// Function ProjectX.FXActor_X.EventFXStatePopped
//// [0x00120000] 
//// Parameters infos:
//// class AFXActor_X*              FXActor                        ( CPF_Parm )
//// class UFXActorEvent_X*         Event                          ( CPF_Parm )
//
//void AFXActor_X::EventFXStatePopped ( class AFXActor_X* FXActor, class UFXActorEvent_X* Event )
//{
//	static UFunction* pFnEventFXStatePopped = NULL;
//
//	if ( ! pFnEventFXStatePopped )
//		pFnEventFXStatePopped = (UFunction*) UObject::GObjObjects()->Data[ 49291 ];
//
//	AFXActor_X_execEventFXStatePopped_Parms EventFXStatePopped_Parms;
//	EventFXStatePopped_Parms.FXActor = FXActor;
//	EventFXStatePopped_Parms.Event = Event;
//
//	this->ProcessEvent ( pFnEventFXStatePopped, &EventFXStatePopped_Parms, NULL );
//};
//
//// Function ProjectX.FXActor_X.EventFXStatePushed
//// [0x00120000] 
//// Parameters infos:
//// class AFXActor_X*              FXActor                        ( CPF_Parm )
//// class UFXActorEvent_X*         Event                          ( CPF_Parm )
//
//void AFXActor_X::EventFXStatePushed ( class AFXActor_X* FXActor, class UFXActorEvent_X* Event )
//{
//	static UFunction* pFnEventFXStatePushed = NULL;
//
//	if ( ! pFnEventFXStatePushed )
//		pFnEventFXStatePushed = (UFunction*) UObject::GObjObjects()->Data[ 49293 ];
//
//	AFXActor_X_execEventFXStatePushed_Parms EventFXStatePushed_Parms;
//	EventFXStatePushed_Parms.FXActor = FXActor;
//	EventFXStatePushed_Parms.Event = Event;
//
//	this->ProcessEvent ( pFnEventFXStatePushed, &EventFXStatePushed_Parms, NULL );
//};
//
//// Function ProjectX.ArchetypeSpawnPoint_X.OnSpawned
//// [0x00080002] 
//// Parameters infos:
//// class AActor*                  Spawned                        ( CPF_Parm )
//
//void AArchetypeSpawnPoint_X::OnSpawned ( class AActor* Spawned )
//{
//	static UFunction* pFnOnSpawned = NULL;
//
//	if ( ! pFnOnSpawned )
//		pFnOnSpawned = (UFunction*) UObject::GObjObjects()->Data[ 48235 ];
//
//	AArchetypeSpawnPoint_X_execOnSpawned_Parms OnSpawned_Parms;
//	OnSpawned_Parms.Spawned = Spawned;
//
//	this->ProcessEvent ( pFnOnSpawned, &OnSpawned_Parms, NULL );
//};
//
//// Function ProjectX.ArchetypeSpawnPoint_X.DoSpawn
//// [0x00020002] 
//// Parameters infos:
//// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class AActor* AArchetypeSpawnPoint_X::DoSpawn ( )
//{
//	static UFunction* pFnDoSpawn = NULL;
//
//	if ( ! pFnDoSpawn )
//		pFnDoSpawn = (UFunction*) UObject::GObjObjects()->Data[ 48232 ];
//
//	AArchetypeSpawnPoint_X_execDoSpawn_Parms DoSpawn_Parms;
//
//	this->ProcessEvent ( pFnDoSpawn, &DoSpawn_Parms, NULL );
//
//	return DoSpawn_Parms.ReturnValue;
//};
//
//// Function ProjectX.ArchetypeSpawnPoint_X.OnToggle
//// [0x00020002] 
//// Parameters infos:
//// class USeqAct_Toggle*          Action                         ( CPF_Parm )
//
//void AArchetypeSpawnPoint_X::OnToggle ( class USeqAct_Toggle* Action )
//{
//	static UFunction* pFnOnToggle = NULL;
//
//	if ( ! pFnOnToggle )
//		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 48230 ];
//
//	AArchetypeSpawnPoint_X_execOnToggle_Parms OnToggle_Parms;
//	OnToggle_Parms.Action = Action;
//
//	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
//};
//
//// Function ProjectX.ArchetypeSpawnPoint_X.OnDestroy
//// [0x00020102] 
//// Parameters infos:
//// class USeqAct_Destroy*         Action                         ( CPF_Parm )
//
//void AArchetypeSpawnPoint_X::OnDestroy ( class USeqAct_Destroy* Action )
//{
//	static UFunction* pFnOnDestroy = NULL;
//
//	if ( ! pFnOnDestroy )
//		pFnOnDestroy = (UFunction*) UObject::GObjObjects()->Data[ 48227 ];
//
//	AArchetypeSpawnPoint_X_execOnDestroy_Parms OnDestroy_Parms;
//	OnDestroy_Parms.Action = Action;
//
//	this->ProcessEvent ( pFnOnDestroy, &OnDestroy_Parms, NULL );
//};
//
//// Function ProjectX.ArchetypeSpawnPoint_X.PostBeginPlay
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void AArchetypeSpawnPoint_X::eventPostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48226 ];
//
//	AArchetypeSpawnPoint_X_eventPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.ArchetypeSpawnPoint_X.EventSpawned
//// [0x00120000] 
//// Parameters infos:
//// class AArchetypeSpawnPoint_X*  SpawnPoint                     ( CPF_Parm )
//// class AActor*                  Spawned                        ( CPF_Parm )
//
//void AArchetypeSpawnPoint_X::EventSpawned ( class AArchetypeSpawnPoint_X* SpawnPoint, class AActor* Spawned )
//{
//	static UFunction* pFnEventSpawned = NULL;
//
//	if ( ! pFnEventSpawned )
//		pFnEventSpawned = (UFunction*) UObject::GObjObjects()->Data[ 48213 ];
//
//	AArchetypeSpawnPoint_X_execEventSpawned_Parms EventSpawned_Parms;
//	EventSpawned_Parms.SpawnPoint = SpawnPoint;
//	EventSpawned_Parms.Spawned = Spawned;
//
//	this->ProcessEvent ( pFnEventSpawned, &EventSpawned_Parms, NULL );
//};
//
//// Function ProjectX.Aws4Signature_X.SignRequest
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UHttpRequestInterface*   HTTPRequest                    ( CPF_Parm )
//
//void UAws4Signature_X::SignRequest ( class UHttpRequestInterface* HTTPRequest )
//{
//	static UFunction* pFnSignRequest = NULL;
//
//	if ( ! pFnSignRequest )
//		pFnSignRequest = (UFunction*) UObject::GObjObjects()->Data[ 56809 ];
//
//	UAws4Signature_X_execSignRequest_Parms SignRequest_Parms;
//	SignRequest_Parms.HTTPRequest = HTTPRequest;
//
//	pFnSignRequest->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSignRequest, &SignRequest_Parms, NULL );
//
//	pFnSignRequest->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpBeacon.ReceivedBunch
//// [0x00080400] ( FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::ReceivedBunch ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnReceivedBunch = NULL;
//
//	if ( ! pFnReceivedBunch )
//		pFnReceivedBunch = (UFunction*) UObject::GObjObjects()->Data[ 51449 ];
//
//	UTcpBeacon_execReceivedBunch_Parms ReceivedBunch_Parms;
//	ReceivedBunch_Parms.Connection = Connection;
//
//	pFnReceivedBunch->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnReceivedBunch, &ReceivedBunch_Parms, NULL );
//
//	pFnReceivedBunch->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpBeacon.OnDisconnected
//// [0x00080400] ( FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::OnDisconnected ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnOnDisconnected = NULL;
//
//	if ( ! pFnOnDisconnected )
//		pFnOnDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 51447 ];
//
//	UTcpBeacon_execOnDisconnected_Parms OnDisconnected_Parms;
//	OnDisconnected_Parms.Connection = Connection;
//
//	pFnOnDisconnected->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnOnDisconnected, &OnDisconnected_Parms, NULL );
//
//	pFnOnDisconnected->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpBeacon.OnConnected
//// [0x00080400] ( FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::OnConnected ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnOnConnected = NULL;
//
//	if ( ! pFnOnConnected )
//		pFnOnConnected = (UFunction*) UObject::GObjObjects()->Data[ 51445 ];
//
//	UTcpBeacon_execOnConnected_Parms OnConnected_Parms;
//	OnConnected_Parms.Connection = Connection;
//
//	pFnOnConnected->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnOnConnected, &OnConnected_Parms, NULL );
//
//	pFnOnConnected->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpBeacon.OnConnectionRemoved
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::eventOnConnectionRemoved ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnOnConnectionRemoved = NULL;
//
//	if ( ! pFnOnConnectionRemoved )
//		pFnOnConnectionRemoved = (UFunction*) UObject::GObjObjects()->Data[ 51443 ];
//
//	UTcpBeacon_eventOnConnectionRemoved_Parms OnConnectionRemoved_Parms;
//	OnConnectionRemoved_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnOnConnectionRemoved, &OnConnectionRemoved_Parms, NULL );
//};
//
//// Function ProjectX.TcpBeacon.OnConnectionAdded
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::eventOnConnectionAdded ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnOnConnectionAdded = NULL;
//
//	if ( ! pFnOnConnectionAdded )
//		pFnOnConnectionAdded = (UFunction*) UObject::GObjObjects()->Data[ 51438 ];
//
//	UTcpBeacon_eventOnConnectionAdded_Parms OnConnectionAdded_Parms;
//	OnConnectionAdded_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnOnConnectionAdded, &OnConnectionAdded_Parms, NULL );
//};
//
//// Function ProjectX.TcpBeacon.GetConnection
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UTcpConnection* UTcpBeacon::GetConnection ( struct FString Address )
//{
//	static UFunction* pFnGetConnection = NULL;
//
//	if ( ! pFnGetConnection )
//		pFnGetConnection = (UFunction*) UObject::GObjObjects()->Data[ 51435 ];
//
//	UTcpBeacon_execGetConnection_Parms GetConnection_Parms;
//	memcpy ( &GetConnection_Parms.Address, &Address, 0xC );
//
//	pFnGetConnection->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetConnection, &GetConnection_Parms, NULL );
//
//	pFnGetConnection->FunctionFlags |= 0x400;
//
//	return GetConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpBeacon.Close
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UTcpBeacon::Close ( )
//{
//	static UFunction* pFnClose = NULL;
//
//	if ( ! pFnClose )
//		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 51434 ];
//
//	UTcpBeacon_execClose_Parms Close_Parms;
//
//	pFnClose->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );
//
//	pFnClose->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpBeacon.GetExternalHostAddress
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UTcpBeacon::GetExternalHostAddress ( )
//{
//	static UFunction* pFnGetExternalHostAddress = NULL;
//
//	if ( ! pFnGetExternalHostAddress )
//		pFnGetExternalHostAddress = (UFunction*) UObject::GObjObjects()->Data[ 50969 ];
//
//	UTcpBeacon_execGetExternalHostAddress_Parms GetExternalHostAddress_Parms;
//
//	pFnGetExternalHostAddress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetExternalHostAddress, &GetExternalHostAddress_Parms, NULL );
//
//	pFnGetExternalHostAddress->FunctionFlags |= 0x400;
//
//	return GetExternalHostAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpBeacon.GetLocalHostAddress
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UTcpBeacon::GetLocalHostAddress ( )
//{
//	static UFunction* pFnGetLocalHostAddress = NULL;
//
//	if ( ! pFnGetLocalHostAddress )
//		pFnGetLocalHostAddress = (UFunction*) UObject::GObjObjects()->Data[ 51451 ];
//
//	UTcpBeacon_execGetLocalHostAddress_Parms GetLocalHostAddress_Parms;
//
//	pFnGetLocalHostAddress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetLocalHostAddress, &GetLocalHostAddress_Parms, NULL );
//
//	pFnGetLocalHostAddress->FunctionFlags |= 0x400;
//
//	return GetLocalHostAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpBeacon.BeginListen
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UTcpBeacon::BeginListen ( )
//{
//	static UFunction* pFnBeginListen = NULL;
//
//	if ( ! pFnBeginListen )
//		pFnBeginListen = (UFunction*) UObject::GObjObjects()->Data[ 51432 ];
//
//	UTcpBeacon_execBeginListen_Parms BeginListen_Parms;
//
//	pFnBeginListen->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBeginListen, &BeginListen_Parms, NULL );
//
//	pFnBeginListen->FunctionFlags |= 0x400;
//
//	return BeginListen_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpBeacon.BeginConnect
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UTcpConnection* UTcpBeacon::BeginConnect ( struct FString Address )
//{
//	static UFunction* pFnBeginConnect = NULL;
//
//	if ( ! pFnBeginConnect )
//		pFnBeginConnect = (UFunction*) UObject::GObjObjects()->Data[ 51429 ];
//
//	UTcpBeacon_execBeginConnect_Parms BeginConnect_Parms;
//	memcpy ( &BeginConnect_Parms.Address, &Address, 0xC );
//
//	pFnBeginConnect->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBeginConnect, &BeginConnect_Parms, NULL );
//
//	pFnBeginConnect->FunctionFlags |= 0x400;
//
//	return BeginConnect_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpBeacon.EventDisconnected
//// [0x00120000] 
//// Parameters infos:
//// class UTcpBeacon*              Beacon                         ( CPF_Parm | CPF_EditInline )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::EventDisconnected ( class UTcpBeacon* Beacon, class UTcpConnection* Connection )
//{
//	static UFunction* pFnEventDisconnected = NULL;
//
//	if ( ! pFnEventDisconnected )
//		pFnEventDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 51416 ];
//
//	UTcpBeacon_execEventDisconnected_Parms EventDisconnected_Parms;
//	EventDisconnected_Parms.Beacon = Beacon;
//	EventDisconnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventDisconnected, &EventDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.TcpBeacon.EventConnected
//// [0x00120000] 
//// Parameters infos:
//// class UTcpBeacon*              Beacon                         ( CPF_Parm | CPF_EditInline )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpBeacon::EventConnected ( class UTcpBeacon* Beacon, class UTcpConnection* Connection )
//{
//	static UFunction* pFnEventConnected = NULL;
//
//	if ( ! pFnEventConnected )
//		pFnEventConnected = (UFunction*) UObject::GObjObjects()->Data[ 51418 ];
//
//	UTcpBeacon_execEventConnected_Parms EventConnected_Parms;
//	EventConnected_Parms.Beacon = Beacon;
//	EventConnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventConnected, &EventConnected_Parms, NULL );
//};
//
//// Function ProjectX.TcpMessageBeacon.BroadcastMessage
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UTcpMessageBeacon::BroadcastMessage ( class UObject* Message )
//{
//	static UFunction* pFnBroadcastMessage = NULL;
//
//	if ( ! pFnBroadcastMessage )
//		pFnBroadcastMessage = (UFunction*) UObject::GObjObjects()->Data[ 51475 ];
//
//	UTcpMessageBeacon_execBroadcastMessage_Parms BroadcastMessage_Parms;
//	BroadcastMessage_Parms.Message = Message;
//
//	pFnBroadcastMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBroadcastMessage, &BroadcastMessage_Parms, NULL );
//
//	pFnBroadcastMessage->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpMessageBeacon.SendMessage
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UTcpMessageBeacon::SendMessage ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnSendMessage = NULL;
//
//	if ( ! pFnSendMessage )
//		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 51472 ];
//
//	UTcpMessageBeacon_execSendMessage_Parms SendMessage_Parms;
//	SendMessage_Parms.Connection = Connection;
//	SendMessage_Parms.Message = Message;
//
//	pFnSendMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
//
//	pFnSendMessage->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpMessageBeacon.CreateMessage
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UBeaconMessage_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  MessageClass                   ( CPF_Parm )
//
//class UBeaconMessage_X* UTcpMessageBeacon::CreateMessage ( class UClass* MessageClass )
//{
//	static UFunction* pFnCreateMessage = NULL;
//
//	if ( ! pFnCreateMessage )
//		pFnCreateMessage = (UFunction*) UObject::GObjObjects()->Data[ 51469 ];
//
//	UTcpMessageBeacon_execCreateMessage_Parms CreateMessage_Parms;
//	CreateMessage_Parms.MessageClass = MessageClass;
//
//	pFnCreateMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCreateMessage, &CreateMessage_Parms, NULL );
//
//	pFnCreateMessage->FunctionFlags |= 0x400;
//
//	return CreateMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpMessageBeacon.RemoveMessageHandler
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UTcpMessageBeacon::RemoveMessageHandler ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnRemoveMessageHandler = NULL;
//
//	if ( ! pFnRemoveMessageHandler )
//		pFnRemoveMessageHandler = (UFunction*) UObject::GObjObjects()->Data[ 51467 ];
//
//	UTcpMessageBeacon_execRemoveMessageHandler_Parms RemoveMessageHandler_Parms;
//	memcpy ( &RemoveMessageHandler_Parms.Callback, &Callback, 0x10 );
//
//	pFnRemoveMessageHandler->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveMessageHandler, &RemoveMessageHandler_Parms, NULL );
//
//	pFnRemoveMessageHandler->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpMessageBeacon.AddMessageHandler
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UClass*                  MessageClass                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UTcpMessageBeacon::AddMessageHandler ( class UClass* MessageClass, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnAddMessageHandler = NULL;
//
//	if ( ! pFnAddMessageHandler )
//		pFnAddMessageHandler = (UFunction*) UObject::GObjObjects()->Data[ 51464 ];
//
//	UTcpMessageBeacon_execAddMessageHandler_Parms AddMessageHandler_Parms;
//	AddMessageHandler_Parms.MessageClass = MessageClass;
//	memcpy ( &AddMessageHandler_Parms.Callback, &Callback, 0x10 );
//
//	pFnAddMessageHandler->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddMessageHandler, &AddMessageHandler_Parms, NULL );
//
//	pFnAddMessageHandler->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpMessageBeacon.MessageReceivedDelegate
//// [0x00140001] ( FUNC_Final )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UTcpMessageBeacon::MessageReceivedDelegate ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnMessageReceivedDelegate = NULL;
//
//	if ( ! pFnMessageReceivedDelegate )
//		pFnMessageReceivedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51458 ];
//
//	UTcpMessageBeacon_execMessageReceivedDelegate_Parms MessageReceivedDelegate_Parms;
//	MessageReceivedDelegate_Parms.Connection = Connection;
//	MessageReceivedDelegate_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnMessageReceivedDelegate, &MessageReceivedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.BeaconMessage_X.Broadcast
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UBeaconMessage_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UBeaconMessage_X* UBeaconMessage_X::Broadcast ( )
//{
//	static UFunction* pFnBroadcast = NULL;
//
//	if ( ! pFnBroadcast )
//		pFnBroadcast = (UFunction*) UObject::GObjObjects()->Data[ 48027 ];
//
//	UBeaconMessage_X_execBroadcast_Parms Broadcast_Parms;
//
//	pFnBroadcast->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBroadcast, &Broadcast_Parms, NULL );
//
//	pFnBroadcast->FunctionFlags |= 0x400;
//
//	return Broadcast_Parms.ReturnValue;
//};
//
//// Function ProjectX.BeaconMessage_X.Send
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UBeaconMessage_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//class UBeaconMessage_X* UBeaconMessage_X::Send ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnSend = NULL;
//
//	if ( ! pFnSend )
//		pFnSend = (UFunction*) UObject::GObjObjects()->Data[ 48024 ];
//
//	UBeaconMessage_X_execSend_Parms Send_Parms;
//	Send_Parms.Connection = Connection;
//
//	pFnSend->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSend, &Send_Parms, NULL );
//
//	pFnSend->FunctionFlags |= 0x400;
//
//	return Send_Parms.ReturnValue;
//};
//
//// Function ProjectX.BugReport_X.HandleHttpRequestComplete
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UHttpRequestInterface*   OriginalRequest                ( CPF_Parm )
//// class UHttpResponseInterface*  InHttpResponse                 ( CPF_Parm )
//// unsigned long                  bDidSucceed                    ( CPF_Parm )
//
//void UBugReport_X::HandleHttpRequestComplete ( class UHttpRequestInterface* OriginalRequest, class UHttpResponseInterface* InHttpResponse, unsigned long bDidSucceed )
//{
//	static UFunction* pFnHandleHttpRequestComplete = NULL;
//
//	if ( ! pFnHandleHttpRequestComplete )
//		pFnHandleHttpRequestComplete = (UFunction*) UObject::GObjObjects()->Data[ 48295 ];
//
//	UBugReport_X_execHandleHttpRequestComplete_Parms HandleHttpRequestComplete_Parms;
//	HandleHttpRequestComplete_Parms.OriginalRequest = OriginalRequest;
//	HandleHttpRequestComplete_Parms.InHttpResponse = InHttpResponse;
//	HandleHttpRequestComplete_Parms.bDidSucceed = bDidSucceed;
//
//	pFnHandleHttpRequestComplete->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHandleHttpRequestComplete, &HandleHttpRequestComplete_Parms, NULL );
//
//	pFnHandleHttpRequestComplete->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.BugReport_X.LogText
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 Str                            ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void UBugReport_X::LogText ( struct FString Str )
//{
//	static UFunction* pFnLogText = NULL;
//
//	if ( ! pFnLogText )
//		pFnLogText = (UFunction*) UObject::GObjObjects()->Data[ 48293 ];
//
//	UBugReport_X_execLogText_Parms LogText_Parms;
//	memcpy ( &LogText_Parms.Str, &Str, 0xC );
//
//	pFnLogText->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnLogText, &LogText_Parms, NULL );
//
//	pFnLogText->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.BugReport_X.PDIReport
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UBugReport_X::eventPDIReport ( )
//{
//	static UFunction* pFnPDIReport = NULL;
//
//	if ( ! pFnPDIReport )
//		pFnPDIReport = (UFunction*) UObject::GObjObjects()->Data[ 48288 ];
//
//	UBugReport_X_eventPDIReport_Parms PDIReport_Parms;
//
//	this->ProcessEvent ( pFnPDIReport, &PDIReport_Parms, NULL );
//};
//
//// Function ProjectX.BugReport_X.CancelBugReport
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UBugReport_X::CancelBugReport ( )
//{
//	static UFunction* pFnCancelBugReport = NULL;
//
//	if ( ! pFnCancelBugReport )
//		pFnCancelBugReport = (UFunction*) UObject::GObjObjects()->Data[ 48287 ];
//
//	UBugReport_X_execCancelBugReport_Parms CancelBugReport_Parms;
//
//	pFnCancelBugReport->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCancelBugReport, &CancelBugReport_Parms, NULL );
//
//	pFnCancelBugReport->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.BugReport_X.SubmitBugReport
//// [0x00024400] ( FUNC_Native )
//// Parameters infos:
//// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Description                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Email                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UBugReport_X::SubmitBugReport ( struct FString Title, struct FString Description, struct FString Email )
//{
//	static UFunction* pFnSubmitBugReport = NULL;
//
//	if ( ! pFnSubmitBugReport )
//		pFnSubmitBugReport = (UFunction*) UObject::GObjObjects()->Data[ 48283 ];
//
//	UBugReport_X_execSubmitBugReport_Parms SubmitBugReport_Parms;
//	memcpy ( &SubmitBugReport_Parms.Title, &Title, 0xC );
//	memcpy ( &SubmitBugReport_Parms.Description, &Description, 0xC );
//	memcpy ( &SubmitBugReport_Parms.Email, &Email, 0xC );
//
//	pFnSubmitBugReport->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSubmitBugReport, &SubmitBugReport_Parms, NULL );
//
//	pFnSubmitBugReport->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.BugReport_X.StartBugReport
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UBugReport_X::StartBugReport ( )
//{
//	static UFunction* pFnStartBugReport = NULL;
//
//	if ( ! pFnStartBugReport )
//		pFnStartBugReport = (UFunction*) UObject::GObjObjects()->Data[ 48282 ];
//
//	UBugReport_X_execStartBugReport_Parms StartBugReport_Parms;
//
//	pFnStartBugReport->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStartBugReport, &StartBugReport_Parms, NULL );
//
//	pFnStartBugReport->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.BugReport_X.StaticSubmitBugReport
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UBugReport_X::StaticSubmitBugReport ( struct FString Title )
//{
//	static UFunction* pFnStaticSubmitBugReport = NULL;
//
//	if ( ! pFnStaticSubmitBugReport )
//		pFnStaticSubmitBugReport = (UFunction*) UObject::GObjObjects()->Data[ 48280 ];
//
//	UBugReport_X_execStaticSubmitBugReport_Parms StaticSubmitBugReport_Parms;
//	memcpy ( &StaticSubmitBugReport_Parms.Title, &Title, 0xC );
//
//	this->ProcessEvent ( pFnStaticSubmitBugReport, &StaticSubmitBugReport_Parms, NULL );
//};
//
//// Function ProjectX.BugReport_X.CreateBugReport
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UBugReport_X*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UBugReport_X* UBugReport_X::CreateBugReport ( )
//{
//	static UFunction* pFnCreateBugReport = NULL;
//
//	if ( ! pFnCreateBugReport )
//		pFnCreateBugReport = (UFunction*) UObject::GObjObjects()->Data[ 48278 ];
//
//	UBugReport_X_execCreateBugReport_Parms CreateBugReport_Parms;
//
//	pFnCreateBugReport->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCreateBugReport, &CreateBugReport_Parms, NULL );
//
//	pFnCreateBugReport->FunctionFlags |= 0x400;
//
//	return CreateBugReport_Parms.ReturnValue;
//};
//
//// Function ProjectX.CachedWebData_X.GetText
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UCachedWebData_X::GetText ( )
//{
//	static UFunction* pFnGetText = NULL;
//
//	if ( ! pFnGetText )
//		pFnGetText = (UFunction*) UObject::GObjObjects()->Data[ 55924 ];
//
//	UCachedWebData_X_execGetText_Parms GetText_Parms;
//
//	pFnGetText->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetText, &GetText_Parms, NULL );
//
//	pFnGetText->FunctionFlags |= 0x400;
//
//	return GetText_Parms.ReturnValue;
//};
//
//// Function ProjectX.CachedWebData_X.UpdateData
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< unsigned char >        NewData                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 NewETag                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCachedWebData_X::UpdateData ( TArray< unsigned char > NewData, struct FString NewETag )
//{
//	static UFunction* pFnUpdateData = NULL;
//
//	if ( ! pFnUpdateData )
//		pFnUpdateData = (UFunction*) UObject::GObjObjects()->Data[ 55920 ];
//
//	UCachedWebData_X_execUpdateData_Parms UpdateData_Parms;
//	memcpy ( &UpdateData_Parms.NewData, &NewData, 0xC );
//	memcpy ( &UpdateData_Parms.NewETag, &NewETag, 0xC );
//
//	pFnUpdateData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUpdateData, &UpdateData_Parms, NULL );
//
//	pFnUpdateData->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Camera_X.OnViewTargetChanged
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//
//void ACamera_X::eventOnViewTargetChanged ( )
//{
//	static UFunction* pFnOnViewTargetChanged = NULL;
//
//	if ( ! pFnOnViewTargetChanged )
//		pFnOnViewTargetChanged = (UFunction*) UObject::GObjObjects()->Data[ 48511 ];
//
//	ACamera_X_eventOnViewTargetChanged_Parms OnViewTargetChanged_Parms;
//
//	this->ProcessEvent ( pFnOnViewTargetChanged, &OnViewTargetChanged_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.SetViewTarget
//// [0x00024400] ( FUNC_Native )
//// Parameters infos:
//// class AActor*                  NewViewTarget                  ( CPF_Parm )
//// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )
//
//void ACamera_X::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
//{
//	static UFunction* pFnSetViewTarget = NULL;
//
//	if ( ! pFnSetViewTarget )
//		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 48512 ];
//
//	ACamera_X_execSetViewTarget_Parms SetViewTarget_Parms;
//	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
//	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0x10 );
//
//	pFnSetViewTarget->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );
//
//	pFnSetViewTarget->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Camera_X.IsTransitioning
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool ACamera_X::IsTransitioning ( )
//{
//	static UFunction* pFnIsTransitioning = NULL;
//
//	if ( ! pFnIsTransitioning )
//		pFnIsTransitioning = (UFunction*) UObject::GObjObjects()->Data[ 48513 ];
//
//	ACamera_X_execIsTransitioning_Parms IsTransitioning_Parms;
//
//	this->ProcessEvent ( pFnIsTransitioning, &IsTransitioning_Parms, NULL );
//
//	return IsTransitioning_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.HandleBlenderStateChanged
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UCameraStateBlender_X*   CameraBlender                  ( CPF_Parm | CPF_EditInline )
//
//void ACamera_X::HandleBlenderStateChanged ( class UCameraStateBlender_X* CameraBlender )
//{
//	static UFunction* pFnHandleBlenderStateChanged = NULL;
//
//	if ( ! pFnHandleBlenderStateChanged )
//		pFnHandleBlenderStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 48516 ];
//
//	ACamera_X_execHandleBlenderStateChanged_Parms HandleBlenderStateChanged_Parms;
//	HandleBlenderStateChanged_Parms.CameraBlender = CameraBlender;
//
//	this->ProcessEvent ( pFnHandleBlenderStateChanged, &HandleBlenderStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.SnapTransition
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void ACamera_X::SnapTransition ( )
//{
//	static UFunction* pFnSnapTransition = NULL;
//
//	if ( ! pFnSnapTransition )
//		pFnSnapTransition = (UFunction*) UObject::GObjObjects()->Data[ 48518 ];
//
//	ACamera_X_execSnapTransition_Parms SnapTransition_Parms;
//
//	this->ProcessEvent ( pFnSnapTransition, &SnapTransition_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void ACamera_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 48508 ];
//
//	ACamera_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.ApplyCameraModifiers
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FTPOV                   OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::ApplyCameraModifiers ( float DeltaTime, struct FTPOV* OutPOV )
//{
//	static UFunction* pFnApplyCameraModifiers = NULL;
//
//	if ( ! pFnApplyCameraModifiers )
//		pFnApplyCameraModifiers = (UFunction*) UObject::GObjObjects()->Data[ 48505 ];
//
//	ACamera_X_execApplyCameraModifiers_Parms ApplyCameraModifiers_Parms;
//	ApplyCameraModifiers_Parms.DeltaTime = DeltaTime;
//
//	pFnApplyCameraModifiers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnApplyCameraModifiers, &ApplyCameraModifiers_Parms, NULL );
//
//	pFnApplyCameraModifiers->FunctionFlags |= 0x400;
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &ApplyCameraModifiers_Parms.OutPOV, 0x1C );
//};
//
//// Function ProjectX.Camera_X.CameraTrace
//// [0x00424401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FVector                 End                            ( CPF_Parm )
//// struct FVector                 Start                          ( CPF_Parm )
//// struct FVector                 Extent                         ( CPF_Parm )
//// struct FVector                 HitLoc                         ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//// class AActor*                  HitActor                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool ACamera_X::CameraTrace ( struct FVector End, struct FVector Start, struct FVector Extent, struct FVector* HitLoc, class AActor** HitActor )
//{
//	static UFunction* pFnCameraTrace = NULL;
//
//	if ( ! pFnCameraTrace )
//		pFnCameraTrace = (UFunction*) UObject::GObjObjects()->Data[ 48498 ];
//
//	ACamera_X_execCameraTrace_Parms CameraTrace_Parms;
//	memcpy ( &CameraTrace_Parms.End, &End, 0xC );
//	memcpy ( &CameraTrace_Parms.Start, &Start, 0xC );
//	memcpy ( &CameraTrace_Parms.Extent, &Extent, 0xC );
//
//	pFnCameraTrace->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCameraTrace, &CameraTrace_Parms, NULL );
//
//	pFnCameraTrace->FunctionFlags |= 0x400;
//
//	if ( HitLoc )
//		memcpy ( HitLoc, &CameraTrace_Parms.HitLoc, 0xC );
//
//	if ( HitActor )
//		*HitActor = CameraTrace_Parms.HitActor;
//
//	return CameraTrace_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.InstanceCameraState
//// [0x00020002] 
//// Parameters infos:
//// class UCameraState_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UCameraState_X*          Archetype                      ( CPF_Parm )
//
//class UCameraState_X* ACamera_X::InstanceCameraState ( class UCameraState_X* Archetype )
//{
//	static UFunction* pFnInstanceCameraState = NULL;
//
//	if ( ! pFnInstanceCameraState )
//		pFnInstanceCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48494 ];
//
//	ACamera_X_execInstanceCameraState_Parms InstanceCameraState_Parms;
//	InstanceCameraState_Parms.Archetype = Archetype;
//
//	this->ProcessEvent ( pFnInstanceCameraState, &InstanceCameraState_Parms, NULL );
//
//	return InstanceCameraState_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.ModifyPostProcessSettings
//// [0x00420802] ( FUNC_Event )
//// Parameters infos:
//// struct FPostProcessSettings    PP                             ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void ACamera_X::eventModifyPostProcessSettings ( struct FPostProcessSettings* PP )
//{
//	static UFunction* pFnModifyPostProcessSettings = NULL;
//
//	if ( ! pFnModifyPostProcessSettings )
//		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 48492 ];
//
//	ACamera_X_eventModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;
//
//	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );
//
//	if ( PP )
//		memcpy ( PP, &ModifyPostProcessSettings_Parms.PP, 0x150 );
//};
//
//// Function ProjectX.Camera_X.ProcessViewRotation
//// [0x00420002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FRotator                OutViewRotation                ( CPF_Parm | CPF_OutParm )
//// struct FRotator                OutDeltaRot                    ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::ProcessViewRotation ( float DeltaTime, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot )
//{
//	static UFunction* pFnProcessViewRotation = NULL;
//
//	if ( ! pFnProcessViewRotation )
//		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 48488 ];
//
//	ACamera_X_execProcessViewRotation_Parms ProcessViewRotation_Parms;
//	ProcessViewRotation_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );
//
//	if ( OutViewRotation )
//		memcpy ( OutViewRotation, &ProcessViewRotation_Parms.OutViewRotation, 0xC );
//
//	if ( OutDeltaRot )
//		memcpy ( OutDeltaRot, &ProcessViewRotation_Parms.OutDeltaRot, 0xC );
//};
//
//// Function ProjectX.Camera_X.PostProcessCameraState
//// [0x00480002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::PostProcessCameraState ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnPostProcessCameraState = NULL;
//
//	if ( ! pFnPostProcessCameraState )
//		pFnPostProcessCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48485 ];
//
//	ACamera_X_execPostProcessCameraState_Parms PostProcessCameraState_Parms;
//	PostProcessCameraState_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnPostProcessCameraState, &PostProcessCameraState_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &PostProcessCameraState_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.Camera_X.ProcessCameraState
//// [0x00480002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::ProcessCameraState ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnProcessCameraState = NULL;
//
//	if ( ! pFnProcessCameraState )
//		pFnProcessCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48482 ];
//
//	ACamera_X_execProcessCameraState_Parms ProcessCameraState_Parms;
//	ProcessCameraState_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnProcessCameraState, &ProcessCameraState_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &ProcessCameraState_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.Camera_X.CheckViewTarget
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// struct FTViewTarget            VT                             ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::CheckViewTarget ( struct FTViewTarget* VT )
//{
//	static UFunction* pFnCheckViewTarget = NULL;
//
//	if ( ! pFnCheckViewTarget )
//		pFnCheckViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 48480 ];
//
//	ACamera_X_execCheckViewTarget_Parms CheckViewTarget_Parms;
//
//	pFnCheckViewTarget->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCheckViewTarget, &CheckViewTarget_Parms, NULL );
//
//	pFnCheckViewTarget->FunctionFlags |= 0x400;
//
//	if ( VT )
//		memcpy ( VT, &CheckViewTarget_Parms.VT, 0x2C );
//};
//
//// Function ProjectX.Camera_X.CopyFade
//// [0x00020002] 
//// Parameters infos:
//// class ACamera_X*               Other                          ( CPF_Parm )
//
//void ACamera_X::CopyFade ( class ACamera_X* Other )
//{
//	static UFunction* pFnCopyFade = NULL;
//
//	if ( ! pFnCopyFade )
//		pFnCopyFade = (UFunction*) UObject::GObjObjects()->Data[ 48478 ];
//
//	ACamera_X_execCopyFade_Parms CopyFade_Parms;
//	CopyFade_Parms.Other = Other;
//
//	this->ProcessEvent ( pFnCopyFade, &CopyFade_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.SetCameraFade
//// [0x00024002] 
//// Parameters infos:
//// unsigned long                  bNewEnableFading               ( CPF_Parm )
//// struct FColor                  NewFadeColor                   ( CPF_OptionalParm | CPF_Parm )
//// struct FVector2D               NewFadeAlpha                   ( CPF_OptionalParm | CPF_Parm )
//// float                          NewFadeTime                    ( CPF_OptionalParm | CPF_Parm )
//// unsigned long                  bNewFadeAudio                  ( CPF_OptionalParm | CPF_Parm )
//
//void ACamera_X::SetCameraFade ( unsigned long bNewEnableFading, struct FColor NewFadeColor, struct FVector2D NewFadeAlpha, float NewFadeTime, unsigned long bNewFadeAudio )
//{
//	static UFunction* pFnSetCameraFade = NULL;
//
//	if ( ! pFnSetCameraFade )
//		pFnSetCameraFade = (UFunction*) UObject::GObjObjects()->Data[ 48472 ];
//
//	ACamera_X_execSetCameraFade_Parms SetCameraFade_Parms;
//	SetCameraFade_Parms.bNewEnableFading = bNewEnableFading;
//	memcpy ( &SetCameraFade_Parms.NewFadeColor, &NewFadeColor, 0x4 );
//	memcpy ( &SetCameraFade_Parms.NewFadeAlpha, &NewFadeAlpha, 0x8 );
//	SetCameraFade_Parms.NewFadeTime = NewFadeTime;
//	SetCameraFade_Parms.bNewFadeAudio = bNewFadeAudio;
//
//	this->ProcessEvent ( pFnSetCameraFade, &SetCameraFade_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.UpdateFade
//// [0x00080102] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void ACamera_X::UpdateFade ( float DeltaTime )
//{
//	static UFunction* pFnUpdateFade = NULL;
//
//	if ( ! pFnUpdateFade )
//		pFnUpdateFade = (UFunction*) UObject::GObjObjects()->Data[ 48469 ];
//
//	ACamera_X_execUpdateFade_Parms UpdateFade_Parms;
//	UpdateFade_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdateFade, &UpdateFade_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.UpdateCamera
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void ACamera_X::eventUpdateCamera ( float DeltaTime )
//{
//	static UFunction* pFnUpdateCamera = NULL;
//
//	if ( ! pFnUpdateCamera )
//		pFnUpdateCamera = (UFunction*) UObject::GObjObjects()->Data[ 48467 ];
//
//	ACamera_X_eventUpdateCamera_Parms UpdateCamera_Parms;
//	UpdateCamera_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdateCamera, &UpdateCamera_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.ClampPOV
//// [0x00480100] 
//// Parameters infos:
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::ClampPOV ( struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnClampPOV = NULL;
//
//	if ( ! pFnClampPOV )
//		pFnClampPOV = (UFunction*) UObject::GObjObjects()->Data[ 48465 ];
//
//	ACamera_X_execClampPOV_Parms ClampPOV_Parms;
//
//	this->ProcessEvent ( pFnClampPOV, &ClampPOV_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &ClampPOV_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.Camera_X.RemoveRoll
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FRotator                InRot                          ( CPF_Parm )
//
//struct FRotator ACamera_X::RemoveRoll ( struct FRotator InRot )
//{
//	static UFunction* pFnRemoveRoll = NULL;
//
//	if ( ! pFnRemoveRoll )
//		pFnRemoveRoll = (UFunction*) UObject::GObjObjects()->Data[ 48462 ];
//
//	ACamera_X_execRemoveRoll_Parms RemoveRoll_Parms;
//	memcpy ( &RemoveRoll_Parms.InRot, &InRot, 0xC );
//
//	this->ProcessEvent ( pFnRemoveRoll, &RemoveRoll_Parms, NULL );
//
//	return RemoveRoll_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.GetCameraState
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UCameraState_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UCameraState_X* ACamera_X::GetCameraState ( )
//{
//	static UFunction* pFnGetCameraState = NULL;
//
//	if ( ! pFnGetCameraState )
//		pFnGetCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48460 ];
//
//	ACamera_X_execGetCameraState_Parms GetCameraState_Parms;
//
//	this->ProcessEvent ( pFnGetCameraState, &GetCameraState_Parms, NULL );
//
//	return GetCameraState_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.SelectCameraState
//// [0x00080002] 
//// Parameters infos:
//// class UCameraState_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UCameraState_X* ACamera_X::SelectCameraState ( )
//{
//	static UFunction* pFnSelectCameraState = NULL;
//
//	if ( ! pFnSelectCameraState )
//		pFnSelectCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48453 ];
//
//	ACamera_X_execSelectCameraState_Parms SelectCameraState_Parms;
//
//	this->ProcessEvent ( pFnSelectCameraState, &SelectCameraState_Parms, NULL );
//
//	return SelectCameraState_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.UpdateCameraState
//// [0x00080002] 
//// Parameters infos:
//
//void ACamera_X::UpdateCameraState ( )
//{
//	static UFunction* pFnUpdateCameraState = NULL;
//
//	if ( ! pFnUpdateCameraState )
//		pFnUpdateCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48451 ];
//
//	ACamera_X_execUpdateCameraState_Parms UpdateCameraState_Parms;
//
//	this->ProcessEvent ( pFnUpdateCameraState, &UpdateCameraState_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.UpdateCameraKnocks
//// [0x00C80003] ( FUNC_Final )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::UpdateCameraKnocks ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnUpdateCameraKnocks = NULL;
//
//	if ( ! pFnUpdateCameraKnocks )
//		pFnUpdateCameraKnocks = (UFunction*) UObject::GObjObjects()->Data[ 48444 ];
//
//	ACamera_X_execUpdateCameraKnocks_Parms UpdateCameraKnocks_Parms;
//	UpdateCameraKnocks_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdateCameraKnocks, &UpdateCameraKnocks_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &UpdateCameraKnocks_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.Camera_X.AddRotationKnock
//// [0x00024002] 
//// Parameters infos:
//// struct FRotationCameraKnock    Knock                          ( CPF_Parm )
//// float                          Scale                          ( CPF_OptionalParm | CPF_Parm )
//
//void ACamera_X::AddRotationKnock ( struct FRotationCameraKnock Knock, float Scale )
//{
//	static UFunction* pFnAddRotationKnock = NULL;
//
//	if ( ! pFnAddRotationKnock )
//		pFnAddRotationKnock = (UFunction*) UObject::GObjObjects()->Data[ 48441 ];
//
//	ACamera_X_execAddRotationKnock_Parms AddRotationKnock_Parms;
//	memcpy ( &AddRotationKnock_Parms.Knock, &Knock, 0x1C );
//	AddRotationKnock_Parms.Scale = Scale;
//
//	this->ProcessEvent ( pFnAddRotationKnock, &AddRotationKnock_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.AddLocationKnock
//// [0x00024002] 
//// Parameters infos:
//// struct FLocationCameraKnock    Knock                          ( CPF_Parm )
//// float                          Scale                          ( CPF_OptionalParm | CPF_Parm )
//// struct FRotator                Transform                      ( CPF_OptionalParm | CPF_Parm )
//
//void ACamera_X::AddLocationKnock ( struct FLocationCameraKnock Knock, float Scale, struct FRotator Transform )
//{
//	static UFunction* pFnAddLocationKnock = NULL;
//
//	if ( ! pFnAddLocationKnock )
//		pFnAddLocationKnock = (UFunction*) UObject::GObjObjects()->Data[ 48437 ];
//
//	ACamera_X_execAddLocationKnock_Parms AddLocationKnock_Parms;
//	memcpy ( &AddLocationKnock_Parms.Knock, &Knock, 0x1C );
//	AddLocationKnock_Parms.Scale = Scale;
//	memcpy ( &AddLocationKnock_Parms.Transform, &Transform, 0xC );
//
//	this->ProcessEvent ( pFnAddLocationKnock, &AddLocationKnock_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.InstanceCameraStates
//// [0x00080002] 
//// Parameters infos:
//
//void ACamera_X::InstanceCameraStates ( )
//{
//	static UFunction* pFnInstanceCameraStates = NULL;
//
//	if ( ! pFnInstanceCameraStates )
//		pFnInstanceCameraStates = (UFunction*) UObject::GObjObjects()->Data[ 48435 ];
//
//	ACamera_X_execInstanceCameraStates_Parms InstanceCameraStates_Parms;
//
//	this->ProcessEvent ( pFnInstanceCameraStates, &InstanceCameraStates_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.InitializeFor
//// [0x00020002] 
//// Parameters infos:
//// class APlayerController*       PC                             ( CPF_Parm )
//
//void ACamera_X::InitializeFor ( class APlayerController* PC )
//{
//	static UFunction* pFnInitializeFor = NULL;
//
//	if ( ! pFnInitializeFor )
//		pFnInitializeFor = (UFunction*) UObject::GObjObjects()->Data[ 48433 ];
//
//	ACamera_X_execInitializeFor_Parms InitializeFor_Parms;
//	InitializeFor_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnInitializeFor, &InitializeFor_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.ModifyCameraShakeScale
//// [0x00020002] 
//// Parameters infos:
//// class UCameraShake*            Shake                          ( CPF_Parm )
//// float                          NewScale                       ( CPF_Parm )
//
//void ACamera_X::ModifyCameraShakeScale ( class UCameraShake* Shake, float NewScale )
//{
//	static UFunction* pFnModifyCameraShakeScale = NULL;
//
//	if ( ! pFnModifyCameraShakeScale )
//		pFnModifyCameraShakeScale = (UFunction*) UObject::GObjObjects()->Data[ 48429 ];
//
//	ACamera_X_execModifyCameraShakeScale_Parms ModifyCameraShakeScale_Parms;
//	ModifyCameraShakeScale_Parms.Shake = Shake;
//	ModifyCameraShakeScale_Parms.NewScale = NewScale;
//
//	this->ProcessEvent ( pFnModifyCameraShakeScale, &ModifyCameraShakeScale_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.OnLoadingMovieClosesd
//// [0x00080002] 
//// Parameters infos:
//
//void ACamera_X::OnLoadingMovieClosesd ( )
//{
//	static UFunction* pFnOnLoadingMovieClosesd = NULL;
//
//	if ( ! pFnOnLoadingMovieClosesd )
//		pFnOnLoadingMovieClosesd = (UFunction*) UObject::GObjObjects()->Data[ 48428 ];
//
//	ACamera_X_execOnLoadingMovieClosesd_Parms OnLoadingMovieClosesd_Parms;
//
//	this->ProcessEvent ( pFnOnLoadingMovieClosesd, &OnLoadingMovieClosesd_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.PostBeginPlay
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void ACamera_X::eventPostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48424 ];
//
//	ACamera_X_eventPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.Camera_X.InterpVector
//// [0x00822003] ( FUNC_Final )
//// Parameters infos:
//// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FVector                 OldValue                       ( CPF_Parm )
//// struct FVector                 NewValue                       ( CPF_Parm )
//// struct FVectorInterpRate       Rate                           ( CPF_Parm )
//// struct FRotator                Orientation                    ( CPF_Parm )
//// float                          DeltaTime                      ( CPF_Parm )
//
//struct FVector ACamera_X::InterpVector ( struct FVector OldValue, struct FVector NewValue, struct FVectorInterpRate Rate, struct FRotator Orientation, float DeltaTime )
//{
//	static UFunction* pFnInterpVector = NULL;
//
//	if ( ! pFnInterpVector )
//		pFnInterpVector = (UFunction*) UObject::GObjObjects()->Data[ 48411 ];
//
//	ACamera_X_execInterpVector_Parms InterpVector_Parms;
//	memcpy ( &InterpVector_Parms.OldValue, &OldValue, 0xC );
//	memcpy ( &InterpVector_Parms.NewValue, &NewValue, 0xC );
//	memcpy ( &InterpVector_Parms.Rate, &Rate, 0x18 );
//	memcpy ( &InterpVector_Parms.Orientation, &Orientation, 0xC );
//	InterpVector_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnInterpVector, &InterpVector_Parms, NULL );
//
//	return InterpVector_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.FinalizeOrientation
//// [0x00422003] ( FUNC_Final )
//// Parameters infos:
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void ACamera_X::FinalizeOrientation ( struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnFinalizeOrientation = NULL;
//
//	if ( ! pFnFinalizeOrientation )
//		pFnFinalizeOrientation = (UFunction*) UObject::GObjObjects()->Data[ 48409 ];
//
//	ACamera_X_execFinalizeOrientation_Parms FinalizeOrientation_Parms;
//
//	this->ProcessEvent ( pFnFinalizeOrientation, &FinalizeOrientation_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &FinalizeOrientation_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.Camera_X.BlendCameraOrientations
//// [0x00C22003] ( FUNC_Final )
//// Parameters infos:
//// struct FCameraOrientation      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          Alpha                          ( CPF_Parm )
//// struct FCameraOrientation      A                              ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FCameraOrientation      B                              ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//struct FCameraOrientation ACamera_X::BlendCameraOrientations ( float Alpha, struct FCameraOrientation* A, struct FCameraOrientation* B )
//{
//	static UFunction* pFnBlendCameraOrientations = NULL;
//
//	if ( ! pFnBlendCameraOrientations )
//		pFnBlendCameraOrientations = (UFunction*) UObject::GObjObjects()->Data[ 48403 ];
//
//	ACamera_X_execBlendCameraOrientations_Parms BlendCameraOrientations_Parms;
//	BlendCameraOrientations_Parms.Alpha = Alpha;
//
//	this->ProcessEvent ( pFnBlendCameraOrientations, &BlendCameraOrientations_Parms, NULL );
//
//	if ( A )
//		memcpy ( A, &BlendCameraOrientations_Parms.A, 0x2C );
//
//	if ( B )
//		memcpy ( B, &BlendCameraOrientations_Parms.B, 0x2C );
//
//	return BlendCameraOrientations_Parms.ReturnValue;
//};
//
//// Function ProjectX.Camera_X.EventCameraStateChanged
//// [0x00120000] 
//// Parameters infos:
//// class ACamera_X*               Camera                         ( CPF_Parm )
//// class UCameraState_X*          CameraState                    ( CPF_Parm )
//
//void ACamera_X::EventCameraStateChanged ( class ACamera_X* Camera, class UCameraState_X* CameraState )
//{
//	static UFunction* pFnEventCameraStateChanged = NULL;
//
//	if ( ! pFnEventCameraStateChanged )
//		pFnEventCameraStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 48385 ];
//
//	ACamera_X_execEventCameraStateChanged_Parms EventCameraStateChanged_Parms;
//	EventCameraStateChanged_Parms.Camera = Camera;
//	EventCameraStateChanged_Parms.CameraState = CameraState;
//
//	this->ProcessEvent ( pFnEventCameraStateChanged, &EventCameraStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.CanvasTexture_X.Draw
//// [0x00120000] 
//// Parameters infos:
//// class UCanvas*                 C                              ( CPF_Parm )
//
//void UCanvasTexture_X::Draw ( class UCanvas* C )
//{
//	static UFunction* pFnDraw = NULL;
//
//	if ( ! pFnDraw )
//		pFnDraw = (UFunction*) UObject::GObjObjects()->Data[ 48579 ];
//
//	UCanvasTexture_X_execDraw_Parms Draw_Parms;
//	Draw_Parms.C = C;
//
//	this->ProcessEvent ( pFnDraw, &Draw_Parms, NULL );
//};
//
//// Function ProjectX.CanvasTextureComponent_X.OnDraw
//// [0x00020000] 
//// Parameters infos:
//// class UCanvas*                 C                              ( CPF_Parm )
//
//void UCanvasTextureComponent_X::OnDraw ( class UCanvas* C )
//{
//	static UFunction* pFnOnDraw = NULL;
//
//	if ( ! pFnOnDraw )
//		pFnOnDraw = (UFunction*) UObject::GObjObjects()->Data[ 48586 ];
//
//	UCanvasTextureComponent_X_execOnDraw_Parms OnDraw_Parms;
//	OnDraw_Parms.C = C;
//
//	this->ProcessEvent ( pFnOnDraw, &OnDraw_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ClientSetSeasonReward
//// [0x010201C2] 
//// Parameters infos:
//// struct FPlayerSeasonRewardProgress Reward                         ( CPF_Parm )
//
//void APlayerController_X::ClientSetSeasonReward ( struct FPlayerSeasonRewardProgress Reward )
//{
//	static UFunction* pFnClientSetSeasonReward = NULL;
//
//	if ( ! pFnClientSetSeasonReward )
//		pFnClientSetSeasonReward = (UFunction*) UObject::GObjObjects()->Data[ 48918 ];
//
//	APlayerController_X_execClientSetSeasonReward_Parms ClientSetSeasonReward_Parms;
//	memcpy ( &ClientSetSeasonReward_Parms.Reward, &Reward, 0x50 );
//
//	this->ProcessEvent ( pFnClientSetSeasonReward, &ClientSetSeasonReward_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ServerUpdateCustomMatchSettings
//// [0x002200C2] 
//// Parameters infos:
//// struct FCustomMatchSettings    Settings                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void APlayerController_X::ServerUpdateCustomMatchSettings ( struct FCustomMatchSettings Settings )
//{
//	static UFunction* pFnServerUpdateCustomMatchSettings = NULL;
//
//	if ( ! pFnServerUpdateCustomMatchSettings )
//		pFnServerUpdateCustomMatchSettings = (UFunction*) UObject::GObjObjects()->Data[ 48910 ];
//
//	APlayerController_X_execServerUpdateCustomMatchSettings_Parms ServerUpdateCustomMatchSettings_Parms;
//	memcpy ( &ServerUpdateCustomMatchSettings_Parms.Settings, &Settings, 0x60 );
//
//	this->ProcessEvent ( pFnServerUpdateCustomMatchSettings, &ServerUpdateCustomMatchSettings_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ServerSetParty
//// [0x002200C2] 
//// Parameters infos:
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//// struct FUniqueNetId            NewPartyID                     ( CPF_Parm )
//
//void APlayerController_X::ServerSetParty ( struct FUniqueNetId MemberId, struct FUniqueNetId NewPartyID )
//{
//	static UFunction* pFnServerSetParty = NULL;
//
//	if ( ! pFnServerSetParty )
//		pFnServerSetParty = (UFunction*) UObject::GObjObjects()->Data[ 48906 ];
//
//	APlayerController_X_execServerSetParty_Parms ServerSetParty_Parms;
//	memcpy ( &ServerSetParty_Parms.MemberId, &MemberId, 0x48 );
//	memcpy ( &ServerSetParty_Parms.NewPartyID, &NewPartyID, 0x48 );
//
//	this->ProcessEvent ( pFnServerSetParty, &ServerSetParty_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.DisconnectSplitScreenPlayer
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UPlayer*                 P                              ( CPF_Parm )
//
//void APlayerController_X::DisconnectSplitScreenPlayer ( class UPlayer* P )
//{
//	static UFunction* pFnDisconnectSplitScreenPlayer = NULL;
//
//	if ( ! pFnDisconnectSplitScreenPlayer )
//		pFnDisconnectSplitScreenPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48904 ];
//
//	APlayerController_X_execDisconnectSplitScreenPlayer_Parms DisconnectSplitScreenPlayer_Parms;
//	DisconnectSplitScreenPlayer_Parms.P = P;
//
//	pFnDisconnectSplitScreenPlayer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDisconnectSplitScreenPlayer, &DisconnectSplitScreenPlayer_Parms, NULL );
//
//	pFnDisconnectSplitScreenPlayer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerController_X.ServerDestroy
//// [0x002200C2] 
//// Parameters infos:
//
//void APlayerController_X::ServerDestroy ( )
//{
//	static UFunction* pFnServerDestroy = NULL;
//
//	if ( ! pFnServerDestroy )
//		pFnServerDestroy = (UFunction*) UObject::GObjObjects()->Data[ 48903 ];
//
//	APlayerController_X_execServerDestroy_Parms ServerDestroy_Parms;
//
//	this->ProcessEvent ( pFnServerDestroy, &ServerDestroy_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.KickPlayerForReason
//// [0x010241C2] 
//// Parameters infos:
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void APlayerController_X::KickPlayerForReason ( struct FString Reason, struct FString Title )
//{
//	static UFunction* pFnKickPlayerForReason = NULL;
//
//	if ( ! pFnKickPlayerForReason )
//		pFnKickPlayerForReason = (UFunction*) UObject::GObjObjects()->Data[ 48899 ];
//
//	APlayerController_X_execKickPlayerForReason_Parms KickPlayerForReason_Parms;
//	memcpy ( &KickPlayerForReason_Parms.Reason, &Reason, 0xC );
//	memcpy ( &KickPlayerForReason_Parms.Title, &Title, 0xC );
//
//	this->ProcessEvent ( pFnKickPlayerForReason, &KickPlayerForReason_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ClientNetLag
//// [0x010201C0] 
//// Parameters infos:
//// float                          PktLag                         ( CPF_Parm )
//// float                          PktVariance                    ( CPF_Parm )
//// float                          PktLoss                        ( CPF_Parm )
//// float                          PktDup                         ( CPF_Parm )
//// float                          PktSpike                       ( CPF_Parm )
//
//void APlayerController_X::ClientNetLag ( float PktLag, float PktVariance, float PktLoss, float PktDup, float PktSpike )
//{
//	static UFunction* pFnClientNetLag = NULL;
//
//	if ( ! pFnClientNetLag )
//		pFnClientNetLag = (UFunction*) UObject::GObjObjects()->Data[ 48893 ];
//
//	APlayerController_X_execClientNetLag_Parms ClientNetLag_Parms;
//	ClientNetLag_Parms.PktLag = PktLag;
//	ClientNetLag_Parms.PktVariance = PktVariance;
//	ClientNetLag_Parms.PktLoss = PktLoss;
//	ClientNetLag_Parms.PktDup = PktDup;
//	ClientNetLag_Parms.PktSpike = PktSpike;
//
//	this->ProcessEvent ( pFnClientNetLag, &ClientNetLag_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ServerNetLag
//// [0x002200C0] 
//// Parameters infos:
//// float                          PktLag                         ( CPF_Parm )
//// float                          PktVariance                    ( CPF_Parm )
//// float                          PktLoss                        ( CPF_Parm )
//// float                          PktDup                         ( CPF_Parm )
//// float                          PktSpike                       ( CPF_Parm )
//
//void APlayerController_X::ServerNetLag ( float PktLag, float PktVariance, float PktLoss, float PktDup, float PktSpike )
//{
//	static UFunction* pFnServerNetLag = NULL;
//
//	if ( ! pFnServerNetLag )
//		pFnServerNetLag = (UFunction*) UObject::GObjObjects()->Data[ 48887 ];
//
//	APlayerController_X_execServerNetLag_Parms ServerNetLag_Parms;
//	ServerNetLag_Parms.PktLag = PktLag;
//	ServerNetLag_Parms.PktVariance = PktVariance;
//	ServerNetLag_Parms.PktLoss = PktLoss;
//	ServerNetLag_Parms.PktDup = PktDup;
//	ServerNetLag_Parms.PktSpike = PktSpike;
//
//	this->ProcessEvent ( pFnServerNetLag, &ServerNetLag_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.Pause
//// [0x00020202] ( FUNC_Exec )
//// Parameters infos:
//
//void APlayerController_X::Pause ( )
//{
//	static UFunction* pFnPause = NULL;
//
//	if ( ! pFnPause )
//		pFnPause = (UFunction*) UObject::GObjObjects()->Data[ 48886 ];
//
//	APlayerController_X_execPause_Parms Pause_Parms;
//
//	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.RemoveOptionFromLastURL
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FString                 OptName                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void APlayerController_X::RemoveOptionFromLastURL ( struct FString OptName )
//{
//	static UFunction* pFnRemoveOptionFromLastURL = NULL;
//
//	if ( ! pFnRemoveOptionFromLastURL )
//		pFnRemoveOptionFromLastURL = (UFunction*) UObject::GObjObjects()->Data[ 48843 ];
//
//	APlayerController_X_execRemoveOptionFromLastURL_Parms RemoveOptionFromLastURL_Parms;
//	memcpy ( &RemoveOptionFromLastURL_Parms.OptName, &OptName, 0xC );
//
//	pFnRemoveOptionFromLastURL->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveOptionFromLastURL, &RemoveOptionFromLastURL_Parms, NULL );
//
//	pFnRemoveOptionFromLastURL->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerController_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void APlayerController_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 48841 ];
//
//	APlayerController_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ClearOnlineDelegates
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void APlayerController_X::eventClearOnlineDelegates ( )
//{
//	static UFunction* pFnClearOnlineDelegates = NULL;
//
//	if ( ! pFnClearOnlineDelegates )
//		pFnClearOnlineDelegates = (UFunction*) UObject::GObjObjects()->Data[ 48840 ];
//
//	APlayerController_X_eventClearOnlineDelegates_Parms ClearOnlineDelegates_Parms;
//
//	this->ProcessEvent ( pFnClearOnlineDelegates, &ClearOnlineDelegates_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.RegisterOnlineDelegates
//// [0x00020002] 
//// Parameters infos:
//
//void APlayerController_X::RegisterOnlineDelegates ( )
//{
//	static UFunction* pFnRegisterOnlineDelegates = NULL;
//
//	if ( ! pFnRegisterOnlineDelegates )
//		pFnRegisterOnlineDelegates = (UFunction*) UObject::GObjObjects()->Data[ 48839 ];
//
//	APlayerController_X_execRegisterOnlineDelegates_Parms RegisterOnlineDelegates_Parms;
//
//	this->ProcessEvent ( pFnRegisterOnlineDelegates, &RegisterOnlineDelegates_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.NotifyTakeHit_X
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APlayerController_X::NotifyTakeHit_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnNotifyTakeHit_X = NULL;
//
//	if ( ! pFnNotifyTakeHit_X )
//		pFnNotifyTakeHit_X = (UFunction*) UObject::GObjObjects()->Data[ 48837 ];
//
//	APlayerController_X_execNotifyTakeHit_X_Parms NotifyTakeHit_X_Parms;
//	NotifyTakeHit_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnNotifyTakeHit_X, &NotifyTakeHit_X_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ClientPlayForceFeedbackWaveform
//// [0x010249C2] ( FUNC_Event )
//// Parameters infos:
//// class UForceFeedbackWaveform*  FFWaveform                     ( CPF_Parm )
//// class AActor*                  FFWaveformInstigator           ( CPF_OptionalParm | CPF_Parm )
//
//void APlayerController_X::eventClientPlayForceFeedbackWaveform ( class UForceFeedbackWaveform* FFWaveform, class AActor* FFWaveformInstigator )
//{
//	static UFunction* pFnClientPlayForceFeedbackWaveform = NULL;
//
//	if ( ! pFnClientPlayForceFeedbackWaveform )
//		pFnClientPlayForceFeedbackWaveform = (UFunction*) UObject::GObjObjects()->Data[ 48834 ];
//
//	APlayerController_X_eventClientPlayForceFeedbackWaveform_Parms ClientPlayForceFeedbackWaveform_Parms;
//	ClientPlayForceFeedbackWaveform_Parms.FFWaveform = FFWaveform;
//	ClientPlayForceFeedbackWaveform_Parms.FFWaveformInstigator = FFWaveformInstigator;
//
//	this->ProcessEvent ( pFnClientPlayForceFeedbackWaveform, &ClientPlayForceFeedbackWaveform_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ClientCommand
//// [0x010201C0] 
//// Parameters infos:
//// struct FString                 Command                        ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void APlayerController_X::ClientCommand ( struct FString Command )
//{
//	static UFunction* pFnClientCommand = NULL;
//
//	if ( ! pFnClientCommand )
//		pFnClientCommand = (UFunction*) UObject::GObjObjects()->Data[ 48832 ];
//
//	APlayerController_X_execClientCommand_Parms ClientCommand_Parms;
//	memcpy ( &ClientCommand_Parms.Command, &Command, 0xC );
//
//	this->ProcessEvent ( pFnClientCommand, &ClientCommand_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ServerCommand
//// [0x002200C2] 
//// Parameters infos:
//// struct FString                 Command                        ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void APlayerController_X::ServerCommand ( struct FString Command )
//{
//	static UFunction* pFnServerCommand = NULL;
//
//	if ( ! pFnServerCommand )
//		pFnServerCommand = (UFunction*) UObject::GObjObjects()->Data[ 48829 ];
//
//	APlayerController_X_execServerCommand_Parms ServerCommand_Parms;
//	memcpy ( &ServerCommand_Parms.Command, &Command, 0xC );
//
//	this->ProcessEvent ( pFnServerCommand, &ServerCommand_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.PawnDied
//// [0x00020002] 
//// Parameters infos:
//// class APawn*                   P                              ( CPF_Parm )
//
//void APlayerController_X::PawnDied ( class APawn* P )
//{
//	static UFunction* pFnPawnDied = NULL;
//
//	if ( ! pFnPawnDied )
//		pFnPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 48827 ];
//
//	APlayerController_X_execPawnDied_Parms PawnDied_Parms;
//	PawnDied_Parms.P = P;
//
//	this->ProcessEvent ( pFnPawnDied, &PawnDied_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.UnPossess
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void APlayerController_X::eventUnPossess ( )
//{
//	static UFunction* pFnUnPossess = NULL;
//
//	if ( ! pFnUnPossess )
//		pFnUnPossess = (UFunction*) UObject::GObjObjects()->Data[ 48826 ];
//
//	APlayerController_X_eventUnPossess_Parms UnPossess_Parms;
//
//	this->ProcessEvent ( pFnUnPossess, &UnPossess_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.Possess
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class APawn*                   aPawn                          ( CPF_Parm )
//// unsigned long                  bVehicleTransition             ( CPF_Parm )
//
//void APlayerController_X::eventPossess ( class APawn* aPawn, unsigned long bVehicleTransition )
//{
//	static UFunction* pFnPossess = NULL;
//
//	if ( ! pFnPossess )
//		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 48823 ];
//
//	APlayerController_X_eventPossess_Parms Possess_Parms;
//	Possess_Parms.aPawn = aPawn;
//	Possess_Parms.bVehicleTransition = bVehicleTransition;
//
//	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.OnPawnChange
//// [0x00080002] 
//// Parameters infos:
//// class APawn*                   OldPawn                        ( CPF_Parm )
//// class APawn*                   NewPawn                        ( CPF_Parm )
//
//void APlayerController_X::OnPawnChange ( class APawn* OldPawn, class APawn* NewPawn )
//{
//	static UFunction* pFnOnPawnChange = NULL;
//
//	if ( ! pFnOnPawnChange )
//		pFnOnPawnChange = (UFunction*) UObject::GObjObjects()->Data[ 48820 ];
//
//	APlayerController_X_execOnPawnChange_Parms OnPawnChange_Parms;
//	OnPawnChange_Parms.OldPawn = OldPawn;
//	OnPawnChange_Parms.NewPawn = NewPawn;
//
//	this->ProcessEvent ( pFnOnPawnChange, &OnPawnChange_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.PawnReferenceUpdated
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void APlayerController_X::PawnReferenceUpdated ( )
//{
//	static UFunction* pFnPawnReferenceUpdated = NULL;
//
//	if ( ! pFnPawnReferenceUpdated )
//		pFnPawnReferenceUpdated = (UFunction*) UObject::GObjObjects()->Data[ 48779 ];
//
//	APlayerController_X_execPawnReferenceUpdated_Parms PawnReferenceUpdated_Parms;
//
//	this->ProcessEvent ( pFnPawnReferenceUpdated, &PawnReferenceUpdated_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ClientRestart
//// [0x010201C2] 
//// Parameters infos:
//// class APawn*                   NewPawn                        ( CPF_Parm )
//
//void APlayerController_X::ClientRestart ( class APawn* NewPawn )
//{
//	static UFunction* pFnClientRestart = NULL;
//
//	if ( ! pFnClientRestart )
//		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 48818 ];
//
//	APlayerController_X_execClientRestart_Parms ClientRestart_Parms;
//	ClientRestart_Parms.NewPawn = NewPawn;
//
//	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.GivePawn
//// [0x010201C2] 
//// Parameters infos:
//// class APawn*                   NewPawn                        ( CPF_Parm )
//
//void APlayerController_X::GivePawn ( class APawn* NewPawn )
//{
//	static UFunction* pFnGivePawn = NULL;
//
//	if ( ! pFnGivePawn )
//		pFnGivePawn = (UFunction*) UObject::GObjObjects()->Data[ 48816 ];
//
//	APlayerController_X_execGivePawn_Parms GivePawn_Parms;
//	GivePawn_Parms.NewPawn = NewPawn;
//
//	this->ProcessEvent ( pFnGivePawn, &GivePawn_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.InitInputSystem
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void APlayerController_X::eventInitInputSystem ( )
//{
//	static UFunction* pFnInitInputSystem = NULL;
//
//	if ( ! pFnInitInputSystem )
//		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 48815 ];
//
//	APlayerController_X_eventInitInputSystem_Parms InitInputSystem_Parms;
//
//	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.GetCameraArchetype
//// [0x00020002] 
//// Parameters infos:
//// class ACamera*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class ACamera* APlayerController_X::GetCameraArchetype ( )
//{
//	static UFunction* pFnGetCameraArchetype = NULL;
//
//	if ( ! pFnGetCameraArchetype )
//		pFnGetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 48813 ];
//
//	APlayerController_X_execGetCameraArchetype_Parms GetCameraArchetype_Parms;
//
//	this->ProcessEvent ( pFnGetCameraArchetype, &GetCameraArchetype_Parms, NULL );
//
//	return GetCameraArchetype_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.SpawnPlayerCamera
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void APlayerController_X::eventSpawnPlayerCamera ( )
//{
//	static UFunction* pFnSpawnPlayerCamera = NULL;
//
//	if ( ! pFnSpawnPlayerCamera )
//		pFnSpawnPlayerCamera = (UFunction*) UObject::GObjObjects()->Data[ 48811 ];
//
//	APlayerController_X_eventSpawnPlayerCamera_Parms SpawnPlayerCamera_Parms;
//
//	this->ProcessEvent ( pFnSpawnPlayerCamera, &SpawnPlayerCamera_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.OnCameraChanged
//// [0x00080002] 
//// Parameters infos:
//// class ACamera*                 InCamera                       ( CPF_Parm )
//
//void APlayerController_X::OnCameraChanged ( class ACamera* InCamera )
//{
//	static UFunction* pFnOnCameraChanged = NULL;
//
//	if ( ! pFnOnCameraChanged )
//		pFnOnCameraChanged = (UFunction*) UObject::GObjObjects()->Data[ 48812 ];
//
//	APlayerController_X_execOnCameraChanged_Parms OnCameraChanged_Parms;
//	OnCameraChanged_Parms.InCamera = InCamera;
//
//	this->ProcessEvent ( pFnOnCameraChanged, &OnCameraChanged_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.AddCheats
//// [0x00024100] 
//// Parameters infos:
//// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )
//
//void APlayerController_X::AddCheats ( unsigned long bForce )
//{
//	static UFunction* pFnAddCheats = NULL;
//
//	if ( ! pFnAddCheats )
//		pFnAddCheats = (UFunction*) UObject::GObjObjects()->Data[ 48809 ];
//
//	APlayerController_X_execAddCheats_Parms AddCheats_Parms;
//	AddCheats_Parms.bForce = bForce;
//
//	this->ProcessEvent ( pFnAddCheats, &AddCheats_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.GetOnlineAccount
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameAccount_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGameAccount_X* APlayerController_X::GetOnlineAccount ( )
//{
//	static UFunction* pFnGetOnlineAccount = NULL;
//
//	if ( ! pFnGetOnlineAccount )
//		pFnGetOnlineAccount = (UFunction*) UObject::GObjObjects()->Data[ 48807 ];
//
//	APlayerController_X_execGetOnlineAccount_Parms GetOnlineAccount_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineAccount, &GetOnlineAccount_Parms, NULL );
//
//	return GetOnlineAccount_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.GetOnlinePlayer
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayer_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlinePlayer_X* APlayerController_X::GetOnlinePlayer ( )
//{
//	static UFunction* pFnGetOnlinePlayer = NULL;
//
//	if ( ! pFnGetOnlinePlayer )
//		pFnGetOnlinePlayer = (UFunction*) UObject::GObjObjects()->Data[ 48804 ];
//
//	APlayerController_X_execGetOnlinePlayer_Parms GetOnlinePlayer_Parms;
//
//	this->ProcessEvent ( pFnGetOnlinePlayer, &GetOnlinePlayer_Parms, NULL );
//
//	return GetOnlinePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.OnReceivedPRI
//// [0x00080102] 
//// Parameters infos:
//
//void APlayerController_X::OnReceivedPRI ( )
//{
//	static UFunction* pFnOnReceivedPRI = NULL;
//
//	if ( ! pFnOnReceivedPRI )
//		pFnOnReceivedPRI = (UFunction*) UObject::GObjObjects()->Data[ 48803 ];
//
//	APlayerController_X_execOnReceivedPRI_Parms OnReceivedPRI_Parms;
//
//	this->ProcessEvent ( pFnOnReceivedPRI, &OnReceivedPRI_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.InitPlayerReplicationInfo
//// [0x00020002] 
//// Parameters infos:
//
//void APlayerController_X::InitPlayerReplicationInfo ( )
//{
//	static UFunction* pFnInitPlayerReplicationInfo = NULL;
//
//	if ( ! pFnInitPlayerReplicationInfo )
//		pFnInitPlayerReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 48802 ];
//
//	APlayerController_X_execInitPlayerReplicationInfo_Parms InitPlayerReplicationInfo_Parms;
//
//	this->ProcessEvent ( pFnInitPlayerReplicationInfo, &InitPlayerReplicationInfo_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.Destroyed
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void APlayerController_X::eventDestroyed ( )
//{
//	static UFunction* pFnDestroyed = NULL;
//
//	if ( ! pFnDestroyed )
//		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48801 ];
//
//	APlayerController_X_eventDestroyed_Parms Destroyed_Parms;
//
//	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.OnExternalUIChanged
//// [0x00020002] 
//// Parameters infos:
//// unsigned long                  bIsOpening                     ( CPF_Parm )
//
//void APlayerController_X::OnExternalUIChanged ( unsigned long bIsOpening )
//{
//	static UFunction* pFnOnExternalUIChanged = NULL;
//
//	if ( ! pFnOnExternalUIChanged )
//		pFnOnExternalUIChanged = (UFunction*) UObject::GObjObjects()->Data[ 48799 ];
//
//	APlayerController_X_execOnExternalUIChanged_Parms OnExternalUIChanged_Parms;
//	OnExternalUIChanged_Parms.bIsOpening = bIsOpening;
//
//	this->ProcessEvent ( pFnOnExternalUIChanged, &OnExternalUIChanged_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.SetPaused
//// [0x00020002] 
//// Parameters infos:
//// unsigned long                  bPaused                        ( CPF_Parm )
//
//void APlayerController_X::SetPaused ( unsigned long bPaused )
//{
//	static UFunction* pFnSetPaused = NULL;
//
//	if ( ! pFnSetPaused )
//		pFnSetPaused = (UFunction*) UObject::GObjObjects()->Data[ 48797 ];
//
//	APlayerController_X_execSetPaused_Parms SetPaused_Parms;
//	SetPaused_Parms.bPaused = bPaused;
//
//	this->ProcessEvent ( pFnSetPaused, &SetPaused_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ReceivedPlayer
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void APlayerController_X::eventReceivedPlayer ( )
//{
//	static UFunction* pFnReceivedPlayer = NULL;
//
//	if ( ! pFnReceivedPlayer )
//		pFnReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48794 ];
//
//	APlayerController_X_eventReceivedPlayer_Parms ReceivedPlayer_Parms;
//
//	this->ProcessEvent ( pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.GetOnlineGame
//// [0x00082003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGame_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGame_X* APlayerController_X::GetOnlineGame ( )
//{
//	static UFunction* pFnGetOnlineGame = NULL;
//
//	if ( ! pFnGetOnlineGame )
//		pFnGetOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 48792 ];
//
//	APlayerController_X_execGetOnlineGame_Parms GetOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGame, &GetOnlineGame_Parms, NULL );
//
//	return GetOnlineGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.GetOnlineGameHost
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UIOnlineGameHost_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UIOnlineGameHost_X* APlayerController_X::GetOnlineGameHost ( )
//{
//	static UFunction* pFnGetOnlineGameHost = NULL;
//
//	if ( ! pFnGetOnlineGameHost )
//		pFnGetOnlineGameHost = (UFunction*) UObject::GObjObjects()->Data[ 48789 ];
//
//	APlayerController_X_execGetOnlineGameHost_Parms GetOnlineGameHost_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameHost, &GetOnlineGameHost_Parms, NULL );
//
//	return GetOnlineGameHost_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.GetOnlineGameLanServer
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanServer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGameLanServer_X* APlayerController_X::GetOnlineGameLanServer ( )
//{
//	static UFunction* pFnGetOnlineGameLanServer = NULL;
//
//	if ( ! pFnGetOnlineGameLanServer )
//		pFnGetOnlineGameLanServer = (UFunction*) UObject::GObjObjects()->Data[ 48786 ];
//
//	APlayerController_X_execGetOnlineGameLanServer_Parms GetOnlineGameLanServer_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameLanServer, &GetOnlineGameLanServer_Parms, NULL );
//
//	return GetOnlineGameLanServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.GetOnlineGameDedicatedServer
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGameDedicatedServer_X* APlayerController_X::GetOnlineGameDedicatedServer ( )
//{
//	static UFunction* pFnGetOnlineGameDedicatedServer = NULL;
//
//	if ( ! pFnGetOnlineGameDedicatedServer )
//		pFnGetOnlineGameDedicatedServer = (UFunction*) UObject::GObjObjects()->Data[ 48784 ];
//
//	APlayerController_X_execGetOnlineGameDedicatedServer_Parms GetOnlineGameDedicatedServer_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameDedicatedServer, &GetOnlineGameDedicatedServer_Parms, NULL );
//
//	return GetOnlineGameDedicatedServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerController_X.SpawnDefaultHUD
//// [0x00020002] 
//// Parameters infos:
//
//void APlayerController_X::SpawnDefaultHUD ( )
//{
//	static UFunction* pFnSpawnDefaultHUD = NULL;
//
//	if ( ! pFnSpawnDefaultHUD )
//		pFnSpawnDefaultHUD = (UFunction*) UObject::GObjObjects()->Data[ 48780 ];
//
//	APlayerController_X_execSpawnDefaultHUD_Parms SpawnDefaultHUD_Parms;
//
//	this->ProcessEvent ( pFnSpawnDefaultHUD, &SpawnDefaultHUD_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.SetPRI
//// [0x00020102] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void APlayerController_X::SetPRI ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnSetPRI = NULL;
//
//	if ( ! pFnSetPRI )
//		pFnSetPRI = (UFunction*) UObject::GObjObjects()->Data[ 48781 ];
//
//	APlayerController_X_execSetPRI_Parms SetPRI_Parms;
//	SetPRI_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnSetPRI, &SetPRI_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.ReplicatedEvent
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// struct FName                   VarName                        ( CPF_Parm )
//
//void APlayerController_X::eventReplicatedEvent ( struct FName VarName )
//{
//	static UFunction* pFnReplicatedEvent = NULL;
//
//	if ( ! pFnReplicatedEvent )
//		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 48776 ];
//
//	APlayerController_X_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
//	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );
//
//	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.EventPlayerCameraChange
//// [0x00120000] 
//// Parameters infos:
//// class APlayerController_X*     PC                             ( CPF_Parm )
//
//void APlayerController_X::EventPlayerCameraChange ( class APlayerController_X* PC )
//{
//	static UFunction* pFnEventPlayerCameraChange = NULL;
//
//	if ( ! pFnEventPlayerCameraChange )
//		pFnEventPlayerCameraChange = (UFunction*) UObject::GObjObjects()->Data[ 48778 ];
//
//	APlayerController_X_execEventPlayerCameraChange_Parms EventPlayerCameraChange_Parms;
//	EventPlayerCameraChange_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnEventPlayerCameraChange, &EventPlayerCameraChange_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.EventDestroyed
//// [0x00120000] 
//// Parameters infos:
//// class APlayerController_X*     PC                             ( CPF_Parm )
//
//void APlayerController_X::EventDestroyed ( class APlayerController_X* PC )
//{
//	static UFunction* pFnEventDestroyed = NULL;
//
//	if ( ! pFnEventDestroyed )
//		pFnEventDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48756 ];
//
//	APlayerController_X_execEventDestroyed_Parms EventDestroyed_Parms;
//	EventDestroyed_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnEventDestroyed, &EventDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.EventReceivedPlayer
//// [0x00120000] 
//// Parameters infos:
//// class APlayerController_X*     PC                             ( CPF_Parm )
//
//void APlayerController_X::EventReceivedPlayer ( class APlayerController_X* PC )
//{
//	static UFunction* pFnEventReceivedPlayer = NULL;
//
//	if ( ! pFnEventReceivedPlayer )
//		pFnEventReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48758 ];
//
//	APlayerController_X_execEventReceivedPlayer_Parms EventReceivedPlayer_Parms;
//	EventReceivedPlayer_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnEventReceivedPlayer, &EventReceivedPlayer_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.EventPawnChange
//// [0x00120000] 
//// Parameters infos:
//// class APlayerController_X*     PC                             ( CPF_Parm )
//// class APawn*                   OldPawn                        ( CPF_Parm )
//// class APawn*                   NewPawn                        ( CPF_Parm )
//
//void APlayerController_X::EventPawnChange ( class APlayerController_X* PC, class APawn* OldPawn, class APawn* NewPawn )
//{
//	static UFunction* pFnEventPawnChange = NULL;
//
//	if ( ! pFnEventPawnChange )
//		pFnEventPawnChange = (UFunction*) UObject::GObjObjects()->Data[ 48760 ];
//
//	APlayerController_X_execEventPawnChange_Parms EventPawnChange_Parms;
//	EventPawnChange_Parms.PC = PC;
//	EventPawnChange_Parms.OldPawn = OldPawn;
//	EventPawnChange_Parms.NewPawn = NewPawn;
//
//	this->ProcessEvent ( pFnEventPawnChange, &EventPawnChange_Parms, NULL );
//};
//
//// Function ProjectX.PlayerController_X.EventReceivedPRI
//// [0x00120000] 
//// Parameters infos:
//// class APlayerController_X*     PC                             ( CPF_Parm )
//
//void APlayerController_X::EventReceivedPRI ( class APlayerController_X* PC )
//{
//	static UFunction* pFnEventReceivedPRI = NULL;
//
//	if ( ! pFnEventReceivedPRI )
//		pFnEventReceivedPRI = (UFunction*) UObject::GObjObjects()->Data[ 48762 ];
//
//	APlayerController_X_execEventReceivedPRI_Parms EventReceivedPRI_Parms;
//	EventReceivedPRI_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnEventReceivedPRI, &EventReceivedPRI_Parms, NULL );
//};
//
//// Function ProjectX.CheatManager_X.HandleImageDownloaded
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineImageDownloaderWeb_X* Downloader                     ( CPF_Parm )
//// struct FDownloadedImage        Image                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCheatManager_X::HandleImageDownloaded ( class UOnlineImageDownloaderWeb_X* Downloader, struct FDownloadedImage Image )
//{
//	static UFunction* pFnHandleImageDownloaded = NULL;
//
//	if ( ! pFnHandleImageDownloaded )
//		pFnHandleImageDownloaded = (UFunction*) UObject::GObjObjects()->Data[ 48608 ];
//
//	UCheatManager_X_execHandleImageDownloaded_Parms HandleImageDownloaded_Parms;
//	HandleImageDownloaded_Parms.Downloader = Downloader;
//	memcpy ( &HandleImageDownloaded_Parms.Image, &Image, 0x10 );
//
//	this->ProcessEvent ( pFnHandleImageDownloaded, &HandleImageDownloaded_Parms, NULL );
//};
//
//// Function ProjectX.CheatManager_X.DownloadImage
//// [0x00020202] ( FUNC_Exec )
//// Parameters infos:
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCheatManager_X::DownloadImage ( struct FString URL )
//{
//	static UFunction* pFnDownloadImage = NULL;
//
//	if ( ! pFnDownloadImage )
//		pFnDownloadImage = (UFunction*) UObject::GObjObjects()->Data[ 48609 ];
//
//	UCheatManager_X_execDownloadImage_Parms DownloadImage_Parms;
//	memcpy ( &DownloadImage_Parms.URL, &URL, 0xC );
//
//	this->ProcessEvent ( pFnDownloadImage, &DownloadImage_Parms, NULL );
//};
//
//// Function ProjectX.CheatManager_X.RandomSleep
//// [0x00020202] ( FUNC_Exec )
//// Parameters infos:
//// float                          MinDelay                       ( CPF_Parm )
//// float                          MaxDelay                       ( CPF_Parm )
//// float                          MinSleep                       ( CPF_Parm )
//// float                          MaxSleep                       ( CPF_Parm )
//
//void UCheatManager_X::RandomSleep ( float MinDelay, float MaxDelay, float MinSleep, float MaxSleep )
//{
//	static UFunction* pFnRandomSleep = NULL;
//
//	if ( ! pFnRandomSleep )
//		pFnRandomSleep = (UFunction*) UObject::GObjObjects()->Data[ 48615 ];
//
//	UCheatManager_X_execRandomSleep_Parms RandomSleep_Parms;
//	RandomSleep_Parms.MinDelay = MinDelay;
//	RandomSleep_Parms.MaxDelay = MaxDelay;
//	RandomSleep_Parms.MinSleep = MinSleep;
//	RandomSleep_Parms.MaxSleep = MaxSleep;
//
//	this->ProcessEvent ( pFnRandomSleep, &RandomSleep_Parms, NULL );
//};
//
//// Function ProjectX.CheatManager_X.Sleep
//// [0x00020600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//// float                          Seconds                        ( CPF_Parm )
//
//void UCheatManager_X::Sleep ( float Seconds )
//{
//	static UFunction* pFnSleep = NULL;
//
//	if ( ! pFnSleep )
//		pFnSleep = (UFunction*) UObject::GObjObjects()->Data[ 48618 ];
//
//	UCheatManager_X_execSleep_Parms Sleep_Parms;
//	Sleep_Parms.Seconds = Seconds;
//
//	pFnSleep->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSleep, &Sleep_Parms, NULL );
//
//	pFnSleep->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.LoadKismetLevel
//// [0x00020600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//// struct FName                   LeveFileName                   ( CPF_Parm )
//
//void UCheatManager_X::LoadKismetLevel ( struct FName LeveFileName )
//{
//	static UFunction* pFnLoadKismetLevel = NULL;
//
//	if ( ! pFnLoadKismetLevel )
//		pFnLoadKismetLevel = (UFunction*) UObject::GObjObjects()->Data[ 48630 ];
//
//	UCheatManager_X_execLoadKismetLevel_Parms LoadKismetLevel_Parms;
//	memcpy ( &LoadKismetLevel_Parms.LeveFileName, &LeveFileName, 0x8 );
//
//	pFnLoadKismetLevel->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnLoadKismetLevel, &LoadKismetLevel_Parms, NULL );
//
//	pFnLoadKismetLevel->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.DrawBulletContacts
//// [0x00024600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//// float                          Lifetime                       ( CPF_OptionalParm | CPF_Parm )
//
//void UCheatManager_X::DrawBulletContacts ( float Lifetime )
//{
//	static UFunction* pFnDrawBulletContacts = NULL;
//
//	if ( ! pFnDrawBulletContacts )
//		pFnDrawBulletContacts = (UFunction*) UObject::GObjObjects()->Data[ 48632 ];
//
//	UCheatManager_X_execDrawBulletContacts_Parms DrawBulletContacts_Parms;
//	DrawBulletContacts_Parms.Lifetime = Lifetime;
//
//	pFnDrawBulletContacts->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDrawBulletContacts, &DrawBulletContacts_Parms, NULL );
//
//	pFnDrawBulletContacts->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.PrintReproPhysics
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
//// class AActor*                  A                              ( CPF_Parm )
//
//void UCheatManager_X::PrintReproPhysics ( struct FString Command, class AActor* A )
//{
//	static UFunction* pFnPrintReproPhysics = NULL;
//
//	if ( ! pFnPrintReproPhysics )
//		pFnPrintReproPhysics = (UFunction*) UObject::GObjObjects()->Data[ 48634 ];
//
//	UCheatManager_X_execPrintReproPhysics_Parms PrintReproPhysics_Parms;
//	memcpy ( &PrintReproPhysics_Parms.Command, &Command, 0xC );
//	PrintReproPhysics_Parms.A = A;
//
//	pFnPrintReproPhysics->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnPrintReproPhysics, &PrintReproPhysics_Parms, NULL );
//
//	pFnPrintReproPhysics->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.ReproPhysics
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class AActor*                  A                              ( CPF_Parm )
//// float                          LX                             ( CPF_Parm )
//// float                          LY                             ( CPF_Parm )
//// float                          LZ                             ( CPF_Parm )
//// float                          RX                             ( CPF_Parm )
//// float                          RY                             ( CPF_Parm )
//// float                          RZ                             ( CPF_Parm )
//// float                          RW                             ( CPF_Parm )
//// float                          VX                             ( CPF_Parm )
//// float                          VY                             ( CPF_Parm )
//// float                          VZ                             ( CPF_Parm )
//
//void UCheatManager_X::ReproPhysics ( class AActor* A, float LX, float LY, float LZ, float RX, float RY, float RZ, float RW, float VX, float VY, float VZ )
//{
//	static UFunction* pFnReproPhysics = NULL;
//
//	if ( ! pFnReproPhysics )
//		pFnReproPhysics = (UFunction*) UObject::GObjObjects()->Data[ 48636 ];
//
//	UCheatManager_X_execReproPhysics_Parms ReproPhysics_Parms;
//	ReproPhysics_Parms.A = A;
//	ReproPhysics_Parms.LX = LX;
//	ReproPhysics_Parms.LY = LY;
//	ReproPhysics_Parms.LZ = LZ;
//	ReproPhysics_Parms.RX = RX;
//	ReproPhysics_Parms.RY = RY;
//	ReproPhysics_Parms.RZ = RZ;
//	ReproPhysics_Parms.RW = RW;
//	ReproPhysics_Parms.VX = VX;
//	ReproPhysics_Parms.VY = VY;
//	ReproPhysics_Parms.VZ = VZ;
//
//	pFnReproPhysics->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnReproPhysics, &ReproPhysics_Parms, NULL );
//
//	pFnReproPhysics->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.DisableCCD
//// [0x00020600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//
//void UCheatManager_X::DisableCCD ( )
//{
//	static UFunction* pFnDisableCCD = NULL;
//
//	if ( ! pFnDisableCCD )
//		pFnDisableCCD = (UFunction*) UObject::GObjObjects()->Data[ 48639 ];
//
//	UCheatManager_X_execDisableCCD_Parms DisableCCD_Parms;
//
//	pFnDisableCCD->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDisableCCD, &DisableCCD_Parms, NULL );
//
//	pFnDisableCCD->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.SimulateInputKey
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   KeyName                        ( CPF_Parm )
//
//void UCheatManager_X::SimulateInputKey ( struct FName KeyName )
//{
//	static UFunction* pFnSimulateInputKey = NULL;
//
//	if ( ! pFnSimulateInputKey )
//		pFnSimulateInputKey = (UFunction*) UObject::GObjObjects()->Data[ 48606 ];
//
//	UCheatManager_X_execSimulateInputKey_Parms SimulateInputKey_Parms;
//	memcpy ( &SimulateInputKey_Parms.KeyName, &KeyName, 0x8 );
//
//	pFnSimulateInputKey->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSimulateInputKey, &SimulateInputKey_Parms, NULL );
//
//	pFnSimulateInputKey->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.SetNetServerMaxTickRate
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// float                          Rate                           ( CPF_Parm )
//
//void UCheatManager_X::SetNetServerMaxTickRate ( float Rate )
//{
//	static UFunction* pFnSetNetServerMaxTickRate = NULL;
//
//	if ( ! pFnSetNetServerMaxTickRate )
//		pFnSetNetServerMaxTickRate = (UFunction*) UObject::GObjObjects()->Data[ 48603 ];
//
//	UCheatManager_X_execSetNetServerMaxTickRate_Parms SetNetServerMaxTickRate_Parms;
//	SetNetServerMaxTickRate_Parms.Rate = Rate;
//
//	pFnSetNetServerMaxTickRate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetNetServerMaxTickRate, &SetNetServerMaxTickRate_Parms, NULL );
//
//	pFnSetNetServerMaxTickRate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.ScreenShotDir
//// [0x00020600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//// struct FString                 Directory                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCheatManager_X::ScreenShotDir ( struct FString Directory )
//{
//	static UFunction* pFnScreenShotDir = NULL;
//
//	if ( ! pFnScreenShotDir )
//		pFnScreenShotDir = (UFunction*) UObject::GObjObjects()->Data[ 48605 ];
//
//	UCheatManager_X_execScreenShotDir_Parms ScreenShotDir_Parms;
//	memcpy ( &ScreenShotDir_Parms.Directory, &Directory, 0xC );
//
//	pFnScreenShotDir->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnScreenShotDir, &ScreenShotDir_Parms, NULL );
//
//	pFnScreenShotDir->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.ListVisiblePrimitives
//// [0x00020600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//
//void UCheatManager_X::ListVisiblePrimitives ( )
//{
//	static UFunction* pFnListVisiblePrimitives = NULL;
//
//	if ( ! pFnListVisiblePrimitives )
//		pFnListVisiblePrimitives = (UFunction*) UObject::GObjObjects()->Data[ 48602 ];
//
//	UCheatManager_X_execListVisiblePrimitives_Parms ListVisiblePrimitives_Parms;
//
//	pFnListVisiblePrimitives->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnListVisiblePrimitives, &ListVisiblePrimitives_Parms, NULL );
//
//	pFnListVisiblePrimitives->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.HideVisiblePrimitives
//// [0x00024600] ( FUNC_Exec | FUNC_Native )
//// Parameters infos:
//// struct FString                 NameMatch                      ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 NameIgnore                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UCheatManager_X::HideVisiblePrimitives ( struct FString NameMatch, struct FString NameIgnore )
//{
//	static UFunction* pFnHideVisiblePrimitives = NULL;
//
//	if ( ! pFnHideVisiblePrimitives )
//		pFnHideVisiblePrimitives = (UFunction*) UObject::GObjObjects()->Data[ 48599 ];
//
//	UCheatManager_X_execHideVisiblePrimitives_Parms HideVisiblePrimitives_Parms;
//	memcpy ( &HideVisiblePrimitives_Parms.NameMatch, &NameMatch, 0xC );
//	memcpy ( &HideVisiblePrimitives_Parms.NameIgnore, &NameIgnore, 0xC );
//
//	pFnHideVisiblePrimitives->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHideVisiblePrimitives, &HideVisiblePrimitives_Parms, NULL );
//
//	pFnHideVisiblePrimitives->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.ToggleReplicateVoiceToSelf
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UCheatManager_X::ToggleReplicateVoiceToSelf ( )
//{
//	static UFunction* pFnToggleReplicateVoiceToSelf = NULL;
//
//	if ( ! pFnToggleReplicateVoiceToSelf )
//		pFnToggleReplicateVoiceToSelf = (UFunction*) UObject::GObjObjects()->Data[ 48598 ];
//
//	UCheatManager_X_execToggleReplicateVoiceToSelf_Parms ToggleReplicateVoiceToSelf_Parms;
//
//	pFnToggleReplicateVoiceToSelf->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnToggleReplicateVoiceToSelf, &ToggleReplicateVoiceToSelf_Parms, NULL );
//
//	pFnToggleReplicateVoiceToSelf->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.ToggleReplicateVoiceToSender
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UCheatManager_X::ToggleReplicateVoiceToSender ( )
//{
//	static UFunction* pFnToggleReplicateVoiceToSender = NULL;
//
//	if ( ! pFnToggleReplicateVoiceToSender )
//		pFnToggleReplicateVoiceToSender = (UFunction*) UObject::GObjObjects()->Data[ 48597 ];
//
//	UCheatManager_X_execToggleReplicateVoiceToSender_Parms ToggleReplicateVoiceToSender_Parms;
//
//	pFnToggleReplicateVoiceToSender->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnToggleReplicateVoiceToSender, &ToggleReplicateVoiceToSender_Parms, NULL );
//
//	pFnToggleReplicateVoiceToSender->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.CheatManager_X.EventDelegateTest
//// [0x00120000] 
//// Parameters infos:
//
//void UCheatManager_X::EventDelegateTest ( )
//{
//	static UFunction* pFnEventDelegateTest = NULL;
//
//	if ( ! pFnEventDelegateTest )
//		pFnEventDelegateTest = (UFunction*) UObject::GObjObjects()->Data[ 48595 ];
//
//	UCheatManager_X_execEventDelegateTest_Parms EventDelegateTest_Parms;
//
//	this->ProcessEvent ( pFnEventDelegateTest, &EventDelegateTest_Parms, NULL );
//};
//
//// Function ProjectX.Compression_X.Uncompress
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< unsigned char >        Compressed                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< unsigned char >        Uncompressed                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UCompression_X::Uncompress ( TArray< unsigned char >* Compressed, TArray< unsigned char >* Uncompressed )
//{
//	static UFunction* pFnUncompress = NULL;
//
//	if ( ! pFnUncompress )
//		pFnUncompress = (UFunction*) UObject::GObjObjects()->Data[ 56884 ];
//
//	UCompression_X_execUncompress_Parms Uncompress_Parms;
//
//	pFnUncompress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUncompress, &Uncompress_Parms, NULL );
//
//	pFnUncompress->FunctionFlags |= 0x400;
//
//	if ( Compressed )
//		memcpy ( Compressed, &Uncompress_Parms.Compressed, 0xC );
//
//	if ( Uncompressed )
//		memcpy ( Uncompressed, &Uncompress_Parms.Uncompressed, 0xC );
//
//	return Uncompress_Parms.ReturnValue;
//};
//
//// Function ProjectX.Compression_X.Compress
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< unsigned char >        Uncompressed                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< unsigned char >        Compressed                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UCompression_X::Compress ( TArray< unsigned char >* Uncompressed, TArray< unsigned char >* Compressed )
//{
//	static UFunction* pFnCompress = NULL;
//
//	if ( ! pFnCompress )
//		pFnCompress = (UFunction*) UObject::GObjObjects()->Data[ 56878 ];
//
//	UCompression_X_execCompress_Parms Compress_Parms;
//
//	pFnCompress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCompress, &Compress_Parms, NULL );
//
//	pFnCompress->FunctionFlags |= 0x400;
//
//	if ( Uncompressed )
//		memcpy ( Uncompressed, &Compress_Parms.Uncompressed, 0xC );
//
//	if ( Compressed )
//		memcpy ( Compressed, &Compress_Parms.Compressed, 0xC );
//
//	return Compress_Parms.ReturnValue;
//};
//
//// Function ProjectX.ControlPreset_X.GetGamepadBindings
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< struct FPlayerBinding > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FPlayerBinding > UControlPreset_X::GetGamepadBindings ( )
//{
//	static UFunction* pFnGetGamepadBindings = NULL;
//
//	if ( ! pFnGetGamepadBindings )
//		pFnGetGamepadBindings = (UFunction*) UObject::GObjObjects()->Data[ 55935 ];
//
//	UControlPreset_X_execGetGamepadBindings_Parms GetGamepadBindings_Parms;
//
//	pFnGetGamepadBindings->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetGamepadBindings, &GetGamepadBindings_Parms, NULL );
//
//	pFnGetGamepadBindings->FunctionFlags |= 0x400;
//
//	return GetGamepadBindings_Parms.ReturnValue;
//};
//
//// Function ProjectX.ControlPreset_X.GetPCBindings
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< struct FPlayerBinding > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FPlayerBinding > UControlPreset_X::GetPCBindings ( )
//{
//	static UFunction* pFnGetPCBindings = NULL;
//
//	if ( ! pFnGetPCBindings )
//		pFnGetPCBindings = (UFunction*) UObject::GObjObjects()->Data[ 55932 ];
//
//	UControlPreset_X_execGetPCBindings_Parms GetPCBindings_Parms;
//
//	pFnGetPCBindings->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetPCBindings, &GetPCBindings_Parms, NULL );
//
//	pFnGetPCBindings->FunctionFlags |= 0x400;
//
//	return GetPCBindings_Parms.ReturnValue;
//};
//
//// Function ProjectX.CRC_X.GetStringCRC
//// [0x00026401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Seed                           ( CPF_OptionalParm | CPF_Parm )
//
//int UCRC_X::GetStringCRC ( struct FString Text, int Seed )
//{
//	static UFunction* pFnGetStringCRC = NULL;
//
//	if ( ! pFnGetStringCRC )
//		pFnGetStringCRC = (UFunction*) UObject::GObjObjects()->Data[ 55938 ];
//
//	UCRC_X_execGetStringCRC_Parms GetStringCRC_Parms;
//	memcpy ( &GetStringCRC_Parms.Text, &Text, 0xC );
//	GetStringCRC_Parms.Seed = Seed;
//
//	pFnGetStringCRC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetStringCRC, &GetStringCRC_Parms, NULL );
//
//	pFnGetStringCRC->FunctionFlags |= 0x400;
//
//	return GetStringCRC_Parms.ReturnValue;
//};
//
//// Function ProjectX.CycleLog_X.AllLogs
//// [0x00420405] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 S                              ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UCycleLog_X::AllLogs ( struct FString* S )
//{
//	static UFunction* pFnAllLogs = NULL;
//
//	if ( ! pFnAllLogs )
//		pFnAllLogs = (UFunction*) UObject::GObjObjects()->Data[ 48656 ];
//
//	UCycleLog_X_execAllLogs_Parms AllLogs_Parms;
//
//	pFnAllLogs->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAllLogs, &AllLogs_Parms, NULL );
//
//	pFnAllLogs->FunctionFlags |= 0x400;
//
//	if ( S )
//		memcpy ( S, &AllLogs_Parms.S, 0xC );
//};
//
//// Function ProjectX.DamageComponent_X.Reset
//// [0x00020002] 
//// Parameters infos:
//
//void UDamageComponent_X::Reset ( )
//{
//	static UFunction* pFnReset = NULL;
//
//	if ( ! pFnReset )
//		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 48701 ];
//
//	UDamageComponent_X_execReset_Parms Reset_Parms;
//
//	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
//};
//
//// Function ProjectX.DamageComponent_X.CalculateDamage
//// [0x00020002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class AActor*                  Victim                         ( CPF_Parm )
//
//float UDamageComponent_X::CalculateDamage ( class AActor* Victim )
//{
//	static UFunction* pFnCalculateDamage = NULL;
//
//	if ( ! pFnCalculateDamage )
//		pFnCalculateDamage = (UFunction*) UObject::GObjObjects()->Data[ 48697 ];
//
//	UDamageComponent_X_execCalculateDamage_Parms CalculateDamage_Parms;
//	CalculateDamage_Parms.Victim = Victim;
//
//	this->ProcessEvent ( pFnCalculateDamage, &CalculateDamage_Parms, NULL );
//
//	return CalculateDamage_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.ApplyDamage
//// [0x00024002] 
//// Parameters infos:
//// class AActor*                  Victim                         ( CPF_Parm )
//// unsigned long                  bManualReset                   ( CPF_OptionalParm | CPF_Parm )
//
//void UDamageComponent_X::ApplyDamage ( class AActor* Victim, unsigned long bManualReset )
//{
//	static UFunction* pFnApplyDamage = NULL;
//
//	if ( ! pFnApplyDamage )
//		pFnApplyDamage = (UFunction*) UObject::GObjObjects()->Data[ 48690 ];
//
//	UDamageComponent_X_execApplyDamage_Parms ApplyDamage_Parms;
//	ApplyDamage_Parms.Victim = Victim;
//	ApplyDamage_Parms.bManualReset = bManualReset;
//
//	this->ProcessEvent ( pFnApplyDamage, &ApplyDamage_Parms, NULL );
//};
//
//// Function ProjectX.DamageComponent_X.SetImpact
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// struct FImpactInfo             Impact                         ( CPF_Parm )
//
//class UDamageComponent_X* UDamageComponent_X::SetImpact ( struct FImpactInfo Impact )
//{
//	static UFunction* pFnSetImpact = NULL;
//
//	if ( ! pFnSetImpact )
//		pFnSetImpact = (UFunction*) UObject::GObjObjects()->Data[ 48687 ];
//
//	UDamageComponent_X_execSetImpact_Parms SetImpact_Parms;
//	memcpy ( &SetImpact_Parms.Impact, &Impact, 0x50 );
//
//	this->ProcessEvent ( pFnSetImpact, &SetImpact_Parms, NULL );
//
//	return SetImpact_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.SetHitInfo
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// struct FTraceHitInfo           InHitInfo                      ( CPF_Parm )
//
//class UDamageComponent_X* UDamageComponent_X::SetHitInfo ( struct FTraceHitInfo InHitInfo )
//{
//	static UFunction* pFnSetHitInfo = NULL;
//
//	if ( ! pFnSetHitInfo )
//		pFnSetHitInfo = (UFunction*) UObject::GObjObjects()->Data[ 48684 ];
//
//	UDamageComponent_X_execSetHitInfo_Parms SetHitInfo_Parms;
//	memcpy ( &SetHitInfo_Parms.InHitInfo, &InHitInfo, 0x1C );
//
//	this->ProcessEvent ( pFnSetHitInfo, &SetHitInfo_Parms, NULL );
//
//	return SetHitInfo_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.ScaleDamage
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// float                          InScale                        ( CPF_Parm )
//
//class UDamageComponent_X* UDamageComponent_X::ScaleDamage ( float InScale )
//{
//	static UFunction* pFnScaleDamage = NULL;
//
//	if ( ! pFnScaleDamage )
//		pFnScaleDamage = (UFunction*) UObject::GObjObjects()->Data[ 48681 ];
//
//	UDamageComponent_X_execScaleDamage_Parms ScaleDamage_Parms;
//	ScaleDamage_Parms.InScale = InScale;
//
//	this->ProcessEvent ( pFnScaleDamage, &ScaleDamage_Parms, NULL );
//
//	return ScaleDamage_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.SetMomentumDir
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// struct FVector                 InMomentumDir                  ( CPF_Parm )
//
//class UDamageComponent_X* UDamageComponent_X::SetMomentumDir ( struct FVector InMomentumDir )
//{
//	static UFunction* pFnSetMomentumDir = NULL;
//
//	if ( ! pFnSetMomentumDir )
//		pFnSetMomentumDir = (UFunction*) UObject::GObjObjects()->Data[ 48678 ];
//
//	UDamageComponent_X_execSetMomentumDir_Parms SetMomentumDir_Parms;
//	memcpy ( &SetMomentumDir_Parms.InMomentumDir, &InMomentumDir, 0xC );
//
//	this->ProcessEvent ( pFnSetMomentumDir, &SetMomentumDir_Parms, NULL );
//
//	return SetMomentumDir_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.SetLocation
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// struct FVector                 InLocation                     ( CPF_Parm )
//
//class UDamageComponent_X* UDamageComponent_X::SetLocation ( struct FVector InLocation )
//{
//	static UFunction* pFnSetLocation = NULL;
//
//	if ( ! pFnSetLocation )
//		pFnSetLocation = (UFunction*) UObject::GObjObjects()->Data[ 48675 ];
//
//	UDamageComponent_X_execSetLocation_Parms SetLocation_Parms;
//	memcpy ( &SetLocation_Parms.InLocation, &InLocation, 0xC );
//
//	this->ProcessEvent ( pFnSetLocation, &SetLocation_Parms, NULL );
//
//	return SetLocation_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.SetSource
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// class AActor*                  InSource                       ( CPF_Parm )
//
//class UDamageComponent_X* UDamageComponent_X::SetSource ( class AActor* InSource )
//{
//	static UFunction* pFnSetSource = NULL;
//
//	if ( ! pFnSetSource )
//		pFnSetSource = (UFunction*) UObject::GObjObjects()->Data[ 48672 ];
//
//	UDamageComponent_X_execSetSource_Parms SetSource_Parms;
//	SetSource_Parms.InSource = InSource;
//
//	this->ProcessEvent ( pFnSetSource, &SetSource_Parms, NULL );
//
//	return SetSource_Parms.ReturnValue;
//};
//
//// Function ProjectX.DamageComponent_X.InitSource
//// [0x00080002] 
//// Parameters infos:
//
//void UDamageComponent_X::InitSource ( )
//{
//	static UFunction* pFnInitSource = NULL;
//
//	if ( ! pFnInitSource )
//		pFnInitSource = (UFunction*) UObject::GObjObjects()->Data[ 48669 ];
//
//	UDamageComponent_X_execInitSource_Parms InitSource_Parms;
//
//	this->ProcessEvent ( pFnInitSource, &InitSource_Parms, NULL );
//};
//
//// Function ProjectX.DamageComponent_X.GetArchetype
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UDamageComponent_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UDamageComponent_X* UDamageComponent_X::GetArchetype ( )
//{
//	static UFunction* pFnGetArchetype = NULL;
//
//	if ( ! pFnGetArchetype )
//		pFnGetArchetype = (UFunction*) UObject::GObjObjects()->Data[ 48667 ];
//
//	UDamageComponent_X_execGetArchetype_Parms GetArchetype_Parms;
//
//	this->ProcessEvent ( pFnGetArchetype, &GetArchetype_Parms, NULL );
//
//	return GetArchetype_Parms.ReturnValue;
//};
//
//// Function ProjectX.EffectsMap_X.GetEffects
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FEffectsMapping         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPhysicalMaterial*       PhysMat                        ( CPF_Parm )
//
//struct FEffectsMapping UEffectsMap_X::GetEffects ( class UPhysicalMaterial* PhysMat )
//{
//	static UFunction* pFnGetEffects = NULL;
//
//	if ( ! pFnGetEffects )
//		pFnGetEffects = (UFunction*) UObject::GObjObjects()->Data[ 48971 ];
//
//	UEffectsMap_X_execGetEffects_Parms GetEffects_Parms;
//	GetEffects_Parms.PhysMat = PhysMat;
//
//	pFnGetEffects->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetEffects, &GetEffects_Parms, NULL );
//
//	pFnGetEffects->FunctionFlags |= 0x400;
//
//	return GetEffects_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UEngineShare_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49024 ];
//
//	UEngineShare_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.IsRequestingExit
//// [0x00022400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UEngineShare_X::IsRequestingExit ( )
//{
//	static UFunction* pFnIsRequestingExit = NULL;
//
//	if ( ! pFnIsRequestingExit )
//		pFnIsRequestingExit = (UFunction*) UObject::GObjObjects()->Data[ 49027 ];
//
//	UEngineShare_X_execIsRequestingExit_Parms IsRequestingExit_Parms;
//
//	pFnIsRequestingExit->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsRequestingExit, &IsRequestingExit_Parms, NULL );
//
//	pFnIsRequestingExit->FunctionFlags |= 0x400;
//
//	return IsRequestingExit_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.GetUserAgentHeader
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UEngineShare_X::GetUserAgentHeader ( )
//{
//	static UFunction* pFnGetUserAgentHeader = NULL;
//
//	if ( ! pFnGetUserAgentHeader )
//		pFnGetUserAgentHeader = (UFunction*) UObject::GObjObjects()->Data[ 49028 ];
//
//	UEngineShare_X_execGetUserAgentHeader_Parms GetUserAgentHeader_Parms;
//
//	pFnGetUserAgentHeader->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetUserAgentHeader, &GetUserAgentHeader_Parms, NULL );
//
//	pFnGetUserAgentHeader->FunctionFlags |= 0x400;
//
//	return GetUserAgentHeader_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.GetRegionString
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UEngineShare_X::GetRegionString ( )
//{
//	static UFunction* pFnGetRegionString = NULL;
//
//	if ( ! pFnGetRegionString )
//		pFnGetRegionString = (UFunction*) UObject::GObjObjects()->Data[ 49030 ];
//
//	UEngineShare_X_execGetRegionString_Parms GetRegionString_Parms;
//
//	pFnGetRegionString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetRegionString, &GetRegionString_Parms, NULL );
//
//	pFnGetRegionString->FunctionFlags |= 0x400;
//
//	return GetRegionString_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.GetPlatformString
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UEngineShare_X::GetPlatformString ( )
//{
//	static UFunction* pFnGetPlatformString = NULL;
//
//	if ( ! pFnGetPlatformString )
//		pFnGetPlatformString = (UFunction*) UObject::GObjObjects()->Data[ 49032 ];
//
//	UEngineShare_X_execGetPlatformString_Parms GetPlatformString_Parms;
//
//	pFnGetPlatformString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetPlatformString, &GetPlatformString_Parms, NULL );
//
//	pFnGetPlatformString->FunctionFlags |= 0x400;
//
//	return GetPlatformString_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.Crash
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UEngineShare_X::Crash ( )
//{
//	static UFunction* pFnCrash = NULL;
//
//	if ( ! pFnCrash )
//		pFnCrash = (UFunction*) UObject::GObjObjects()->Data[ 49022 ];
//
//	UEngineShare_X_execCrash_Parms Crash_Parms;
//
//	pFnCrash->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCrash, &Crash_Parms, NULL );
//
//	pFnCrash->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.EngineShare_X.ConfigGetString
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 SectionName                    ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// struct FString                 KeyName                        ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// struct FString                 OutValue                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UEngineShare_X::ConfigGetString ( struct FString SectionName, struct FString KeyName, struct FString* OutValue )
//{
//	static UFunction* pFnConfigGetString = NULL;
//
//	if ( ! pFnConfigGetString )
//		pFnConfigGetString = (UFunction*) UObject::GObjObjects()->Data[ 49023 ];
//
//	UEngineShare_X_execConfigGetString_Parms ConfigGetString_Parms;
//	memcpy ( &ConfigGetString_Parms.SectionName, &SectionName, 0xC );
//	memcpy ( &ConfigGetString_Parms.KeyName, &KeyName, 0xC );
//
//	pFnConfigGetString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnConfigGetString, &ConfigGetString_Parms, NULL );
//
//	pFnConfigGetString->FunctionFlags |= 0x400;
//
//	if ( OutValue )
//		memcpy ( OutValue, &ConfigGetString_Parms.OutValue, 0xC );
//
//	return ConfigGetString_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.ParseCommandlineString
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 OutValue                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UEngineShare_X::ParseCommandlineString ( struct FString Param, struct FString* OutValue )
//{
//	static UFunction* pFnParseCommandlineString = NULL;
//
//	if ( ! pFnParseCommandlineString )
//		pFnParseCommandlineString = (UFunction*) UObject::GObjObjects()->Data[ 49018 ];
//
//	UEngineShare_X_execParseCommandlineString_Parms ParseCommandlineString_Parms;
//	memcpy ( &ParseCommandlineString_Parms.Param, &Param, 0xC );
//
//	pFnParseCommandlineString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnParseCommandlineString, &ParseCommandlineString_Parms, NULL );
//
//	pFnParseCommandlineString->FunctionFlags |= 0x400;
//
//	if ( OutValue )
//		memcpy ( OutValue, &ParseCommandlineString_Parms.OutValue, 0xC );
//
//	return ParseCommandlineString_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.ParseCommandlineQWORD
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UEngineShare_X::ParseCommandlineQWORD ( struct FString Param )
//{
//	static UFunction* pFnParseCommandlineQWORD = NULL;
//
//	if ( ! pFnParseCommandlineQWORD )
//		pFnParseCommandlineQWORD = (UFunction*) UObject::GObjObjects()->Data[ 49014 ];
//
//	UEngineShare_X_execParseCommandlineQWORD_Parms ParseCommandlineQWORD_Parms;
//	memcpy ( &ParseCommandlineQWORD_Parms.Param, &Param, 0xC );
//
//	pFnParseCommandlineQWORD->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnParseCommandlineQWORD, &ParseCommandlineQWORD_Parms, NULL );
//
//	pFnParseCommandlineQWORD->FunctionFlags |= 0x400;
//
//	if ( OutValue )
//
//	return ParseCommandlineQWORD_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.ParseCommandlineFloat
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )
//// float                          OutValue                       ( CPF_Parm | CPF_OutParm )
//
//bool UEngineShare_X::ParseCommandlineFloat ( struct FString Param, float* OutValue )
//{
//	static UFunction* pFnParseCommandlineFloat = NULL;
//
//	if ( ! pFnParseCommandlineFloat )
//		pFnParseCommandlineFloat = (UFunction*) UObject::GObjObjects()->Data[ 49010 ];
//
//	UEngineShare_X_execParseCommandlineFloat_Parms ParseCommandlineFloat_Parms;
//	memcpy ( &ParseCommandlineFloat_Parms.Param, &Param, 0xC );
//
//	pFnParseCommandlineFloat->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnParseCommandlineFloat, &ParseCommandlineFloat_Parms, NULL );
//
//	pFnParseCommandlineFloat->FunctionFlags |= 0x400;
//
//	if ( OutValue )
//		*OutValue = ParseCommandlineFloat_Parms.OutValue;
//
//	return ParseCommandlineFloat_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.ParseCommandlineInt
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )
//// int                            OutValue                       ( CPF_Parm | CPF_OutParm )
//
//bool UEngineShare_X::ParseCommandlineInt ( struct FString Param, int* OutValue )
//{
//	static UFunction* pFnParseCommandlineInt = NULL;
//
//	if ( ! pFnParseCommandlineInt )
//		pFnParseCommandlineInt = (UFunction*) UObject::GObjObjects()->Data[ 49006 ];
//
//	UEngineShare_X_execParseCommandlineInt_Parms ParseCommandlineInt_Parms;
//	memcpy ( &ParseCommandlineInt_Parms.Param, &Param, 0xC );
//
//	pFnParseCommandlineInt->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnParseCommandlineInt, &ParseCommandlineInt_Parms, NULL );
//
//	pFnParseCommandlineInt->FunctionFlags |= 0x400;
//
//	if ( OutValue )
//		*OutValue = ParseCommandlineInt_Parms.OutValue;
//
//	return ParseCommandlineInt_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.ParseCommandlineParam
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Param                          ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UEngineShare_X::ParseCommandlineParam ( struct FString Param )
//{
//	static UFunction* pFnParseCommandlineParam = NULL;
//
//	if ( ! pFnParseCommandlineParam )
//		pFnParseCommandlineParam = (UFunction*) UObject::GObjObjects()->Data[ 49003 ];
//
//	UEngineShare_X_execParseCommandlineParam_Parms ParseCommandlineParam_Parms;
//	memcpy ( &ParseCommandlineParam_Parms.Param, &Param, 0xC );
//
//	pFnParseCommandlineParam->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnParseCommandlineParam, &ParseCommandlineParam_Parms, NULL );
//
//	pFnParseCommandlineParam->FunctionFlags |= 0x400;
//
//	return ParseCommandlineParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.InitOnlineGame
//// [0x00020002] 
//// Parameters infos:
//// class UOnlineSubsystem*        NewOnlineSubsystem             ( CPF_Parm )
//
//void UEngineShare_X::InitOnlineGame ( class UOnlineSubsystem* NewOnlineSubsystem )
//{
//	static UFunction* pFnInitOnlineGame = NULL;
//
//	if ( ! pFnInitOnlineGame )
//		pFnInitOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 49001 ];
//
//	UEngineShare_X_execInitOnlineGame_Parms InitOnlineGame_Parms;
//	InitOnlineGame_Parms.NewOnlineSubsystem = NewOnlineSubsystem;
//
//	this->ProcessEvent ( pFnInitOnlineGame, &InitOnlineGame_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.IsUsingNullRHI
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UEngineShare_X::IsUsingNullRHI ( )
//{
//	static UFunction* pFnIsUsingNullRHI = NULL;
//
//	if ( ! pFnIsUsingNullRHI )
//		pFnIsUsingNullRHI = (UFunction*) UObject::GObjObjects()->Data[ 48782 ];
//
//	UEngineShare_X_execIsUsingNullRHI_Parms IsUsingNullRHI_Parms;
//
//	pFnIsUsingNullRHI->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsUsingNullRHI, &IsUsingNullRHI_Parms, NULL );
//
//	pFnIsUsingNullRHI->FunctionFlags |= 0x400;
//
//	return IsUsingNullRHI_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.IsLanServer
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UEngineShare_X::IsLanServer ( )
//{
//	static UFunction* pFnIsLanServer = NULL;
//
//	if ( ! pFnIsLanServer )
//		pFnIsLanServer = (UFunction*) UObject::GObjObjects()->Data[ 48999 ];
//
//	UEngineShare_X_execIsLanServer_Parms IsLanServer_Parms;
//
//	pFnIsLanServer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsLanServer, &IsLanServer_Parms, NULL );
//
//	pFnIsLanServer->FunctionFlags |= 0x400;
//
//	return IsLanServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.IsDedicatedServer
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UEngineShare_X::IsDedicatedServer ( )
//{
//	static UFunction* pFnIsDedicatedServer = NULL;
//
//	if ( ! pFnIsDedicatedServer )
//		pFnIsDedicatedServer = (UFunction*) UObject::GObjObjects()->Data[ 48996 ];
//
//	UEngineShare_X_execIsDedicatedServer_Parms IsDedicatedServer_Parms;
//
//	pFnIsDedicatedServer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsDedicatedServer, &IsDedicatedServer_Parms, NULL );
//
//	pFnIsDedicatedServer->FunctionFlags |= 0x400;
//
//	return IsDedicatedServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.EngineShare_X.EventCrashed
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventCrashed ( )
//{
//	static UFunction* pFnEventCrashed = NULL;
//
//	if ( ! pFnEventCrashed )
//		pFnEventCrashed = (UFunction*) UObject::GObjObjects()->Data[ 48998 ];
//
//	UEngineShare_X_execEventCrashed_Parms EventCrashed_Parms;
//
//	this->ProcessEvent ( pFnEventCrashed, &EventCrashed_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventPostLoadMap
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventPostLoadMap ( )
//{
//	static UFunction* pFnEventPostLoadMap = NULL;
//
//	if ( ! pFnEventPostLoadMap )
//		pFnEventPostLoadMap = (UFunction*) UObject::GObjObjects()->Data[ 48976 ];
//
//	UEngineShare_X_execEventPostLoadMap_Parms EventPostLoadMap_Parms;
//
//	this->ProcessEvent ( pFnEventPostLoadMap, &EventPostLoadMap_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventPreLoadMap
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UEngineShare_X::EventPreLoadMap ( struct FString MapName )
//{
//	static UFunction* pFnEventPreLoadMap = NULL;
//
//	if ( ! pFnEventPreLoadMap )
//		pFnEventPreLoadMap = (UFunction*) UObject::GObjObjects()->Data[ 48978 ];
//
//	UEngineShare_X_execEventPreLoadMap_Parms EventPreLoadMap_Parms;
//	memcpy ( &EventPreLoadMap_Parms.MapName, &MapName, 0xC );
//
//	this->ProcessEvent ( pFnEventPreLoadMap, &EventPreLoadMap_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventOnlineGameInitialized
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventOnlineGameInitialized ( )
//{
//	static UFunction* pFnEventOnlineGameInitialized = NULL;
//
//	if ( ! pFnEventOnlineGameInitialized )
//		pFnEventOnlineGameInitialized = (UFunction*) UObject::GObjObjects()->Data[ 48980 ];
//
//	UEngineShare_X_execEventOnlineGameInitialized_Parms EventOnlineGameInitialized_Parms;
//
//	this->ProcessEvent ( pFnEventOnlineGameInitialized, &EventOnlineGameInitialized_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventPostScriptsReloaded
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventPostScriptsReloaded ( )
//{
//	static UFunction* pFnEventPostScriptsReloaded = NULL;
//
//	if ( ! pFnEventPostScriptsReloaded )
//		pFnEventPostScriptsReloaded = (UFunction*) UObject::GObjObjects()->Data[ 48982 ];
//
//	UEngineShare_X_execEventPostScriptsReloaded_Parms EventPostScriptsReloaded_Parms;
//
//	this->ProcessEvent ( pFnEventPostScriptsReloaded, &EventPostScriptsReloaded_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventPreScriptsReloaded
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventPreScriptsReloaded ( )
//{
//	static UFunction* pFnEventPreScriptsReloaded = NULL;
//
//	if ( ! pFnEventPreScriptsReloaded )
//		pFnEventPreScriptsReloaded = (UFunction*) UObject::GObjObjects()->Data[ 48984 ];
//
//	UEngineShare_X_execEventPreScriptsReloaded_Parms EventPreScriptsReloaded_Parms;
//
//	this->ProcessEvent ( pFnEventPreScriptsReloaded, &EventPreScriptsReloaded_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventLoadingMovieClosed
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventLoadingMovieClosed ( )
//{
//	static UFunction* pFnEventLoadingMovieClosed = NULL;
//
//	if ( ! pFnEventLoadingMovieClosed )
//		pFnEventLoadingMovieClosed = (UFunction*) UObject::GObjObjects()->Data[ 48985 ];
//
//	UEngineShare_X_execEventLoadingMovieClosed_Parms EventLoadingMovieClosed_Parms;
//
//	this->ProcessEvent ( pFnEventLoadingMovieClosed, &EventLoadingMovieClosed_Parms, NULL );
//};
//
//// Function ProjectX.EngineShare_X.EventPreExit
//// [0x00120000] 
//// Parameters infos:
//
//void UEngineShare_X::EventPreExit ( )
//{
//	static UFunction* pFnEventPreExit = NULL;
//
//	if ( ! pFnEventPreExit )
//		pFnEventPreExit = (UFunction*) UObject::GObjObjects()->Data[ 48987 ];
//
//	UEngineShare_X_execEventPreExit_Parms EventPreExit_Parms;
//
//	this->ProcessEvent ( pFnEventPreExit, &EventPreExit_Parms, NULL );
//};
//
//// Function ProjectX.Errors_X.DisplayPlatformError
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UErrorType*              InErrorType                    ( CPF_Parm )
//
//bool UErrors_X::DisplayPlatformError ( class UErrorType* InErrorType )
//{
//	static UFunction* pFnDisplayPlatformError = NULL;
//
//	if ( ! pFnDisplayPlatformError )
//		pFnDisplayPlatformError = (UFunction*) UObject::GObjObjects()->Data[ 49075 ];
//
//	UErrors_X_execDisplayPlatformError_Parms DisplayPlatformError_Parms;
//	DisplayPlatformError_Parms.InErrorType = InErrorType;
//
//	pFnDisplayPlatformError->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDisplayPlatformError, &DisplayPlatformError_Parms, NULL );
//
//	pFnDisplayPlatformError->FunctionFlags |= 0x400;
//
//	return DisplayPlatformError_Parms.ReturnValue;
//};
//
//// Function ProjectX.EventRecorder_X.MetricsFlood
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//// struct FString                 LastEventName                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UEventRecorder_X::eventMetricsFlood ( struct FString LastEventName )
//{
//	static UFunction* pFnMetricsFlood = NULL;
//
//	if ( ! pFnMetricsFlood )
//		pFnMetricsFlood = (UFunction*) UObject::GObjObjects()->Data[ 56026 ];
//
//	UEventRecorder_X_eventMetricsFlood_Parms MetricsFlood_Parms;
//	memcpy ( &MetricsFlood_Parms.LastEventName, &LastEventName, 0xC );
//
//	this->ProcessEvent ( pFnMetricsFlood, &MetricsFlood_Parms, NULL );
//};
//
//// Function ProjectX.EventRecorder_X.SetLevelSessionID
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FGuid                   Id                             ( CPF_Parm )
//
//void UEventRecorder_X::SetLevelSessionID ( struct FGuid Id )
//{
//	static UFunction* pFnSetLevelSessionID = NULL;
//
//	if ( ! pFnSetLevelSessionID )
//		pFnSetLevelSessionID = (UFunction*) UObject::GObjObjects()->Data[ 56027 ];
//
//	UEventRecorder_X_execSetLevelSessionID_Parms SetLevelSessionID_Parms;
//	memcpy ( &SetLevelSessionID_Parms.Id, &Id, 0x10 );
//
//	pFnSetLevelSessionID->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetLevelSessionID, &SetLevelSessionID_Parms, NULL );
//
//	pFnSetLevelSessionID->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.EventRecorder_X.Send
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UEventRecorder_X::Send ( )
//{
//	static UFunction* pFnSend = NULL;
//
//	if ( ! pFnSend )
//		pFnSend = (UFunction*) UObject::GObjObjects()->Data[ 56030 ];
//
//	UEventRecorder_X_execSend_Parms Send_Parms;
//
//	pFnSend->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSend, &Send_Parms, NULL );
//
//	pFnSend->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.EventRecorder_X.RecordEvent
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FName                   Event                          ( CPF_Parm )
//// struct FString                 Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UEventRecorder_X::RecordEvent ( struct FString Category, struct FName Event, struct FString* Data )
//{
//	static UFunction* pFnRecordEvent = NULL;
//
//	if ( ! pFnRecordEvent )
//		pFnRecordEvent = (UFunction*) UObject::GObjObjects()->Data[ 56032 ];
//
//	UEventRecorder_X_execRecordEvent_Parms RecordEvent_Parms;
//	memcpy ( &RecordEvent_Parms.Category, &Category, 0xC );
//	memcpy ( &RecordEvent_Parms.Event, &Event, 0x8 );
//
//	pFnRecordEvent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRecordEvent, &RecordEvent_Parms, NULL );
//
//	pFnRecordEvent->FunctionFlags |= 0x400;
//
//	if ( Data )
//		memcpy ( Data, &RecordEvent_Parms.Data, 0xC );
//};
//
//// Function ProjectX.EventRecorder_X.RecordFunction
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UEventRecorder_X::RecordFunction ( struct FString Category )
//{
//	static UFunction* pFnRecordFunction = NULL;
//
//	if ( ! pFnRecordFunction )
//		pFnRecordFunction = (UFunction*) UObject::GObjObjects()->Data[ 56029 ];
//
//	UEventRecorder_X_execRecordFunction_Parms RecordFunction_Parms;
//	memcpy ( &RecordFunction_Parms.Category, &Category, 0xC );
//
//	pFnRecordFunction->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRecordFunction, &RecordFunction_Parms, NULL );
//
//	pFnRecordFunction->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.EventRecorderGroup_X.VectorToString
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FVector                 V                              ( CPF_Parm )
//
//struct FString UEventRecorderGroup_X::VectorToString ( struct FVector V )
//{
//	static UFunction* pFnVectorToString = NULL;
//
//	if ( ! pFnVectorToString )
//		pFnVectorToString = (UFunction*) UObject::GObjObjects()->Data[ 55994 ];
//
//	UEventRecorderGroup_X_execVectorToString_Parms VectorToString_Parms;
//	memcpy ( &VectorToString_Parms.V, &V, 0xC );
//
//	this->ProcessEvent ( pFnVectorToString, &VectorToString_Parms, NULL );
//
//	return VectorToString_Parms.ReturnValue;
//};
//
//// Function ProjectX.EventRecorderGroup_X.RecordFunction
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UEventRecorderGroup_X::RecordFunction ( )
//{
//	static UFunction* pFnRecordFunction = NULL;
//
//	if ( ! pFnRecordFunction )
//		pFnRecordFunction = (UFunction*) UObject::GObjObjects()->Data[ 55995 ];
//
//	UEventRecorderGroup_X_execRecordFunction_Parms RecordFunction_Parms;
//
//	pFnRecordFunction->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRecordFunction, &RecordFunction_Parms, NULL );
//
//	pFnRecordFunction->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.EventRecorderGroup_X.GetEventRecorder
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UEventRecorder_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UEventRecorder_X* UEventRecorderGroup_X::GetEventRecorder ( )
//{
//	static UFunction* pFnGetEventRecorder = NULL;
//
//	if ( ! pFnGetEventRecorder )
//		pFnGetEventRecorder = (UFunction*) UObject::GObjObjects()->Data[ 55998 ];
//
//	UEventRecorderGroup_X_execGetEventRecorder_Parms GetEventRecorder_Parms;
//
//	pFnGetEventRecorder->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetEventRecorder, &GetEventRecorder_Parms, NULL );
//
//	pFnGetEventRecorder->FunctionFlags |= 0x400;
//
//	return GetEventRecorder_Parms.ReturnValue;
//};
//
//// Function ProjectX.MetricsGroup_X.GetEventRecorder
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UEventRecorder_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UEventRecorder_X* UMetricsGroup_X::GetEventRecorder ( )
//{
//	static UFunction* pFnGetEventRecorder = NULL;
//
//	if ( ! pFnGetEventRecorder )
//		pFnGetEventRecorder = (UFunction*) UObject::GObjObjects()->Data[ 56001 ];
//
//	UMetricsGroup_X_execGetEventRecorder_Parms GetEventRecorder_Parms;
//
//	pFnGetEventRecorder->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetEventRecorder, &GetEventRecorder_Parms, NULL );
//
//	pFnGetEventRecorder->FunctionFlags |= 0x400;
//
//	return GetEventRecorder_Parms.ReturnValue;
//};
//
//// Function ProjectX.FakeData_X.RandomizeValues
//// [0x00026401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Target                         ( CPF_Parm )
//// int                            InRandomSeed                   ( CPF_OptionalParm | CPF_Parm )
//
//int UFakeData_X::RandomizeValues ( class UObject* Target, int InRandomSeed )
//{
//	static UFunction* pFnRandomizeValues = NULL;
//
//	if ( ! pFnRandomizeValues )
//		pFnRandomizeValues = (UFunction*) UObject::GObjObjects()->Data[ 56224 ];
//
//	UFakeData_X_execRandomizeValues_Parms RandomizeValues_Parms;
//	RandomizeValues_Parms.Target = Target;
//	RandomizeValues_Parms.InRandomSeed = InRandomSeed;
//
//	pFnRandomizeValues->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRandomizeValues, &RandomizeValues_Parms, NULL );
//
//	pFnRandomizeValues->FunctionFlags |= 0x400;
//
//	return RandomizeValues_Parms.ReturnValue;
//};
//
//// Function ProjectX.FakeData_X.RandomizeFakeData
//// [0x00026003] ( FUNC_Final )
//// Parameters infos:
//// class UFakeData_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UFakeData_X*             FakeData                       ( CPF_Parm )
//// int                            InRandomSeed                   ( CPF_OptionalParm | CPF_Parm )
//
//class UFakeData_X* UFakeData_X::RandomizeFakeData ( class UFakeData_X* FakeData, int InRandomSeed )
//{
//	static UFunction* pFnRandomizeFakeData = NULL;
//
//	if ( ! pFnRandomizeFakeData )
//		pFnRandomizeFakeData = (UFunction*) UObject::GObjObjects()->Data[ 56227 ];
//
//	UFakeData_X_execRandomizeFakeData_Parms RandomizeFakeData_Parms;
//	RandomizeFakeData_Parms.FakeData = FakeData;
//	RandomizeFakeData_Parms.InRandomSeed = InRandomSeed;
//
//	this->ProcessEvent ( pFnRandomizeFakeData, &RandomizeFakeData_Parms, NULL );
//
//	return RandomizeFakeData_Parms.ReturnValue;
//};
//
//// Function ProjectX.FakeData_X.GenerateFakeData
//// [0x00026003] ( FUNC_Final )
//// Parameters infos:
//// class UFakeData_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InRandomSeed                   ( CPF_OptionalParm | CPF_Parm )
//
//class UFakeData_X* UFakeData_X::GenerateFakeData ( int InRandomSeed )
//{
//	static UFunction* pFnGenerateFakeData = NULL;
//
//	if ( ! pFnGenerateFakeData )
//		pFnGenerateFakeData = (UFunction*) UObject::GObjObjects()->Data[ 56229 ];
//
//	UFakeData_X_execGenerateFakeData_Parms GenerateFakeData_Parms;
//	GenerateFakeData_Parms.InRandomSeed = InRandomSeed;
//
//	this->ProcessEvent ( pFnGenerateFakeData, &GenerateFakeData_Parms, NULL );
//
//	return GenerateFakeData_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameEngine_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UGameEngine_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49385 ];
//
//	UGameEngine_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GameEngine_X.OnlineSubsystemInitialized
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UGameEngine_X::eventOnlineSubsystemInitialized ( )
//{
//	static UFunction* pFnOnlineSubsystemInitialized = NULL;
//
//	if ( ! pFnOnlineSubsystemInitialized )
//		pFnOnlineSubsystemInitialized = (UFunction*) UObject::GObjObjects()->Data[ 49384 ];
//
//	UGameEngine_X_eventOnlineSubsystemInitialized_Parms OnlineSubsystemInitialized_Parms;
//
//	this->ProcessEvent ( pFnOnlineSubsystemInitialized, &OnlineSubsystemInitialized_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void AGameInfo_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49488 ];
//
//	AGameInfo_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.ClientMapLoadFail
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void AGameInfo_X::eventClientMapLoadFail ( struct FUniqueNetId PlayerID, struct FString MapName )
//{
//	static UFunction* pFnClientMapLoadFail = NULL;
//
//	if ( ! pFnClientMapLoadFail )
//		pFnClientMapLoadFail = (UFunction*) UObject::GObjObjects()->Data[ 49484 ];
//
//	AGameInfo_X_eventClientMapLoadFail_Parms ClientMapLoadFail_Parms;
//	memcpy ( &ClientMapLoadFail_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &ClientMapLoadFail_Parms.MapName, &MapName, 0xC );
//
//	this->ProcessEvent ( pFnClientMapLoadFail, &ClientMapLoadFail_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.RemovePauser
//// [0x00044003] ( FUNC_Final )
//// Parameters infos:
//// class APlayerController*       PC                             ( CPF_Parm )
//// unsigned long                  bForceRemove                   ( CPF_OptionalParm | CPF_Parm )
//
//void AGameInfo_X::RemovePauser ( class APlayerController* PC, unsigned long bForceRemove )
//{
//	static UFunction* pFnRemovePauser = NULL;
//
//	if ( ! pFnRemovePauser )
//		pFnRemovePauser = (UFunction*) UObject::GObjObjects()->Data[ 49464 ];
//
//	AGameInfo_X_execRemovePauser_Parms RemovePauser_Parms;
//	RemovePauser_Parms.PC = PC;
//	RemovePauser_Parms.bForceRemove = bForceRemove;
//
//	this->ProcessEvent ( pFnRemovePauser, &RemovePauser_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.AddPauser
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class APlayerController*       PC                             ( CPF_Parm )
//
//void AGameInfo_X::AddPauser ( class APlayerController* PC )
//{
//	static UFunction* pFnAddPauser = NULL;
//
//	if ( ! pFnAddPauser )
//		pFnAddPauser = (UFunction*) UObject::GObjObjects()->Data[ 49483 ];
//
//	AGameInfo_X_execAddPauser_Parms AddPauser_Parms;
//	AddPauser_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnAddPauser, &AddPauser_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.SetPaused
//// [0x00020002] 
//// Parameters infos:
//// class APlayerController*       PC                             ( CPF_Parm )
//// unsigned long                  bPause                         ( CPF_Parm )
//
//void AGameInfo_X::SetPaused ( class APlayerController* PC, unsigned long bPause )
//{
//	static UFunction* pFnSetPaused = NULL;
//
//	if ( ! pFnSetPaused )
//		pFnSetPaused = (UFunction*) UObject::GObjObjects()->Data[ 49480 ];
//
//	AGameInfo_X_execSetPaused_Parms SetPaused_Parms;
//	SetPaused_Parms.PC = PC;
//	SetPaused_Parms.bPause = bPause;
//
//	this->ProcessEvent ( pFnSetPaused, &SetPaused_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.TogglePause
//// [0x00020002] 
//// Parameters infos:
//// class APlayerController*       PC                             ( CPF_Parm )
//
//void AGameInfo_X::TogglePause ( class APlayerController* PC )
//{
//	static UFunction* pFnTogglePause = NULL;
//
//	if ( ! pFnTogglePause )
//		pFnTogglePause = (UFunction*) UObject::GObjObjects()->Data[ 49478 ];
//
//	AGameInfo_X_execTogglePause_Parms TogglePause_Parms;
//	TogglePause_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnTogglePause, &TogglePause_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.IsPaused
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerController*       PC                             ( CPF_Parm )
//
//bool AGameInfo_X::IsPaused ( class APlayerController* PC )
//{
//	static UFunction* pFnIsPaused = NULL;
//
//	if ( ! pFnIsPaused )
//		pFnIsPaused = (UFunction*) UObject::GObjObjects()->Data[ 49475 ];
//
//	AGameInfo_X_execIsPaused_Parms IsPaused_Parms;
//	IsPaused_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnIsPaused, &IsPaused_Parms, NULL );
//
//	return IsPaused_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.GetOnlineGameHost
//// [0x00020002] 
//// Parameters infos:
//// class UIOnlineGameHost_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UIOnlineGameHost_X* AGameInfo_X::GetOnlineGameHost ( )
//{
//	static UFunction* pFnGetOnlineGameHost = NULL;
//
//	if ( ! pFnGetOnlineGameHost )
//		pFnGetOnlineGameHost = (UFunction*) UObject::GObjObjects()->Data[ 49473 ];
//
//	AGameInfo_X_execGetOnlineGameHost_Parms GetOnlineGameHost_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameHost, &GetOnlineGameHost_Parms, NULL );
//
//	return GetOnlineGameHost_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.GetOnlineGameLanServer
//// [0x00022002] 
//// Parameters infos:
//// class UOnlineGameLanServer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGameLanServer_X* AGameInfo_X::GetOnlineGameLanServer ( )
//{
//	static UFunction* pFnGetOnlineGameLanServer = NULL;
//
//	if ( ! pFnGetOnlineGameLanServer )
//		pFnGetOnlineGameLanServer = (UFunction*) UObject::GObjObjects()->Data[ 49471 ];
//
//	AGameInfo_X_execGetOnlineGameLanServer_Parms GetOnlineGameLanServer_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameLanServer, &GetOnlineGameLanServer_Parms, NULL );
//
//	return GetOnlineGameLanServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.GetOnlineGameDedicatedServer
//// [0x00022002] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGameDedicatedServer_X* AGameInfo_X::GetOnlineGameDedicatedServer ( )
//{
//	static UFunction* pFnGetOnlineGameDedicatedServer = NULL;
//
//	if ( ! pFnGetOnlineGameDedicatedServer )
//		pFnGetOnlineGameDedicatedServer = (UFunction*) UObject::GObjObjects()->Data[ 49469 ];
//
//	AGameInfo_X_execGetOnlineGameDedicatedServer_Parms GetOnlineGameDedicatedServer_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameDedicatedServer, &GetOnlineGameDedicatedServer_Parms, NULL );
//
//	return GetOnlineGameDedicatedServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.GetOnlineGame
//// [0x00022002] 
//// Parameters infos:
//// class UOnlineGame_Base_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGame_Base_X* AGameInfo_X::GetOnlineGame ( )
//{
//	static UFunction* pFnGetOnlineGame = NULL;
//
//	if ( ! pFnGetOnlineGame )
//		pFnGetOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 49467 ];
//
//	AGameInfo_X_execGetOnlineGame_Parms GetOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGame, &GetOnlineGame_Parms, NULL );
//
//	return GetOnlineGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.EndOnlineGame
//// [0x00020002] 
//// Parameters infos:
//
//void AGameInfo_X::EndOnlineGame ( )
//{
//	static UFunction* pFnEndOnlineGame = NULL;
//
//	if ( ! pFnEndOnlineGame )
//		pFnEndOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 49465 ];
//
//	AGameInfo_X_execEndOnlineGame_Parms EndOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnEndOnlineGame, &EndOnlineGame_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.Logout
//// [0x00020002] 
//// Parameters infos:
//// class AController*             Exiting                        ( CPF_Parm )
//
//void AGameInfo_X::Logout ( class AController* Exiting )
//{
//	static UFunction* pFnLogout = NULL;
//
//	if ( ! pFnLogout )
//		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 49462 ];
//
//	AGameInfo_X_execLogout_Parms Logout_Parms;
//	Logout_Parms.Exiting = Exiting;
//
//	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.GenericPlayerInitialization
//// [0x00020002] 
//// Parameters infos:
//// class AController*             C                              ( CPF_Parm )
//
//void AGameInfo_X::GenericPlayerInitialization ( class AController* C )
//{
//	static UFunction* pFnGenericPlayerInitialization = NULL;
//
//	if ( ! pFnGenericPlayerInitialization )
//		pFnGenericPlayerInitialization = (UFunction*) UObject::GObjObjects()->Data[ 49460 ];
//
//	AGameInfo_X_execGenericPlayerInitialization_Parms GenericPlayerInitialization_Parms;
//	GenericPlayerInitialization_Parms.C = C;
//
//	this->ProcessEvent ( pFnGenericPlayerInitialization, &GenericPlayerInitialization_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.DisconnectExistingPlayer
//// [0x00422003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void AGameInfo_X::DisconnectExistingPlayer ( struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnDisconnectExistingPlayer = NULL;
//
//	if ( ! pFnDisconnectExistingPlayer )
//		pFnDisconnectExistingPlayer = (UFunction*) UObject::GObjObjects()->Data[ 49453 ];
//
//	AGameInfo_X_execDisconnectExistingPlayer_Parms DisconnectExistingPlayer_Parms;
//
//	this->ProcessEvent ( pFnDisconnectExistingPlayer, &DisconnectExistingPlayer_Parms, NULL );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &DisconnectExistingPlayer_Parms.PlayerID, 0x48 );
//};
//
//// Function ProjectX.GameInfo_X.Login
//// [0x00420802] ( FUNC_Event )
//// Parameters infos:
//// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            UniqueId                       ( CPF_Const | CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class APlayerController* AGameInfo_X::eventLogin ( struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString* ErrorMessage )
//{
//	static UFunction* pFnLogin = NULL;
//
//	if ( ! pFnLogin )
//		pFnLogin = (UFunction*) UObject::GObjObjects()->Data[ 49454 ];
//
//	AGameInfo_X_eventLogin_Parms Login_Parms;
//	memcpy ( &Login_Parms.Portal, &Portal, 0xC );
//	memcpy ( &Login_Parms.Options, &Options, 0xC );
//	memcpy ( &Login_Parms.UniqueId, &UniqueId, 0x48 );
//
//	this->ProcessEvent ( pFnLogin, &Login_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &Login_Parms.ErrorMessage, 0xC );
//
//	return Login_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.PreLogin
//// [0x00420802] ( FUNC_Event )
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            UniqueId                       ( CPF_Const | CPF_Parm )
//// unsigned long                  bSupportsAuth                  ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void AGameInfo_X::eventPreLogin ( struct FString Options, struct FString Address, struct FUniqueNetId UniqueId, unsigned long bSupportsAuth, struct FString* ErrorMessage )
//{
//	static UFunction* pFnPreLogin = NULL;
//
//	if ( ! pFnPreLogin )
//		pFnPreLogin = (UFunction*) UObject::GObjObjects()->Data[ 49445 ];
//
//	AGameInfo_X_eventPreLogin_Parms PreLogin_Parms;
//	memcpy ( &PreLogin_Parms.Options, &Options, 0xC );
//	memcpy ( &PreLogin_Parms.Address, &Address, 0xC );
//	memcpy ( &PreLogin_Parms.UniqueId, &UniqueId, 0x48 );
//	PreLogin_Parms.bSupportsAuth = bSupportsAuth;
//
//	this->ProcessEvent ( pFnPreLogin, &PreLogin_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &PreLogin_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.GameInfo_X.UpdateGameSettingsCounts
//// [0x00020000] 
//// Parameters infos:
//
//void AGameInfo_X::UpdateGameSettingsCounts ( )
//{
//	static UFunction* pFnUpdateGameSettingsCounts = NULL;
//
//	if ( ! pFnUpdateGameSettingsCounts )
//		pFnUpdateGameSettingsCounts = (UFunction*) UObject::GObjObjects()->Data[ 49444 ];
//
//	AGameInfo_X_execUpdateGameSettingsCounts_Parms UpdateGameSettingsCounts_Parms;
//
//	this->ProcessEvent ( pFnUpdateGameSettingsCounts, &UpdateGameSettingsCounts_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.PostBeginPlay
//// [0x00020002] 
//// Parameters infos:
//
//void AGameInfo_X::PostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49443 ];
//
//	AGameInfo_X_execPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.ProcessServerLogin
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool AGameInfo_X::ProcessServerLogin ( )
//{
//	static UFunction* pFnProcessServerLogin = NULL;
//
//	if ( ! pFnProcessServerLogin )
//		pFnProcessServerLogin = (UFunction*) UObject::GObjObjects()->Data[ 49441 ];
//
//	AGameInfo_X_execProcessServerLogin_Parms ProcessServerLogin_Parms;
//
//	this->ProcessEvent ( pFnProcessServerLogin, &ProcessServerLogin_Parms, NULL );
//
//	return ProcessServerLogin_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.RegisterServer
//// [0x00020000] 
//// Parameters infos:
//
//void AGameInfo_X::RegisterServer ( )
//{
//	static UFunction* pFnRegisterServer = NULL;
//
//	if ( ! pFnRegisterServer )
//		pFnRegisterServer = (UFunction*) UObject::GObjObjects()->Data[ 49440 ];
//
//	AGameInfo_X_execRegisterServer_Parms RegisterServer_Parms;
//
//	this->ProcessEvent ( pFnRegisterServer, &RegisterServer_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.SpawnDefaultPawnFor
//// [0x00020002] 
//// Parameters infos:
//// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class AController*             NewPlayer                      ( CPF_Parm )
//// class ANavigationPoint*        StartSpot                      ( CPF_Parm )
//
//class APawn* AGameInfo_X::SpawnDefaultPawnFor ( class AController* NewPlayer, class ANavigationPoint* StartSpot )
//{
//	static UFunction* pFnSpawnDefaultPawnFor = NULL;
//
//	if ( ! pFnSpawnDefaultPawnFor )
//		pFnSpawnDefaultPawnFor = (UFunction*) UObject::GObjObjects()->Data[ 49435 ];
//
//	AGameInfo_X_execSpawnDefaultPawnFor_Parms SpawnDefaultPawnFor_Parms;
//	SpawnDefaultPawnFor_Parms.NewPlayer = NewPlayer;
//	SpawnDefaultPawnFor_Parms.StartSpot = StartSpot;
//
//	this->ProcessEvent ( pFnSpawnDefaultPawnFor, &SpawnDefaultPawnFor_Parms, NULL );
//
//	return SpawnDefaultPawnFor_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.Killed_X
//// [0x00020000] 
//// Parameters infos:
//// class AController*             Killer                         ( CPF_Parm )
//// class AController*             KilledPlayer                   ( CPF_Parm )
//// class APawn*                   KilledPawn                     ( CPF_Parm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void AGameInfo_X::Killed_X ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnKilled_X = NULL;
//
//	if ( ! pFnKilled_X )
//		pFnKilled_X = (UFunction*) UObject::GObjObjects()->Data[ 49430 ];
//
//	AGameInfo_X_execKilled_X_Parms Killed_X_Parms;
//	Killed_X_Parms.Killer = Killer;
//	Killed_X_Parms.KilledPlayer = KilledPlayer;
//	Killed_X_Parms.KilledPawn = KilledPawn;
//	Killed_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnKilled_X, &Killed_X_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.AdjustDamage_X
//// [0x00020002] 
//// Parameters infos:
//// class APawn*                   injured                        ( CPF_Parm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void AGameInfo_X::AdjustDamage_X ( class APawn* injured, class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnAdjustDamage_X = NULL;
//
//	if ( ! pFnAdjustDamage_X )
//		pFnAdjustDamage_X = (UFunction*) UObject::GObjObjects()->Data[ 49426 ];
//
//	AGameInfo_X_execAdjustDamage_X_Parms AdjustDamage_X_Parms;
//	AdjustDamage_X_Parms.injured = injured;
//	AdjustDamage_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnAdjustDamage_X, &AdjustDamage_X_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.PreBeginPlay
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void AGameInfo_X::eventPreBeginPlay ( )
//{
//	static UFunction* pFnPreBeginPlay = NULL;
//
//	if ( ! pFnPreBeginPlay )
//		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49425 ];
//
//	AGameInfo_X_eventPreBeginPlay_Parms PreBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.SpawnPlayerController
//// [0x00020002] 
//// Parameters infos:
//// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FVector                 SpawnLocation                  ( CPF_Parm )
//// struct FRotator                SpawnRotation                  ( CPF_Parm )
//
//class APlayerController* AGameInfo_X::SpawnPlayerController ( struct FVector SpawnLocation, struct FRotator SpawnRotation )
//{
//	static UFunction* pFnSpawnPlayerController = NULL;
//
//	if ( ! pFnSpawnPlayerController )
//		pFnSpawnPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 49421 ];
//
//	AGameInfo_X_execSpawnPlayerController_Parms SpawnPlayerController_Parms;
//	memcpy ( &SpawnPlayerController_Parms.SpawnLocation, &SpawnLocation, 0xC );
//	memcpy ( &SpawnPlayerController_Parms.SpawnRotation, &SpawnRotation, 0xC );
//
//	this->ProcessEvent ( pFnSpawnPlayerController, &SpawnPlayerController_Parms, NULL );
//
//	return SpawnPlayerController_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.SetGameType
//// [0x00022802] ( FUNC_Event )
//// Parameters infos:
//// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class UClass* AGameInfo_X::eventSetGameType ( struct FString MapName, struct FString Options, struct FString Portal )
//{
//	static UFunction* pFnSetGameType = NULL;
//
//	if ( ! pFnSetGameType )
//		pFnSetGameType = (UFunction*) UObject::GObjObjects()->Data[ 49416 ];
//
//	AGameInfo_X_eventSetGameType_Parms SetGameType_Parms;
//	memcpy ( &SetGameType_Parms.MapName, &MapName, 0xC );
//	memcpy ( &SetGameType_Parms.Options, &Options, 0xC );
//	memcpy ( &SetGameType_Parms.Portal, &Portal, 0xC );
//
//	this->ProcessEvent ( pFnSetGameType, &SetGameType_Parms, NULL );
//
//	return SetGameType_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.GetDefaultGameClassPath
//// [0x00022802] ( FUNC_Event )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString AGameInfo_X::eventGetDefaultGameClassPath ( struct FString MapName, struct FString Options, struct FString Portal )
//{
//	static UFunction* pFnGetDefaultGameClassPath = NULL;
//
//	if ( ! pFnGetDefaultGameClassPath )
//		pFnGetDefaultGameClassPath = (UFunction*) UObject::GObjObjects()->Data[ 49411 ];
//
//	AGameInfo_X_eventGetDefaultGameClassPath_Parms GetDefaultGameClassPath_Parms;
//	memcpy ( &GetDefaultGameClassPath_Parms.MapName, &MapName, 0xC );
//	memcpy ( &GetDefaultGameClassPath_Parms.Options, &Options, 0xC );
//	memcpy ( &GetDefaultGameClassPath_Parms.Portal, &Portal, 0xC );
//
//	this->ProcessEvent ( pFnGetDefaultGameClassPath, &GetDefaultGameClassPath_Parms, NULL );
//
//	return GetDefaultGameClassPath_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameInfo_X.PDI
//// [0x00024202] ( FUNC_Exec )
//// Parameters infos:
//// class UClass*                  ActorClass                     ( CPF_Parm )
//// unsigned long                  bOnlybDebug                    ( CPF_OptionalParm | CPF_Parm )
//
//void AGameInfo_X::PDI ( class UClass* ActorClass, unsigned long bOnlybDebug )
//{
//	static UFunction* pFnPDI = NULL;
//
//	if ( ! pFnPDI )
//		pFnPDI = (UFunction*) UObject::GObjObjects()->Data[ 49405 ];
//
//	AGameInfo_X_execPDI_Parms PDI_Parms;
//	PDI_Parms.ActorClass = ActorClass;
//	PDI_Parms.bOnlybDebug = bOnlybDebug;
//
//	this->ProcessEvent ( pFnPDI, &PDI_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.InitGame
//// [0x00420802] ( FUNC_Event )
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void AGameInfo_X::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
//{
//	static UFunction* pFnInitGame = NULL;
//
//	if ( ! pFnInitGame )
//		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 49402 ];
//
//	AGameInfo_X_eventInitGame_Parms InitGame_Parms;
//	memcpy ( &InitGame_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.GameInfo_X.EventInit
//// [0x00120000] 
//// Parameters infos:
//// class AGameInfo_X*             G                              ( CPF_Parm )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void AGameInfo_X::EventInit ( class AGameInfo_X* G, struct FString Options )
//{
//	static UFunction* pFnEventInit = NULL;
//
//	if ( ! pFnEventInit )
//		pFnEventInit = (UFunction*) UObject::GObjObjects()->Data[ 49393 ];
//
//	AGameInfo_X_execEventInit_Parms EventInit_Parms;
//	EventInit_Parms.G = G;
//	memcpy ( &EventInit_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnEventInit, &EventInit_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_X.EventSpawned
//// [0x00120000] 
//// Parameters infos:
//// class AGameInfo_X*             G                              ( CPF_Parm )
//
//void AGameInfo_X::EventSpawned ( class AGameInfo_X* G )
//{
//	static UFunction* pFnEventSpawned = NULL;
//
//	if ( ! pFnEventSpawned )
//		pFnEventSpawned = (UFunction*) UObject::GObjObjects()->Data[ 49395 ];
//
//	AGameInfo_X_execEventSpawned_Parms EventSpawned_Parms;
//	EventSpawned_Parms.G = G;
//
//	this->ProcessEvent ( pFnEventSpawned, &EventSpawned_Parms, NULL );
//};
//
//// Function ProjectX.GameSetting_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UGameSetting_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49515 ];
//
//	UGameSetting_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GameSetting_X.IsSetting
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   SettingName                    ( CPF_Parm )
//
//bool UGameSetting_X::IsSetting ( struct FName SettingName )
//{
//	static UFunction* pFnIsSetting = NULL;
//
//	if ( ! pFnIsSetting )
//		pFnIsSetting = (UFunction*) UObject::GObjObjects()->Data[ 49512 ];
//
//	UGameSetting_X_execIsSetting_Parms IsSetting_Parms;
//	memcpy ( &IsSetting_Parms.SettingName, &SettingName, 0x8 );
//
//	this->ProcessEvent ( pFnIsSetting, &IsSetting_Parms, NULL );
//
//	return IsSetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSetting_X.AddGameSettingToList
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UOnlineGameSettings_X*   OnlineGameSettings             ( CPF_Parm )
//// TArray< class UGameSetting_X* > GameSettingsArray              ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UGameSetting_X::AddGameSettingToList ( class UOnlineGameSettings_X* OnlineGameSettings, TArray< class UGameSetting_X* >* GameSettingsArray )
//{
//	static UFunction* pFnAddGameSettingToList = NULL;
//
//	if ( ! pFnAddGameSettingToList )
//		pFnAddGameSettingToList = (UFunction*) UObject::GObjObjects()->Data[ 49508 ];
//
//	UGameSetting_X_execAddGameSettingToList_Parms AddGameSettingToList_Parms;
//	AddGameSettingToList_Parms.OnlineGameSettings = OnlineGameSettings;
//
//	pFnAddGameSettingToList->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddGameSettingToList, &AddGameSettingToList_Parms, NULL );
//
//	pFnAddGameSettingToList->FunctionFlags |= 0x400;
//
//	if ( GameSettingsArray )
//		memcpy ( GameSettingsArray, &AddGameSettingToList_Parms.GameSettingsArray, 0xC );
//};
//
//// Function ProjectX.GameSettingCategory_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UGameSettingCategory_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49545 ];
//
//	UGameSettingCategory_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GameSettingCategory_X.GetGameSettingIndex
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   SettingName                    ( CPF_Parm )
//
//int UGameSettingCategory_X::GetGameSettingIndex ( struct FName SettingName )
//{
//	static UFunction* pFnGetGameSettingIndex = NULL;
//
//	if ( ! pFnGetGameSettingIndex )
//		pFnGetGameSettingIndex = (UFunction*) UObject::GObjObjects()->Data[ 49541 ];
//
//	UGameSettingCategory_X_execGetGameSettingIndex_Parms GetGameSettingIndex_Parms;
//	memcpy ( &GetGameSettingIndex_Parms.SettingName, &SettingName, 0x8 );
//
//	this->ProcessEvent ( pFnGetGameSettingIndex, &GetGameSettingIndex_Parms, NULL );
//
//	return GetGameSettingIndex_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingCategory_X.HasSetting
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   SettingName                    ( CPF_Parm )
//
//bool UGameSettingCategory_X::eventHasSetting ( struct FName SettingName )
//{
//	static UFunction* pFnHasSetting = NULL;
//
//	if ( ! pFnHasSetting )
//		pFnHasSetting = (UFunction*) UObject::GObjObjects()->Data[ 49535 ];
//
//	UGameSettingCategory_X_eventHasSetting_Parms HasSetting_Parms;
//	memcpy ( &HasSetting_Parms.SettingName, &SettingName, 0x8 );
//
//	this->ProcessEvent ( pFnHasSetting, &HasSetting_Parms, NULL );
//
//	return HasSetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingCategory_X.GetSelectedGameSettings
//// [0x00420002] 
//// Parameters infos:
//// TArray< class UGameSetting_X* > SelectedGameSettings           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UGameSettingCategory_X::GetSelectedGameSettings ( TArray< class UGameSetting_X* >* SelectedGameSettings )
//{
//	static UFunction* pFnGetSelectedGameSettings = NULL;
//
//	if ( ! pFnGetSelectedGameSettings )
//		pFnGetSelectedGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 49531 ];
//
//	UGameSettingCategory_X_execGetSelectedGameSettings_Parms GetSelectedGameSettings_Parms;
//
//	this->ProcessEvent ( pFnGetSelectedGameSettings, &GetSelectedGameSettings_Parms, NULL );
//
//	if ( SelectedGameSettings )
//		memcpy ( SelectedGameSettings, &GetSelectedGameSettings_Parms.SelectedGameSettings, 0xC );
//};
//
//// Function ProjectX.GameSettingCategory_X.GetFirstSelectedGameSetting
//// [0x00020002] 
//// Parameters infos:
//// class UGameSetting_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGameSetting_X* UGameSettingCategory_X::GetFirstSelectedGameSetting ( )
//{
//	static UFunction* pFnGetFirstSelectedGameSetting = NULL;
//
//	if ( ! pFnGetFirstSelectedGameSetting )
//		pFnGetFirstSelectedGameSetting = (UFunction*) UObject::GObjObjects()->Data[ 49528 ];
//
//	UGameSettingCategory_X_execGetFirstSelectedGameSetting_Parms GetFirstSelectedGameSetting_Parms;
//
//	this->ProcessEvent ( pFnGetFirstSelectedGameSetting, &GetFirstSelectedGameSetting_Parms, NULL );
//
//	return GetFirstSelectedGameSetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingCategory_X.ClearSelected
//// [0x00020002] 
//// Parameters infos:
//
//void UGameSettingCategory_X::ClearSelected ( )
//{
//	static UFunction* pFnClearSelected = NULL;
//
//	if ( ! pFnClearSelected )
//		pFnClearSelected = (UFunction*) UObject::GObjObjects()->Data[ 49527 ];
//
//	UGameSettingCategory_X_execClearSelected_Parms ClearSelected_Parms;
//
//	this->ProcessEvent ( pFnClearSelected, &ClearSelected_Parms, NULL );
//};
//
//// Function ProjectX.GameSettingCategory_X.AddSelectedSetting
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   NewSelectedName                ( CPF_Parm )
//
//void UGameSettingCategory_X::AddSelectedSetting ( struct FName NewSelectedName )
//{
//	static UFunction* pFnAddSelectedSetting = NULL;
//
//	if ( ! pFnAddSelectedSetting )
//		pFnAddSelectedSetting = (UFunction*) UObject::GObjObjects()->Data[ 49525 ];
//
//	UGameSettingCategory_X_execAddSelectedSetting_Parms AddSelectedSetting_Parms;
//	memcpy ( &AddSelectedSetting_Parms.NewSelectedName, &NewSelectedName, 0x8 );
//
//	this->ProcessEvent ( pFnAddSelectedSetting, &AddSelectedSetting_Parms, NULL );
//};
//
//// Function ProjectX.GameSettingCategory_X.SetGameSettings
//// [0x00020002] 
//// Parameters infos:
//// TArray< class UGameSetting_X* > NewGameSettings                ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGameSettingCategory_X::SetGameSettings ( TArray< class UGameSetting_X* > NewGameSettings )
//{
//	static UFunction* pFnSetGameSettings = NULL;
//
//	if ( ! pFnSetGameSettings )
//		pFnSetGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 49522 ];
//
//	UGameSettingCategory_X_execSetGameSettings_Parms SetGameSettings_Parms;
//	memcpy ( &SetGameSettings_Parms.NewGameSettings, &NewGameSettings, 0xC );
//
//	this->ProcessEvent ( pFnSetGameSettings, &SetGameSettings_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.OnPrimaryPlayerSwitch
//// [0x00020002] 
//// Parameters infos:
//// class ULocalPlayer*            OldPrimaryPlayer               ( CPF_Parm )
//// class ULocalPlayer*            NewPrimaryPlayer               ( CPF_Parm )
//
//void UGameViewportClient_X::OnPrimaryPlayerSwitch ( class ULocalPlayer* OldPrimaryPlayer, class ULocalPlayer* NewPrimaryPlayer )
//{
//	static UFunction* pFnOnPrimaryPlayerSwitch = NULL;
//
//	if ( ! pFnOnPrimaryPlayerSwitch )
//		pFnOnPrimaryPlayerSwitch = (UFunction*) UObject::GObjObjects()->Data[ 49666 ];
//
//	UGameViewportClient_X_execOnPrimaryPlayerSwitch_Parms OnPrimaryPlayerSwitch_Parms;
//	OnPrimaryPlayerSwitch_Parms.OldPrimaryPlayer = OldPrimaryPlayer;
//	OnPrimaryPlayerSwitch_Parms.NewPrimaryPlayer = NewPrimaryPlayer;
//
//	this->ProcessEvent ( pFnOnPrimaryPlayerSwitch, &OnPrimaryPlayerSwitch_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.ForceRemovePlayer
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class ULocalPlayer*            ExPlayer                       ( CPF_Parm )
//
//bool UGameViewportClient_X::ForceRemovePlayer ( class ULocalPlayer* ExPlayer )
//{
//	static UFunction* pFnForceRemovePlayer = NULL;
//
//	if ( ! pFnForceRemovePlayer )
//		pFnForceRemovePlayer = (UFunction*) UObject::GObjObjects()->Data[ 49669 ];
//
//	UGameViewportClient_X_execForceRemovePlayer_Parms ForceRemovePlayer_Parms;
//	ForceRemovePlayer_Parms.ExPlayer = ExPlayer;
//
//	this->ProcessEvent ( pFnForceRemovePlayer, &ForceRemovePlayer_Parms, NULL );
//
//	return ForceRemovePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.RemovePlayer
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class ULocalPlayer*            ExPlayer                       ( CPF_Parm )
//
//bool UGameViewportClient_X::eventRemovePlayer ( class ULocalPlayer* ExPlayer )
//{
//	static UFunction* pFnRemovePlayer = NULL;
//
//	if ( ! pFnRemovePlayer )
//		pFnRemovePlayer = (UFunction*) UObject::GObjObjects()->Data[ 49663 ];
//
//	UGameViewportClient_X_eventRemovePlayer_Parms RemovePlayer_Parms;
//	RemovePlayer_Parms.ExPlayer = ExPlayer;
//
//	this->ProcessEvent ( pFnRemovePlayer, &RemovePlayer_Parms, NULL );
//
//	return RemovePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.RemovePlayerByID
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ControllerId                   ( CPF_Parm )
//
//bool UGameViewportClient_X::RemovePlayerByID ( int ControllerId )
//{
//	static UFunction* pFnRemovePlayerByID = NULL;
//
//	if ( ! pFnRemovePlayerByID )
//		pFnRemovePlayerByID = (UFunction*) UObject::GObjObjects()->Data[ 49659 ];
//
//	UGameViewportClient_X_execRemovePlayerByID_Parms RemovePlayerByID_Parms;
//	RemovePlayerByID_Parms.ControllerId = ControllerId;
//
//	this->ProcessEvent ( pFnRemovePlayerByID, &RemovePlayerByID_Parms, NULL );
//
//	return RemovePlayerByID_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.SetHardwareMouseCursorVisibility
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// unsigned long                  bIsVisible                     ( CPF_Parm )
//
//void UGameViewportClient_X::eventSetHardwareMouseCursorVisibility ( unsigned long bIsVisible )
//{
//	static UFunction* pFnSetHardwareMouseCursorVisibility = NULL;
//
//	if ( ! pFnSetHardwareMouseCursorVisibility )
//		pFnSetHardwareMouseCursorVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49656 ];
//
//	UGameViewportClient_X_eventSetHardwareMouseCursorVisibility_Parms SetHardwareMouseCursorVisibility_Parms;
//	SetHardwareMouseCursorVisibility_Parms.bIsVisible = bIsVisible;
//
//	this->ProcessEvent ( pFnSetHardwareMouseCursorVisibility, &SetHardwareMouseCursorVisibility_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.NotifyConnectionError
//// [0x00024002] 
//// Parameters infos:
//// unsigned char                  MessageType                    ( CPF_Parm )
//// struct FString                 Message                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UGameViewportClient_X::NotifyConnectionError ( unsigned char MessageType, struct FString Message, struct FString Title )
//{
//	static UFunction* pFnNotifyConnectionError = NULL;
//
//	if ( ! pFnNotifyConnectionError )
//		pFnNotifyConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 49647 ];
//
//	UGameViewportClient_X_execNotifyConnectionError_Parms NotifyConnectionError_Parms;
//	NotifyConnectionError_Parms.MessageType = MessageType;
//	memcpy ( &NotifyConnectionError_Parms.Message, &Message, 0xC );
//	memcpy ( &NotifyConnectionError_Parms.Title, &Title, 0xC );
//
//	this->ProcessEvent ( pFnNotifyConnectionError, &NotifyConnectionError_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.CreatePlayer
//// [0x00420802] ( FUNC_Event )
//// Parameters infos:
//// class ULocalPlayer*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ControllerId                   ( CPF_Parm )
//// unsigned long                  bSpawnActor                    ( CPF_Parm )
//// struct FString                 OutError                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class ULocalPlayer* UGameViewportClient_X::eventCreatePlayer ( int ControllerId, unsigned long bSpawnActor, struct FString* OutError )
//{
//	static UFunction* pFnCreatePlayer = NULL;
//
//	if ( ! pFnCreatePlayer )
//		pFnCreatePlayer = (UFunction*) UObject::GObjObjects()->Data[ 49638 ];
//
//	UGameViewportClient_X_eventCreatePlayer_Parms CreatePlayer_Parms;
//	CreatePlayer_Parms.ControllerId = ControllerId;
//	CreatePlayer_Parms.bSpawnActor = bSpawnActor;
//
//	this->ProcessEvent ( pFnCreatePlayer, &CreatePlayer_Parms, NULL );
//
//	if ( OutError )
//		memcpy ( OutError, &CreatePlayer_Parms.OutError, 0xC );
//
//	return CreatePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.NotifyPlayerRemoved
//// [0x00020002] 
//// Parameters infos:
//// int                            PlayerIndex                    ( CPF_Parm )
//// class ULocalPlayer*            RemovedPlayer                  ( CPF_Parm )
//
//void UGameViewportClient_X::NotifyPlayerRemoved ( int PlayerIndex, class ULocalPlayer* RemovedPlayer )
//{
//	static UFunction* pFnNotifyPlayerRemoved = NULL;
//
//	if ( ! pFnNotifyPlayerRemoved )
//		pFnNotifyPlayerRemoved = (UFunction*) UObject::GObjObjects()->Data[ 49635 ];
//
//	UGameViewportClient_X_execNotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;
//	NotifyPlayerRemoved_Parms.PlayerIndex = PlayerIndex;
//	NotifyPlayerRemoved_Parms.RemovedPlayer = RemovedPlayer;
//
//	this->ProcessEvent ( pFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.NotifyPlayerAdded
//// [0x00020002] 
//// Parameters infos:
//// int                            PlayerIndex                    ( CPF_Parm )
//// class ULocalPlayer*            AddedPlayer                    ( CPF_Parm )
//
//void UGameViewportClient_X::NotifyPlayerAdded ( int PlayerIndex, class ULocalPlayer* AddedPlayer )
//{
//	static UFunction* pFnNotifyPlayerAdded = NULL;
//
//	if ( ! pFnNotifyPlayerAdded )
//		pFnNotifyPlayerAdded = (UFunction*) UObject::GObjObjects()->Data[ 49631 ];
//
//	UGameViewportClient_X_execNotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;
//	NotifyPlayerAdded_Parms.PlayerIndex = PlayerIndex;
//	NotifyPlayerAdded_Parms.AddedPlayer = AddedPlayer;
//
//	this->ProcessEvent ( pFnNotifyPlayerAdded, &NotifyPlayerAdded_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.IsGameRecordingEnabled
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UGameViewportClient_X::IsGameRecordingEnabled ( )
//{
//	static UFunction* pFnIsGameRecordingEnabled = NULL;
//
//	if ( ! pFnIsGameRecordingEnabled )
//		pFnIsGameRecordingEnabled = (UFunction*) UObject::GObjObjects()->Data[ 49634 ];
//
//	UGameViewportClient_X_execIsGameRecordingEnabled_Parms IsGameRecordingEnabled_Parms;
//
//	pFnIsGameRecordingEnabled->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsGameRecordingEnabled, &IsGameRecordingEnabled_Parms, NULL );
//
//	pFnIsGameRecordingEnabled->FunctionFlags |= 0x400;
//
//	return IsGameRecordingEnabled_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.GetDefaultSafeZone
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UGameViewportClient_X::GetDefaultSafeZone ( )
//{
//	static UFunction* pFnGetDefaultSafeZone = NULL;
//
//	if ( ! pFnGetDefaultSafeZone )
//		pFnGetDefaultSafeZone = (UFunction*) UObject::GObjObjects()->Data[ 49676 ];
//
//	UGameViewportClient_X_execGetDefaultSafeZone_Parms GetDefaultSafeZone_Parms;
//
//	pFnGetDefaultSafeZone->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetDefaultSafeZone, &GetDefaultSafeZone_Parms, NULL );
//
//	pFnGetDefaultSafeZone->FunctionFlags |= 0x400;
//
//	return GetDefaultSafeZone_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.FlashWindow
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UGameViewportClient_X::FlashWindow ( )
//{
//	static UFunction* pFnFlashWindow = NULL;
//
//	if ( ! pFnFlashWindow )
//		pFnFlashWindow = (UFunction*) UObject::GObjObjects()->Data[ 49658 ];
//
//	UGameViewportClient_X_execFlashWindow_Parms FlashWindow_Parms;
//
//	pFnFlashWindow->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlashWindow, &FlashWindow_Parms, NULL );
//
//	pFnFlashWindow->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GameViewportClient_X.SaveCurrentWindowState
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UGameViewportClient_X::SaveCurrentWindowState ( )
//{
//	static UFunction* pFnSaveCurrentWindowState = NULL;
//
//	if ( ! pFnSaveCurrentWindowState )
//		pFnSaveCurrentWindowState = (UFunction*) UObject::GObjObjects()->Data[ 49630 ];
//
//	UGameViewportClient_X_execSaveCurrentWindowState_Parms SaveCurrentWindowState_Parms;
//
//	pFnSaveCurrentWindowState->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSaveCurrentWindowState, &SaveCurrentWindowState_Parms, NULL );
//
//	pFnSaveCurrentWindowState->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GameViewportClient_X.SaveWindowState
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ResX                           ( CPF_Parm | CPF_CoerceParm )
//// int                            ResY                           ( CPF_Parm | CPF_CoerceParm )
//// unsigned long                  bFullScreen                    ( CPF_Parm )
//// unsigned long                  bBorderless                    ( CPF_Parm )
//// unsigned long                  bVsync                         ( CPF_Parm )
//
//void UGameViewportClient_X::SaveWindowState ( int ResX, int ResY, unsigned long bFullScreen, unsigned long bBorderless, unsigned long bVsync )
//{
//	static UFunction* pFnSaveWindowState = NULL;
//
//	if ( ! pFnSaveWindowState )
//		pFnSaveWindowState = (UFunction*) UObject::GObjObjects()->Data[ 49624 ];
//
//	UGameViewportClient_X_execSaveWindowState_Parms SaveWindowState_Parms;
//	SaveWindowState_Parms.ResX = ResX;
//	SaveWindowState_Parms.ResY = ResY;
//	SaveWindowState_Parms.bFullScreen = bFullScreen;
//	SaveWindowState_Parms.bBorderless = bBorderless;
//	SaveWindowState_Parms.bVsync = bVsync;
//
//	pFnSaveWindowState->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSaveWindowState, &SaveWindowState_Parms, NULL );
//
//	pFnSaveWindowState->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GameViewportClient_X.GetAvailableResolutions
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FIntPoint >     Resolutions                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UGameViewportClient_X::GetAvailableResolutions ( TArray< struct FIntPoint >* Resolutions )
//{
//	static UFunction* pFnGetAvailableResolutions = NULL;
//
//	if ( ! pFnGetAvailableResolutions )
//		pFnGetAvailableResolutions = (UFunction*) UObject::GObjObjects()->Data[ 49620 ];
//
//	UGameViewportClient_X_execGetAvailableResolutions_Parms GetAvailableResolutions_Parms;
//
//	pFnGetAvailableResolutions->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetAvailableResolutions, &GetAvailableResolutions_Parms, NULL );
//
//	pFnGetAvailableResolutions->FunctionFlags |= 0x400;
//
//	if ( Resolutions )
//		memcpy ( Resolutions, &GetAvailableResolutions_Parms.Resolutions, 0xC );
//
//	return GetAvailableResolutions_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.GetAvailableResolutionsStr
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FString >       Resolutions                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UGameViewportClient_X::GetAvailableResolutionsStr ( TArray< struct FString >* Resolutions )
//{
//	static UFunction* pFnGetAvailableResolutionsStr = NULL;
//
//	if ( ! pFnGetAvailableResolutionsStr )
//		pFnGetAvailableResolutionsStr = (UFunction*) UObject::GObjObjects()->Data[ 49616 ];
//
//	UGameViewportClient_X_execGetAvailableResolutionsStr_Parms GetAvailableResolutionsStr_Parms;
//
//	pFnGetAvailableResolutionsStr->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetAvailableResolutionsStr, &GetAvailableResolutionsStr_Parms, NULL );
//
//	pFnGetAvailableResolutionsStr->FunctionFlags |= 0x400;
//
//	if ( Resolutions )
//		memcpy ( Resolutions, &GetAvailableResolutionsStr_Parms.Resolutions, 0xC );
//
//	return GetAvailableResolutionsStr_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.IsBorderlessViewport
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UGameViewportClient_X::IsBorderlessViewport ( )
//{
//	static UFunction* pFnIsBorderlessViewport = NULL;
//
//	if ( ! pFnIsBorderlessViewport )
//		pFnIsBorderlessViewport = (UFunction*) UObject::GObjObjects()->Data[ 49614 ];
//
//	UGameViewportClient_X_execIsBorderlessViewport_Parms IsBorderlessViewport_Parms;
//
//	pFnIsBorderlessViewport->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsBorderlessViewport, &IsBorderlessViewport_Parms, NULL );
//
//	pFnIsBorderlessViewport->FunctionFlags |= 0x400;
//
//	return IsBorderlessViewport_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.GetViewportSizePoint
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FIntPoint               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FIntPoint UGameViewportClient_X::GetViewportSizePoint ( )
//{
//	static UFunction* pFnGetViewportSizePoint = NULL;
//
//	if ( ! pFnGetViewportSizePoint )
//		pFnGetViewportSizePoint = (UFunction*) UObject::GObjObjects()->Data[ 49612 ];
//
//	UGameViewportClient_X_execGetViewportSizePoint_Parms GetViewportSizePoint_Parms;
//
//	pFnGetViewportSizePoint->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetViewportSizePoint, &GetViewportSizePoint_Parms, NULL );
//
//	pFnGetViewportSizePoint->FunctionFlags |= 0x400;
//
//	return GetViewportSizePoint_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.GetViewportSizeStr
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UGameViewportClient_X::GetViewportSizeStr ( )
//{
//	static UFunction* pFnGetViewportSizeStr = NULL;
//
//	if ( ! pFnGetViewportSizeStr )
//		pFnGetViewportSizeStr = (UFunction*) UObject::GObjObjects()->Data[ 49610 ];
//
//	UGameViewportClient_X_execGetViewportSizeStr_Parms GetViewportSizeStr_Parms;
//
//	pFnGetViewportSizeStr->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetViewportSizeStr, &GetViewportSizeStr_Parms, NULL );
//
//	pFnGetViewportSizeStr->FunctionFlags |= 0x400;
//
//	return GetViewportSizeStr_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.GetInstance
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UGameViewportClient_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGameViewportClient_X* UGameViewportClient_X::GetInstance ( )
//{
//	static UFunction* pFnGetInstance = NULL;
//
//	if ( ! pFnGetInstance )
//		pFnGetInstance = (UFunction*) UObject::GObjObjects()->Data[ 48850 ];
//
//	UGameViewportClient_X_execGetInstance_Parms GetInstance_Parms;
//
//	this->ProcessEvent ( pFnGetInstance, &GetInstance_Parms, NULL );
//
//	return GetInstance_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameViewportClient_X.EventPrimaryPlayerChange
//// [0x00120000] 
//// Parameters infos:
//// class ULocalPlayer*            OldPrimaryPlayer               ( CPF_Parm )
//// class ULocalPlayer*            NewPrimaryPlayer               ( CPF_Parm )
//
//void UGameViewportClient_X::EventPrimaryPlayerChange ( class ULocalPlayer* OldPrimaryPlayer, class ULocalPlayer* NewPrimaryPlayer )
//{
//	static UFunction* pFnEventPrimaryPlayerChange = NULL;
//
//	if ( ! pFnEventPrimaryPlayerChange )
//		pFnEventPrimaryPlayerChange = (UFunction*) UObject::GObjObjects()->Data[ 49595 ];
//
//	UGameViewportClient_X_execEventPrimaryPlayerChange_Parms EventPrimaryPlayerChange_Parms;
//	EventPrimaryPlayerChange_Parms.OldPrimaryPlayer = OldPrimaryPlayer;
//	EventPrimaryPlayerChange_Parms.NewPrimaryPlayer = NewPrimaryPlayer;
//
//	this->ProcessEvent ( pFnEventPrimaryPlayerChange, &EventPrimaryPlayerChange_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.EventNotifyConnectionError
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGameViewportClient_X::EventNotifyConnectionError ( struct FString Title, struct FString Message )
//{
//	static UFunction* pFnEventNotifyConnectionError = NULL;
//
//	if ( ! pFnEventNotifyConnectionError )
//		pFnEventNotifyConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 49597 ];
//
//	UGameViewportClient_X_execEventNotifyConnectionError_Parms EventNotifyConnectionError_Parms;
//	memcpy ( &EventNotifyConnectionError_Parms.Title, &Title, 0xC );
//	memcpy ( &EventNotifyConnectionError_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnEventNotifyConnectionError, &EventNotifyConnectionError_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.EventLocalPlayerLeave
//// [0x00120000] 
//// Parameters infos:
//// class ULocalPlayer*            OldPlayer                      ( CPF_Parm )
//
//void UGameViewportClient_X::EventLocalPlayerLeave ( class ULocalPlayer* OldPlayer )
//{
//	static UFunction* pFnEventLocalPlayerLeave = NULL;
//
//	if ( ! pFnEventLocalPlayerLeave )
//		pFnEventLocalPlayerLeave = (UFunction*) UObject::GObjObjects()->Data[ 49599 ];
//
//	UGameViewportClient_X_execEventLocalPlayerLeave_Parms EventLocalPlayerLeave_Parms;
//	EventLocalPlayerLeave_Parms.OldPlayer = OldPlayer;
//
//	this->ProcessEvent ( pFnEventLocalPlayerLeave, &EventLocalPlayerLeave_Parms, NULL );
//};
//
//// Function ProjectX.GameViewportClient_X.EventLocalPlayerJoin
//// [0x00120000] 
//// Parameters infos:
//// class ULocalPlayer*            NewPlayer                      ( CPF_Parm )
//
//void UGameViewportClient_X::EventLocalPlayerJoin ( class ULocalPlayer* NewPlayer )
//{
//	static UFunction* pFnEventLocalPlayerJoin = NULL;
//
//	if ( ! pFnEventLocalPlayerJoin )
//		pFnEventLocalPlayerJoin = (UFunction*) UObject::GObjObjects()->Data[ 49601 ];
//
//	UGameViewportClient_X_execEventLocalPlayerJoin_Parms EventLocalPlayerJoin_Parms;
//	EventLocalPlayerJoin_Parms.NewPlayer = NewPlayer;
//
//	this->ProcessEvent ( pFnEventLocalPlayerJoin, &EventLocalPlayerJoin_Parms, NULL );
//};
//
//// Function ProjectX.GFxDataRow_X.FlashEventObject
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGFxObject* UGFxDataRow_X::FlashEventObject ( )
//{
//	static UFunction* pFnFlashEventObject = NULL;
//
//	if ( ! pFnFlashEventObject )
//		pFnFlashEventObject = (UFunction*) UObject::GObjObjects()->Data[ 49701 ];
//
//	UGFxDataRow_X_execFlashEventObject_Parms FlashEventObject_Parms;
//
//	pFnFlashEventObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlashEventObject, &FlashEventObject_Parms, NULL );
//
//	pFnFlashEventObject->FunctionFlags |= 0x400;
//
//	return FlashEventObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataRow_X.FlashEventString
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UGFxDataRow_X::FlashEventString ( )
//{
//	static UFunction* pFnFlashEventString = NULL;
//
//	if ( ! pFnFlashEventString )
//		pFnFlashEventString = (UFunction*) UObject::GObjObjects()->Data[ 49699 ];
//
//	UGFxDataRow_X_execFlashEventString_Parms FlashEventString_Parms;
//
//	pFnFlashEventString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlashEventString, &FlashEventString_Parms, NULL );
//
//	pFnFlashEventString->FunctionFlags |= 0x400;
//
//	return FlashEventString_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataRow_X.FlashEventFloat
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UGFxDataRow_X::FlashEventFloat ( )
//{
//	static UFunction* pFnFlashEventFloat = NULL;
//
//	if ( ! pFnFlashEventFloat )
//		pFnFlashEventFloat = (UFunction*) UObject::GObjObjects()->Data[ 49697 ];
//
//	UGFxDataRow_X_execFlashEventFloat_Parms FlashEventFloat_Parms;
//
//	pFnFlashEventFloat->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlashEventFloat, &FlashEventFloat_Parms, NULL );
//
//	pFnFlashEventFloat->FunctionFlags |= 0x400;
//
//	return FlashEventFloat_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataRow_X.FlashEventInt
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UGFxDataRow_X::FlashEventInt ( )
//{
//	static UFunction* pFnFlashEventInt = NULL;
//
//	if ( ! pFnFlashEventInt )
//		pFnFlashEventInt = (UFunction*) UObject::GObjObjects()->Data[ 49695 ];
//
//	UGFxDataRow_X_execFlashEventInt_Parms FlashEventInt_Parms;
//
//	pFnFlashEventInt->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlashEventInt, &FlashEventInt_Parms, NULL );
//
//	pFnFlashEventInt->FunctionFlags |= 0x400;
//
//	return FlashEventInt_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataRow_X.FlashEventVoid
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UGFxDataRow_X::FlashEventVoid ( )
//{
//	static UFunction* pFnFlashEventVoid = NULL;
//
//	if ( ! pFnFlashEventVoid )
//		pFnFlashEventVoid = (UFunction*) UObject::GObjObjects()->Data[ 49694 ];
//
//	UGFxDataRow_X_execFlashEventVoid_Parms FlashEventVoid_Parms;
//
//	pFnFlashEventVoid->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlashEventVoid, &FlashEventVoid_Parms, NULL );
//
//	pFnFlashEventVoid->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataRow_X.SetProxy
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 InProxyObject                  ( CPF_Parm )
//
//void UGFxDataRow_X::SetProxy ( class UObject* InProxyObject )
//{
//	static UFunction* pFnSetProxy = NULL;
//
//	if ( ! pFnSetProxy )
//		pFnSetProxy = (UFunction*) UObject::GObjObjects()->Data[ 49692 ];
//
//	UGFxDataRow_X_execSetProxy_Parms SetProxy_Parms;
//	SetProxy_Parms.InProxyObject = InProxyObject;
//
//	pFnSetProxy->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetProxy, &SetProxy_Parms, NULL );
//
//	pFnSetProxy->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataRow_X.OnRemoved
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//
//void UGFxDataRow_X::eventOnRemoved ( )
//{
//	static UFunction* pFnOnRemoved = NULL;
//
//	if ( ! pFnOnRemoved )
//		pFnOnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 49691 ];
//
//	UGFxDataRow_X_eventOnRemoved_Parms OnRemoved_Parms;
//
//	this->ProcessEvent ( pFnOnRemoved, &OnRemoved_Parms, NULL );
//};
//
//// Function ProjectX.GFxDataRow_X.OnShellSet
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//
//void UGFxDataRow_X::eventOnShellSet ( )
//{
//	static UFunction* pFnOnShellSet = NULL;
//
//	if ( ! pFnOnShellSet )
//		pFnOnShellSet = (UFunction*) UObject::GObjObjects()->Data[ 49690 ];
//
//	UGFxDataRow_X_eventOnShellSet_Parms OnShellSet_Parms;
//
//	this->ProcessEvent ( pFnOnShellSet, &OnShellSet_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UGFxShell_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50072 ];
//
//	UGFxShell_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.SetMouseKeyPressed
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// unsigned long                  bPressed                       ( CPF_Parm )
//
//void UGFxShell_X::SetMouseKeyPressed ( struct FName Key, unsigned long bPressed )
//{
//	static UFunction* pFnSetMouseKeyPressed = NULL;
//
//	if ( ! pFnSetMouseKeyPressed )
//		pFnSetMouseKeyPressed = (UFunction*) UObject::GObjObjects()->Data[ 50069 ];
//
//	UGFxShell_X_execSetMouseKeyPressed_Parms SetMouseKeyPressed_Parms;
//	memcpy ( &SetMouseKeyPressed_Parms.Key, &Key, 0x8 );
//	SetMouseKeyPressed_Parms.bPressed = bPressed;
//
//	pFnSetMouseKeyPressed->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetMouseKeyPressed, &SetMouseKeyPressed_Parms, NULL );
//
//	pFnSetMouseKeyPressed->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.SetAllowAnyPlayerInput
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bAllow                         ( CPF_Parm )
//
//void UGFxShell_X::SetAllowAnyPlayerInput ( unsigned long bAllow )
//{
//	static UFunction* pFnSetAllowAnyPlayerInput = NULL;
//
//	if ( ! pFnSetAllowAnyPlayerInput )
//		pFnSetAllowAnyPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 50066 ];
//
//	UGFxShell_X_execSetAllowAnyPlayerInput_Parms SetAllowAnyPlayerInput_Parms;
//	SetAllowAnyPlayerInput_Parms.bAllow = bAllow;
//
//	this->ProcessEvent ( pFnSetAllowAnyPlayerInput, &SetAllowAnyPlayerInput_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.HandlePauseChanged
//// [0x00080002] 
//// Parameters infos:
//
//void UGFxShell_X::HandlePauseChanged ( )
//{
//	static UFunction* pFnHandlePauseChanged = NULL;
//
//	if ( ! pFnHandlePauseChanged )
//		pFnHandlePauseChanged = (UFunction*) UObject::GObjObjects()->Data[ 50065 ];
//
//	UGFxShell_X_execHandlePauseChanged_Parms HandlePauseChanged_Parms;
//
//	this->ProcessEvent ( pFnHandlePauseChanged, &HandlePauseChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.OnShowKeyboardCanceled
//// [0x10080002] 
//// Parameters infos:
//
//void UGFxShell_X::OnShowKeyboardCanceled ( )
//{
//	static UFunction* pFnOnShowKeyboardCanceled = NULL;
//
//	if ( ! pFnOnShowKeyboardCanceled )
//		pFnOnShowKeyboardCanceled = (UFunction*) UObject::GObjObjects()->Data[ 50064 ];
//
//	UGFxShell_X_execOnShowKeyboardCanceled_Parms OnShowKeyboardCanceled_Parms;
//
//	this->ProcessEvent ( pFnOnShowKeyboardCanceled, &OnShowKeyboardCanceled_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.OnShowKeyboardComplete
//// [0x10080002] 
//// Parameters infos:
//// struct FString                 NewText                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxShell_X::OnShowKeyboardComplete ( struct FString NewText )
//{
//	static UFunction* pFnOnShowKeyboardComplete = NULL;
//
//	if ( ! pFnOnShowKeyboardComplete )
//		pFnOnShowKeyboardComplete = (UFunction*) UObject::GObjObjects()->Data[ 50062 ];
//
//	UGFxShell_X_execOnShowKeyboardComplete_Parms OnShowKeyboardComplete_Parms;
//	memcpy ( &OnShowKeyboardComplete_Parms.NewText, &NewText, 0xC );
//
//	this->ProcessEvent ( pFnOnShowKeyboardComplete, &OnShowKeyboardComplete_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.HandleShowKeyboardComplete
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 NewText                        ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bCanceled                      ( CPF_Parm )
//
//void UGFxShell_X::HandleShowKeyboardComplete ( struct FString NewText, unsigned long bCanceled )
//{
//	static UFunction* pFnHandleShowKeyboardComplete = NULL;
//
//	if ( ! pFnHandleShowKeyboardComplete )
//		pFnHandleShowKeyboardComplete = (UFunction*) UObject::GObjObjects()->Data[ 50058 ];
//
//	UGFxShell_X_execHandleShowKeyboardComplete_Parms HandleShowKeyboardComplete_Parms;
//	memcpy ( &HandleShowKeyboardComplete_Parms.NewText, &NewText, 0xC );
//	HandleShowKeyboardComplete_Parms.bCanceled = bCanceled;
//
//	this->ProcessEvent ( pFnHandleShowKeyboardComplete, &HandleShowKeyboardComplete_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.PasteFromClipboard
//// [0x08020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UGFxShell_X::PasteFromClipboard ( )
//{
//	static UFunction* pFnPasteFromClipboard = NULL;
//
//	if ( ! pFnPasteFromClipboard )
//		pFnPasteFromClipboard = (UFunction*) UObject::GObjObjects()->Data[ 50061 ];
//
//	UGFxShell_X_execPasteFromClipboard_Parms PasteFromClipboard_Parms;
//
//	this->ProcessEvent ( pFnPasteFromClipboard, &PasteFromClipboard_Parms, NULL );
//
//	return PasteFromClipboard_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxShell_X.CopyToClipboard
//// [0x08020002] 
//// Parameters infos:
//// struct FString                 ClipboardText                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxShell_X::CopyToClipboard ( struct FString ClipboardText )
//{
//	static UFunction* pFnCopyToClipboard = NULL;
//
//	if ( ! pFnCopyToClipboard )
//		pFnCopyToClipboard = (UFunction*) UObject::GObjObjects()->Data[ 50076 ];
//
//	UGFxShell_X_execCopyToClipboard_Parms CopyToClipboard_Parms;
//	memcpy ( &CopyToClipboard_Parms.ClipboardText, &ClipboardText, 0xC );
//
//	this->ProcessEvent ( pFnCopyToClipboard, &CopyToClipboard_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.HideKeyboard
//// [0x08020002] 
//// Parameters infos:
//
//void UGFxShell_X::HideKeyboard ( )
//{
//	static UFunction* pFnHideKeyboard = NULL;
//
//	if ( ! pFnHideKeyboard )
//		pFnHideKeyboard = (UFunction*) UObject::GObjObjects()->Data[ 50056 ];
//
//	UGFxShell_X_execHideKeyboard_Parms HideKeyboard_Parms;
//
//	this->ProcessEvent ( pFnHideKeyboard, &HideKeyboard_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.ShowKeyboard
//// [0x08020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 TitleText                      ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 DescriptionText                ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bIsPassword                    ( CPF_Parm )
//// struct FString                 DefaultText                    ( CPF_Parm | CPF_NeedCtorLink )
//// int                            MaxLength                      ( CPF_Parm )
//
//bool UGFxShell_X::ShowKeyboard ( struct FString TitleText, struct FString DescriptionText, unsigned long bIsPassword, struct FString DefaultText, int MaxLength )
//{
//	static UFunction* pFnShowKeyboard = NULL;
//
//	if ( ! pFnShowKeyboard )
//		pFnShowKeyboard = (UFunction*) UObject::GObjObjects()->Data[ 50047 ];
//
//	UGFxShell_X_execShowKeyboard_Parms ShowKeyboard_Parms;
//	memcpy ( &ShowKeyboard_Parms.TitleText, &TitleText, 0xC );
//	memcpy ( &ShowKeyboard_Parms.DescriptionText, &DescriptionText, 0xC );
//	ShowKeyboard_Parms.bIsPassword = bIsPassword;
//	memcpy ( &ShowKeyboard_Parms.DefaultText, &DefaultText, 0xC );
//	ShowKeyboard_Parms.MaxLength = MaxLength;
//
//	this->ProcessEvent ( pFnShowKeyboard, &ShowKeyboard_Parms, NULL );
//
//	return ShowKeyboard_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxShell_X.SetGamePaused
//// [0x08020002] 
//// Parameters infos:
//// unsigned long                  bPaused                        ( CPF_Parm )
//
//void UGFxShell_X::SetGamePaused ( unsigned long bPaused )
//{
//	static UFunction* pFnSetGamePaused = NULL;
//
//	if ( ! pFnSetGamePaused )
//		pFnSetGamePaused = (UFunction*) UObject::GObjObjects()->Data[ 50045 ];
//
//	UGFxShell_X_execSetGamePaused_Parms SetGamePaused_Parms;
//	SetGamePaused_Parms.bPaused = bPaused;
//
//	this->ProcessEvent ( pFnSetGamePaused, &SetGamePaused_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.ExitToMainMenu
//// [0x08020002] 
//// Parameters infos:
//
//void UGFxShell_X::ExitToMainMenu ( )
//{
//	static UFunction* pFnExitToMainMenu = NULL;
//
//	if ( ! pFnExitToMainMenu )
//		pFnExitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 50043 ];
//
//	UGFxShell_X_execExitToMainMenu_Parms ExitToMainMenu_Parms;
//
//	this->ProcessEvent ( pFnExitToMainMenu, &ExitToMainMenu_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.ExitGame
//// [0x08020002] 
//// Parameters infos:
//
//void UGFxShell_X::ExitGame ( )
//{
//	static UFunction* pFnExitGame = NULL;
//
//	if ( ! pFnExitGame )
//		pFnExitGame = (UFunction*) UObject::GObjObjects()->Data[ 50042 ];
//
//	UGFxShell_X_execExitGame_Parms ExitGame_Parms;
//
//	this->ProcessEvent ( pFnExitGame, &ExitGame_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.HandleMovieInputCaptureChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UGFxMoviePlayer_X*       MoviePlayer                    ( CPF_Parm )
//
//void UGFxShell_X::HandleMovieInputCaptureChanged ( class UGFxMoviePlayer_X* MoviePlayer )
//{
//	static UFunction* pFnHandleMovieInputCaptureChanged = NULL;
//
//	if ( ! pFnHandleMovieInputCaptureChanged )
//		pFnHandleMovieInputCaptureChanged = (UFunction*) UObject::GObjObjects()->Data[ 50040 ];
//
//	UGFxShell_X_execHandleMovieInputCaptureChanged_Parms HandleMovieInputCaptureChanged_Parms;
//	HandleMovieInputCaptureChanged_Parms.MoviePlayer = MoviePlayer;
//
//	this->ProcessEvent ( pFnHandleMovieInputCaptureChanged, &HandleMovieInputCaptureChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.TriggerDataCallbacks
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UGFxShell_X::TriggerDataCallbacks ( )
//{
//	static UFunction* pFnTriggerDataCallbacks = NULL;
//
//	if ( ! pFnTriggerDataCallbacks )
//		pFnTriggerDataCallbacks = (UFunction*) UObject::GObjObjects()->Data[ 50039 ];
//
//	UGFxShell_X_execTriggerDataCallbacks_Parms TriggerDataCallbacks_Parms;
//
//	pFnTriggerDataCallbacks->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnTriggerDataCallbacks, &TriggerDataCallbacks_Parms, NULL );
//
//	pFnTriggerDataCallbacks->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.Tick
//// [0x00020C00] ( FUNC_Event | FUNC_Native )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UGFxShell_X::eventTick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50037 ];
//
//	UGFxShell_X_eventTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	pFnTick->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//
//	pFnTick->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.OnMovieClosed
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Movie                          ( CPF_Parm )
//
//void UGFxShell_X::eventOnMovieClosed ( class UGFxMoviePlayer_X* Movie )
//{
//	static UFunction* pFnOnMovieClosed = NULL;
//
//	if ( ! pFnOnMovieClosed )
//		pFnOnMovieClosed = (UFunction*) UObject::GObjObjects()->Data[ 50035 ];
//
//	UGFxShell_X_eventOnMovieClosed_Parms OnMovieClosed_Parms;
//	OnMovieClosed_Parms.Movie = Movie;
//
//	this->ProcessEvent ( pFnOnMovieClosed, &OnMovieClosed_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.OnMovieStarted
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Movie                          ( CPF_Parm )
//
//void UGFxShell_X::eventOnMovieStarted ( class UGFxMoviePlayer_X* Movie )
//{
//	static UFunction* pFnOnMovieStarted = NULL;
//
//	if ( ! pFnOnMovieStarted )
//		pFnOnMovieStarted = (UFunction*) UObject::GObjObjects()->Data[ 50033 ];
//
//	UGFxShell_X_eventOnMovieStarted_Parms OnMovieStarted_Parms;
//	OnMovieStarted_Parms.Movie = Movie;
//
//	this->ProcessEvent ( pFnOnMovieStarted, &OnMovieStarted_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.StopMovie
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Movie                          ( CPF_Parm )
//
//void UGFxShell_X::StopMovie ( class UGFxMoviePlayer_X* Movie )
//{
//	static UFunction* pFnStopMovie = NULL;
//
//	if ( ! pFnStopMovie )
//		pFnStopMovie = (UFunction*) UObject::GObjObjects()->Data[ 50031 ];
//
//	UGFxShell_X_execStopMovie_Parms StopMovie_Parms;
//	StopMovie_Parms.Movie = Movie;
//
//	pFnStopMovie->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStopMovie, &StopMovie_Parms, NULL );
//
//	pFnStopMovie->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.StartMovie
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Movie                          ( CPF_Parm )
//
//void UGFxShell_X::StartMovie ( class UGFxMoviePlayer_X* Movie )
//{
//	static UFunction* pFnStartMovie = NULL;
//
//	if ( ! pFnStartMovie )
//		pFnStartMovie = (UFunction*) UObject::GObjObjects()->Data[ 50029 ];
//
//	UGFxShell_X_execStartMovie_Parms StartMovie_Parms;
//	StartMovie_Parms.Movie = Movie;
//
//	pFnStartMovie->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStartMovie, &StartMovie_Parms, NULL );
//
//	pFnStartMovie->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.Stop
//// [0x00020C00] ( FUNC_Event | FUNC_Native )
//// Parameters infos:
//
//void UGFxShell_X::eventStop ( )
//{
//	static UFunction* pFnStop = NULL;
//
//	if ( ! pFnStop )
//		pFnStop = (UFunction*) UObject::GObjObjects()->Data[ 50028 ];
//
//	UGFxShell_X_eventStop_Parms Stop_Parms;
//
//	pFnStop->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStop, &Stop_Parms, NULL );
//
//	pFnStop->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.OnStart
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UGFxShell_X::eventOnStart ( )
//{
//	static UFunction* pFnOnStart = NULL;
//
//	if ( ! pFnOnStart )
//		pFnOnStart = (UFunction*) UObject::GObjObjects()->Data[ 50027 ];
//
//	UGFxShell_X_eventOnStart_Parms OnStart_Parms;
//
//	this->ProcessEvent ( pFnOnStart, &OnStart_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.Start
//// [0x00020C00] ( FUNC_Event | FUNC_Native )
//// Parameters infos:
//// class ULocalPlayer_X*          InPlayer                       ( CPF_Parm )
//
//void UGFxShell_X::eventStart ( class ULocalPlayer_X* InPlayer )
//{
//	static UFunction* pFnStart = NULL;
//
//	if ( ! pFnStart )
//		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 50025 ];
//
//	UGFxShell_X_eventStart_Parms Start_Parms;
//	Start_Parms.InPlayer = InPlayer;
//
//	pFnStart->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );
//
//	pFnStart->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxShell_X.EventReceivedInput
//// [0x00120000] 
//// Parameters infos:
//// class UGFxShell_X*             InShell                        ( CPF_Parm )
//
//void UGFxShell_X::EventReceivedInput ( class UGFxShell_X* InShell )
//{
//	static UFunction* pFnEventReceivedInput = NULL;
//
//	if ( ! pFnEventReceivedInput )
//		pFnEventReceivedInput = (UFunction*) UObject::GObjObjects()->Data[ 50011 ];
//
//	UGFxShell_X_execEventReceivedInput_Parms EventReceivedInput_Parms;
//	EventReceivedInput_Parms.InShell = InShell;
//
//	this->ProcessEvent ( pFnEventReceivedInput, &EventReceivedInput_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.EventInputTypeChanged
//// [0x00120000] 
//// Parameters infos:
//// class UGFxShell_X*             InShell                        ( CPF_Parm )
//
//void UGFxShell_X::EventInputTypeChanged ( class UGFxShell_X* InShell )
//{
//	static UFunction* pFnEventInputTypeChanged = NULL;
//
//	if ( ! pFnEventInputTypeChanged )
//		pFnEventInputTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 50012 ];
//
//	UGFxShell_X_execEventInputTypeChanged_Parms EventInputTypeChanged_Parms;
//	EventInputTypeChanged_Parms.InShell = InShell;
//
//	this->ProcessEvent ( pFnEventInputTypeChanged, &EventInputTypeChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxShell_X.EventInputCaptureChanged
//// [0x00120000] 
//// Parameters infos:
//// class UGFxShell_X*             InShell                        ( CPF_Parm )
//
//void UGFxShell_X::EventInputCaptureChanged ( class UGFxShell_X* InShell )
//{
//	static UFunction* pFnEventInputCaptureChanged = NULL;
//
//	if ( ! pFnEventInputCaptureChanged )
//		pFnEventInputCaptureChanged = (UFunction*) UObject::GObjObjects()->Data[ 50013 ];
//
//	UGFxShell_X_execEventInputCaptureChanged_Parms EventInputCaptureChanged_Parms;
//	EventInputCaptureChanged_Parms.InShell = InShell;
//
//	this->ProcessEvent ( pFnEventInputCaptureChanged, &EventInputCaptureChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxDataStore_X.ExportFakeData
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   TableName                      ( CPF_OptionalParm | CPF_Parm )
//
//void UGFxDataStore_X::ExportFakeData ( struct FName TableName )
//{
//	static UFunction* pFnExportFakeData = NULL;
//
//	if ( ! pFnExportFakeData )
//		pFnExportFakeData = (UFunction*) UObject::GObjObjects()->Data[ 49800 ];
//
//	UGFxDataStore_X_execExportFakeData_Parms ExportFakeData_Parms;
//	memcpy ( &ExportFakeData_Parms.TableName, &TableName, 0x8 );
//
//	pFnExportFakeData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnExportFakeData, &ExportFakeData_Parms, NULL );
//
//	pFnExportFakeData->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.PrintData
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   TableName                      ( CPF_OptionalParm | CPF_Parm )
//
//void UGFxDataStore_X::PrintData ( struct FName TableName )
//{
//	static UFunction* pFnPrintData = NULL;
//
//	if ( ! pFnPrintData )
//		pFnPrintData = (UFunction*) UObject::GObjObjects()->Data[ 49798 ];
//
//	UGFxDataStore_X_execPrintData_Parms PrintData_Parms;
//	memcpy ( &PrintData_Parms.TableName, &TableName, 0x8 );
//
//	pFnPrintData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnPrintData, &PrintData_Parms, NULL );
//
//	pFnPrintData->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.GetObjectRow
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UGFxDataRow_X*           O                              ( CPF_Parm )
//
//int UGFxDataStore_X::GetObjectRow ( class UGFxDataRow_X* O )
//{
//	static UFunction* pFnGetObjectRow = NULL;
//
//	if ( ! pFnGetObjectRow )
//		pFnGetObjectRow = (UFunction*) UObject::GObjObjects()->Data[ 49795 ];
//
//	UGFxDataStore_X_execGetObjectRow_Parms GetObjectRow_Parms;
//	GetObjectRow_Parms.O = O;
//
//	pFnGetObjectRow->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetObjectRow, &GetObjectRow_Parms, NULL );
//
//	pFnGetObjectRow->FunctionFlags |= 0x400;
//
//	return GetObjectRow_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataStore_X.AllObjects
//// [0x00424405] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UClass*                  ObjClass                       ( CPF_Parm )
//// class UGFxDataRow_X*           OutObject                      ( CPF_Parm | CPF_OutParm )
//// int                            Row                            ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//void UGFxDataStore_X::AllObjects ( class UClass* ObjClass, class UGFxDataRow_X** OutObject, int* Row )
//{
//	static UFunction* pFnAllObjects = NULL;
//
//	if ( ! pFnAllObjects )
//		pFnAllObjects = (UFunction*) UObject::GObjObjects()->Data[ 49791 ];
//
//	UGFxDataStore_X_execAllObjects_Parms AllObjects_Parms;
//	AllObjects_Parms.ObjClass = ObjClass;
//
//	pFnAllObjects->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAllObjects, &AllObjects_Parms, NULL );
//
//	pFnAllObjects->FunctionFlags |= 0x400;
//
//	if ( OutObject )
//		*OutObject = AllObjects_Parms.OutObject;
//
//	if ( Row )
//		*Row = AllObjects_Parms.Row;
//};
//
//// Function ProjectX.GFxDataStore_X.GetObject
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UGFxDataRow_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  ObjClass                       ( CPF_Parm )
//// int                            Row                            ( CPF_OptionalParm | CPF_Parm )
//
//class UGFxDataRow_X* UGFxDataStore_X::GetObject ( class UClass* ObjClass, int Row )
//{
//	static UFunction* pFnGetObject = NULL;
//
//	if ( ! pFnGetObject )
//		pFnGetObject = (UFunction*) UObject::GObjObjects()->Data[ 49787 ];
//
//	UGFxDataStore_X_execGetObject_Parms GetObject_Parms;
//	GetObject_Parms.ObjClass = ObjClass;
//	GetObject_Parms.Row = Row;
//
//	pFnGetObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetObject, &GetObject_Parms, NULL );
//
//	pFnGetObject->FunctionFlags |= 0x400;
//
//	return GetObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataStore_X.RemoveObject
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UGFxDataRow_X*           O                              ( CPF_Parm )
//
//void UGFxDataStore_X::RemoveObject ( class UGFxDataRow_X* O )
//{
//	static UFunction* pFnRemoveObject = NULL;
//
//	if ( ! pFnRemoveObject )
//		pFnRemoveObject = (UFunction*) UObject::GObjObjects()->Data[ 49785 ];
//
//	UGFxDataStore_X_execRemoveObject_Parms RemoveObject_Parms;
//	RemoveObject_Parms.O = O;
//
//	pFnRemoveObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveObject, &RemoveObject_Parms, NULL );
//
//	pFnRemoveObject->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.BindObject
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UGFxDataRow_X*           Object                         ( CPF_Parm )
//// int                            Row                            ( CPF_OptionalParm | CPF_Parm )
//
//void UGFxDataStore_X::BindObject ( class UGFxDataRow_X* Object, int Row )
//{
//	static UFunction* pFnBindObject = NULL;
//
//	if ( ! pFnBindObject )
//		pFnBindObject = (UFunction*) UObject::GObjObjects()->Data[ 49782 ];
//
//	UGFxDataStore_X_execBindObject_Parms BindObject_Parms;
//	BindObject_Parms.Object = Object;
//	BindObject_Parms.Row = Row;
//
//	pFnBindObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBindObject, &BindObject_Parms, NULL );
//
//	pFnBindObject->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.CreateObject
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UGFxDataRow_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  ObjClass                       ( CPF_Parm )
//// int                            Row                            ( CPF_OptionalParm | CPF_Parm )
//
//class UGFxDataRow_X* UGFxDataStore_X::CreateObject ( class UClass* ObjClass, int Row )
//{
//	static UFunction* pFnCreateObject = NULL;
//
//	if ( ! pFnCreateObject )
//		pFnCreateObject = (UFunction*) UObject::GObjObjects()->Data[ 49777 ];
//
//	UGFxDataStore_X_execCreateObject_Parms CreateObject_Parms;
//	CreateObject_Parms.ObjClass = ObjClass;
//	CreateObject_Parms.Row = Row;
//
//	pFnCreateObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCreateObject, &CreateObject_Parms, NULL );
//
//	pFnCreateObject->FunctionFlags |= 0x400;
//
//	return CreateObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataStore_X.RemoveAllObjects
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UClass*                  ObjClass                       ( CPF_Parm )
//
//void UGFxDataStore_X::RemoveAllObjects ( class UClass* ObjClass )
//{
//	static UFunction* pFnRemoveAllObjects = NULL;
//
//	if ( ! pFnRemoveAllObjects )
//		pFnRemoveAllObjects = (UFunction*) UObject::GObjObjects()->Data[ 49781 ];
//
//	UGFxDataStore_X_execRemoveAllObjects_Parms RemoveAllObjects_Parms;
//	RemoveAllObjects_Parms.ObjClass = ObjClass;
//
//	pFnRemoveAllObjects->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveAllObjects, &RemoveAllObjects_Parms, NULL );
//
//	pFnRemoveAllObjects->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetObjectCount
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UClass*                  ObjClass                       ( CPF_Parm )
//// int                            Count                          ( CPF_Parm )
//
//void UGFxDataStore_X::SetObjectCount ( class UClass* ObjClass, int Count )
//{
//	static UFunction* pFnSetObjectCount = NULL;
//
//	if ( ! pFnSetObjectCount )
//		pFnSetObjectCount = (UFunction*) UObject::GObjObjects()->Data[ 49802 ];
//
//	UGFxDataStore_X_execSetObjectCount_Parms SetObjectCount_Parms;
//	SetObjectCount_Parms.ObjClass = ObjClass;
//	SetObjectCount_Parms.Count = Count;
//
//	pFnSetObjectCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetObjectCount, &SetObjectCount_Parms, NULL );
//
//	pFnSetObjectCount->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.GetObjectCount
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UClass*                  ObjClass                       ( CPF_Parm )
//
//int UGFxDataStore_X::GetObjectCount ( class UClass* ObjClass )
//{
//	static UFunction* pFnGetObjectCount = NULL;
//
//	if ( ! pFnGetObjectCount )
//		pFnGetObjectCount = (UFunction*) UObject::GObjObjects()->Data[ 49804 ];
//
//	UGFxDataStore_X_execGetObjectCount_Parms GetObjectCount_Parms;
//	GetObjectCount_Parms.ObjClass = ObjClass;
//
//	pFnGetObjectCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetObjectCount, &GetObjectCount_Parms, NULL );
//
//	pFnGetObjectCount->FunctionFlags |= 0x400;
//
//	return GetObjectCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataStore_X.EmptyTables
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UGFxDataStore_X::EmptyTables ( )
//{
//	static UFunction* pFnEmptyTables = NULL;
//
//	if ( ! pFnEmptyTables )
//		pFnEmptyTables = (UFunction*) UObject::GObjObjects()->Data[ 49807 ];
//
//	UGFxDataStore_X_execEmptyTables_Parms EmptyTables_Parms;
//
//	pFnEmptyTables->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnEmptyTables, &EmptyTables_Parms, NULL );
//
//	pFnEmptyTables->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.EmptyTable
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//
//void UGFxDataStore_X::EmptyTable ( struct FName Table )
//{
//	static UFunction* pFnEmptyTable = NULL;
//
//	if ( ! pFnEmptyTable )
//		pFnEmptyTable = (UFunction*) UObject::GObjObjects()->Data[ 49775 ];
//
//	UGFxDataStore_X_execEmptyTable_Parms EmptyTable_Parms;
//	memcpy ( &EmptyTable_Parms.Table, &Table, 0x8 );
//
//	pFnEmptyTable->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnEmptyTable, &EmptyTable_Parms, NULL );
//
//	pFnEmptyTable->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.RemoveRow
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//
//void UGFxDataStore_X::RemoveRow ( struct FName Table, int Row )
//{
//	static UFunction* pFnRemoveRow = NULL;
//
//	if ( ! pFnRemoveRow )
//		pFnRemoveRow = (UFunction*) UObject::GObjObjects()->Data[ 49771 ];
//
//	UGFxDataStore_X_execRemoveRow_Parms RemoveRow_Parms;
//	memcpy ( &RemoveRow_Parms.Table, &Table, 0x8 );
//	RemoveRow_Parms.Row = Row;
//
//	pFnRemoveRow->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveRow, &RemoveRow_Parms, NULL );
//
//	pFnRemoveRow->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetRowCount
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Count                          ( CPF_Parm )
//
//void UGFxDataStore_X::SetRowCount ( struct FName Table, int Count )
//{
//	static UFunction* pFnSetRowCount = NULL;
//
//	if ( ! pFnSetRowCount )
//		pFnSetRowCount = (UFunction*) UObject::GObjObjects()->Data[ 49774 ];
//
//	UGFxDataStore_X_execSetRowCount_Parms SetRowCount_Parms;
//	memcpy ( &SetRowCount_Parms.Table, &Table, 0x8 );
//	SetRowCount_Parms.Count = Count;
//
//	pFnSetRowCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetRowCount, &SetRowCount_Parms, NULL );
//
//	pFnSetRowCount->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.GetRowCount
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Table                          ( CPF_Parm )
//
//int UGFxDataStore_X::GetRowCount ( struct FName Table )
//{
//	static UFunction* pFnGetRowCount = NULL;
//
//	if ( ! pFnGetRowCount )
//		pFnGetRowCount = (UFunction*) UObject::GObjObjects()->Data[ 49768 ];
//
//	UGFxDataStore_X_execGetRowCount_Parms GetRowCount_Parms;
//	memcpy ( &GetRowCount_Parms.Table, &Table, 0x8 );
//
//	pFnGetRowCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetRowCount, &GetRowCount_Parms, NULL );
//
//	pFnGetRowCount->FunctionFlags |= 0x400;
//
//	return GetRowCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataStore_X.GetValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FASValue                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//
//struct FASValue UGFxDataStore_X::GetValue ( struct FName Table, int Row, struct FName Column )
//{
//	static UFunction* pFnGetValue = NULL;
//
//	if ( ! pFnGetValue )
//		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 49763 ];
//
//	UGFxDataStore_X_execGetValue_Parms GetValue_Parms;
//	memcpy ( &GetValue_Parms.Table, &Table, 0x8 );
//	GetValue_Parms.Row = Row;
//	memcpy ( &GetValue_Parms.Column, &Column, 0x8 );
//
//	pFnGetValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );
//
//	pFnGetValue->FunctionFlags |= 0x400;
//
//	return GetValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxDataStore_X.SetASValue
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//// struct FASValue                Value                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UGFxDataStore_X::SetASValue ( struct FName Table, int Row, struct FName Column, struct FASValue* Value )
//{
//	static UFunction* pFnSetASValue = NULL;
//
//	if ( ! pFnSetASValue )
//		pFnSetASValue = (UFunction*) UObject::GObjObjects()->Data[ 49758 ];
//
//	UGFxDataStore_X_execSetASValue_Parms SetASValue_Parms;
//	memcpy ( &SetASValue_Parms.Table, &Table, 0x8 );
//	SetASValue_Parms.Row = Row;
//	memcpy ( &SetASValue_Parms.Column, &Column, 0x8 );
//
//	pFnSetASValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetASValue, &SetASValue_Parms, NULL );
//
//	pFnSetASValue->FunctionFlags |= 0x400;
//
//	if ( Value )
//		memcpy ( Value, &SetASValue_Parms.Value, 0x20 );
//};
//
//// Function ProjectX.GFxDataStore_X.SetTextureValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//// class UTexture*                Value                          ( CPF_Parm )
//
//void UGFxDataStore_X::SetTextureValue ( struct FName Table, int Row, struct FName Column, class UTexture* Value )
//{
//	static UFunction* pFnSetTextureValue = NULL;
//
//	if ( ! pFnSetTextureValue )
//		pFnSetTextureValue = (UFunction*) UObject::GObjObjects()->Data[ 49753 ];
//
//	UGFxDataStore_X_execSetTextureValue_Parms SetTextureValue_Parms;
//	memcpy ( &SetTextureValue_Parms.Table, &Table, 0x8 );
//	SetTextureValue_Parms.Row = Row;
//	memcpy ( &SetTextureValue_Parms.Column, &Column, 0x8 );
//	SetTextureValue_Parms.Value = Value;
//
//	pFnSetTextureValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTextureValue, &SetTextureValue_Parms, NULL );
//
//	pFnSetTextureValue->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetStringValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxDataStore_X::SetStringValue ( struct FName Table, int Row, struct FName Column, struct FString Value )
//{
//	static UFunction* pFnSetStringValue = NULL;
//
//	if ( ! pFnSetStringValue )
//		pFnSetStringValue = (UFunction*) UObject::GObjObjects()->Data[ 49747 ];
//
//	UGFxDataStore_X_execSetStringValue_Parms SetStringValue_Parms;
//	memcpy ( &SetStringValue_Parms.Table, &Table, 0x8 );
//	SetStringValue_Parms.Row = Row;
//	memcpy ( &SetStringValue_Parms.Column, &Column, 0x8 );
//	memcpy ( &SetStringValue_Parms.Value, &Value, 0xC );
//
//	pFnSetStringValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetStringValue, &SetStringValue_Parms, NULL );
//
//	pFnSetStringValue->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetQWordValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//
//void UGFxDataStore_X::SetQWordValue ( struct FName Table, int Row, struct FName Column )
//{
//	static UFunction* pFnSetQWordValue = NULL;
//
//	if ( ! pFnSetQWordValue )
//		pFnSetQWordValue = (UFunction*) UObject::GObjObjects()->Data[ 49752 ];
//
//	UGFxDataStore_X_execSetQWordValue_Parms SetQWordValue_Parms;
//	memcpy ( &SetQWordValue_Parms.Table, &Table, 0x8 );
//	SetQWordValue_Parms.Row = Row;
//	memcpy ( &SetQWordValue_Parms.Column, &Column, 0x8 );
//
//	pFnSetQWordValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetQWordValue, &SetQWordValue_Parms, NULL );
//
//	pFnSetQWordValue->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetFloatValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//// float                          Value                          ( CPF_Parm )
//
//void UGFxDataStore_X::SetFloatValue ( struct FName Table, int Row, struct FName Column, float Value )
//{
//	static UFunction* pFnSetFloatValue = NULL;
//
//	if ( ! pFnSetFloatValue )
//		pFnSetFloatValue = (UFunction*) UObject::GObjObjects()->Data[ 49742 ];
//
//	UGFxDataStore_X_execSetFloatValue_Parms SetFloatValue_Parms;
//	memcpy ( &SetFloatValue_Parms.Table, &Table, 0x8 );
//	SetFloatValue_Parms.Row = Row;
//	memcpy ( &SetFloatValue_Parms.Column, &Column, 0x8 );
//	SetFloatValue_Parms.Value = Value;
//
//	pFnSetFloatValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetFloatValue, &SetFloatValue_Parms, NULL );
//
//	pFnSetFloatValue->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetIntValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//// int                            Value                          ( CPF_Parm )
//
//void UGFxDataStore_X::SetIntValue ( struct FName Table, int Row, struct FName Column, int Value )
//{
//	static UFunction* pFnSetIntValue = NULL;
//
//	if ( ! pFnSetIntValue )
//		pFnSetIntValue = (UFunction*) UObject::GObjObjects()->Data[ 49737 ];
//
//	UGFxDataStore_X_execSetIntValue_Parms SetIntValue_Parms;
//	memcpy ( &SetIntValue_Parms.Table, &Table, 0x8 );
//	SetIntValue_Parms.Row = Row;
//	memcpy ( &SetIntValue_Parms.Column, &Column, 0x8 );
//	SetIntValue_Parms.Value = Value;
//
//	pFnSetIntValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetIntValue, &SetIntValue_Parms, NULL );
//
//	pFnSetIntValue->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetBoolValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Table                          ( CPF_Parm )
//// int                            Row                            ( CPF_Parm )
//// struct FName                   Column                         ( CPF_Parm )
//// unsigned long                  Value                          ( CPF_Parm )
//
//void UGFxDataStore_X::SetBoolValue ( struct FName Table, int Row, struct FName Column, unsigned long Value )
//{
//	static UFunction* pFnSetBoolValue = NULL;
//
//	if ( ! pFnSetBoolValue )
//		pFnSetBoolValue = (UFunction*) UObject::GObjObjects()->Data[ 49731 ];
//
//	UGFxDataStore_X_execSetBoolValue_Parms SetBoolValue_Parms;
//	memcpy ( &SetBoolValue_Parms.Table, &Table, 0x8 );
//	SetBoolValue_Parms.Row = Row;
//	memcpy ( &SetBoolValue_Parms.Column, &Column, 0x8 );
//	SetBoolValue_Parms.Value = Value;
//
//	pFnSetBoolValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetBoolValue, &SetBoolValue_Parms, NULL );
//
//	pFnSetBoolValue->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxDataStore_X.SetDirty
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   TableName                      ( CPF_Parm )
//// int                            RowNum                         ( CPF_OptionalParm | CPF_Parm )
//// struct FName                   Value                          ( CPF_OptionalParm | CPF_Parm )
//
//void UGFxDataStore_X::SetDirty ( struct FName TableName, int RowNum, struct FName Value )
//{
//	static UFunction* pFnSetDirty = NULL;
//
//	if ( ! pFnSetDirty )
//		pFnSetDirty = (UFunction*) UObject::GObjObjects()->Data[ 49736 ];
//
//	UGFxDataStore_X_execSetDirty_Parms SetDirty_Parms;
//	memcpy ( &SetDirty_Parms.TableName, &TableName, 0x8 );
//	SetDirty_Parms.RowNum = RowNum;
//	memcpy ( &SetDirty_Parms.Value, &Value, 0x8 );
//
//	pFnSetDirty->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetDirty, &SetDirty_Parms, NULL );
//
//	pFnSetDirty->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxEngine_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UGFxEngine_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49871 ];
//
//	UGFxEngine_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.OnGameSessionEnded
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UGFxEngine_X::eventOnGameSessionEnded ( )
//{
//	static UFunction* pFnOnGameSessionEnded = NULL;
//
//	if ( ! pFnOnGameSessionEnded )
//		pFnOnGameSessionEnded = (UFunction*) UObject::GObjObjects()->Data[ 49870 ];
//
//	UGFxEngine_X_eventOnGameSessionEnded_Parms OnGameSessionEnded_Parms;
//
//	this->ProcessEvent ( pFnOnGameSessionEnded, &OnGameSessionEnded_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.GetFlashKey
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   UnrealKey                      ( CPF_Parm )
//// int                            KeyCode                        ( CPF_Parm | CPF_OutParm )
//// int                            MouseButton                    ( CPF_Parm | CPF_OutParm )
//
//void UGFxEngine_X::GetFlashKey ( struct FName UnrealKey, int* KeyCode, int* MouseButton )
//{
//	static UFunction* pFnGetFlashKey = NULL;
//
//	if ( ! pFnGetFlashKey )
//		pFnGetFlashKey = (UFunction*) UObject::GObjObjects()->Data[ 49866 ];
//
//	UGFxEngine_X_execGetFlashKey_Parms GetFlashKey_Parms;
//	memcpy ( &GetFlashKey_Parms.UnrealKey, &UnrealKey, 0x8 );
//
//	pFnGetFlashKey->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetFlashKey, &GetFlashKey_Parms, NULL );
//
//	pFnGetFlashKey->FunctionFlags |= 0x400;
//
//	if ( KeyCode )
//		*KeyCode = GetFlashKey_Parms.KeyCode;
//
//	if ( MouseButton )
//		*MouseButton = GetFlashKey_Parms.MouseButton;
//};
//
//// Function ProjectX.GFxEngine_X.UpdateHardwareMouseCursorVisibility
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UGFxEngine_X::UpdateHardwareMouseCursorVisibility ( )
//{
//	static UFunction* pFnUpdateHardwareMouseCursorVisibility = NULL;
//
//	if ( ! pFnUpdateHardwareMouseCursorVisibility )
//		pFnUpdateHardwareMouseCursorVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49865 ];
//
//	UGFxEngine_X_execUpdateHardwareMouseCursorVisibility_Parms UpdateHardwareMouseCursorVisibility_Parms;
//
//	this->ProcessEvent ( pFnUpdateHardwareMouseCursorVisibility, &UpdateHardwareMouseCursorVisibility_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.HandleShellInputTypeChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UGFxShell_X*             InShell                        ( CPF_Parm )
//
//void UGFxEngine_X::HandleShellInputTypeChanged ( class UGFxShell_X* InShell )
//{
//	static UFunction* pFnHandleShellInputTypeChanged = NULL;
//
//	if ( ! pFnHandleShellInputTypeChanged )
//		pFnHandleShellInputTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 49875 ];
//
//	UGFxEngine_X_execHandleShellInputTypeChanged_Parms HandleShellInputTypeChanged_Parms;
//	HandleShellInputTypeChanged_Parms.InShell = InShell;
//
//	this->ProcessEvent ( pFnHandleShellInputTypeChanged, &HandleShellInputTypeChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.HandleGFxEnabledChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UGameViewportClient*     GVC                            ( CPF_Parm )
//
//void UGFxEngine_X::HandleGFxEnabledChanged ( class UGameViewportClient* GVC )
//{
//	static UFunction* pFnHandleGFxEnabledChanged = NULL;
//
//	if ( ! pFnHandleGFxEnabledChanged )
//		pFnHandleGFxEnabledChanged = (UFunction*) UObject::GObjObjects()->Data[ 49883 ];
//
//	UGFxEngine_X_execHandleGFxEnabledChanged_Parms HandleGFxEnabledChanged_Parms;
//	HandleGFxEnabledChanged_Parms.GVC = GVC;
//
//	this->ProcessEvent ( pFnHandleGFxEnabledChanged, &HandleGFxEnabledChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.HandleShellInputCaptureChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UGFxShell_X*             InShell                        ( CPF_Parm )
//
//void UGFxEngine_X::HandleShellInputCaptureChanged ( class UGFxShell_X* InShell )
//{
//	static UFunction* pFnHandleShellInputCaptureChanged = NULL;
//
//	if ( ! pFnHandleShellInputCaptureChanged )
//		pFnHandleShellInputCaptureChanged = (UFunction*) UObject::GObjObjects()->Data[ 49853 ];
//
//	UGFxEngine_X_execHandleShellInputCaptureChanged_Parms HandleShellInputCaptureChanged_Parms;
//	HandleShellInputCaptureChanged_Parms.InShell = InShell;
//
//	this->ProcessEvent ( pFnHandleShellInputCaptureChanged, &HandleShellInputCaptureChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.FlushDirtyObjects
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UGFxEngine_X::FlushDirtyObjects ( )
//{
//	static UFunction* pFnFlushDirtyObjects = NULL;
//
//	if ( ! pFnFlushDirtyObjects )
//		pFnFlushDirtyObjects = (UFunction*) UObject::GObjObjects()->Data[ 49863 ];
//
//	UGFxEngine_X_execFlushDirtyObjects_Parms FlushDirtyObjects_Parms;
//
//	pFnFlushDirtyObjects->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlushDirtyObjects, &FlushDirtyObjects_Parms, NULL );
//
//	pFnFlushDirtyObjects->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxEngine_X.Tick
//// [0x00020C00] ( FUNC_Event | FUNC_Native )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UGFxEngine_X::eventTick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49861 ];
//
//	UGFxEngine_X_eventTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	pFnTick->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//
//	pFnTick->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxEngine_X.FindShell
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UGFxShell_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class ULocalPlayer_X*          ForPlayer                      ( CPF_Parm )
//
//class UGFxShell_X* UGFxEngine_X::FindShell ( class ULocalPlayer_X* ForPlayer )
//{
//	static UFunction* pFnFindShell = NULL;
//
//	if ( ! pFnFindShell )
//		pFnFindShell = (UFunction*) UObject::GObjObjects()->Data[ 49857 ];
//
//	UGFxEngine_X_execFindShell_Parms FindShell_Parms;
//	FindShell_Parms.ForPlayer = ForPlayer;
//
//	this->ProcessEvent ( pFnFindShell, &FindShell_Parms, NULL );
//
//	return FindShell_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxEngine_X.OnShellDestroyed
//// [0x00080000] 
//// Parameters infos:
//// class UGFxShell_X*             Shell                          ( CPF_Parm )
//
//void UGFxEngine_X::OnShellDestroyed ( class UGFxShell_X* Shell )
//{
//	static UFunction* pFnOnShellDestroyed = NULL;
//
//	if ( ! pFnOnShellDestroyed )
//		pFnOnShellDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 49855 ];
//
//	UGFxEngine_X_execOnShellDestroyed_Parms OnShellDestroyed_Parms;
//	OnShellDestroyed_Parms.Shell = Shell;
//
//	this->ProcessEvent ( pFnOnShellDestroyed, &OnShellDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.DestroyShell
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULocalPlayer*            ForPlayer                      ( CPF_Parm )
//
//void UGFxEngine_X::DestroyShell ( class ULocalPlayer* ForPlayer )
//{
//	static UFunction* pFnDestroyShell = NULL;
//
//	if ( ! pFnDestroyShell )
//		pFnDestroyShell = (UFunction*) UObject::GObjObjects()->Data[ 49849 ];
//
//	UGFxEngine_X_execDestroyShell_Parms DestroyShell_Parms;
//	DestroyShell_Parms.ForPlayer = ForPlayer;
//
//	this->ProcessEvent ( pFnDestroyShell, &DestroyShell_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.CreateShell
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//// class UGFxShell_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGFxShell_X* UGFxEngine_X::eventCreateShell ( )
//{
//	static UFunction* pFnCreateShell = NULL;
//
//	if ( ! pFnCreateShell )
//		pFnCreateShell = (UFunction*) UObject::GObjObjects()->Data[ 49844 ];
//
//	UGFxEngine_X_eventCreateShell_Parms CreateShell_Parms;
//
//	this->ProcessEvent ( pFnCreateShell, &CreateShell_Parms, NULL );
//
//	return CreateShell_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxEngine_X.GetShell
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UGFxShell_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class ULocalPlayer_X*          ForPlayer                      ( CPF_Parm )
//
//class UGFxShell_X* UGFxEngine_X::GetShell ( class ULocalPlayer_X* ForPlayer )
//{
//	static UFunction* pFnGetShell = NULL;
//
//	if ( ! pFnGetShell )
//		pFnGetShell = (UFunction*) UObject::GObjObjects()->Data[ 49841 ];
//
//	UGFxEngine_X_execGetShell_Parms GetShell_Parms;
//	GetShell_Parms.ForPlayer = ForPlayer;
//
//	pFnGetShell->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetShell, &GetShell_Parms, NULL );
//
//	pFnGetShell->FunctionFlags |= 0x400;
//
//	return GetShell_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxEngine_X.SetShellArchetype
//// [0x00020002] 
//// Parameters infos:
//// class UGFxShell_X*             InShellArchetype               ( CPF_Parm )
//
//void UGFxEngine_X::SetShellArchetype ( class UGFxShell_X* InShellArchetype )
//{
//	static UFunction* pFnSetShellArchetype = NULL;
//
//	if ( ! pFnSetShellArchetype )
//		pFnSetShellArchetype = (UFunction*) UObject::GObjObjects()->Data[ 49839 ];
//
//	UGFxEngine_X_execSetShellArchetype_Parms SetShellArchetype_Parms;
//	SetShellArchetype_Parms.InShellArchetype = InShellArchetype;
//
//	this->ProcessEvent ( pFnSetShellArchetype, &SetShellArchetype_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.GetInstance
//// [0x00026400] ( FUNC_Native )
//// Parameters infos:
//// class UGFxEngine_X*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  Type                           ( CPF_OptionalParm | CPF_Parm )
//
//class UGFxEngine_X* UGFxEngine_X::GetInstance ( class UClass* Type )
//{
//	static UFunction* pFnGetInstance = NULL;
//
//	if ( ! pFnGetInstance )
//		pFnGetInstance = (UFunction*) UObject::GObjObjects()->Data[ 48291 ];
//
//	UGFxEngine_X_execGetInstance_Parms GetInstance_Parms;
//	GetInstance_Parms.Type = Type;
//
//	pFnGetInstance->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetInstance, &GetInstance_Parms, NULL );
//
//	pFnGetInstance->FunctionFlags |= 0x400;
//
//	return GetInstance_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxEngine_X.EventGameSessionEnded
//// [0x00120000] 
//// Parameters infos:
//
//void UGFxEngine_X::EventGameSessionEnded ( )
//{
//	static UFunction* pFnEventGameSessionEnded = NULL;
//
//	if ( ! pFnEventGameSessionEnded )
//		pFnEventGameSessionEnded = (UFunction*) UObject::GObjObjects()->Data[ 49829 ];
//
//	UGFxEngine_X_execEventGameSessionEnded_Parms EventGameSessionEnded_Parms;
//
//	this->ProcessEvent ( pFnEventGameSessionEnded, &EventGameSessionEnded_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.EventAvailableGamepadTypeChanged
//// [0x00120000] 
//// Parameters infos:
//// class UGFxEngine_X*            Engine                         ( CPF_Parm )
//
//void UGFxEngine_X::EventAvailableGamepadTypeChanged ( class UGFxEngine_X* Engine )
//{
//	static UFunction* pFnEventAvailableGamepadTypeChanged = NULL;
//
//	if ( ! pFnEventAvailableGamepadTypeChanged )
//		pFnEventAvailableGamepadTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 49831 ];
//
//	UGFxEngine_X_execEventAvailableGamepadTypeChanged_Parms EventAvailableGamepadTypeChanged_Parms;
//	EventAvailableGamepadTypeChanged_Parms.Engine = Engine;
//
//	this->ProcessEvent ( pFnEventAvailableGamepadTypeChanged, &EventAvailableGamepadTypeChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxEngine_X.EventShellCreated
//// [0x00120000] 
//// Parameters infos:
//// class UGFxEngine_X*            Engine                         ( CPF_Parm )
//// class UGFxShell_X*             Shell                          ( CPF_Parm )
//
//void UGFxEngine_X::EventShellCreated ( class UGFxEngine_X* Engine, class UGFxShell_X* Shell )
//{
//	static UFunction* pFnEventShellCreated = NULL;
//
//	if ( ! pFnEventShellCreated )
//		pFnEventShellCreated = (UFunction*) UObject::GObjObjects()->Data[ 49837 ];
//
//	UGFxEngine_X_execEventShellCreated_Parms EventShellCreated_Parms;
//	EventShellCreated_Parms.Engine = Engine;
//	EventShellCreated_Parms.Shell = Shell;
//
//	this->ProcessEvent ( pFnEventShellCreated, &EventShellCreated_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UGFxMoviePlayer_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50007 ];
//
//	UGFxMoviePlayer_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.SetAllowAnyPlayerInput
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bAllow                         ( CPF_Parm )
//
//void UGFxMoviePlayer_X::SetAllowAnyPlayerInput ( unsigned long bAllow )
//{
//	static UFunction* pFnSetAllowAnyPlayerInput = NULL;
//
//	if ( ! pFnSetAllowAnyPlayerInput )
//		pFnSetAllowAnyPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 50005 ];
//
//	UGFxMoviePlayer_X_execSetAllowAnyPlayerInput_Parms SetAllowAnyPlayerInput_Parms;
//	SetAllowAnyPlayerInput_Parms.bAllow = bAllow;
//
//	this->ProcessEvent ( pFnSetAllowAnyPlayerInput, &SetAllowAnyPlayerInput_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.PopString
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FString >       Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UGFxMoviePlayer_X::PopString ( struct FString Value, TArray< struct FString >* Items )
//{
//	static UFunction* pFnPopString = NULL;
//
//	if ( ! pFnPopString )
//		pFnPopString = (UFunction*) UObject::GObjObjects()->Data[ 49970 ];
//
//	UGFxMoviePlayer_X_execPopString_Parms PopString_Parms;
//	memcpy ( &PopString_Parms.Value, &Value, 0xC );
//
//	this->ProcessEvent ( pFnPopString, &PopString_Parms, NULL );
//
//	if ( Items )
//		memcpy ( Items, &PopString_Parms.Items, 0xC );
//
//	return PopString_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxMoviePlayer_X.SetGlobalRTCP
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// float                          Value                          ( CPF_Parm )
//
//void UGFxMoviePlayer_X::SetGlobalRTCP ( struct FName Key, float Value )
//{
//	static UFunction* pFnSetGlobalRTCP = NULL;
//
//	if ( ! pFnSetGlobalRTCP )
//		pFnSetGlobalRTCP = (UFunction*) UObject::GObjObjects()->Data[ 49997 ];
//
//	UGFxMoviePlayer_X_execSetGlobalRTCP_Parms SetGlobalRTCP_Parms;
//	memcpy ( &SetGlobalRTCP_Parms.Key, &Key, 0x8 );
//	SetGlobalRTCP_Parms.Value = Value;
//
//	this->ProcessEvent ( pFnSetGlobalRTCP, &SetGlobalRTCP_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.StopAllSounds
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class UGFxSoundPack_X*         SoundPack                      ( CPF_Parm )
//
//void UGFxMoviePlayer_X::eventStopAllSounds ( class UGFxSoundPack_X* SoundPack )
//{
//	static UFunction* pFnStopAllSounds = NULL;
//
//	if ( ! pFnStopAllSounds )
//		pFnStopAllSounds = (UFunction*) UObject::GObjObjects()->Data[ 49994 ];
//
//	UGFxMoviePlayer_X_eventStopAllSounds_Parms StopAllSounds_Parms;
//	StopAllSounds_Parms.SoundPack = SoundPack;
//
//	this->ProcessEvent ( pFnStopAllSounds, &StopAllSounds_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.StopSound
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   EventName                      ( CPF_Parm )
//
//void UGFxMoviePlayer_X::StopSound ( struct FName EventName )
//{
//	static UFunction* pFnStopSound = NULL;
//
//	if ( ! pFnStopSound )
//		pFnStopSound = (UFunction*) UObject::GObjObjects()->Data[ 49989 ];
//
//	UGFxMoviePlayer_X_execStopSound_Parms StopSound_Parms;
//	memcpy ( &StopSound_Parms.EventName, &EventName, 0x8 );
//
//	this->ProcessEvent ( pFnStopSound, &StopSound_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.PlaySound
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   EventName                      ( CPF_Parm )
//
//void UGFxMoviePlayer_X::PlaySound ( struct FName EventName )
//{
//	static UFunction* pFnPlaySound = NULL;
//
//	if ( ! pFnPlaySound )
//		pFnPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 49984 ];
//
//	UGFxMoviePlayer_X_execPlaySound_Parms PlaySound_Parms;
//	memcpy ( &PlaySound_Parms.EventName, &EventName, 0x8 );
//
//	this->ProcessEvent ( pFnPlaySound, &PlaySound_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.PlaySoundFromTheme
//// [0x00024802] ( FUNC_Event )
//// Parameters infos:
//// struct FName                   EventName                      ( CPF_Parm )
//// struct FName                   SoundThemeName                 ( CPF_OptionalParm | CPF_Parm )
//
//void UGFxMoviePlayer_X::eventPlaySoundFromTheme ( struct FName EventName, struct FName SoundThemeName )
//{
//	static UFunction* pFnPlaySoundFromTheme = NULL;
//
//	if ( ! pFnPlaySoundFromTheme )
//		pFnPlaySoundFromTheme = (UFunction*) UObject::GObjObjects()->Data[ 49981 ];
//
//	UGFxMoviePlayer_X_eventPlaySoundFromTheme_Parms PlaySoundFromTheme_Parms;
//	memcpy ( &PlaySoundFromTheme_Parms.EventName, &EventName, 0x8 );
//	memcpy ( &PlaySoundFromTheme_Parms.SoundThemeName, &SoundThemeName, 0x8 );
//
//	this->ProcessEvent ( pFnPlaySoundFromTheme, &PlaySoundFromTheme_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.GetSoundSource
//// [0x00020002] 
//// Parameters infos:
//// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class AActor* UGFxMoviePlayer_X::GetSoundSource ( )
//{
//	static UFunction* pFnGetSoundSource = NULL;
//
//	if ( ! pFnGetSoundSource )
//		pFnGetSoundSource = (UFunction*) UObject::GObjObjects()->Data[ 49979 ];
//
//	UGFxMoviePlayer_X_execGetSoundSource_Parms GetSoundSource_Parms;
//
//	this->ProcessEvent ( pFnGetSoundSource, &GetSoundSource_Parms, NULL );
//
//	return GetSoundSource_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxMoviePlayer_X.UpdateCursorVisibility
//// [0x00080002] 
//// Parameters infos:
//
//void UGFxMoviePlayer_X::UpdateCursorVisibility ( )
//{
//	static UFunction* pFnUpdateCursorVisibility = NULL;
//
//	if ( ! pFnUpdateCursorVisibility )
//		pFnUpdateCursorVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49977 ];
//
//	UGFxMoviePlayer_X_execUpdateCursorVisibility_Parms UpdateCursorVisibility_Parms;
//
//	this->ProcessEvent ( pFnUpdateCursorVisibility, &UpdateCursorVisibility_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.SetCaptureAllInput
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// unsigned long                  bNewCaptureInput               ( CPF_Parm )
//// struct FString                 SceneName                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxMoviePlayer_X::eventSetCaptureAllInput ( unsigned long bNewCaptureInput, struct FString SceneName )
//{
//	static UFunction* pFnSetCaptureAllInput = NULL;
//
//	if ( ! pFnSetCaptureAllInput )
//		pFnSetCaptureAllInput = (UFunction*) UObject::GObjObjects()->Data[ 49974 ];
//
//	UGFxMoviePlayer_X_eventSetCaptureAllInput_Parms SetCaptureAllInput_Parms;
//	SetCaptureAllInput_Parms.bNewCaptureInput = bNewCaptureInput;
//	memcpy ( &SetCaptureAllInput_Parms.SceneName, &SceneName, 0xC );
//
//	this->ProcessEvent ( pFnSetCaptureAllInput, &SetCaptureAllInput_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.SetReceiveInput
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// unsigned long                  bNewReceiveInput               ( CPF_Parm )
//// struct FString                 SceneName                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxMoviePlayer_X::eventSetReceiveInput ( unsigned long bNewReceiveInput, struct FString SceneName )
//{
//	static UFunction* pFnSetReceiveInput = NULL;
//
//	if ( ! pFnSetReceiveInput )
//		pFnSetReceiveInput = (UFunction*) UObject::GObjObjects()->Data[ 49971 ];
//
//	UGFxMoviePlayer_X_eventSetReceiveInput_Parms SetReceiveInput_Parms;
//	SetReceiveInput_Parms.bNewReceiveInput = bNewReceiveInput;
//	memcpy ( &SetReceiveInput_Parms.SceneName, &SceneName, 0xC );
//
//	this->ProcessEvent ( pFnSetReceiveInput, &SetReceiveInput_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.SetCursorVisible
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// unsigned long                  bVisible                       ( CPF_Parm )
//// struct FString                 SceneName                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxMoviePlayer_X::eventSetCursorVisible ( unsigned long bVisible, struct FString SceneName )
//{
//	static UFunction* pFnSetCursorVisible = NULL;
//
//	if ( ! pFnSetCursorVisible )
//		pFnSetCursorVisible = (UFunction*) UObject::GObjObjects()->Data[ 49967 ];
//
//	UGFxMoviePlayer_X_eventSetCursorVisible_Parms SetCursorVisible_Parms;
//	SetCursorVisible_Parms.bVisible = bVisible;
//	memcpy ( &SetCursorVisible_Parms.SceneName, &SceneName, 0xC );
//
//	this->ProcessEvent ( pFnSetCursorVisible, &SetCursorVisible_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.InitShellHooks
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UGFxMoviePlayer_X::InitShellHooks ( )
//{
//	static UFunction* pFnInitShellHooks = NULL;
//
//	if ( ! pFnInitShellHooks )
//		pFnInitShellHooks = (UFunction*) UObject::GObjObjects()->Data[ 49966 ];
//
//	UGFxMoviePlayer_X_execInitShellHooks_Parms InitShellHooks_Parms;
//
//	pFnInitShellHooks->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitShellHooks, &InitShellHooks_Parms, NULL );
//
//	pFnInitShellHooks->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxMoviePlayer_X.InitDataHooks
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UGFxMoviePlayer_X::InitDataHooks ( )
//{
//	static UFunction* pFnInitDataHooks = NULL;
//
//	if ( ! pFnInitDataHooks )
//		pFnInitDataHooks = (UFunction*) UObject::GObjObjects()->Data[ 49965 ];
//
//	UGFxMoviePlayer_X_execInitDataHooks_Parms InitDataHooks_Parms;
//
//	pFnInitDataHooks->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitDataHooks, &InitDataHooks_Parms, NULL );
//
//	pFnInitDataHooks->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxMoviePlayer_X.OnClose
//// [0x00020C00] ( FUNC_Event | FUNC_Native )
//// Parameters infos:
//
//void UGFxMoviePlayer_X::eventOnClose ( )
//{
//	static UFunction* pFnOnClose = NULL;
//
//	if ( ! pFnOnClose )
//		pFnOnClose = (UFunction*) UObject::GObjObjects()->Data[ 49964 ];
//
//	UGFxMoviePlayer_X_eventOnClose_Parms OnClose_Parms;
//
//	pFnOnClose->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );
//
//	pFnOnClose->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.GFxMoviePlayer_X.Start
//// [0x00024C00] ( FUNC_Event | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )
//
//bool UGFxMoviePlayer_X::eventStart ( unsigned long StartPaused )
//{
//	static UFunction* pFnStart = NULL;
//
//	if ( ! pFnStart )
//		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 49961 ];
//
//	UGFxMoviePlayer_X_eventStart_Parms Start_Parms;
//	Start_Parms.StartPaused = StartPaused;
//
//	pFnStart->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );
//
//	pFnStart->FunctionFlags |= 0x400;
//
//	return Start_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxMoviePlayer_X.EventInputCaptureChanged
//// [0x00120000] 
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Player                         ( CPF_Parm )
//
//void UGFxMoviePlayer_X::EventInputCaptureChanged ( class UGFxMoviePlayer_X* Player )
//{
//	static UFunction* pFnEventInputCaptureChanged = NULL;
//
//	if ( ! pFnEventInputCaptureChanged )
//		pFnEventInputCaptureChanged = (UFunction*) UObject::GObjObjects()->Data[ 49947 ];
//
//	UGFxMoviePlayer_X_execEventInputCaptureChanged_Parms EventInputCaptureChanged_Parms;
//	EventInputCaptureChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventInputCaptureChanged, &EventInputCaptureChanged_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.EventClosed
//// [0x00120000] 
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Player                         ( CPF_Parm )
//
//void UGFxMoviePlayer_X::EventClosed ( class UGFxMoviePlayer_X* Player )
//{
//	static UFunction* pFnEventClosed = NULL;
//
//	if ( ! pFnEventClosed )
//		pFnEventClosed = (UFunction*) UObject::GObjObjects()->Data[ 49949 ];
//
//	UGFxMoviePlayer_X_execEventClosed_Parms EventClosed_Parms;
//	EventClosed_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventClosed, &EventClosed_Parms, NULL );
//};
//
//// Function ProjectX.GFxMoviePlayer_X.EventStarted
//// [0x00120000] 
//// Parameters infos:
//// class UGFxMoviePlayer_X*       Player                         ( CPF_Parm )
//
//void UGFxMoviePlayer_X::EventStarted ( class UGFxMoviePlayer_X* Player )
//{
//	static UFunction* pFnEventStarted = NULL;
//
//	if ( ! pFnEventStarted )
//		pFnEventStarted = (UFunction*) UObject::GObjObjects()->Data[ 49951 ];
//
//	UGFxMoviePlayer_X_execEventStarted_Parms EventStarted_Parms;
//	EventStarted_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventStarted, &EventStarted_Parms, NULL );
//};
//
//// Function ProjectX.GFxSoundPack_X.ToggleSound
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            Idx                            ( CPF_Parm )
//// class AActor*                  Target                         ( CPF_Parm )
//// unsigned long                  bPlay                          ( CPF_Parm )
//
//bool UGFxSoundPack_X::ToggleSound ( int Idx, class AActor* Target, unsigned long bPlay )
//{
//	static UFunction* pFnToggleSound = NULL;
//
//	if ( ! pFnToggleSound )
//		pFnToggleSound = (UFunction*) UObject::GObjObjects()->Data[ 50088 ];
//
//	UGFxSoundPack_X_execToggleSound_Parms ToggleSound_Parms;
//	ToggleSound_Parms.Idx = Idx;
//	ToggleSound_Parms.Target = Target;
//	ToggleSound_Parms.bPlay = bPlay;
//
//	this->ProcessEvent ( pFnToggleSound, &ToggleSound_Parms, NULL );
//
//	return ToggleSound_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxSoundPack_X.StopAll
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class AActor*                  Target                         ( CPF_Parm )
//
//void UGFxSoundPack_X::StopAll ( class AActor* Target )
//{
//	static UFunction* pFnStopAll = NULL;
//
//	if ( ! pFnStopAll )
//		pFnStopAll = (UFunction*) UObject::GObjObjects()->Data[ 49996 ];
//
//	UGFxSoundPack_X_execStopAll_Parms StopAll_Parms;
//	StopAll_Parms.Target = Target;
//
//	this->ProcessEvent ( pFnStopAll, &StopAll_Parms, NULL );
//};
//
//// Function ProjectX.GFxSoundPack_X.StopSound
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   SoundName                      ( CPF_Parm )
//// class AActor*                  Target                         ( CPF_Parm )
//
//bool UGFxSoundPack_X::StopSound ( struct FName SoundName, class AActor* Target )
//{
//	static UFunction* pFnStopSound = NULL;
//
//	if ( ! pFnStopSound )
//		pFnStopSound = (UFunction*) UObject::GObjObjects()->Data[ 49992 ];
//
//	UGFxSoundPack_X_execStopSound_Parms StopSound_Parms;
//	memcpy ( &StopSound_Parms.SoundName, &SoundName, 0x8 );
//	StopSound_Parms.Target = Target;
//
//	this->ProcessEvent ( pFnStopSound, &StopSound_Parms, NULL );
//
//	return StopSound_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxSoundPack_X.PlaySound
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   SoundName                      ( CPF_Parm )
//// class AActor*                  Target                         ( CPF_Parm )
//
//bool UGFxSoundPack_X::PlaySound ( struct FName SoundName, class AActor* Target )
//{
//	static UFunction* pFnPlaySound = NULL;
//
//	if ( ! pFnPlaySound )
//		pFnPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 49987 ];
//
//	UGFxSoundPack_X_execPlaySound_Parms PlaySound_Parms;
//	memcpy ( &PlaySound_Parms.SoundName, &SoundName, 0x8 );
//	PlaySound_Parms.Target = Target;
//
//	this->ProcessEvent ( pFnPlaySound, &PlaySound_Parms, NULL );
//
//	return PlaySound_Parms.ReturnValue;
//};
//
//// Function ProjectX.InterpComponent_X.DetachComponent
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UActorComponent*         Component                      ( CPF_Parm | CPF_EditInline )
//
//void UInterpComponent_X::DetachComponent ( class UActorComponent* Component )
//{
//	static UFunction* pFnDetachComponent = NULL;
//
//	if ( ! pFnDetachComponent )
//		pFnDetachComponent = (UFunction*) UObject::GObjObjects()->Data[ 50226 ];
//
//	UInterpComponent_X_execDetachComponent_Parms DetachComponent_Parms;
//	DetachComponent_Parms.Component = Component;
//
//	pFnDetachComponent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDetachComponent, &DetachComponent_Parms, NULL );
//
//	pFnDetachComponent->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.InterpComponent_X.AttachComponent
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UActorComponent*         Component                      ( CPF_Parm | CPF_EditInline )
//// struct FVector                 RelativeLocation               ( CPF_OptionalParm | CPF_Parm )
//// struct FRotator                RelativeRotation               ( CPF_OptionalParm | CPF_Parm )
//// struct FVector                 RelativeScale                  ( CPF_OptionalParm | CPF_Parm )
//
//void UInterpComponent_X::AttachComponent ( class UActorComponent* Component, struct FVector RelativeLocation, struct FRotator RelativeRotation, struct FVector RelativeScale )
//{
//	static UFunction* pFnAttachComponent = NULL;
//
//	if ( ! pFnAttachComponent )
//		pFnAttachComponent = (UFunction*) UObject::GObjObjects()->Data[ 50221 ];
//
//	UInterpComponent_X_execAttachComponent_Parms AttachComponent_Parms;
//	AttachComponent_Parms.Component = Component;
//	memcpy ( &AttachComponent_Parms.RelativeLocation, &RelativeLocation, 0xC );
//	memcpy ( &AttachComponent_Parms.RelativeRotation, &RelativeRotation, 0xC );
//	memcpy ( &AttachComponent_Parms.RelativeScale, &RelativeScale, 0xC );
//
//	pFnAttachComponent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAttachComponent, &AttachComponent_Parms, NULL );
//
//	pFnAttachComponent->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.JsonTests_X.ToJsonAndBack
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Target                         ( CPF_Parm )
//
//bool UJsonTests_X::ToJsonAndBack ( class UObject* Target )
//{
//	static UFunction* pFnToJsonAndBack = NULL;
//
//	if ( ! pFnToJsonAndBack )
//		pFnToJsonAndBack = (UFunction*) UObject::GObjObjects()->Data[ 50276 ];
//
//	UJsonTests_X_execToJsonAndBack_Parms ToJsonAndBack_Parms;
//	ToJsonAndBack_Parms.Target = Target;
//
//	pFnToJsonAndBack->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnToJsonAndBack, &ToJsonAndBack_Parms, NULL );
//
//	pFnToJsonAndBack->FunctionFlags |= 0x400;
//
//	return ToJsonAndBack_Parms.ReturnValue;
//};
//
//// Function ProjectX.JsonTests_X.RunJsonTests
//// [0x00026401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            RandomSeed                     ( CPF_OptionalParm | CPF_Parm )
//
//void UJsonTests_X::RunJsonTests ( int RandomSeed )
//{
//	static UFunction* pFnRunJsonTests = NULL;
//
//	if ( ! pFnRunJsonTests )
//		pFnRunJsonTests = (UFunction*) UObject::GObjObjects()->Data[ 50274 ];
//
//	UJsonTests_X_execRunJsonTests_Parms RunJsonTests_Parms;
//	RunJsonTests_Parms.RandomSeed = RandomSeed;
//
//	pFnRunJsonTests->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRunJsonTests, &RunJsonTests_Parms, NULL );
//
//	pFnRunJsonTests->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LanBeacon_X.BroadcastMessage
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//bool ULanBeacon_X::BroadcastMessage ( class UObject* Message )
//{
//	static UFunction* pFnBroadcastMessage = NULL;
//
//	if ( ! pFnBroadcastMessage )
//		pFnBroadcastMessage = (UFunction*) UObject::GObjObjects()->Data[ 50334 ];
//
//	ULanBeacon_X_execBroadcastMessage_Parms BroadcastMessage_Parms;
//	BroadcastMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnBroadcastMessage, &BroadcastMessage_Parms, NULL );
//
//	return BroadcastMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanBeacon_X.BroadcastData
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< unsigned char >        Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool ULanBeacon_X::BroadcastData ( TArray< unsigned char >* Data )
//{
//	static UFunction* pFnBroadcastData = NULL;
//
//	if ( ! pFnBroadcastData )
//		pFnBroadcastData = (UFunction*) UObject::GObjObjects()->Data[ 50330 ];
//
//	ULanBeacon_X_execBroadcastData_Parms BroadcastData_Parms;
//
//	pFnBroadcastData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBroadcastData, &BroadcastData_Parms, NULL );
//
//	pFnBroadcastData->FunctionFlags |= 0x400;
//
//	if ( Data )
//		memcpy ( Data, &BroadcastData_Parms.Data, 0xC );
//
//	return BroadcastData_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanBeacon_X.Stop
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void ULanBeacon_X::Stop ( )
//{
//	static UFunction* pFnStop = NULL;
//
//	if ( ! pFnStop )
//		pFnStop = (UFunction*) UObject::GObjObjects()->Data[ 50329 ];
//
//	ULanBeacon_X_execStop_Parms Stop_Parms;
//
//	pFnStop->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStop, &Stop_Parms, NULL );
//
//	pFnStop->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LanBeacon_X.Start
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  InitialState                   ( CPF_Parm )
//
//bool ULanBeacon_X::Start ( unsigned char InitialState )
//{
//	static UFunction* pFnStart = NULL;
//
//	if ( ! pFnStart )
//		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 50326 ];
//
//	ULanBeacon_X_execStart_Parms Start_Parms;
//	Start_Parms.InitialState = InitialState;
//
//	pFnStart->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );
//
//	pFnStart->FunctionFlags |= 0x400;
//
//	return Start_Parms.ReturnValue;
//};
//
//// Function ProjectX.LensFlareComponent_X.SetActorParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// class AActor*                  Value                          ( CPF_Parm )
//
//void ULensFlareComponent_X::SetActorParameter ( struct FName Key, class AActor* Value )
//{
//	static UFunction* pFnSetActorParameter = NULL;
//
//	if ( ! pFnSetActorParameter )
//		pFnSetActorParameter = (UFunction*) UObject::GObjObjects()->Data[ 50404 ];
//
//	ULensFlareComponent_X_execSetActorParameter_Parms SetActorParameter_Parms;
//	memcpy ( &SetActorParameter_Parms.Key, &Key, 0x8 );
//	SetActorParameter_Parms.Value = Value;
//
//	pFnSetActorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetActorParameter, &SetActorParameter_Parms, NULL );
//
//	pFnSetActorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LensFlareComponent_X.SetLinearColorParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FLinearColor            Value                          ( CPF_Parm )
//
//void ULensFlareComponent_X::SetLinearColorParameter ( struct FName Key, struct FLinearColor Value )
//{
//	static UFunction* pFnSetLinearColorParameter = NULL;
//
//	if ( ! pFnSetLinearColorParameter )
//		pFnSetLinearColorParameter = (UFunction*) UObject::GObjObjects()->Data[ 50401 ];
//
//	ULensFlareComponent_X_execSetLinearColorParameter_Parms SetLinearColorParameter_Parms;
//	memcpy ( &SetLinearColorParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetLinearColorParameter_Parms.Value, &Value, 0x10 );
//
//	pFnSetLinearColorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetLinearColorParameter, &SetLinearColorParameter_Parms, NULL );
//
//	pFnSetLinearColorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LensFlareComponent_X.SetVectorParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FVector                 Value                          ( CPF_Parm )
//
//void ULensFlareComponent_X::SetVectorParameter ( struct FName Key, struct FVector Value )
//{
//	static UFunction* pFnSetVectorParameter = NULL;
//
//	if ( ! pFnSetVectorParameter )
//		pFnSetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 50398 ];
//
//	ULensFlareComponent_X_execSetVectorParameter_Parms SetVectorParameter_Parms;
//	memcpy ( &SetVectorParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetVectorParameter_Parms.Value, &Value, 0xC );
//
//	pFnSetVectorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetVectorParameter, &SetVectorParameter_Parms, NULL );
//
//	pFnSetVectorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LensFlareComponent_X.SetFloatParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// float                          Value                          ( CPF_Parm )
//
//void ULensFlareComponent_X::SetFloatParameter ( struct FName Key, float Value )
//{
//	static UFunction* pFnSetFloatParameter = NULL;
//
//	if ( ! pFnSetFloatParameter )
//		pFnSetFloatParameter = (UFunction*) UObject::GObjObjects()->Data[ 50395 ];
//
//	ULensFlareComponent_X_execSetFloatParameter_Parms SetFloatParameter_Parms;
//	memcpy ( &SetFloatParameter_Parms.Key, &Key, 0x8 );
//	SetFloatParameter_Parms.Value = Value;
//
//	pFnSetFloatParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetFloatParameter, &SetFloatParameter_Parms, NULL );
//
//	pFnSetFloatParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LensFlareComponent_X.SetNameParameter
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FName                   Value                          ( CPF_Parm )
//
//void ULensFlareComponent_X::SetNameParameter ( struct FName Key, struct FName Value )
//{
//	static UFunction* pFnSetNameParameter = NULL;
//
//	if ( ! pFnSetNameParameter )
//		pFnSetNameParameter = (UFunction*) UObject::GObjObjects()->Data[ 50392 ];
//
//	ULensFlareComponent_X_execSetNameParameter_Parms SetNameParameter_Parms;
//	memcpy ( &SetNameParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetNameParameter_Parms.Value, &Value, 0x8 );
//
//	pFnSetNameParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetNameParameter, &SetNameParameter_Parms, NULL );
//
//	pFnSetNameParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LocalCache_X.HasActiveTasks
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool ULocalCache_X::HasActiveTasks ( )
//{
//	static UFunction* pFnHasActiveTasks = NULL;
//
//	if ( ! pFnHasActiveTasks )
//		pFnHasActiveTasks = (UFunction*) UObject::GObjObjects()->Data[ 55980 ];
//
//	ULocalCache_X_execHasActiveTasks_Parms HasActiveTasks_Parms;
//
//	pFnHasActiveTasks->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHasActiveTasks, &HasActiveTasks_Parms, NULL );
//
//	pFnHasActiveTasks->FunctionFlags |= 0x400;
//
//	return HasActiveTasks_Parms.ReturnValue;
//};
//
//// Function ProjectX.LocalCache_X.ExportObjectAsync
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// struct FString                 Path                           ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void ULocalCache_X::ExportObjectAsync ( class UObject* CacheObject, struct FString Path, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnExportObjectAsync = NULL;
//
//	if ( ! pFnExportObjectAsync )
//		pFnExportObjectAsync = (UFunction*) UObject::GObjObjects()->Data[ 55982 ];
//
//	ULocalCache_X_execExportObjectAsync_Parms ExportObjectAsync_Parms;
//	ExportObjectAsync_Parms.CacheObject = CacheObject;
//	memcpy ( &ExportObjectAsync_Parms.Path, &Path, 0xC );
//	memcpy ( &ExportObjectAsync_Parms.Callback, &Callback, 0x10 );
//
//	pFnExportObjectAsync->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnExportObjectAsync, &ExportObjectAsync_Parms, NULL );
//
//	pFnExportObjectAsync->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LocalCache_X.ImportObjectAsync
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// struct FString                 Path                           ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void ULocalCache_X::ImportObjectAsync ( class UObject* CacheObject, struct FString Path, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnImportObjectAsync = NULL;
//
//	if ( ! pFnImportObjectAsync )
//		pFnImportObjectAsync = (UFunction*) UObject::GObjObjects()->Data[ 55983 ];
//
//	ULocalCache_X_execImportObjectAsync_Parms ImportObjectAsync_Parms;
//	ImportObjectAsync_Parms.CacheObject = CacheObject;
//	memcpy ( &ImportObjectAsync_Parms.Path, &Path, 0xC );
//	memcpy ( &ImportObjectAsync_Parms.Callback, &Callback, 0x10 );
//
//	pFnImportObjectAsync->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnImportObjectAsync, &ImportObjectAsync_Parms, NULL );
//
//	pFnImportObjectAsync->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.LocalCache_X.ImportObject
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UError*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// struct FString                 Path                           ( CPF_Parm | CPF_NeedCtorLink )
//
//class UError* ULocalCache_X::ImportObject ( class UObject* CacheObject, struct FString Path )
//{
//	static UFunction* pFnImportObject = NULL;
//
//	if ( ! pFnImportObject )
//		pFnImportObject = (UFunction*) UObject::GObjObjects()->Data[ 55976 ];
//
//	ULocalCache_X_execImportObject_Parms ImportObject_Parms;
//	ImportObject_Parms.CacheObject = CacheObject;
//	memcpy ( &ImportObject_Parms.Path, &Path, 0xC );
//
//	pFnImportObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnImportObject, &ImportObject_Parms, NULL );
//
//	pFnImportObject->FunctionFlags |= 0x400;
//
//	return ImportObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.LocalCache_X.EventExportFinished
//// [0x00120000] 
//// Parameters infos:
//// class ULocalCache_X*           Cache                          ( CPF_Parm )
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void ULocalCache_X::EventExportFinished ( class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error )
//{
//	static UFunction* pFnEventExportFinished = NULL;
//
//	if ( ! pFnEventExportFinished )
//		pFnEventExportFinished = (UFunction*) UObject::GObjObjects()->Data[ 55959 ];
//
//	ULocalCache_X_execEventExportFinished_Parms EventExportFinished_Parms;
//	EventExportFinished_Parms.Cache = Cache;
//	EventExportFinished_Parms.CacheObject = CacheObject;
//	EventExportFinished_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventExportFinished, &EventExportFinished_Parms, NULL );
//};
//
//// Function ProjectX.LocalCache_X.EventImportFinished
//// [0x00120000] 
//// Parameters infos:
//// class ULocalCache_X*           Cache                          ( CPF_Parm )
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void ULocalCache_X::EventImportFinished ( class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error )
//{
//	static UFunction* pFnEventImportFinished = NULL;
//
//	if ( ! pFnEventImportFinished )
//		pFnEventImportFinished = (UFunction*) UObject::GObjObjects()->Data[ 55965 ];
//
//	ULocalCache_X_execEventImportFinished_Parms EventImportFinished_Parms;
//	EventImportFinished_Parms.Cache = Cache;
//	EventImportFinished_Parms.CacheObject = CacheObject;
//	EventImportFinished_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventImportFinished, &EventImportFinished_Parms, NULL );
//};
//
//// Function ProjectX.LocalPlayer_X.SpawnPlayActor
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 OutError                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool ULocalPlayer_X::SpawnPlayActor ( struct FString URL, struct FString* OutError )
//{
//	static UFunction* pFnSpawnPlayActor = NULL;
//
//	if ( ! pFnSpawnPlayActor )
//		pFnSpawnPlayActor = (UFunction*) UObject::GObjObjects()->Data[ 49645 ];
//
//	ULocalPlayer_X_execSpawnPlayActor_Parms SpawnPlayActor_Parms;
//	memcpy ( &SpawnPlayActor_Parms.URL, &URL, 0xC );
//
//	pFnSpawnPlayActor->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSpawnPlayActor, &SpawnPlayActor_Parms, NULL );
//
//	pFnSpawnPlayActor->FunctionFlags |= 0x400;
//
//	if ( OutError )
//		memcpy ( OutError, &SpawnPlayActor_Parms.OutError, 0xC );
//
//	return SpawnPlayActor_Parms.ReturnValue;
//};
//
//// Function ProjectX.LocalPlayer_X.NotifyServerConnectionOpen
//// [0x00020800] ( FUNC_Event )
//// Parameters infos:
//
//void ULocalPlayer_X::eventNotifyServerConnectionOpen ( )
//{
//	static UFunction* pFnNotifyServerConnectionOpen = NULL;
//
//	if ( ! pFnNotifyServerConnectionOpen )
//		pFnNotifyServerConnectionOpen = (UFunction*) UObject::GObjObjects()->Data[ 50412 ];
//
//	ULocalPlayer_X_eventNotifyServerConnectionOpen_Parms NotifyServerConnectionOpen_Parms;
//
//	this->ProcessEvent ( pFnNotifyServerConnectionOpen, &NotifyServerConnectionOpen_Parms, NULL );
//};
//
//// Function ProjectX.LocalPlayer_X.OnRemoved
//// [0x00020002] 
//// Parameters infos:
//
//void ULocalPlayer_X::OnRemoved ( )
//{
//	static UFunction* pFnOnRemoved = NULL;
//
//	if ( ! pFnOnRemoved )
//		pFnOnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 50411 ];
//
//	ULocalPlayer_X_execOnRemoved_Parms OnRemoved_Parms;
//
//	this->ProcessEvent ( pFnOnRemoved, &OnRemoved_Parms, NULL );
//};
//
//// Function ProjectX.LocalPlayer_X.OnCreated
//// [0x00020002] 
//// Parameters infos:
//
//void ULocalPlayer_X::OnCreated ( )
//{
//	static UFunction* pFnOnCreated = NULL;
//
//	if ( ! pFnOnCreated )
//		pFnOnCreated = (UFunction*) UObject::GObjObjects()->Data[ 50407 ];
//
//	ULocalPlayer_X_execOnCreated_Parms OnCreated_Parms;
//
//	this->ProcessEvent ( pFnOnCreated, &OnCreated_Parms, NULL );
//};
//
//// Function ProjectX.MapFlythroughProfiler_X.SetupPlayers
//// [0x00080002] 
//// Parameters infos:
//
//void AMapFlythroughProfiler_X::SetupPlayers ( )
//{
//	static UFunction* pFnSetupPlayers = NULL;
//
//	if ( ! pFnSetupPlayers )
//		pFnSetupPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50425 ];
//
//	AMapFlythroughProfiler_X_execSetupPlayers_Parms SetupPlayers_Parms;
//
//	this->ProcessEvent ( pFnSetupPlayers, &SetupPlayers_Parms, NULL );
//};
//
//// Function ProjectX.MapFlythroughProfiler_X.PostBeginPlay
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void AMapFlythroughProfiler_X::eventPostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50424 ];
//
//	AMapFlythroughProfiler_X_eventPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.MapFlythroughProfiler_X.EventFinished
//// [0x00120000] 
//// Parameters infos:
//// class AMapFlythroughProfiler_X* Profiler                       ( CPF_Parm )
//
//void AMapFlythroughProfiler_X::EventFinished ( class AMapFlythroughProfiler_X* Profiler )
//{
//	static UFunction* pFnEventFinished = NULL;
//
//	if ( ! pFnEventFinished )
//		pFnEventFinished = (UFunction*) UObject::GObjObjects()->Data[ 50416 ];
//
//	AMapFlythroughProfiler_X_execEventFinished_Parms EventFinished_Parms;
//	EventFinished_Parms.Profiler = Profiler;
//
//	this->ProcessEvent ( pFnEventFinished, &EventFinished_Parms, NULL );
//};
//
//// Function ProjectX.ObjectListComponent_X.GetCount
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UObjectListComponent_X::GetCount ( )
//{
//	static UFunction* pFnGetCount = NULL;
//
//	if ( ! pFnGetCount )
//		pFnGetCount = (UFunction*) UObject::GObjObjects()->Data[ 50502 ];
//
//	UObjectListComponent_X_execGetCount_Parms GetCount_Parms;
//
//	pFnGetCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetCount, &GetCount_Parms, NULL );
//
//	pFnGetCount->FunctionFlags |= 0x400;
//
//	return GetCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.ObjectListComponent_X.Merge
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< class UObject* >       NewList                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UObjectListComponent_X::Merge ( TArray< class UObject* > NewList )
//{
//	static UFunction* pFnMerge = NULL;
//
//	if ( ! pFnMerge )
//		pFnMerge = (UFunction*) UObject::GObjObjects()->Data[ 50499 ];
//
//	UObjectListComponent_X_execMerge_Parms Merge_Parms;
//	memcpy ( &Merge_Parms.NewList, &NewList, 0xC );
//
//	pFnMerge->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnMerge, &Merge_Parms, NULL );
//
//	pFnMerge->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ObjectListComponent_X.RemoveObject
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 NewObj                         ( CPF_Parm )
//
//void UObjectListComponent_X::RemoveObject ( class UObject* NewObj )
//{
//	static UFunction* pFnRemoveObject = NULL;
//
//	if ( ! pFnRemoveObject )
//		pFnRemoveObject = (UFunction*) UObject::GObjObjects()->Data[ 50497 ];
//
//	UObjectListComponent_X_execRemoveObject_Parms RemoveObject_Parms;
//	RemoveObject_Parms.NewObj = NewObj;
//
//	pFnRemoveObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveObject, &RemoveObject_Parms, NULL );
//
//	pFnRemoveObject->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ObjectListComponent_X.AddObject
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 NewObj                         ( CPF_Parm )
//
//void UObjectListComponent_X::AddObject ( class UObject* NewObj )
//{
//	static UFunction* pFnAddObject = NULL;
//
//	if ( ! pFnAddObject )
//		pFnAddObject = (UFunction*) UObject::GObjObjects()->Data[ 50495 ];
//
//	UObjectListComponent_X_execAddObject_Parms AddObject_Parms;
//	AddObject_Parms.NewObj = NewObj;
//
//	pFnAddObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddObject, &AddObject_Parms, NULL );
//
//	pFnAddObject->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ObjectListComponent_X.RemoveListener
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Listener                       ( CPF_Parm )
//// class UClass*                  ObjClass                       ( CPF_OptionalParm | CPF_Parm )
//
//void UObjectListComponent_X::RemoveListener ( class UObject* Listener, class UClass* ObjClass )
//{
//	static UFunction* pFnRemoveListener = NULL;
//
//	if ( ! pFnRemoveListener )
//		pFnRemoveListener = (UFunction*) UObject::GObjObjects()->Data[ 50492 ];
//
//	UObjectListComponent_X_execRemoveListener_Parms RemoveListener_Parms;
//	RemoveListener_Parms.Listener = Listener;
//	RemoveListener_Parms.ObjClass = ObjClass;
//
//	pFnRemoveListener->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveListener, &RemoveListener_Parms, NULL );
//
//	pFnRemoveListener->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ObjectListComponent_X.AddListener
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         OnAdd                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         OnRemove                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// class UClass*                  ObjClass                       ( CPF_OptionalParm | CPF_Parm )
//
//void UObjectListComponent_X::AddListener ( struct FScriptDelegate OnAdd, struct FScriptDelegate OnRemove, class UClass* ObjClass )
//{
//	static UFunction* pFnAddListener = NULL;
//
//	if ( ! pFnAddListener )
//		pFnAddListener = (UFunction*) UObject::GObjObjects()->Data[ 50488 ];
//
//	UObjectListComponent_X_execAddListener_Parms AddListener_Parms;
//	memcpy ( &AddListener_Parms.OnAdd, &OnAdd, 0x10 );
//	memcpy ( &AddListener_Parms.OnRemove, &OnRemove, 0x10 );
//	AddListener_Parms.ObjClass = ObjClass;
//
//	pFnAddListener->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddListener, &AddListener_Parms, NULL );
//
//	pFnAddListener->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ObjectListComponent_X.AllObjects
//// [0x00424405] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UClass*                  BaseClass                      ( CPF_Parm )
//// class UClass*                  InterfaceClass                 ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 Obj                            ( CPF_Parm | CPF_OutParm )
//
//void UObjectListComponent_X::AllObjects ( class UClass* BaseClass, class UClass* InterfaceClass, class UObject** Obj )
//{
//	static UFunction* pFnAllObjects = NULL;
//
//	if ( ! pFnAllObjects )
//		pFnAllObjects = (UFunction*) UObject::GObjObjects()->Data[ 50484 ];
//
//	UObjectListComponent_X_execAllObjects_Parms AllObjects_Parms;
//	AllObjects_Parms.BaseClass = BaseClass;
//	AllObjects_Parms.InterfaceClass = InterfaceClass;
//
//	pFnAllObjects->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAllObjects, &AllObjects_Parms, NULL );
//
//	pFnAllObjects->FunctionFlags |= 0x400;
//
//	if ( Obj )
//		*Obj = AllObjects_Parms.Obj;
//};
//
//// Function ProjectX.ObjectListComponent_X.ObjectListenerCallback
//// [0x00120000] 
//// Parameters infos:
//// class UObject*                 Obj                            ( CPF_Parm )
//
//void UObjectListComponent_X::ObjectListenerCallback ( class UObject* Obj )
//{
//	static UFunction* pFnObjectListenerCallback = NULL;
//
//	if ( ! pFnObjectListenerCallback )
//		pFnObjectListenerCallback = (UFunction*) UObject::GObjObjects()->Data[ 50479 ];
//
//	UObjectListComponent_X_execObjectListenerCallback_Parms ObjectListenerCallback_Parms;
//	ObjectListenerCallback_Parms.Obj = Obj;
//
//	this->ProcessEvent ( pFnObjectListenerCallback, &ObjectListenerCallback_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfig_X.UnsubscribeModifiers
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineConfig_X::UnsubscribeModifiers ( )
//{
//	static UFunction* pFnUnsubscribeModifiers = NULL;
//
//	if ( ! pFnUnsubscribeModifiers )
//		pFnUnsubscribeModifiers = (UFunction*) UObject::GObjObjects()->Data[ 50568 ];
//
//	UOnlineConfig_X_execUnsubscribeModifiers_Parms UnsubscribeModifiers_Parms;
//
//	this->ProcessEvent ( pFnUnsubscribeModifiers, &UnsubscribeModifiers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfig_X.ModifyObjects
//// [0x00884003] ( FUNC_Final )
//// Parameters infos:
//// class UClass*                  ObjClass                       ( CPF_Parm )
//// struct FScriptDelegate         ApplyCallback                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         ResetCallback                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineConfig_X::ModifyObjects ( class UClass* ObjClass, struct FScriptDelegate ApplyCallback, struct FScriptDelegate ResetCallback )
//{
//	static UFunction* pFnModifyObjects = NULL;
//
//	if ( ! pFnModifyObjects )
//		pFnModifyObjects = (UFunction*) UObject::GObjObjects()->Data[ 50569 ];
//
//	UOnlineConfig_X_execModifyObjects_Parms ModifyObjects_Parms;
//	ModifyObjects_Parms.ObjClass = ObjClass;
//	memcpy ( &ModifyObjects_Parms.ApplyCallback, &ApplyCallback, 0x10 );
//	memcpy ( &ModifyObjects_Parms.ResetCallback, &ResetCallback, 0x10 );
//
//	this->ProcessEvent ( pFnModifyObjects, &ModifyObjects_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfig_X.Undo
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineConfig_X::Undo ( )
//{
//	static UFunction* pFnUndo = NULL;
//
//	if ( ! pFnUndo )
//		pFnUndo = (UFunction*) UObject::GObjObjects()->Data[ 50576 ];
//
//	UOnlineConfig_X_execUndo_Parms Undo_Parms;
//
//	this->ProcessEvent ( pFnUndo, &Undo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfig_X.Apply
//// [0x00020000] 
//// Parameters infos:
//
//void UOnlineConfig_X::Apply ( )
//{
//	static UFunction* pFnApply = NULL;
//
//	if ( ! pFnApply )
//		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 50581 ];
//
//	UOnlineConfig_X_execApply_Parms Apply_Parms;
//
//	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
//};
//
//// Function ProjectX.CrossplayConfig_X.PlatformsShareGroup
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Platform1                      ( CPF_Parm )
//// unsigned char                  Platform2                      ( CPF_Parm )
//
//bool UCrossplayConfig_X::PlatformsShareGroup ( unsigned char Platform1, unsigned char Platform2 )
//{
//	static UFunction* pFnPlatformsShareGroup = NULL;
//
//	if ( ! pFnPlatformsShareGroup )
//		pFnPlatformsShareGroup = (UFunction*) UObject::GObjObjects()->Data[ 53771 ];
//
//	UCrossplayConfig_X_execPlatformsShareGroup_Parms PlatformsShareGroup_Parms;
//	PlatformsShareGroup_Parms.Platform1 = Platform1;
//	PlatformsShareGroup_Parms.Platform2 = Platform2;
//
//	this->ProcessEvent ( pFnPlatformsShareGroup, &PlatformsShareGroup_Parms, NULL );
//
//	return PlatformsShareGroup_Parms.ReturnValue;
//};
//
//// Function ProjectX.PhysicsConfig_X.DisableFeature
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Feature                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPhysicsConfig_X::DisableFeature ( struct FString Feature )
//{
//	static UFunction* pFnDisableFeature = NULL;
//
//	if ( ! pFnDisableFeature )
//		pFnDisableFeature = (UFunction*) UObject::GObjObjects()->Data[ 56518 ];
//
//	UPhysicsConfig_X_execDisableFeature_Parms DisableFeature_Parms;
//	memcpy ( &DisableFeature_Parms.Feature, &Feature, 0xC );
//
//	this->ProcessEvent ( pFnDisableFeature, &DisableFeature_Parms, NULL );
//};
//
//// Function ProjectX.PhysicsConfig_X.EnableFeature
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Feature                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPhysicsConfig_X::EnableFeature ( struct FString Feature )
//{
//	static UFunction* pFnEnableFeature = NULL;
//
//	if ( ! pFnEnableFeature )
//		pFnEnableFeature = (UFunction*) UObject::GObjObjects()->Data[ 56516 ];
//
//	UPhysicsConfig_X_execEnableFeature_Parms EnableFeature_Parms;
//	memcpy ( &EnableFeature_Parms.Feature, &Feature, 0xC );
//
//	this->ProcessEvent ( pFnEnableFeature, &EnableFeature_Parms, NULL );
//};
//
//// Function ProjectX.PhysicsConfig_X.Reset
//// [0x00020002] 
//// Parameters infos:
//
//void UPhysicsConfig_X::Reset ( )
//{
//	static UFunction* pFnReset = NULL;
//
//	if ( ! pFnReset )
//		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 56515 ];
//
//	UPhysicsConfig_X_execReset_Parms Reset_Parms;
//
//	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
//};
//
//// Function ProjectX.PhysicsConfig_X.Apply
//// [0x00020002] 
//// Parameters infos:
//
//void UPhysicsConfig_X::Apply ( )
//{
//	static UFunction* pFnApply = NULL;
//
//	if ( ! pFnApply )
//		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 56514 ];
//
//	UPhysicsConfig_X_execApply_Parms Apply_Parms;
//
//	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
//};
//
//// Function ProjectX.RPCConfig_X.IsRPCDisabled
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//bool URPCConfig_X::IsRPCDisabled ( class URPC_X* RPC )
//{
//	static UFunction* pFnIsRPCDisabled = NULL;
//
//	if ( ! pFnIsRPCDisabled )
//		pFnIsRPCDisabled = (UFunction*) UObject::GObjObjects()->Data[ 57049 ];
//
//	URPCConfig_X_execIsRPCDisabled_Parms IsRPCDisabled_Parms;
//	IsRPCDisabled_Parms.RPC = RPC;
//
//	pFnIsRPCDisabled->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsRPCDisabled, &IsRPCDisabled_Parms, NULL );
//
//	pFnIsRPCDisabled->FunctionFlags |= 0x400;
//
//	return IsRPCDisabled_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSearch_X.GetStringProperty
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            PropertyId                     ( CPF_Parm )
//// struct FString                 Value                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameSearch_X::GetStringProperty ( int PropertyId, struct FString* Value )
//{
//	static UFunction* pFnGetStringProperty = NULL;
//
//	if ( ! pFnGetStringProperty )
//		pFnGetStringProperty = (UFunction*) UObject::GObjObjects()->Data[ 53862 ];
//
//	UOnlineGameSearch_X_execGetStringProperty_Parms GetStringProperty_Parms;
//	GetStringProperty_Parms.PropertyId = PropertyId;
//
//	pFnGetStringProperty->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetStringProperty, &GetStringProperty_Parms, NULL );
//
//	pFnGetStringProperty->FunctionFlags |= 0x400;
//
//	if ( Value )
//		memcpy ( Value, &GetStringProperty_Parms.Value, 0xC );
//
//	return GetStringProperty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSearch_X.GetExclusiveGameTags
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameSearch_X::eventGetExclusiveGameTags ( )
//{
//	static UFunction* pFnGetExclusiveGameTags = NULL;
//
//	if ( ! pFnGetExclusiveGameTags )
//		pFnGetExclusiveGameTags = (UFunction*) UObject::GObjObjects()->Data[ 53860 ];
//
//	UOnlineGameSearch_X_eventGetExclusiveGameTags_Parms GetExclusiveGameTags_Parms;
//
//	this->ProcessEvent ( pFnGetExclusiveGameTags, &GetExclusiveGameTags_Parms, NULL );
//
//	return GetExclusiveGameTags_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSearch_X.GetInclusiveGameTags
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameSearch_X::eventGetInclusiveGameTags ( )
//{
//	static UFunction* pFnGetInclusiveGameTags = NULL;
//
//	if ( ! pFnGetInclusiveGameTags )
//		pFnGetInclusiveGameTags = (UFunction*) UObject::GObjObjects()->Data[ 53858 ];
//
//	UOnlineGameSearch_X_eventGetInclusiveGameTags_Parms GetInclusiveGameTags_Parms;
//
//	this->ProcessEvent ( pFnGetInclusiveGameTags, &GetInclusiveGameTags_Parms, NULL );
//
//	return GetInclusiveGameTags_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSearch_X.SetMap
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 inMapName                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameSearch_X::SetMap ( struct FString inMapName )
//{
//	static UFunction* pFnSetMap = NULL;
//
//	if ( ! pFnSetMap )
//		pFnSetMap = (UFunction*) UObject::GObjObjects()->Data[ 53856 ];
//
//	UOnlineGameSearch_X_execSetMap_Parms SetMap_Parms;
//	memcpy ( &SetMap_Parms.inMapName, &inMapName, 0xC );
//
//	this->ProcessEvent ( pFnSetMap, &SetMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSearch_X.SetExclusiveGameTags
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FString >       inGameTagsArray                ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameSearch_X::SetExclusiveGameTags ( TArray< struct FString > inGameTagsArray )
//{
//	static UFunction* pFnSetExclusiveGameTags = NULL;
//
//	if ( ! pFnSetExclusiveGameTags )
//		pFnSetExclusiveGameTags = (UFunction*) UObject::GObjObjects()->Data[ 53853 ];
//
//	UOnlineGameSearch_X_execSetExclusiveGameTags_Parms SetExclusiveGameTags_Parms;
//	memcpy ( &SetExclusiveGameTags_Parms.inGameTagsArray, &inGameTagsArray, 0xC );
//
//	this->ProcessEvent ( pFnSetExclusiveGameTags, &SetExclusiveGameTags_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSearch_X.SetInclusiveGameTags
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FString >       inGameTagsArray                ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameSearch_X::SetInclusiveGameTags ( TArray< struct FString > inGameTagsArray )
//{
//	static UFunction* pFnSetInclusiveGameTags = NULL;
//
//	if ( ! pFnSetInclusiveGameTags )
//		pFnSetInclusiveGameTags = (UFunction*) UObject::GObjObjects()->Data[ 53850 ];
//
//	UOnlineGameSearch_X_execSetInclusiveGameTags_Parms SetInclusiveGameTags_Parms;
//	memcpy ( &SetInclusiveGameTags_Parms.inGameTagsArray, &inGameTagsArray, 0xC );
//
//	this->ProcessEvent ( pFnSetInclusiveGameTags, &SetInclusiveGameTags_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSettings_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameSettings_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 53992 ];
//
//	UOnlineGameSettings_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSettings_X.Equals
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UOnlineGameSettings_X*   OtherGameSettings              ( CPF_Parm )
//
//bool UOnlineGameSettings_X::Equals ( class UOnlineGameSettings_X* OtherGameSettings )
//{
//	static UFunction* pFnEquals = NULL;
//
//	if ( ! pFnEquals )
//		pFnEquals = (UFunction*) UObject::GObjObjects()->Data[ 53989 ];
//
//	UOnlineGameSettings_X_execEquals_Parms Equals_Parms;
//	Equals_Parms.OtherGameSettings = OtherGameSettings;
//
//	this->ProcessEvent ( pFnEquals, &Equals_Parms, NULL );
//
//	return Equals_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.CalculateMinAndMaxNumPlayers
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameSettings_X::CalculateMinAndMaxNumPlayers ( )
//{
//	static UFunction* pFnCalculateMinAndMaxNumPlayers = NULL;
//
//	if ( ! pFnCalculateMinAndMaxNumPlayers )
//		pFnCalculateMinAndMaxNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53980 ];
//
//	UOnlineGameSettings_X_execCalculateMinAndMaxNumPlayers_Parms CalculateMinAndMaxNumPlayers_Parms;
//
//	this->ProcessEvent ( pFnCalculateMinAndMaxNumPlayers, &CalculateMinAndMaxNumPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSettings_X.CopyFrom
//// [0x00020002] 
//// Parameters infos:
//// class UOnlineGameSettings_X*   OtherGameSettings              ( CPF_Parm )
//
//void UOnlineGameSettings_X::CopyFrom ( class UOnlineGameSettings_X* OtherGameSettings )
//{
//	static UFunction* pFnCopyFrom = NULL;
//
//	if ( ! pFnCopyFrom )
//		pFnCopyFrom = (UFunction*) UObject::GObjObjects()->Data[ 53978 ];
//
//	UOnlineGameSettings_X_execCopyFrom_Parms CopyFrom_Parms;
//	CopyFrom_Parms.OtherGameSettings = OtherGameSettings;
//
//	this->ProcessEvent ( pFnCopyFrom, &CopyFrom_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSettings_X.GetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class UGameSettingPlaylist_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGameSettingPlaylist_X* UOnlineGameSettings_X::GetPlaylist ( )
//{
//	static UFunction* pFnGetPlaylist = NULL;
//
//	if ( ! pFnGetPlaylist )
//		pFnGetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 53976 ];
//
//	UOnlineGameSettings_X_execGetPlaylist_Parms GetPlaylist_Parms;
//
//	this->ProcessEvent ( pFnGetPlaylist, &GetPlaylist_Parms, NULL );
//
//	return GetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.IsValid
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameSettings_X::IsValid ( )
//{
//	static UFunction* pFnIsValid = NULL;
//
//	if ( ! pFnIsValid )
//		pFnIsValid = (UFunction*) UObject::GObjObjects()->Data[ 53973 ];
//
//	UOnlineGameSettings_X_execIsValid_Parms IsValid_Parms;
//
//	this->ProcessEvent ( pFnIsValid, &IsValid_Parms, NULL );
//
//	return IsValid_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.RemoveMismatchedTags
//// [0x00020002] 
//// Parameters infos:
//// class UOnlineGameSettings_X*   OtherGameSettings              ( CPF_Parm )
//
//void UOnlineGameSettings_X::RemoveMismatchedTags ( class UOnlineGameSettings_X* OtherGameSettings )
//{
//	static UFunction* pFnRemoveMismatchedTags = NULL;
//
//	if ( ! pFnRemoveMismatchedTags )
//		pFnRemoveMismatchedTags = (UFunction*) UObject::GObjObjects()->Data[ 53966 ];
//
//	UOnlineGameSettings_X_execRemoveMismatchedTags_Parms RemoveMismatchedTags_Parms;
//	RemoveMismatchedTags_Parms.OtherGameSettings = OtherGameSettings;
//
//	this->ProcessEvent ( pFnRemoveMismatchedTags, &RemoveMismatchedTags_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSettings_X.GetGameSettingCategoryByName
//// [0x00020002] 
//// Parameters infos:
//// class UGameSettingCategory_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   CategoryName                   ( CPF_Parm )
//
//class UGameSettingCategory_X* UOnlineGameSettings_X::GetGameSettingCategoryByName ( struct FName CategoryName )
//{
//	static UFunction* pFnGetGameSettingCategoryByName = NULL;
//
//	if ( ! pFnGetGameSettingCategoryByName )
//		pFnGetGameSettingCategoryByName = (UFunction*) UObject::GObjObjects()->Data[ 50625 ];
//
//	UOnlineGameSettings_X_execGetGameSettingCategoryByName_Parms GetGameSettingCategoryByName_Parms;
//	memcpy ( &GetGameSettingCategoryByName_Parms.CategoryName, &CategoryName, 0x8 );
//
//	this->ProcessEvent ( pFnGetGameSettingCategoryByName, &GetGameSettingCategoryByName_Parms, NULL );
//
//	return GetGameSettingCategoryByName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.SetIntProperty
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// int                            PropertyId                     ( CPF_Parm )
//// int                            Value                          ( CPF_Parm )
//
//void UOnlineGameSettings_X::SetIntProperty ( int PropertyId, int Value )
//{
//	static UFunction* pFnSetIntProperty = NULL;
//
//	if ( ! pFnSetIntProperty )
//		pFnSetIntProperty = (UFunction*) UObject::GObjObjects()->Data[ 53961 ];
//
//	UOnlineGameSettings_X_execSetIntProperty_Parms SetIntProperty_Parms;
//	SetIntProperty_Parms.PropertyId = PropertyId;
//	SetIntProperty_Parms.Value = Value;
//
//	pFnSetIntProperty->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetIntProperty, &SetIntProperty_Parms, NULL );
//
//	pFnSetIntProperty->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineGameSettings_X.SetGameTag
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   NewGameTag                     ( CPF_Parm )
//
//void UOnlineGameSettings_X::SetGameTag ( struct FName NewGameTag )
//{
//	static UFunction* pFnSetGameTag = NULL;
//
//	if ( ! pFnSetGameTag )
//		pFnSetGameTag = (UFunction*) UObject::GObjObjects()->Data[ 53959 ];
//
//	UOnlineGameSettings_X_execSetGameTag_Parms SetGameTag_Parms;
//	memcpy ( &SetGameTag_Parms.NewGameTag, &NewGameTag, 0x8 );
//
//	pFnSetGameTag->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetGameTag, &SetGameTag_Parms, NULL );
//
//	pFnSetGameTag->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineGameSettings_X.UpdateFromURL
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class AGameInfo*               Game                           ( CPF_Parm )
//// struct FString                 URL                            ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameSettings_X::UpdateFromURL ( class AGameInfo* Game, struct FString* URL )
//{
//	static UFunction* pFnUpdateFromURL = NULL;
//
//	if ( ! pFnUpdateFromURL )
//		pFnUpdateFromURL = (UFunction*) UObject::GObjObjects()->Data[ 53956 ];
//
//	UOnlineGameSettings_X_execUpdateFromURL_Parms UpdateFromURL_Parms;
//	UpdateFromURL_Parms.Game = Game;
//
//	pFnUpdateFromURL->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUpdateFromURL, &UpdateFromURL_Parms, NULL );
//
//	pFnUpdateFromURL->FunctionFlags |= 0x400;
//
//	if ( URL )
//		memcpy ( URL, &UpdateFromURL_Parms.URL, 0xC );
//};
//
//// Function ProjectX.OnlineGameSettings_X.HasSetting
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   SettingName                    ( CPF_Parm )
//
//bool UOnlineGameSettings_X::HasSetting ( struct FName SettingName )
//{
//	static UFunction* pFnHasSetting = NULL;
//
//	if ( ! pFnHasSetting )
//		pFnHasSetting = (UFunction*) UObject::GObjObjects()->Data[ 52679 ];
//
//	UOnlineGameSettings_X_execHasSetting_Parms HasSetting_Parms;
//	memcpy ( &HasSetting_Parms.SettingName, &SettingName, 0x8 );
//
//	pFnHasSetting->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHasSetting, &HasSetting_Parms, NULL );
//
//	pFnHasSetting->FunctionFlags |= 0x400;
//
//	return HasSetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.GetActiveGameSettings
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// TArray< class UGameSetting_X* > GameSettings                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameSettings_X::GetActiveGameSettings ( TArray< class UGameSetting_X* >* GameSettings )
//{
//	static UFunction* pFnGetActiveGameSettings = NULL;
//
//	if ( ! pFnGetActiveGameSettings )
//		pFnGetActiveGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 53952 ];
//
//	UOnlineGameSettings_X_execGetActiveGameSettings_Parms GetActiveGameSettings_Parms;
//
//	pFnGetActiveGameSettings->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetActiveGameSettings, &GetActiveGameSettings_Parms, NULL );
//
//	pFnGetActiveGameSettings->FunctionFlags |= 0x400;
//
//	if ( GameSettings )
//		memcpy ( GameSettings, &GetActiveGameSettings_Parms.GameSettings, 0xC );
//};
//
//// Function ProjectX.OnlineGameSettings_X.GetGameSetting
//// [0x00424400] ( FUNC_Native )
//// Parameters infos:
//// class UGameSetting_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 SettingName                    ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// class UGameSettingCategory_X*  Category                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//class UGameSetting_X* UOnlineGameSettings_X::GetGameSetting ( struct FString SettingName, class UGameSettingCategory_X** Category )
//{
//	static UFunction* pFnGetGameSetting = NULL;
//
//	if ( ! pFnGetGameSetting )
//		pFnGetGameSetting = (UFunction*) UObject::GObjObjects()->Data[ 53948 ];
//
//	UOnlineGameSettings_X_execGetGameSetting_Parms GetGameSetting_Parms;
//	memcpy ( &GetGameSetting_Parms.SettingName, &SettingName, 0xC );
//
//	pFnGetGameSetting->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetGameSetting, &GetGameSetting_Parms, NULL );
//
//	pFnGetGameSetting->FunctionFlags |= 0x400;
//
//	if ( Category )
//		*Category = GetGameSetting_Parms.Category;
//
//	return GetGameSetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.GetGameTags
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameSettings_X::GetGameTags ( )
//{
//	static UFunction* pFnGetGameTags = NULL;
//
//	if ( ! pFnGetGameTags )
//		pFnGetGameTags = (UFunction*) UObject::GObjObjects()->Data[ 53946 ];
//
//	UOnlineGameSettings_X_execGetGameTags_Parms GetGameTags_Parms;
//
//	pFnGetGameTags->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetGameTags, &GetGameTags_Parms, NULL );
//
//	pFnGetGameTags->FunctionFlags |= 0x400;
//
//	return GetGameTags_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.GetStringProperty
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            PropertyId                     ( CPF_Parm )
//// struct FString                 Value                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameSettings_X::GetStringProperty ( int PropertyId, struct FString* Value )
//{
//	static UFunction* pFnGetStringProperty = NULL;
//
//	if ( ! pFnGetStringProperty )
//		pFnGetStringProperty = (UFunction*) UObject::GObjObjects()->Data[ 53942 ];
//
//	UOnlineGameSettings_X_execGetStringProperty_Parms GetStringProperty_Parms;
//	GetStringProperty_Parms.PropertyId = PropertyId;
//
//	pFnGetStringProperty->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetStringProperty, &GetStringProperty_Parms, NULL );
//
//	pFnGetStringProperty->FunctionFlags |= 0x400;
//
//	if ( Value )
//		memcpy ( Value, &GetStringProperty_Parms.Value, 0xC );
//
//	return GetStringProperty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSettings_X.Init
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameSettings_X::Init ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 53940 ];
//
//	UOnlineGameSettings_X_execInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSettings_X.EventNumPlayersUpdated
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameSettings_X*   GameSettings                   ( CPF_Parm )
//// int                            NewMinimumPlayersRequired      ( CPF_Parm )
//
//void UOnlineGameSettings_X::EventNumPlayersUpdated ( class UOnlineGameSettings_X* GameSettings, int NewMinimumPlayersRequired )
//{
//	static UFunction* pFnEventNumPlayersUpdated = NULL;
//
//	if ( ! pFnEventNumPlayersUpdated )
//		pFnEventNumPlayersUpdated = (UFunction*) UObject::GObjObjects()->Data[ 53933 ];
//
//	UOnlineGameSettings_X_execEventNumPlayersUpdated_Parms EventNumPlayersUpdated_Parms;
//	EventNumPlayersUpdated_Parms.GameSettings = GameSettings;
//	EventNumPlayersUpdated_Parms.NewMinimumPlayersRequired = NewMinimumPlayersRequired;
//
//	this->ProcessEvent ( pFnEventNumPlayersUpdated, &EventNumPlayersUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineLegalText_X.HandleWebText
//// [0x00080400] ( FUNC_Native )
//// Parameters infos:
//// class UCachedWebData_X*        InCachedData                   ( CPF_Parm )
//
//void UOnlineLegalText_X::HandleWebText ( class UCachedWebData_X* InCachedData )
//{
//	static UFunction* pFnHandleWebText = NULL;
//
//	if ( ! pFnHandleWebText )
//		pFnHandleWebText = (UFunction*) UObject::GObjObjects()->Data[ 50803 ];
//
//	UOnlineLegalText_X_execHandleWebText_Parms HandleWebText_Parms;
//	HandleWebText_Parms.InCachedData = InCachedData;
//
//	pFnHandleWebText->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHandleWebText, &HandleWebText_Parms, NULL );
//
//	pFnHandleWebText->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineLegalText_X.GetWebUrl
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineLegalText_X::GetWebUrl ( )
//{
//	static UFunction* pFnGetWebUrl = NULL;
//
//	if ( ! pFnGetWebUrl )
//		pFnGetWebUrl = (UFunction*) UObject::GObjObjects()->Data[ 50804 ];
//
//	UOnlineLegalText_X_execGetWebUrl_Parms GetWebUrl_Parms;
//
//	this->ProcessEvent ( pFnGetWebUrl, &GetWebUrl_Parms, NULL );
//
//	return GetWebUrl_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineLegalText_X.GetPlatformString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineLegalText_X::GetPlatformString ( )
//{
//	static UFunction* pFnGetPlatformString = NULL;
//
//	if ( ! pFnGetPlatformString )
//		pFnGetPlatformString = (UFunction*) UObject::GObjObjects()->Data[ 50806 ];
//
//	UOnlineLegalText_X_execGetPlatformString_Parms GetPlatformString_Parms;
//
//	this->ProcessEvent ( pFnGetPlatformString, &GetPlatformString_Parms, NULL );
//
//	return GetPlatformString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineLegalText_X.GetRelativeUrl
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineLegalText_X::eventGetRelativeUrl ( )
//{
//	static UFunction* pFnGetRelativeUrl = NULL;
//
//	if ( ! pFnGetRelativeUrl )
//		pFnGetRelativeUrl = (UFunction*) UObject::GObjObjects()->Data[ 50808 ];
//
//	UOnlineLegalText_X_eventGetRelativeUrl_Parms GetRelativeUrl_Parms;
//
//	this->ProcessEvent ( pFnGetRelativeUrl, &GetRelativeUrl_Parms, NULL );
//
//	return GetRelativeUrl_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineLegalText_X.GetText
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineLegalText_X::GetText ( )
//{
//	static UFunction* pFnGetText = NULL;
//
//	if ( ! pFnGetText )
//		pFnGetText = (UFunction*) UObject::GObjObjects()->Data[ 50811 ];
//
//	UOnlineLegalText_X_execGetText_Parms GetText_Parms;
//
//	pFnGetText->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetText, &GetText_Parms, NULL );
//
//	pFnGetText->FunctionFlags |= 0x400;
//
//	return GetText_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineLegalText_X.Sync
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineLegalText_X::Sync ( )
//{
//	static UFunction* pFnSync = NULL;
//
//	if ( ! pFnSync )
//		pFnSync = (UFunction*) UObject::GObjObjects()->Data[ 50817 ];
//
//	UOnlineLegalText_X_execSync_Parms Sync_Parms;
//
//	this->ProcessEvent ( pFnSync, &Sync_Parms, NULL );
//};
//
//// Function ProjectX.OnlineLegalText_X.EventNewText
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineLegalText_X*      Text                           ( CPF_Parm | CPF_EditInline )
//
//void UOnlineLegalText_X::EventNewText ( class UOnlineLegalText_X* Text )
//{
//	static UFunction* pFnEventNewText = NULL;
//
//	if ( ! pFnEventNewText )
//		pFnEventNewText = (UFunction*) UObject::GObjObjects()->Data[ 50819 ];
//
//	UOnlineLegalText_X_execEventNewText_Parms EventNewText_Parms;
//	EventNewText_Parms.Text = Text;
//
//	this->ProcessEvent ( pFnEventNewText, &EventNewText_Parms, NULL );
//};
//
//// Function ProjectX.OnlineMessageComponent_X.EnableCompression
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// unsigned long                  bEnabled                       ( CPF_Parm )
//
//class UOnlineMessageComponent_X* UOnlineMessageComponent_X::EnableCompression ( unsigned long bEnabled )
//{
//	static UFunction* pFnEnableCompression = NULL;
//
//	if ( ! pFnEnableCompression )
//		pFnEnableCompression = (UFunction*) UObject::GObjObjects()->Data[ 50310 ];
//
//	UOnlineMessageComponent_X_execEnableCompression_Parms EnableCompression_Parms;
//	EnableCompression_Parms.bEnabled = bEnabled;
//
//	this->ProcessEvent ( pFnEnableCompression, &EnableCompression_Parms, NULL );
//
//	return EnableCompression_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.SetSerializer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//// class USerializer_X*           InSerializer                   ( CPF_Parm )
//
//class UOnlineMessageComponent_X* UOnlineMessageComponent_X::SetSerializer ( class USerializer_X* InSerializer )
//{
//	static UFunction* pFnSetSerializer = NULL;
//
//	if ( ! pFnSetSerializer )
//		pFnSetSerializer = (UFunction*) UObject::GObjObjects()->Data[ 50311 ];
//
//	UOnlineMessageComponent_X_execSetSerializer_Parms SetSerializer_Parms;
//	SetSerializer_Parms.InSerializer = InSerializer;
//
//	this->ProcessEvent ( pFnSetSerializer, &SetSerializer_Parms, NULL );
//
//	return SetSerializer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.InvokeHandlers
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineMessageComponent_X::InvokeHandlers ( class UObject* Message )
//{
//	static UFunction* pFnInvokeHandlers = NULL;
//
//	if ( ! pFnInvokeHandlers )
//		pFnInvokeHandlers = (UFunction*) UObject::GObjObjects()->Data[ 50314 ];
//
//	UOnlineMessageComponent_X_execInvokeHandlers_Parms InvokeHandlers_Parms;
//	InvokeHandlers_Parms.Message = Message;
//
//	pFnInvokeHandlers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInvokeHandlers, &InvokeHandlers_Parms, NULL );
//
//	pFnInvokeHandlers->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.DeserializeMessage
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 MessageOuter                   ( CPF_Parm )
//// TArray< unsigned char >        Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UObject* UOnlineMessageComponent_X::DeserializeMessage ( class UObject* MessageOuter, TArray< unsigned char >* Data )
//{
//	static UFunction* pFnDeserializeMessage = NULL;
//
//	if ( ! pFnDeserializeMessage )
//		pFnDeserializeMessage = (UFunction*) UObject::GObjObjects()->Data[ 50305 ];
//
//	UOnlineMessageComponent_X_execDeserializeMessage_Parms DeserializeMessage_Parms;
//	DeserializeMessage_Parms.MessageOuter = MessageOuter;
//
//	pFnDeserializeMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDeserializeMessage, &DeserializeMessage_Parms, NULL );
//
//	pFnDeserializeMessage->FunctionFlags |= 0x400;
//
//	if ( Data )
//		memcpy ( Data, &DeserializeMessage_Parms.Data, 0xC );
//
//	return DeserializeMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.SerializeMessage
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Message                        ( CPF_Parm )
//// TArray< unsigned char >        OutData                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineMessageComponent_X::SerializeMessage ( class UObject* Message, TArray< unsigned char >* OutData )
//{
//	static UFunction* pFnSerializeMessage = NULL;
//
//	if ( ! pFnSerializeMessage )
//		pFnSerializeMessage = (UFunction*) UObject::GObjObjects()->Data[ 50300 ];
//
//	UOnlineMessageComponent_X_execSerializeMessage_Parms SerializeMessage_Parms;
//	SerializeMessage_Parms.Message = Message;
//
//	pFnSerializeMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSerializeMessage, &SerializeMessage_Parms, NULL );
//
//	pFnSerializeMessage->FunctionFlags |= 0x400;
//
//	if ( OutData )
//		memcpy ( OutData, &SerializeMessage_Parms.OutData, 0xC );
//
//	return SerializeMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.CreateMessage
//// [0x00024400] ( FUNC_Native )
//// Parameters infos:
//// class UOnlineMessage_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  MessageClass                   ( CPF_Parm )
//// class UObject*                 MessageOuter                   ( CPF_OptionalParm | CPF_Parm )
//
//class UOnlineMessage_X* UOnlineMessageComponent_X::CreateMessage ( class UClass* MessageClass, class UObject* MessageOuter )
//{
//	static UFunction* pFnCreateMessage = NULL;
//
//	if ( ! pFnCreateMessage )
//		pFnCreateMessage = (UFunction*) UObject::GObjObjects()->Data[ 50296 ];
//
//	UOnlineMessageComponent_X_execCreateMessage_Parms CreateMessage_Parms;
//	CreateMessage_Parms.MessageClass = MessageClass;
//	CreateMessage_Parms.MessageOuter = MessageOuter;
//
//	pFnCreateMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCreateMessage, &CreateMessage_Parms, NULL );
//
//	pFnCreateMessage->FunctionFlags |= 0x400;
//
//	return CreateMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.RemoveMessageHandler
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineMessageComponent_X::RemoveMessageHandler ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnRemoveMessageHandler = NULL;
//
//	if ( ! pFnRemoveMessageHandler )
//		pFnRemoveMessageHandler = (UFunction*) UObject::GObjObjects()->Data[ 50294 ];
//
//	UOnlineMessageComponent_X_execRemoveMessageHandler_Parms RemoveMessageHandler_Parms;
//	memcpy ( &RemoveMessageHandler_Parms.Callback, &Callback, 0x10 );
//
//	pFnRemoveMessageHandler->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveMessageHandler, &RemoveMessageHandler_Parms, NULL );
//
//	pFnRemoveMessageHandler->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.AddMessageHandler
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UClass*                  MessageClass                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineMessageComponent_X::AddMessageHandler ( class UClass* MessageClass, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnAddMessageHandler = NULL;
//
//	if ( ! pFnAddMessageHandler )
//		pFnAddMessageHandler = (UFunction*) UObject::GObjObjects()->Data[ 50291 ];
//
//	UOnlineMessageComponent_X_execAddMessageHandler_Parms AddMessageHandler_Parms;
//	AddMessageHandler_Parms.MessageClass = MessageClass;
//	memcpy ( &AddMessageHandler_Parms.Callback, &Callback, 0x10 );
//
//	pFnAddMessageHandler->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddMessageHandler, &AddMessageHandler_Parms, NULL );
//
//	pFnAddMessageHandler->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineMessageComponent_X.MessageReceivedDelegate
//// [0x00140001] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineMessageComponent_X::MessageReceivedDelegate ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnMessageReceivedDelegate = NULL;
//
//	if ( ! pFnMessageReceivedDelegate )
//		pFnMessageReceivedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 50284 ];
//
//	UOnlineMessageComponent_X_execMessageReceivedDelegate_Parms MessageReceivedDelegate_Parms;
//	MessageReceivedDelegate_Parms.Component = Component;
//	MessageReceivedDelegate_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnMessageReceivedDelegate, &MessageReceivedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.ParameterDispenser_X.Inherit
//// [0x00020002] 
//// Parameters infos:
//// class UParameterDispenser_X*   Other                          ( CPF_Parm | CPF_EditInline )
//
//void UParameterDispenser_X::Inherit ( class UParameterDispenser_X* Other )
//{
//	static UFunction* pFnInherit = NULL;
//
//	if ( ! pFnInherit )
//		pFnInherit = (UFunction*) UObject::GObjObjects()->Data[ 49246 ];
//
//	UParameterDispenser_X_execInherit_Parms Inherit_Parms;
//	Inherit_Parms.Other = Other;
//
//	this->ProcessEvent ( pFnInherit, &Inherit_Parms, NULL );
//};
//
//// Function ProjectX.ParameterDispenser_X.ResetMaterials
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UParameterDispenser_X::ResetMaterials ( )
//{
//	static UFunction* pFnResetMaterials = NULL;
//
//	if ( ! pFnResetMaterials )
//		pFnResetMaterials = (UFunction*) UObject::GObjObjects()->Data[ 49245 ];
//
//	UParameterDispenser_X_execResetMaterials_Parms ResetMaterials_Parms;
//
//	pFnResetMaterials->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnResetMaterials, &ResetMaterials_Parms, NULL );
//
//	pFnResetMaterials->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.ApplyAllParameters
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UISetParameter*          ActorComp                      ( CPF_Parm )
//
//void UParameterDispenser_X::ApplyAllParameters ( class UISetParameter* ActorComp )
//{
//	static UFunction* pFnApplyAllParameters = NULL;
//
//	if ( ! pFnApplyAllParameters )
//		pFnApplyAllParameters = (UFunction*) UObject::GObjObjects()->Data[ 49242 ];
//
//	UParameterDispenser_X_execApplyAllParameters_Parms ApplyAllParameters_Parms;
//	ApplyAllParameters_Parms.ActorComp = ActorComp;
//
//	pFnApplyAllParameters->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnApplyAllParameters, &ApplyAllParameters_Parms, NULL );
//
//	pFnApplyAllParameters->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.GetActorParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Key                            ( CPF_Parm )
//
//class AActor* UParameterDispenser_X::GetActorParameter ( struct FName Key )
//{
//	static UFunction* pFnGetActorParameter = NULL;
//
//	if ( ! pFnGetActorParameter )
//		pFnGetActorParameter = (UFunction*) UObject::GObjObjects()->Data[ 49244 ];
//
//	UParameterDispenser_X_execGetActorParameter_Parms GetActorParameter_Parms;
//	memcpy ( &GetActorParameter_Parms.Key, &Key, 0x8 );
//
//	pFnGetActorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetActorParameter, &GetActorParameter_Parms, NULL );
//
//	pFnGetActorParameter->FunctionFlags |= 0x400;
//
//	return GetActorParameter_Parms.ReturnValue;
//};
//
//// Function ProjectX.ParameterDispenser_X.SetActorParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// class AActor*                  Value                          ( CPF_Parm )
//
//void UParameterDispenser_X::SetActorParameter ( struct FName Key, class AActor* Value )
//{
//	static UFunction* pFnSetActorParameter = NULL;
//
//	if ( ! pFnSetActorParameter )
//		pFnSetActorParameter = (UFunction*) UObject::GObjObjects()->Data[ 49250 ];
//
//	UParameterDispenser_X_execSetActorParameter_Parms SetActorParameter_Parms;
//	memcpy ( &SetActorParameter_Parms.Key, &Key, 0x8 );
//	SetActorParameter_Parms.Value = Value;
//
//	pFnSetActorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetActorParameter, &SetActorParameter_Parms, NULL );
//
//	pFnSetActorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.SetLinearColorParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FLinearColor            Value                          ( CPF_Parm )
//
//void UParameterDispenser_X::SetLinearColorParameter ( struct FName Key, struct FLinearColor Value )
//{
//	static UFunction* pFnSetLinearColorParameter = NULL;
//
//	if ( ! pFnSetLinearColorParameter )
//		pFnSetLinearColorParameter = (UFunction*) UObject::GObjObjects()->Data[ 49239 ];
//
//	UParameterDispenser_X_execSetLinearColorParameter_Parms SetLinearColorParameter_Parms;
//	memcpy ( &SetLinearColorParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetLinearColorParameter_Parms.Value, &Value, 0x10 );
//
//	pFnSetLinearColorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetLinearColorParameter, &SetLinearColorParameter_Parms, NULL );
//
//	pFnSetLinearColorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.SetVectorParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FVector                 Value                          ( CPF_Parm )
//
//void UParameterDispenser_X::SetVectorParameter ( struct FName Key, struct FVector Value )
//{
//	static UFunction* pFnSetVectorParameter = NULL;
//
//	if ( ! pFnSetVectorParameter )
//		pFnSetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 49236 ];
//
//	UParameterDispenser_X_execSetVectorParameter_Parms SetVectorParameter_Parms;
//	memcpy ( &SetVectorParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetVectorParameter_Parms.Value, &Value, 0xC );
//
//	pFnSetVectorParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetVectorParameter, &SetVectorParameter_Parms, NULL );
//
//	pFnSetVectorParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.SetFloatParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// float                          Value                          ( CPF_Parm )
//
//void UParameterDispenser_X::SetFloatParameter ( struct FName Key, float Value )
//{
//	static UFunction* pFnSetFloatParameter = NULL;
//
//	if ( ! pFnSetFloatParameter )
//		pFnSetFloatParameter = (UFunction*) UObject::GObjObjects()->Data[ 49233 ];
//
//	UParameterDispenser_X_execSetFloatParameter_Parms SetFloatParameter_Parms;
//	memcpy ( &SetFloatParameter_Parms.Key, &Key, 0x8 );
//	SetFloatParameter_Parms.Value = Value;
//
//	pFnSetFloatParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetFloatParameter, &SetFloatParameter_Parms, NULL );
//
//	pFnSetFloatParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.SetNameParameter
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// struct FName                   Value                          ( CPF_Parm )
//
//void UParameterDispenser_X::SetNameParameter ( struct FName Key, struct FName Value )
//{
//	static UFunction* pFnSetNameParameter = NULL;
//
//	if ( ! pFnSetNameParameter )
//		pFnSetNameParameter = (UFunction*) UObject::GObjObjects()->Data[ 49230 ];
//
//	UParameterDispenser_X_execSetNameParameter_Parms SetNameParameter_Parms;
//	memcpy ( &SetNameParameter_Parms.Key, &Key, 0x8 );
//	memcpy ( &SetNameParameter_Parms.Value, &Value, 0x8 );
//
//	pFnSetNameParameter->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetNameParameter, &SetNameParameter_Parms, NULL );
//
//	pFnSetNameParameter->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.RemoveComponent
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UISetParameter*          ActorComp                      ( CPF_Parm )
//
//void UParameterDispenser_X::RemoveComponent ( class UISetParameter* ActorComp )
//{
//	static UFunction* pFnRemoveComponent = NULL;
//
//	if ( ! pFnRemoveComponent )
//		pFnRemoveComponent = (UFunction*) UObject::GObjObjects()->Data[ 49228 ];
//
//	UParameterDispenser_X_execRemoveComponent_Parms RemoveComponent_Parms;
//	RemoveComponent_Parms.ActorComp = ActorComp;
//
//	pFnRemoveComponent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveComponent, &RemoveComponent_Parms, NULL );
//
//	pFnRemoveComponent->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.ParameterDispenser_X.AddComponent
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UISetParameter*          ActorComp                      ( CPF_Parm )
//
//void UParameterDispenser_X::AddComponent ( class UISetParameter* ActorComp )
//{
//	static UFunction* pFnAddComponent = NULL;
//
//	if ( ! pFnAddComponent )
//		pFnAddComponent = (UFunction*) UObject::GObjObjects()->Data[ 49225 ];
//
//	UParameterDispenser_X_execAddComponent_Parms AddComponent_Parms;
//	AddComponent_Parms.ActorComp = ActorComp;
//
//	pFnAddComponent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddComponent, &AddComponent_Parms, NULL );
//
//	pFnAddComponent->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Pawn_X.IsSameTeam
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APawn*                   Other                          ( CPF_Parm )
//
//bool APawn_X::eventIsSameTeam ( class APawn* Other )
//{
//	static UFunction* pFnIsSameTeam = NULL;
//
//	if ( ! pFnIsSameTeam )
//		pFnIsSameTeam = (UFunction*) UObject::GObjObjects()->Data[ 54814 ];
//
//	APawn_X_eventIsSameTeam_Parms IsSameTeam_Parms;
//	IsSameTeam_Parms.Other = Other;
//
//	this->ProcessEvent ( pFnIsSameTeam, &IsSameTeam_Parms, NULL );
//
//	return IsSameTeam_Parms.ReturnValue;
//};
//
//// Function ProjectX.Pawn_X.Destroyed
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void APawn_X::eventDestroyed ( )
//{
//	static UFunction* pFnDestroyed = NULL;
//
//	if ( ! pFnDestroyed )
//		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 54813 ];
//
//	APawn_X_eventDestroyed_Parms Destroyed_Parms;
//
//	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.GetGravityZ
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float APawn_X::GetGravityZ ( )
//{
//	static UFunction* pFnGetGravityZ = NULL;
//
//	if ( ! pFnGetGravityZ )
//		pFnGetGravityZ = (UFunction*) UObject::GObjObjects()->Data[ 54811 ];
//
//	APawn_X_execGetGravityZ_Parms GetGravityZ_Parms;
//
//	pFnGetGravityZ->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetGravityZ, &GetGravityZ_Parms, NULL );
//
//	pFnGetGravityZ->FunctionFlags |= 0x400;
//
//	return GetGravityZ_Parms.ReturnValue;
//};
//
//// Function ProjectX.Pawn_X.NotifyTakeHit_X
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::NotifyTakeHit_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnNotifyTakeHit_X = NULL;
//
//	if ( ! pFnNotifyTakeHit_X )
//		pFnNotifyTakeHit_X = (UFunction*) UObject::GObjObjects()->Data[ 54809 ];
//
//	APawn_X_execNotifyTakeHit_X_Parms NotifyTakeHit_X_Parms;
//	NotifyTakeHit_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnNotifyTakeHit_X, &NotifyTakeHit_X_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.PlayDeath_X
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::PlayDeath_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnPlayDeath_X = NULL;
//
//	if ( ! pFnPlayDeath_X )
//		pFnPlayDeath_X = (UFunction*) UObject::GObjObjects()->Data[ 54807 ];
//
//	APawn_X_execPlayDeath_X_Parms PlayDeath_X_Parms;
//	PlayDeath_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnPlayDeath_X, &PlayDeath_X_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.PlayHit_X
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::PlayHit_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnPlayHit_X = NULL;
//
//	if ( ! pFnPlayHit_X )
//		pFnPlayHit_X = (UFunction*) UObject::GObjObjects()->Data[ 54805 ];
//
//	APawn_X_execPlayHit_X_Parms PlayHit_X_Parms;
//	PlayHit_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnPlayHit_X, &PlayHit_X_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.OnDied
//// [0x00080002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::OnDied ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnOnDied = NULL;
//
//	if ( ! pFnOnDied )
//		pFnOnDied = (UFunction*) UObject::GObjObjects()->Data[ 54803 ];
//
//	APawn_X_execOnDied_Parms OnDied_Parms;
//	OnDied_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnOnDied, &OnDied_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.Died_X
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class AController*             Killer                         ( CPF_Parm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//bool APawn_X::Died_X ( class AController* Killer, class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnDied_X = NULL;
//
//	if ( ! pFnDied_X )
//		pFnDied_X = (UFunction*) UObject::GObjObjects()->Data[ 54796 ];
//
//	APawn_X_execDied_X_Parms Died_X_Parms;
//	Died_X_Parms.Killer = Killer;
//	Died_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnDied_X, &Died_X_Parms, NULL );
//
//	return Died_X_Parms.ReturnValue;
//};
//
//// Function ProjectX.Pawn_X.AdjustDamage_X
//// [0x00020002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::AdjustDamage_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnAdjustDamage_X = NULL;
//
//	if ( ! pFnAdjustDamage_X )
//		pFnAdjustDamage_X = (UFunction*) UObject::GObjObjects()->Data[ 54793 ];
//
//	APawn_X_execAdjustDamage_X_Parms AdjustDamage_X_Parms;
//	AdjustDamage_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnAdjustDamage_X, &AdjustDamage_X_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.OnTakeDamage
//// [0x00080002] 
//// Parameters infos:
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::OnTakeDamage ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnOnTakeDamage = NULL;
//
//	if ( ! pFnOnTakeDamage )
//		pFnOnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 54791 ];
//
//	APawn_X_execOnTakeDamage_Parms OnTakeDamage_Parms;
//	OnTakeDamage_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnOnTakeDamage, &OnTakeDamage_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.TakeDamage_X
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//bool APawn_X::TakeDamage_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnTakeDamage_X = NULL;
//
//	if ( ! pFnTakeDamage_X )
//		pFnTakeDamage_X = (UFunction*) UObject::GObjObjects()->Data[ 54786 ];
//
//	APawn_X_execTakeDamage_X_Parms TakeDamage_X_Parms;
//	TakeDamage_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnTakeDamage_X, &TakeDamage_X_Parms, NULL );
//
//	return TakeDamage_X_Parms.ReturnValue;
//};
//
//// Function ProjectX.Pawn_X.OnHealDamage
//// [0x00080002] 
//// Parameters infos:
//// int                            Amount                         ( CPF_Parm )
//
//void APawn_X::OnHealDamage ( int Amount )
//{
//	static UFunction* pFnOnHealDamage = NULL;
//
//	if ( ! pFnOnHealDamage )
//		pFnOnHealDamage = (UFunction*) UObject::GObjObjects()->Data[ 54784 ];
//
//	APawn_X_execOnHealDamage_Parms OnHealDamage_Parms;
//	OnHealDamage_Parms.Amount = Amount;
//
//	this->ProcessEvent ( pFnOnHealDamage, &OnHealDamage_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.HealDamage
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            Amount                         ( CPF_Parm )
//// class AController*             Healer                         ( CPF_Parm )
//// class UClass*                  DamageType                     ( CPF_Parm )
//
//bool APawn_X::eventHealDamage ( int Amount, class AController* Healer, class UClass* DamageType )
//{
//	static UFunction* pFnHealDamage = NULL;
//
//	if ( ! pFnHealDamage )
//		pFnHealDamage = (UFunction*) UObject::GObjObjects()->Data[ 54779 ];
//
//	APawn_X_eventHealDamage_Parms HealDamage_Parms;
//	HealDamage_Parms.Amount = Amount;
//	HealDamage_Parms.Healer = Healer;
//	HealDamage_Parms.DamageType = DamageType;
//
//	this->ProcessEvent ( pFnHealDamage, &HealDamage_Parms, NULL );
//
//	return HealDamage_Parms.ReturnValue;
//};
//
//// Function ProjectX.Pawn_X.TakeDamage
//// [0x00024802] ( FUNC_Event )
//// Parameters infos:
//// int                            Damage                         ( CPF_Parm )
//// class AController*             InstigatedBy                   ( CPF_Parm )
//// struct FVector                 HitLocation                    ( CPF_Parm )
//// struct FVector                 Momentum                       ( CPF_Parm )
//// class UClass*                  DamageType                     ( CPF_Parm )
//// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
//// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )
//
//void APawn_X::eventTakeDamage ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
//{
//	static UFunction* pFnTakeDamage = NULL;
//
//	if ( ! pFnTakeDamage )
//		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 54771 ];
//
//	APawn_X_eventTakeDamage_Parms TakeDamage_Parms;
//	TakeDamage_Parms.Damage = Damage;
//	TakeDamage_Parms.InstigatedBy = InstigatedBy;
//	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
//	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
//	TakeDamage_Parms.DamageType = DamageType;
//	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
//	TakeDamage_Parms.DamageCauser = DamageCauser;
//
//	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.Suicide
//// [0x00020002] 
//// Parameters infos:
//
//void APawn_X::Suicide ( )
//{
//	static UFunction* pFnSuicide = NULL;
//
//	if ( ! pFnSuicide )
//		pFnSuicide = (UFunction*) UObject::GObjObjects()->Data[ 54770 ];
//
//	APawn_X_execSuicide_Parms Suicide_Parms;
//
//	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.OnAnimEnd
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
//// float                          PlayedTime                     ( CPF_Parm )
//// float                          ExcessTime                     ( CPF_Parm )
//
//void APawn_X::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
//{
//	static UFunction* pFnOnAnimEnd = NULL;
//
//	if ( ! pFnOnAnimEnd )
//		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 54766 ];
//
//	APawn_X_eventOnAnimEnd_Parms OnAnimEnd_Parms;
//	OnAnimEnd_Parms.SeqNode = SeqNode;
//	OnAnimEnd_Parms.PlayedTime = PlayedTime;
//	OnAnimEnd_Parms.ExcessTime = ExcessTime;
//
//	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.PlayerChangedTeam
//// [0x00020002] 
//// Parameters infos:
//
//void APawn_X::PlayerChangedTeam ( )
//{
//	static UFunction* pFnPlayerChangedTeam = NULL;
//
//	if ( ! pFnPlayerChangedTeam )
//		pFnPlayerChangedTeam = (UFunction*) UObject::GObjObjects()->Data[ 54764 ];
//
//	APawn_X_execPlayerChangedTeam_Parms PlayerChangedTeam_Parms;
//
//	this->ProcessEvent ( pFnPlayerChangedTeam, &PlayerChangedTeam_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.OnControllerChanged
//// [0x00080000] 
//// Parameters infos:
//
//void APawn_X::OnControllerChanged ( )
//{
//	static UFunction* pFnOnControllerChanged = NULL;
//
//	if ( ! pFnOnControllerChanged )
//		pFnOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 54763 ];
//
//	APawn_X_execOnControllerChanged_Parms OnControllerChanged_Parms;
//
//	this->ProcessEvent ( pFnOnControllerChanged, &OnControllerChanged_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.PossessedBy
//// [0x00020002] 
//// Parameters infos:
//// class AController*             C                              ( CPF_Parm )
//// unsigned long                  bVehicleTransition             ( CPF_Parm )
//
//void APawn_X::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
//{
//	static UFunction* pFnPossessedBy = NULL;
//
//	if ( ! pFnPossessedBy )
//		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 54760 ];
//
//	APawn_X_execPossessedBy_Parms PossessedBy_Parms;
//	PossessedBy_Parms.C = C;
//	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;
//
//	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.UpdateControllerRef
//// [0x00080002] 
//// Parameters infos:
//
//void APawn_X::UpdateControllerRef ( )
//{
//	static UFunction* pFnUpdateControllerRef = NULL;
//
//	if ( ! pFnUpdateControllerRef )
//		pFnUpdateControllerRef = (UFunction*) UObject::GObjObjects()->Data[ 54759 ];
//
//	APawn_X_execUpdateControllerRef_Parms UpdateControllerRef_Parms;
//
//	this->ProcessEvent ( pFnUpdateControllerRef, &UpdateControllerRef_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.ReplicatedEvent
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// struct FName                   VarName                        ( CPF_Parm )
//
//void APawn_X::eventReplicatedEvent ( struct FName VarName )
//{
//	static UFunction* pFnReplicatedEvent = NULL;
//
//	if ( ! pFnReplicatedEvent )
//		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 54757 ];
//
//	APawn_X_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
//	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );
//
//	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.EventAnimEnd
//// [0x00120000] 
//// Parameters infos:
//// class APawn_X*                 ForPawn                        ( CPF_Parm )
//// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
//
//void APawn_X::EventAnimEnd ( class APawn_X* ForPawn, class UAnimNodeSequence* SeqNode )
//{
//	static UFunction* pFnEventAnimEnd = NULL;
//
//	if ( ! pFnEventAnimEnd )
//		pFnEventAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 54736 ];
//
//	APawn_X_execEventAnimEnd_Parms EventAnimEnd_Parms;
//	EventAnimEnd_Parms.ForPawn = ForPawn;
//	EventAnimEnd_Parms.SeqNode = SeqNode;
//
//	this->ProcessEvent ( pFnEventAnimEnd, &EventAnimEnd_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.EventDestroyed
//// [0x00120000] 
//// Parameters infos:
//// class APawn_X*                 Pawn                           ( CPF_Parm )
//
//void APawn_X::EventDestroyed ( class APawn_X* Pawn )
//{
//	static UFunction* pFnEventDestroyed = NULL;
//
//	if ( ! pFnEventDestroyed )
//		pFnEventDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 54738 ];
//
//	APawn_X_execEventDestroyed_Parms EventDestroyed_Parms;
//	EventDestroyed_Parms.Pawn = Pawn;
//
//	this->ProcessEvent ( pFnEventDestroyed, &EventDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.EventDied
//// [0x00120000] 
//// Parameters infos:
//// class APawn_X*                 Pawn                           ( CPF_Parm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::EventDied ( class APawn_X* Pawn, class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnEventDied = NULL;
//
//	if ( ! pFnEventDied )
//		pFnEventDied = (UFunction*) UObject::GObjObjects()->Data[ 54740 ];
//
//	APawn_X_execEventDied_Parms EventDied_Parms;
//	EventDied_Parms.Pawn = Pawn;
//	EventDied_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnEventDied, &EventDied_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.EventHealDamage
//// [0x00120000] 
//// Parameters infos:
//// class APawn_X*                 Pawn                           ( CPF_Parm )
//// int                            Amount                         ( CPF_Parm )
//
//void APawn_X::EventHealDamage ( class APawn_X* Pawn, int Amount )
//{
//	static UFunction* pFnEventHealDamage = NULL;
//
//	if ( ! pFnEventHealDamage )
//		pFnEventHealDamage = (UFunction*) UObject::GObjObjects()->Data[ 54742 ];
//
//	APawn_X_execEventHealDamage_Parms EventHealDamage_Parms;
//	EventHealDamage_Parms.Pawn = Pawn;
//	EventHealDamage_Parms.Amount = Amount;
//
//	this->ProcessEvent ( pFnEventHealDamage, &EventHealDamage_Parms, NULL );
//};
//
//// Function ProjectX.Pawn_X.EventTakeDamage
//// [0x00120000] 
//// Parameters infos:
//// class APawn_X*                 Pawn                           ( CPF_Parm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//void APawn_X::EventTakeDamage ( class APawn_X* Pawn, class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnEventTakeDamage = NULL;
//
//	if ( ! pFnEventTakeDamage )
//		pFnEventTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 54744 ];
//
//	APawn_X_execEventTakeDamage_Parms EventTakeDamage_Parms;
//	EventTakeDamage_Parms.Pawn = Pawn;
//	EventTakeDamage_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnEventTakeDamage, &EventTakeDamage_Parms, NULL );
//};
//
//// Function ProjectX.PerCon_X.HandleConfigChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPerCon_X::HandleConfigChanged ( )
//{
//	static UFunction* pFnHandleConfigChanged = NULL;
//
//	if ( ! pFnHandleConfigChanged )
//		pFnHandleConfigChanged = (UFunction*) UObject::GObjObjects()->Data[ 58006 ];
//
//	UPerCon_X_execHandleConfigChanged_Parms HandleConfigChanged_Parms;
//
//	this->ProcessEvent ( pFnHandleConfigChanged, &HandleConfigChanged_Parms, NULL );
//};
//
//// Function ProjectX.PerCon_X.SetStatus
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  InStatus                       ( CPF_Parm )
//
//void UPerCon_X::SetStatus ( unsigned char InStatus )
//{
//	static UFunction* pFnSetStatus = NULL;
//
//	if ( ! pFnSetStatus )
//		pFnSetStatus = (UFunction*) UObject::GObjObjects()->Data[ 58002 ];
//
//	UPerCon_X_execSetStatus_Parms SetStatus_Parms;
//	SetStatus_Parms.InStatus = InStatus;
//
//	this->ProcessEvent ( pFnSetStatus, &SetStatus_Parms, NULL );
//};
//
//// Function ProjectX.PerCon_X.SetBroken
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerCon_X::SetBroken ( struct FString Reason )
//{
//	static UFunction* pFnSetBroken = NULL;
//
//	if ( ! pFnSetBroken )
//		pFnSetBroken = (UFunction*) UObject::GObjObjects()->Data[ 58003 ];
//
//	UPerCon_X_execSetBroken_Parms SetBroken_Parms;
//	memcpy ( &SetBroken_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnSetBroken, &SetBroken_Parms, NULL );
//};
//
//// Function ProjectX.PerCon_X.SetEnabled
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bEnable                        ( CPF_Parm )
//
//void UPerCon_X::SetEnabled ( unsigned long bEnable )
//{
//	static UFunction* pFnSetEnabled = NULL;
//
//	if ( ! pFnSetEnabled )
//		pFnSetEnabled = (UFunction*) UObject::GObjObjects()->Data[ 54410 ];
//
//	UPerCon_X_execSetEnabled_Parms SetEnabled_Parms;
//	SetEnabled_Parms.bEnable = bEnable;
//
//	this->ProcessEvent ( pFnSetEnabled, &SetEnabled_Parms, NULL );
//};
//
//// Function ProjectX.PerCon_X.EventStatusChanged
//// [0x00120000] 
//// Parameters infos:
//// class UPerCon_X*               PerCon                         ( CPF_Parm )
//
//void UPerCon_X::EventStatusChanged ( class UPerCon_X* PerCon )
//{
//	static UFunction* pFnEventStatusChanged = NULL;
//
//	if ( ! pFnEventStatusChanged )
//		pFnEventStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 57997 ];
//
//	UPerCon_X_execEventStatusChanged_Parms EventStatusChanged_Parms;
//	EventStatusChanged_Parms.PerCon = PerCon;
//
//	this->ProcessEvent ( pFnEventStatusChanged, &EventStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.PlayerInput_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UPlayerInput_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 54882 ];
//
//	UPlayerInput_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.PlayerInput_X.GetKeyForActionArray
//// [0x00422003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Action                         ( CPF_Parm )
//// TArray< struct FPlayerBinding > PlayerBindings                 ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//struct FName UPlayerInput_X::GetKeyForActionArray ( struct FName Action, TArray< struct FPlayerBinding >* PlayerBindings )
//{
//	static UFunction* pFnGetKeyForActionArray = NULL;
//
//	if ( ! pFnGetKeyForActionArray )
//		pFnGetKeyForActionArray = (UFunction*) UObject::GObjObjects()->Data[ 54885 ];
//
//	UPlayerInput_X_execGetKeyForActionArray_Parms GetKeyForActionArray_Parms;
//	memcpy ( &GetKeyForActionArray_Parms.Action, &Action, 0x8 );
//
//	this->ProcessEvent ( pFnGetKeyForActionArray, &GetKeyForActionArray_Parms, NULL );
//
//	if ( PlayerBindings )
//		memcpy ( PlayerBindings, &GetKeyForActionArray_Parms.PlayerBindings, 0xC );
//
//	return GetKeyForActionArray_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerInput_X.AbsorbCurrentKeyPress
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UPlayerInput_X::AbsorbCurrentKeyPress ( )
//{
//	static UFunction* pFnAbsorbCurrentKeyPress = NULL;
//
//	if ( ! pFnAbsorbCurrentKeyPress )
//		pFnAbsorbCurrentKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 54886 ];
//
//	UPlayerInput_X_execAbsorbCurrentKeyPress_Parms AbsorbCurrentKeyPress_Parms;
//
//	pFnAbsorbCurrentKeyPress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAbsorbCurrentKeyPress, &AbsorbCurrentKeyPress_Parms, NULL );
//
//	pFnAbsorbCurrentKeyPress->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.SetBindings
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// TArray< struct FPlayerBinding > PC                             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FPlayerBinding > Gamepad                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UPlayerInput_X::SetBindings ( TArray< struct FPlayerBinding >* PC, TArray< struct FPlayerBinding >* Gamepad )
//{
//	static UFunction* pFnSetBindings = NULL;
//
//	if ( ! pFnSetBindings )
//		pFnSetBindings = (UFunction*) UObject::GObjObjects()->Data[ 54892 ];
//
//	UPlayerInput_X_execSetBindings_Parms SetBindings_Parms;
//
//	pFnSetBindings->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetBindings, &SetBindings_Parms, NULL );
//
//	pFnSetBindings->FunctionFlags |= 0x400;
//
//	if ( PC )
//		memcpy ( PC, &SetBindings_Parms.PC, 0xC );
//
//	if ( Gamepad )
//		memcpy ( Gamepad, &SetBindings_Parms.Gamepad, 0xC );
//};
//
//// Function ProjectX.PlayerInput_X.ClearDisableActionUntilNextUseList
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UPlayerInput_X::ClearDisableActionUntilNextUseList ( )
//{
//	static UFunction* pFnClearDisableActionUntilNextUseList = NULL;
//
//	if ( ! pFnClearDisableActionUntilNextUseList )
//		pFnClearDisableActionUntilNextUseList = (UFunction*) UObject::GObjObjects()->Data[ 54893 ];
//
//	UPlayerInput_X_execClearDisableActionUntilNextUseList_Parms ClearDisableActionUntilNextUseList_Parms;
//
//	pFnClearDisableActionUntilNextUseList->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearDisableActionUntilNextUseList, &ClearDisableActionUntilNextUseList_Parms, NULL );
//
//	pFnClearDisableActionUntilNextUseList->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.DisableActionUntilNextUse
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ActionName                     ( CPF_Parm )
//
//void UPlayerInput_X::DisableActionUntilNextUse ( struct FName ActionName )
//{
//	static UFunction* pFnDisableActionUntilNextUse = NULL;
//
//	if ( ! pFnDisableActionUntilNextUse )
//		pFnDisableActionUntilNextUse = (UFunction*) UObject::GObjObjects()->Data[ 54898 ];
//
//	UPlayerInput_X_execDisableActionUntilNextUse_Parms DisableActionUntilNextUse_Parms;
//	memcpy ( &DisableActionUntilNextUse_Parms.ActionName, &ActionName, 0x8 );
//
//	pFnDisableActionUntilNextUse->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDisableActionUntilNextUse, &DisableActionUntilNextUse_Parms, NULL );
//
//	pFnDisableActionUntilNextUse->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.ClearDisabledActions
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UPlayerInput_X::ClearDisabledActions ( )
//{
//	static UFunction* pFnClearDisabledActions = NULL;
//
//	if ( ! pFnClearDisabledActions )
//		pFnClearDisabledActions = (UFunction*) UObject::GObjObjects()->Data[ 54881 ];
//
//	UPlayerInput_X_execClearDisabledActions_Parms ClearDisabledActions_Parms;
//
//	pFnClearDisabledActions->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearDisabledActions, &ClearDisabledActions_Parms, NULL );
//
//	pFnClearDisabledActions->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.RemoveFromDisabledActions
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ActionName                     ( CPF_Parm )
//
//void UPlayerInput_X::RemoveFromDisabledActions ( struct FName ActionName )
//{
//	static UFunction* pFnRemoveFromDisabledActions = NULL;
//
//	if ( ! pFnRemoveFromDisabledActions )
//		pFnRemoveFromDisabledActions = (UFunction*) UObject::GObjObjects()->Data[ 54879 ];
//
//	UPlayerInput_X_execRemoveFromDisabledActions_Parms RemoveFromDisabledActions_Parms;
//	memcpy ( &RemoveFromDisabledActions_Parms.ActionName, &ActionName, 0x8 );
//
//	pFnRemoveFromDisabledActions->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRemoveFromDisabledActions, &RemoveFromDisabledActions_Parms, NULL );
//
//	pFnRemoveFromDisabledActions->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.AddToDisabledActions
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ActionName                     ( CPF_Parm )
//
//void UPlayerInput_X::AddToDisabledActions ( struct FName ActionName )
//{
//	static UFunction* pFnAddToDisabledActions = NULL;
//
//	if ( ! pFnAddToDisabledActions )
//		pFnAddToDisabledActions = (UFunction*) UObject::GObjObjects()->Data[ 54877 ];
//
//	UPlayerInput_X_execAddToDisabledActions_Parms AddToDisabledActions_Parms;
//	memcpy ( &AddToDisabledActions_Parms.ActionName, &ActionName, 0x8 );
//
//	pFnAddToDisabledActions->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddToDisabledActions, &AddToDisabledActions_Parms, NULL );
//
//	pFnAddToDisabledActions->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.ReleaseKey
//// [0x00024400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   Key                            ( CPF_Parm )
//// unsigned long                  bTriggerEvents                 ( CPF_OptionalParm | CPF_Parm )
//
//void UPlayerInput_X::ReleaseKey ( struct FName Key, unsigned long bTriggerEvents )
//{
//	static UFunction* pFnReleaseKey = NULL;
//
//	if ( ! pFnReleaseKey )
//		pFnReleaseKey = (UFunction*) UObject::GObjObjects()->Data[ 54874 ];
//
//	UPlayerInput_X_execReleaseKey_Parms ReleaseKey_Parms;
//	memcpy ( &ReleaseKey_Parms.Key, &Key, 0x8 );
//	ReleaseKey_Parms.bTriggerEvents = bTriggerEvents;
//
//	pFnReleaseKey->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnReleaseKey, &ReleaseKey_Parms, NULL );
//
//	pFnReleaseKey->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.GetUIKey
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FName                   KeyName                        ( CPF_Parm )
//
//struct FString UPlayerInput_X::GetUIKey ( struct FName KeyName )
//{
//	static UFunction* pFnGetUIKey = NULL;
//
//	if ( ! pFnGetUIKey )
//		pFnGetUIKey = (UFunction*) UObject::GObjObjects()->Data[ 54869 ];
//
//	UPlayerInput_X_execGetUIKey_Parms GetUIKey_Parms;
//	memcpy ( &GetUIKey_Parms.KeyName, &KeyName, 0x8 );
//
//	this->ProcessEvent ( pFnGetUIKey, &GetUIKey_Parms, NULL );
//
//	return GetUIKey_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlayerInput_X.InitInputSystem
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UPlayerInput_X::InitInputSystem ( )
//{
//	static UFunction* pFnInitInputSystem = NULL;
//
//	if ( ! pFnInitInputSystem )
//		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 54868 ];
//
//	UPlayerInput_X_execInitInputSystem_Parms InitInputSystem_Parms;
//
//	pFnInitInputSystem->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
//
//	pFnInitInputSystem->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.ResetInput
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UPlayerInput_X::ResetInput ( )
//{
//	static UFunction* pFnResetInput = NULL;
//
//	if ( ! pFnResetInput )
//		pFnResetInput = (UFunction*) UObject::GObjObjects()->Data[ 54866 ];
//
//	UPlayerInput_X_execResetInput_Parms ResetInput_Parms;
//
//	pFnResetInput->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnResetInput, &ResetInput_Parms, NULL );
//
//	pFnResetInput->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.SetControlPreset
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// struct FName                   PresetName                     ( CPF_Parm )
//
//void UPlayerInput_X::SetControlPreset ( struct FName PresetName )
//{
//	static UFunction* pFnSetControlPreset = NULL;
//
//	if ( ! pFnSetControlPreset )
//		pFnSetControlPreset = (UFunction*) UObject::GObjObjects()->Data[ 54867 ];
//
//	UPlayerInput_X_execSetControlPreset_Parms SetControlPreset_Parms;
//	memcpy ( &SetControlPreset_Parms.PresetName, &PresetName, 0x8 );
//
//	pFnSetControlPreset->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetControlPreset, &SetControlPreset_Parms, NULL );
//
//	pFnSetControlPreset->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PlayerInput_X.EventSetBindingsToUserBindings
//// [0x00120000] 
//// Parameters infos:
//// class UPlayerInput_X*          PlayerInput                    ( CPF_Parm )
//
//void UPlayerInput_X::EventSetBindingsToUserBindings ( class UPlayerInput_X* PlayerInput )
//{
//	static UFunction* pFnEventSetBindingsToUserBindings = NULL;
//
//	if ( ! pFnEventSetBindingsToUserBindings )
//		pFnEventSetBindingsToUserBindings = (UFunction*) UObject::GObjObjects()->Data[ 54900 ];
//
//	UPlayerInput_X_execEventSetBindingsToUserBindings_Parms EventSetBindingsToUserBindings_Parms;
//	EventSetBindingsToUserBindings_Parms.PlayerInput = PlayerInput;
//
//	this->ProcessEvent ( pFnEventSetBindingsToUserBindings, &EventSetBindingsToUserBindings_Parms, NULL );
//};
//
//// Function ProjectX.PlayerInput_X.EventBindingsChanged
//// [0x00120000] 
//// Parameters infos:
//// class UPlayerInput_X*          PlayerInput                    ( CPF_Parm )
//
//void UPlayerInput_X::EventBindingsChanged ( class UPlayerInput_X* PlayerInput )
//{
//	static UFunction* pFnEventBindingsChanged = NULL;
//
//	if ( ! pFnEventBindingsChanged )
//		pFnEventBindingsChanged = (UFunction*) UObject::GObjObjects()->Data[ 54902 ];
//
//	UPlayerInput_X_execEventBindingsChanged_Parms EventBindingsChanged_Parms;
//	EventBindingsChanged_Parms.PlayerInput = PlayerInput;
//
//	this->ProcessEvent ( pFnEventBindingsChanged, &EventBindingsChanged_Parms, NULL );
//};
//
//// Function ProjectX.PlayerInput_X.EventActionToggled
//// [0x00120000] 
//// Parameters infos:
//// class UPlayerInput_X*          PlayerInput                    ( CPF_Parm )
//// struct FName                   ActionName                     ( CPF_Parm )
//// unsigned long                  bEnabled                       ( CPF_Parm )
//
//void UPlayerInput_X::EventActionToggled ( class UPlayerInput_X* PlayerInput, struct FName ActionName, unsigned long bEnabled )
//{
//	static UFunction* pFnEventActionToggled = NULL;
//
//	if ( ! pFnEventActionToggled )
//		pFnEventActionToggled = (UFunction*) UObject::GObjObjects()->Data[ 54904 ];
//
//	UPlayerInput_X_execEventActionToggled_Parms EventActionToggled_Parms;
//	EventActionToggled_Parms.PlayerInput = PlayerInput;
//	memcpy ( &EventActionToggled_Parms.ActionName, &ActionName, 0x8 );
//	EventActionToggled_Parms.bEnabled = bEnabled;
//
//	this->ProcessEvent ( pFnEventActionToggled, &EventActionToggled_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.ReportCheater
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            Id                             ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void UPsyNet_X::ReportCheater ( struct FUniqueNetId Id, struct FString Reason )
//{
//	static UFunction* pFnReportCheater = NULL;
//
//	if ( ! pFnReportCheater )
//		pFnReportCheater = (UFunction*) UObject::GObjObjects()->Data[ 48831 ];
//
//	UPsyNet_X_execReportCheater_Parms ReportCheater_Parms;
//	memcpy ( &ReportCheater_Parms.Id, &Id, 0x48 );
//	memcpy ( &ReportCheater_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnReportCheater, &ReportCheater_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.DecodeBinaryDataFromString
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< unsigned char >        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )
//
//TArray< unsigned char > UPsyNet_X::DecodeBinaryDataFromString ( struct FString S )
//{
//	static UFunction* pFnDecodeBinaryDataFromString = NULL;
//
//	if ( ! pFnDecodeBinaryDataFromString )
//		pFnDecodeBinaryDataFromString = (UFunction*) UObject::GObjObjects()->Data[ 55267 ];
//
//	UPsyNet_X_execDecodeBinaryDataFromString_Parms DecodeBinaryDataFromString_Parms;
//	memcpy ( &DecodeBinaryDataFromString_Parms.S, &S, 0xC );
//
//	pFnDecodeBinaryDataFromString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDecodeBinaryDataFromString, &DecodeBinaryDataFromString_Parms, NULL );
//
//	pFnDecodeBinaryDataFromString->FunctionFlags |= 0x400;
//
//	return DecodeBinaryDataFromString_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.EncodeBinaryDataToString
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< unsigned char >        B                              ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UPsyNet_X::EncodeBinaryDataToString ( TArray< unsigned char > B )
//{
//	static UFunction* pFnEncodeBinaryDataToString = NULL;
//
//	if ( ! pFnEncodeBinaryDataToString )
//		pFnEncodeBinaryDataToString = (UFunction*) UObject::GObjObjects()->Data[ 55276 ];
//
//	UPsyNet_X_execEncodeBinaryDataToString_Parms EncodeBinaryDataToString_Parms;
//	memcpy ( &EncodeBinaryDataToString_Parms.B, &B, 0xC );
//
//	pFnEncodeBinaryDataToString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnEncodeBinaryDataToString, &EncodeBinaryDataToString_Parms, NULL );
//
//	pFnEncodeBinaryDataToString->FunctionFlags |= 0x400;
//
//	return EncodeBinaryDataToString_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.AssignQWordToString
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UPsyNet_X::AssignQWordToString ( )
//{
//	static UFunction* pFnAssignQWordToString = NULL;
//
//	if ( ! pFnAssignQWordToString )
//		pFnAssignQWordToString = (UFunction*) UObject::GObjObjects()->Data[ 55280 ];
//
//	UPsyNet_X_execAssignQWordToString_Parms AssignQWordToString_Parms;
//
//	pFnAssignQWordToString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAssignQWordToString, &AssignQWordToString_Parms, NULL );
//
//	pFnAssignQWordToString->FunctionFlags |= 0x400;
//
//	return AssignQWordToString_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.AssignStringToQWord
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNet_X::AssignStringToQWord ( struct FString S )
//{
//	static UFunction* pFnAssignStringToQWord = NULL;
//
//	if ( ! pFnAssignStringToQWord )
//		pFnAssignStringToQWord = (UFunction*) UObject::GObjObjects()->Data[ 55284 ];
//
//	UPsyNet_X_execAssignStringToQWord_Parms AssignStringToQWord_Parms;
//	memcpy ( &AssignStringToQWord_Parms.S, &S, 0xC );
//
//	pFnAssignStringToQWord->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAssignStringToQWord, &AssignStringToQWord_Parms, NULL );
//
//	pFnAssignStringToQWord->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNet_X.GetRetryDelay
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            Failures                       ( CPF_Parm )
//// TArray< float >                Delays                         ( CPF_Parm | CPF_NeedCtorLink )
//
//float UPsyNet_X::GetRetryDelay ( int Failures, TArray< float > Delays )
//{
//	static UFunction* pFnGetRetryDelay = NULL;
//
//	if ( ! pFnGetRetryDelay )
//		pFnGetRetryDelay = (UFunction*) UObject::GObjObjects()->Data[ 55287 ];
//
//	UPsyNet_X_execGetRetryDelay_Parms GetRetryDelay_Parms;
//	GetRetryDelay_Parms.Failures = Failures;
//	memcpy ( &GetRetryDelay_Parms.Delays, &Delays, 0xC );
//
//	pFnGetRetryDelay->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetRetryDelay, &GetRetryDelay_Parms, NULL );
//
//	pFnGetRetryDelay->FunctionFlags |= 0x400;
//
//	return GetRetryDelay_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.ConnectionChangedIP
//// [0x00022803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UPsyNet_X::eventConnectionChangedIP ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnConnectionChangedIP = NULL;
//
//	if ( ! pFnConnectionChangedIP )
//		pFnConnectionChangedIP = (UFunction*) UObject::GObjObjects()->Data[ 55290 ];
//
//	UPsyNet_X_eventConnectionChangedIP_Parms ConnectionChangedIP_Parms;
//	memcpy ( &ConnectionChangedIP_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnConnectionChangedIP, &ConnectionChangedIP_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.NetworkError
//// [0x00022803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNet_X::eventNetworkError ( struct FUniqueNetId PlayerID, struct FString Reason )
//{
//	static UFunction* pFnNetworkError = NULL;
//
//	if ( ! pFnNetworkError )
//		pFnNetworkError = (UFunction*) UObject::GObjObjects()->Data[ 55295 ];
//
//	UPsyNet_X_eventNetworkError_Parms NetworkError_Parms;
//	memcpy ( &NetworkError_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &NetworkError_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnNetworkError, &NetworkError_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.InitHeaders
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UPsyNet_X::InitHeaders ( )
//{
//	static UFunction* pFnInitHeaders = NULL;
//
//	if ( ! pFnInitHeaders )
//		pFnInitHeaders = (UFunction*) UObject::GObjObjects()->Data[ 55265 ];
//
//	UPsyNet_X_execInitHeaders_Parms InitHeaders_Parms;
//
//	pFnInitHeaders->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitHeaders, &InitHeaders_Parms, NULL );
//
//	pFnInitHeaders->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNet_X.NotifyWhenLoggedIn
//// [0x00024002] 
//// Parameters infos:
//// struct FScriptDelegate         LoginCallback                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         LogoutCallback                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNet_X::NotifyWhenLoggedIn ( struct FScriptDelegate LoginCallback, struct FScriptDelegate LogoutCallback )
//{
//	static UFunction* pFnNotifyWhenLoggedIn = NULL;
//
//	if ( ! pFnNotifyWhenLoggedIn )
//		pFnNotifyWhenLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 55301 ];
//
//	UPsyNet_X_execNotifyWhenLoggedIn_Parms NotifyWhenLoggedIn_Parms;
//	memcpy ( &NotifyWhenLoggedIn_Parms.LoginCallback, &LoginCallback, 0x10 );
//	memcpy ( &NotifyWhenLoggedIn_Parms.LogoutCallback, &LogoutCallback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyWhenLoggedIn, &NotifyWhenLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.SetPrimaryAuthedConnection
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNet_X::SetPrimaryAuthedConnection ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnSetPrimaryAuthedConnection = NULL;
//
//	if ( ! pFnSetPrimaryAuthedConnection )
//		pFnSetPrimaryAuthedConnection = (UFunction*) UObject::GObjObjects()->Data[ 55302 ];
//
//	UPsyNet_X_execSetPrimaryAuthedConnection_Parms SetPrimaryAuthedConnection_Parms;
//	SetPrimaryAuthedConnection_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnSetPrimaryAuthedConnection, &SetPrimaryAuthedConnection_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.HandleConnectionChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNet_X::HandleConnectionChanged ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnHandleConnectionChanged = NULL;
//
//	if ( ! pFnHandleConnectionChanged )
//		pFnHandleConnectionChanged = (UFunction*) UObject::GObjObjects()->Data[ 55309 ];
//
//	UPsyNet_X_execHandleConnectionChanged_Parms HandleConnectionChanged_Parms;
//	HandleConnectionChanged_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnHandleConnectionChanged, &HandleConnectionChanged_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.GetPrimaryConnection
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UPsyNetConnection_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPsyNetConnection_X* UPsyNet_X::GetPrimaryConnection ( )
//{
//	static UFunction* pFnGetPrimaryConnection = NULL;
//
//	if ( ! pFnGetPrimaryConnection )
//		pFnGetPrimaryConnection = (UFunction*) UObject::GObjObjects()->Data[ 55311 ];
//
//	UPsyNet_X_execGetPrimaryConnection_Parms GetPrimaryConnection_Parms;
//
//	pFnGetPrimaryConnection->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetPrimaryConnection, &GetPrimaryConnection_Parms, NULL );
//
//	pFnGetPrimaryConnection->FunctionFlags |= 0x400;
//
//	return GetPrimaryConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.HandleServiceExecuted
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetServiceProvider_X* P                              ( CPF_Parm )
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void UPsyNet_X::HandleServiceExecuted ( class UPsyNetServiceProvider_X* P, class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnHandleServiceExecuted = NULL;
//
//	if ( ! pFnHandleServiceExecuted )
//		pFnHandleServiceExecuted = (UFunction*) UObject::GObjObjects()->Data[ 55314 ];
//
//	UPsyNet_X_execHandleServiceExecuted_Parms HandleServiceExecuted_Parms;
//	HandleServiceExecuted_Parms.P = P;
//	HandleServiceExecuted_Parms.Service = Service;
//
//	this->ProcessEvent ( pFnHandleServiceExecuted, &HandleServiceExecuted_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.InitServices
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNet_X::InitServices ( )
//{
//	static UFunction* pFnInitServices = NULL;
//
//	if ( ! pFnInitServices )
//		pFnInitServices = (UFunction*) UObject::GObjObjects()->Data[ 55266 ];
//
//	UPsyNet_X_execInitServices_Parms InitServices_Parms;
//
//	this->ProcessEvent ( pFnInitServices, &InitServices_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.Init
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNet_X::eventInit ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55264 ];
//
//	UPsyNet_X_eventInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.Flush
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          TimeoutSeconds                 ( CPF_Parm )
//
//void UPsyNet_X::Flush ( float TimeoutSeconds )
//{
//	static UFunction* pFnFlush = NULL;
//
//	if ( ! pFnFlush )
//		pFnFlush = (UFunction*) UObject::GObjObjects()->Data[ 55261 ];
//
//	UPsyNet_X_execFlush_Parms Flush_Parms;
//	Flush_Parms.TimeoutSeconds = TimeoutSeconds;
//
//	pFnFlush->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlush, &Flush_Parms, NULL );
//
//	pFnFlush->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNet_X.QueueRPC
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//class URPC_X* UPsyNet_X::QueueRPC ( class URPC_X* RPC )
//{
//	static UFunction* pFnQueueRPC = NULL;
//
//	if ( ! pFnQueueRPC )
//		pFnQueueRPC = (UFunction*) UObject::GObjObjects()->Data[ 55262 ];
//
//	UPsyNet_X_execQueueRPC_Parms QueueRPC_Parms;
//	QueueRPC_Parms.RPC = RPC;
//
//	pFnQueueRPC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnQueueRPC, &QueueRPC_Parms, NULL );
//
//	pFnQueueRPC->FunctionFlags |= 0x400;
//
//	return QueueRPC_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.RPC
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  RPCClass                       ( CPF_Parm )
//
//class URPC_X* UPsyNet_X::RPC ( class UClass* RPCClass )
//{
//	static UFunction* pFnRPC = NULL;
//
//	if ( ! pFnRPC )
//		pFnRPC = (UFunction*) UObject::GObjObjects()->Data[ 50767 ];
//
//	UPsyNet_X_execRPC_Parms RPC_Parms;
//	RPC_Parms.RPCClass = RPCClass;
//
//	pFnRPC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRPC, &RPC_Parms, NULL );
//
//	pFnRPC->FunctionFlags |= 0x400;
//
//	return RPC_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.GetInstance
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UPsyNet_X*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPsyNet_X* UPsyNet_X::GetInstance ( )
//{
//	static UFunction* pFnGetInstance = NULL;
//
//	if ( ! pFnGetInstance )
//		pFnGetInstance = (UFunction*) UObject::GObjObjects()->Data[ 50508 ];
//
//	UPsyNet_X_execGetInstance_Parms GetInstance_Parms;
//
//	pFnGetInstance->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetInstance, &GetInstance_Parms, NULL );
//
//	pFnGetInstance->FunctionFlags |= 0x400;
//
//	return GetInstance_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNet_X.EventPrimaryPlayerLoggedOut
//// [0x00120000] 
//// Parameters infos:
//
//void UPsyNet_X::EventPrimaryPlayerLoggedOut ( )
//{
//	static UFunction* pFnEventPrimaryPlayerLoggedOut = NULL;
//
//	if ( ! pFnEventPrimaryPlayerLoggedOut )
//		pFnEventPrimaryPlayerLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 55259 ];
//
//	UPsyNet_X_execEventPrimaryPlayerLoggedOut_Parms EventPrimaryPlayerLoggedOut_Parms;
//
//	this->ProcessEvent ( pFnEventPrimaryPlayerLoggedOut, &EventPrimaryPlayerLoggedOut_Parms, NULL );
//};
//
//// Function ProjectX.PsyNet_X.EventPrimaryPlayerLoggedIn
//// [0x00120000] 
//// Parameters infos:
//
//void UPsyNet_X::EventPrimaryPlayerLoggedIn ( )
//{
//	static UFunction* pFnEventPrimaryPlayerLoggedIn = NULL;
//
//	if ( ! pFnEventPrimaryPlayerLoggedIn )
//		pFnEventPrimaryPlayerLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 55308 ];
//
//	UPsyNet_X_execEventPrimaryPlayerLoggedIn_Parms EventPrimaryPlayerLoggedIn_Parms;
//
//	this->ProcessEvent ( pFnEventPrimaryPlayerLoggedIn, &EventPrimaryPlayerLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetClientService_X.Execute
//// [0x00020000] 
//// Parameters infos:
//
//void UPsyNetClientService_X::Execute ( )
//{
//	static UFunction* pFnExecute = NULL;
//
//	if ( ! pFnExecute )
//		pFnExecute = (UFunction*) UObject::GObjObjects()->Data[ 58171 ];
//
//	UPsyNetClientService_X_execExecute_Parms Execute_Parms;
//
//	this->ProcessEvent ( pFnExecute, &Execute_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetClientService_X.SetError
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UError*                  InError                        ( CPF_Parm )
//
//void UPsyNetClientService_X::SetError ( class UError* InError )
//{
//	static UFunction* pFnSetError = NULL;
//
//	if ( ! pFnSetError )
//		pFnSetError = (UFunction*) UObject::GObjObjects()->Data[ 58169 ];
//
//	UPsyNetClientService_X_execSetError_Parms SetError_Parms;
//	SetError_Parms.InError = InError;
//
//	pFnSetError->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetError, &SetError_Parms, NULL );
//
//	pFnSetError->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetClientServiceCollection_X.GetServiceArchetype
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UPsyNetClientService_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ServiceName                    ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Version                        ( CPF_Parm )
//
//class UPsyNetClientService_X* UPsyNetClientServiceCollection_X::GetServiceArchetype ( struct FString ServiceName, int Version )
//{
//	static UFunction* pFnGetServiceArchetype = NULL;
//
//	if ( ! pFnGetServiceArchetype )
//		pFnGetServiceArchetype = (UFunction*) UObject::GObjObjects()->Data[ 58176 ];
//
//	UPsyNetClientServiceCollection_X_execGetServiceArchetype_Parms GetServiceArchetype_Parms;
//	memcpy ( &GetServiceArchetype_Parms.ServiceName, &ServiceName, 0xC );
//	GetServiceArchetype_Parms.Version = Version;
//
//	pFnGetServiceArchetype->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetServiceArchetype, &GetServiceArchetype_Parms, NULL );
//
//	pFnGetServiceArchetype->FunctionFlags |= 0x400;
//
//	return GetServiceArchetype_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetClientServiceCollection_X.CollectServiceArchetypes
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UPsyNetClientServiceCollection_X::CollectServiceArchetypes ( )
//{
//	static UFunction* pFnCollectServiceArchetypes = NULL;
//
//	if ( ! pFnCollectServiceArchetypes )
//		pFnCollectServiceArchetypes = (UFunction*) UObject::GObjObjects()->Data[ 58175 ];
//
//	UPsyNetClientServiceCollection_X_execCollectServiceArchetypes_Parms CollectServiceArchetypes_Parms;
//
//	pFnCollectServiceArchetypes->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCollectServiceArchetypes, &CollectServiceArchetypes_Parms, NULL );
//
//	pFnCollectServiceArchetypes->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetClientServiceCollection_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNetClientServiceCollection_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58174 ];
//
//	UPsyNetClientServiceCollection_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.SendPingMessage
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//
//void UPsyNetConnection_X::eventSendPingMessage ( )
//{
//	static UFunction* pFnSendPingMessage = NULL;
//
//	if ( ! pFnSendPingMessage )
//		pFnSendPingMessage = (UFunction*) UObject::GObjObjects()->Data[ 58294 ];
//
//	UPsyNetConnection_X_eventSendPingMessage_Parms SendPingMessage_Parms;
//
//	this->ProcessEvent ( pFnSendPingMessage, &SendPingMessage_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.WatchPerConConnection
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         OnConnected                    ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         OnDisconnected                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetConnection_X::WatchPerConConnection ( struct FScriptDelegate OnConnected, struct FScriptDelegate OnDisconnected )
//{
//	static UFunction* pFnWatchPerConConnection = NULL;
//
//	if ( ! pFnWatchPerConConnection )
//		pFnWatchPerConConnection = (UFunction*) UObject::GObjObjects()->Data[ 58295 ];
//
//	UPsyNetConnection_X_execWatchPerConConnection_Parms WatchPerConConnection_Parms;
//	memcpy ( &WatchPerConConnection_Parms.OnConnected, &OnConnected, 0x10 );
//	memcpy ( &WatchPerConConnection_Parms.OnDisconnected, &OnDisconnected, 0x10 );
//
//	this->ProcessEvent ( pFnWatchPerConConnection, &WatchPerConConnection_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.WatchConnection
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         OnConnected                    ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         OnDisconnected                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetConnection_X::WatchConnection ( struct FScriptDelegate OnConnected, struct FScriptDelegate OnDisconnected )
//{
//	static UFunction* pFnWatchConnection = NULL;
//
//	if ( ! pFnWatchConnection )
//		pFnWatchConnection = (UFunction*) UObject::GObjObjects()->Data[ 58297 ];
//
//	UPsyNetConnection_X_execWatchConnection_Parms WatchConnection_Parms;
//	memcpy ( &WatchConnection_Parms.OnConnected, &OnConnected, 0x10 );
//	memcpy ( &WatchConnection_Parms.OnDisconnected, &OnDisconnected, 0x10 );
//
//	this->ProcessEvent ( pFnWatchConnection, &WatchConnection_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.Dispose
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNetConnection_X::eventDispose ( )
//{
//	static UFunction* pFnDispose = NULL;
//
//	if ( ! pFnDispose )
//		pFnDispose = (UFunction*) UObject::GObjObjects()->Data[ 58293 ];
//
//	UPsyNetConnection_X_eventDispose_Parms Dispose_Parms;
//
//	this->ProcessEvent ( pFnDispose, &Dispose_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.UpdateLinkConnection
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bHasConnection                 ( CPF_Parm )
//
//void UPsyNetConnection_X::UpdateLinkConnection ( unsigned long bHasConnection )
//{
//	static UFunction* pFnUpdateLinkConnection = NULL;
//
//	if ( ! pFnUpdateLinkConnection )
//		pFnUpdateLinkConnection = (UFunction*) UObject::GObjObjects()->Data[ 58210 ];
//
//	UPsyNetConnection_X_execUpdateLinkConnection_Parms UpdateLinkConnection_Parms;
//	UpdateLinkConnection_Parms.bHasConnection = bHasConnection;
//
//	this->ProcessEvent ( pFnUpdateLinkConnection, &UpdateLinkConnection_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.ClearDuplicateLoginError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::ClearDuplicateLoginError ( )
//{
//	static UFunction* pFnClearDuplicateLoginError = NULL;
//
//	if ( ! pFnClearDuplicateLoginError )
//		pFnClearDuplicateLoginError = (UFunction*) UObject::GObjObjects()->Data[ 58291 ];
//
//	UPsyNetConnection_X_execClearDuplicateLoginError_Parms ClearDuplicateLoginError_Parms;
//
//	this->ProcessEvent ( pFnClearDuplicateLoginError, &ClearDuplicateLoginError_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.OnDuplicateLogin
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::OnDuplicateLogin ( )
//{
//	static UFunction* pFnOnDuplicateLogin = NULL;
//
//	if ( ! pFnOnDuplicateLogin )
//		pFnOnDuplicateLogin = (UFunction*) UObject::GObjObjects()->Data[ 58288 ];
//
//	UPsyNetConnection_X_execOnDuplicateLogin_Parms OnDuplicateLogin_Parms;
//
//	this->ProcessEvent ( pFnOnDuplicateLogin, &OnDuplicateLogin_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.HandleDuplicateLoginMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void UPsyNetConnection_X::HandleDuplicateLoginMessage ( class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnHandleDuplicateLoginMessage = NULL;
//
//	if ( ! pFnHandleDuplicateLoginMessage )
//		pFnHandleDuplicateLoginMessage = (UFunction*) UObject::GObjObjects()->Data[ 58289 ];
//
//	UPsyNetConnection_X_execHandleDuplicateLoginMessage_Parms HandleDuplicateLoginMessage_Parms;
//	HandleDuplicateLoginMessage_Parms.Service = Service;
//
//	this->ProcessEvent ( pFnHandleDuplicateLoginMessage, &HandleDuplicateLoginMessage_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.HandleWebSocketDisconnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* WS                             ( CPF_Parm )
//// int                            Code                           ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetConnection_X::HandleWebSocketDisconnect ( class UPsyNetMessengerWebSocket_X* WS, int Code, struct FString Reason )
//{
//	static UFunction* pFnHandleWebSocketDisconnect = NULL;
//
//	if ( ! pFnHandleWebSocketDisconnect )
//		pFnHandleWebSocketDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 58284 ];
//
//	UPsyNetConnection_X_execHandleWebSocketDisconnect_Parms HandleWebSocketDisconnect_Parms;
//	HandleWebSocketDisconnect_Parms.WS = WS;
//	HandleWebSocketDisconnect_Parms.Code = Code;
//	memcpy ( &HandleWebSocketDisconnect_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnHandleWebSocketDisconnect, &HandleWebSocketDisconnect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.HandleWebSocketConnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* WS                             ( CPF_Parm )
//
//void UPsyNetConnection_X::HandleWebSocketConnect ( class UPsyNetMessengerWebSocket_X* WS )
//{
//	static UFunction* pFnHandleWebSocketConnect = NULL;
//
//	if ( ! pFnHandleWebSocketConnect )
//		pFnHandleWebSocketConnect = (UFunction*) UObject::GObjObjects()->Data[ 58282 ];
//
//	UPsyNetConnection_X_execHandleWebSocketConnect_Parms HandleWebSocketConnect_Parms;
//	HandleWebSocketConnect_Parms.WS = WS;
//
//	this->ProcessEvent ( pFnHandleWebSocketConnect, &HandleWebSocketConnect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.HasWebSocketConnection
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UPsyNetConnection_X::HasWebSocketConnection ( )
//{
//	static UFunction* pFnHasWebSocketConnection = NULL;
//
//	if ( ! pFnHasWebSocketConnection )
//		pFnHasWebSocketConnection = (UFunction*) UObject::GObjObjects()->Data[ 58277 ];
//
//	UPsyNetConnection_X_execHasWebSocketConnection_Parms HasWebSocketConnection_Parms;
//
//	this->ProcessEvent ( pFnHasWebSocketConnection, &HasWebSocketConnection_Parms, NULL );
//
//	return HasWebSocketConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.UpdateConnectionState
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::UpdateConnectionState ( )
//{
//	static UFunction* pFnUpdateConnectionState = NULL;
//
//	if ( ! pFnUpdateConnectionState )
//		pFnUpdateConnectionState = (UFunction*) UObject::GObjObjects()->Data[ 58223 ];
//
//	UPsyNetConnection_X_execUpdateConnectionState_Parms UpdateConnectionState_Parms;
//
//	this->ProcessEvent ( pFnUpdateConnectionState, &UpdateConnectionState_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.ClearMaintenance
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::ClearMaintenance ( )
//{
//	static UFunction* pFnClearMaintenance = NULL;
//
//	if ( ! pFnClearMaintenance )
//		pFnClearMaintenance = (UFunction*) UObject::GObjObjects()->Data[ 58276 ];
//
//	UPsyNetConnection_X_execClearMaintenance_Parms ClearMaintenance_Parms;
//
//	this->ProcessEvent ( pFnClearMaintenance, &ClearMaintenance_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.HandleErrorRPC
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPCQueue_X*             InQueue                        ( CPF_Parm | CPF_EditInline )
//// class URPC_X*                  InRPC                          ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetConnection_X::HandleErrorRPC ( class URPCQueue_X* InQueue, class URPC_X* InRPC, class UError* Error )
//{
//	static UFunction* pFnHandleErrorRPC = NULL;
//
//	if ( ! pFnHandleErrorRPC )
//		pFnHandleErrorRPC = (UFunction*) UObject::GObjObjects()->Data[ 58272 ];
//
//	UPsyNetConnection_X_execHandleErrorRPC_Parms HandleErrorRPC_Parms;
//	HandleErrorRPC_Parms.InQueue = InQueue;
//	HandleErrorRPC_Parms.InRPC = InRPC;
//	HandleErrorRPC_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleErrorRPC, &HandleErrorRPC_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.UpdateDisabledError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_Parm )
//// class UErrorType*              Type                           ( CPF_Parm )
//// unsigned long                  bIsError                       ( CPF_Parm )
//
//class UError* UPsyNetConnection_X::UpdateDisabledError ( class UError* Error, class UErrorType* Type, unsigned long bIsError )
//{
//	static UFunction* pFnUpdateDisabledError = NULL;
//
//	if ( ! pFnUpdateDisabledError )
//		pFnUpdateDisabledError = (UFunction*) UObject::GObjObjects()->Data[ 54413 ];
//
//	UPsyNetConnection_X_execUpdateDisabledError_Parms UpdateDisabledError_Parms;
//	UpdateDisabledError_Parms.Error = Error;
//	UpdateDisabledError_Parms.Type = Type;
//	UpdateDisabledError_Parms.bIsError = bIsError;
//
//	this->ProcessEvent ( pFnUpdateDisabledError, &UpdateDisabledError_Parms, NULL );
//
//	return UpdateDisabledError_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.AddDisabledError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetConnection_X::AddDisabledError ( class UError* Error )
//{
//	static UFunction* pFnAddDisabledError = NULL;
//
//	if ( ! pFnAddDisabledError )
//		pFnAddDisabledError = (UFunction*) UObject::GObjObjects()->Data[ 54313 ];
//
//	UPsyNetConnection_X_execAddDisabledError_Parms AddDisabledError_Parms;
//	AddDisabledError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnAddDisabledError, &AddDisabledError_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.RemoveDisabledError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetConnection_X::RemoveDisabledError ( class UError* Error )
//{
//	static UFunction* pFnRemoveDisabledError = NULL;
//
//	if ( ! pFnRemoveDisabledError )
//		pFnRemoveDisabledError = (UFunction*) UObject::GObjObjects()->Data[ 58266 ];
//
//	UPsyNetConnection_X_execRemoveDisabledError_Parms RemoveDisabledError_Parms;
//	RemoveDisabledError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnRemoveDisabledError, &RemoveDisabledError_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.Flush
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          TimeoutSeconds                 ( CPF_Parm )
//
//void UPsyNetConnection_X::Flush ( float TimeoutSeconds )
//{
//	static UFunction* pFnFlush = NULL;
//
//	if ( ! pFnFlush )
//		pFnFlush = (UFunction*) UObject::GObjObjects()->Data[ 54384 ];
//
//	UPsyNetConnection_X_execFlush_Parms Flush_Parms;
//	Flush_Parms.TimeoutSeconds = TimeoutSeconds;
//
//	pFnFlush->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFlush, &Flush_Parms, NULL );
//
//	pFnFlush->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetConnection_X.QueueRPC
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//class URPC_X* UPsyNetConnection_X::QueueRPC ( class URPC_X* RPC )
//{
//	static UFunction* pFnQueueRPC = NULL;
//
//	if ( ! pFnQueueRPC )
//		pFnQueueRPC = (UFunction*) UObject::GObjObjects()->Data[ 58262 ];
//
//	UPsyNetConnection_X_execQueueRPC_Parms QueueRPC_Parms;
//	QueueRPC_Parms.RPC = RPC;
//
//	pFnQueueRPC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnQueueRPC, &QueueRPC_Parms, NULL );
//
//	pFnQueueRPC->FunctionFlags |= 0x400;
//
//	return QueueRPC_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.RPC
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm )
//// class UClass*                  RPCClass                       ( CPF_Parm )
//
//class URPC_X* UPsyNetConnection_X::RPC ( class UClass* RPCClass )
//{
//	static UFunction* pFnRPC = NULL;
//
//	if ( ! pFnRPC )
//		pFnRPC = (UFunction*) UObject::GObjObjects()->Data[ 51604 ];
//
//	UPsyNetConnection_X_execRPC_Parms RPC_Parms;
//	RPC_Parms.RPCClass = RPCClass;
//
//	pFnRPC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRPC, &RPC_Parms, NULL );
//
//	pFnRPC->FunctionFlags |= 0x400;
//
//	return RPC_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.ProcessServiceCall
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//bool UPsyNetConnection_X::ProcessServiceCall ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnProcessServiceCall = NULL;
//
//	if ( ! pFnProcessServiceCall )
//		pFnProcessServiceCall = (UFunction*) UObject::GObjObjects()->Data[ 58250 ];
//
//	UPsyNetConnection_X_execProcessServiceCall_Parms ProcessServiceCall_Parms;
//	ProcessServiceCall_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnProcessServiceCall, &ProcessServiceCall_Parms, NULL );
//
//	return ProcessServiceCall_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.ProcessMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//void UPsyNetConnection_X::ProcessMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnProcessMessage = NULL;
//
//	if ( ! pFnProcessMessage )
//		pFnProcessMessage = (UFunction*) UObject::GObjObjects()->Data[ 58246 ];
//
//	UPsyNetConnection_X_execProcessMessage_Parms ProcessMessage_Parms;
//	ProcessMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnProcessMessage, &ProcessMessage_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.ReceiveMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//void UPsyNetConnection_X::ReceiveMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnReceiveMessage = NULL;
//
//	if ( ! pFnReceiveMessage )
//		pFnReceiveMessage = (UFunction*) UObject::GObjObjects()->Data[ 58244 ];
//
//	UPsyNetConnection_X_execReceiveMessage_Parms ReceiveMessage_Parms;
//	ReceiveMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnReceiveMessage, &ReceiveMessage_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.SendRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Request                        ( CPF_Parm )
//
//class USendRequestTask* UPsyNetConnection_X::SendRequest ( class UPsyNetMessage_X* Request )
//{
//	static UFunction* pFnSendRequest = NULL;
//
//	if ( ! pFnSendRequest )
//		pFnSendRequest = (UFunction*) UObject::GObjObjects()->Data[ 58239 ];
//
//	UPsyNetConnection_X_execSendRequest_Parms SendRequest_Parms;
//	SendRequest_Parms.Request = Request;
//
//	this->ProcessEvent ( pFnSendRequest, &SendRequest_Parms, NULL );
//
//	return SendRequest_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.SendMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UAsyncTask* UPsyNetConnection_X::SendMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendMessage = NULL;
//
//	if ( ! pFnSendMessage )
//		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 57176 ];
//
//	UPsyNetConnection_X_execSendMessage_Parms SendMessage_Parms;
//	SendMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
//
//	return SendMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.RemoveHeader
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetConnection_X::RemoveHeader ( struct FString Key )
//{
//	static UFunction* pFnRemoveHeader = NULL;
//
//	if ( ! pFnRemoveHeader )
//		pFnRemoveHeader = (UFunction*) UObject::GObjObjects()->Data[ 54422 ];
//
//	UPsyNetConnection_X_execRemoveHeader_Parms RemoveHeader_Parms;
//	memcpy ( &RemoveHeader_Parms.Key, &Key, 0xC );
//
//	this->ProcessEvent ( pFnRemoveHeader, &RemoveHeader_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.SetHeader
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetConnection_X::SetHeader ( struct FString Key, struct FString Value )
//{
//	static UFunction* pFnSetHeader = NULL;
//
//	if ( ! pFnSetHeader )
//		pFnSetHeader = (UFunction*) UObject::GObjObjects()->Data[ 54425 ];
//
//	UPsyNetConnection_X_execSetHeader_Parms SetHeader_Parms;
//	memcpy ( &SetHeader_Parms.Key, &Key, 0xC );
//	memcpy ( &SetHeader_Parms.Value, &Value, 0xC );
//
//	this->ProcessEvent ( pFnSetHeader, &SetHeader_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.SetAuthorized
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bAuth                          ( CPF_Parm )
//
//void UPsyNetConnection_X::SetAuthorized ( unsigned long bAuth )
//{
//	static UFunction* pFnSetAuthorized = NULL;
//
//	if ( ! pFnSetAuthorized )
//		pFnSetAuthorized = (UFunction*) UObject::GObjObjects()->Data[ 51208 ];
//
//	UPsyNetConnection_X_execSetAuthorized_Parms SetAuthorized_Parms;
//	SetAuthorized_Parms.bAuth = bAuth;
//
//	this->ProcessEvent ( pFnSetAuthorized, &SetAuthorized_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.BuildHandshakeHeaders
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UStringMap*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UStringMap* UPsyNetConnection_X::BuildHandshakeHeaders ( )
//{
//	static UFunction* pFnBuildHandshakeHeaders = NULL;
//
//	if ( ! pFnBuildHandshakeHeaders )
//		pFnBuildHandshakeHeaders = (UFunction*) UObject::GObjObjects()->Data[ 58229 ];
//
//	UPsyNetConnection_X_execBuildHandshakeHeaders_Parms BuildHandshakeHeaders_Parms;
//
//	this->ProcessEvent ( pFnBuildHandshakeHeaders, &BuildHandshakeHeaders_Parms, NULL );
//
//	return BuildHandshakeHeaders_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.CreateWebSocketMessenger
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessenger_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPsyNetMessenger_X* UPsyNetConnection_X::CreateWebSocketMessenger ( )
//{
//	static UFunction* pFnCreateWebSocketMessenger = NULL;
//
//	if ( ! pFnCreateWebSocketMessenger )
//		pFnCreateWebSocketMessenger = (UFunction*) UObject::GObjObjects()->Data[ 58221 ];
//
//	UPsyNetConnection_X_execCreateWebSocketMessenger_Parms CreateWebSocketMessenger_Parms;
//
//	this->ProcessEvent ( pFnCreateWebSocketMessenger, &CreateWebSocketMessenger_Parms, NULL );
//
//	return CreateWebSocketMessenger_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.CreateHttpMessenger
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessenger_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPsyNetMessenger_X* UPsyNetConnection_X::CreateHttpMessenger ( )
//{
//	static UFunction* pFnCreateHttpMessenger = NULL;
//
//	if ( ! pFnCreateHttpMessenger )
//		pFnCreateHttpMessenger = (UFunction*) UObject::GObjObjects()->Data[ 58220 ];
//
//	UPsyNetConnection_X_execCreateHttpMessenger_Parms CreateHttpMessenger_Parms;
//
//	this->ProcessEvent ( pFnCreateHttpMessenger, &CreateHttpMessenger_Parms, NULL );
//
//	return CreateHttpMessenger_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.GetTransportType
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//unsigned char UPsyNetConnection_X::GetTransportType ( )
//{
//	static UFunction* pFnGetTransportType = NULL;
//
//	if ( ! pFnGetTransportType )
//		pFnGetTransportType = (UFunction*) UObject::GObjObjects()->Data[ 58219 ];
//
//	UPsyNetConnection_X_execGetTransportType_Parms GetTransportType_Parms;
//
//	this->ProcessEvent ( pFnGetTransportType, &GetTransportType_Parms, NULL );
//
//	return GetTransportType_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetConnection_X.KillMessenger
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::KillMessenger ( )
//{
//	static UFunction* pFnKillMessenger = NULL;
//
//	if ( ! pFnKillMessenger )
//		pFnKillMessenger = (UFunction*) UObject::GObjObjects()->Data[ 58218 ];
//
//	UPsyNetConnection_X_execKillMessenger_Parms KillMessenger_Parms;
//
//	this->ProcessEvent ( pFnKillMessenger, &KillMessenger_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.InitMessenger
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::InitMessenger ( )
//{
//	static UFunction* pFnInitMessenger = NULL;
//
//	if ( ! pFnInitMessenger )
//		pFnInitMessenger = (UFunction*) UObject::GObjObjects()->Data[ 58216 ];
//
//	UPsyNetConnection_X_execInitMessenger_Parms InitMessenger_Parms;
//
//	this->ProcessEvent ( pFnInitMessenger, &InitMessenger_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.InitServiceProvider
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::InitServiceProvider ( )
//{
//	static UFunction* pFnInitServiceProvider = NULL;
//
//	if ( ! pFnInitServiceProvider )
//		pFnInitServiceProvider = (UFunction*) UObject::GObjObjects()->Data[ 58209 ];
//
//	UPsyNetConnection_X_execInitServiceProvider_Parms InitServiceProvider_Parms;
//
//	this->ProcessEvent ( pFnInitServiceProvider, &InitServiceProvider_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.HandlePerConStatusChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPerCon_X*               P                              ( CPF_Parm )
//
//void UPsyNetConnection_X::HandlePerConStatusChanged ( class UPerCon_X* P )
//{
//	static UFunction* pFnHandlePerConStatusChanged = NULL;
//
//	if ( ! pFnHandlePerConStatusChanged )
//		pFnHandlePerConStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 58212 ];
//
//	UPsyNetConnection_X_execHandlePerConStatusChanged_Parms HandlePerConStatusChanged_Parms;
//	HandlePerConStatusChanged_Parms.P = P;
//
//	this->ProcessEvent ( pFnHandlePerConStatusChanged, &HandlePerConStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.InitPerCon
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::InitPerCon ( )
//{
//	static UFunction* pFnInitPerCon = NULL;
//
//	if ( ! pFnInitPerCon )
//		pFnInitPerCon = (UFunction*) UObject::GObjObjects()->Data[ 58208 ];
//
//	UPsyNetConnection_X_execInitPerCon_Parms InitPerCon_Parms;
//
//	this->ProcessEvent ( pFnInitPerCon, &InitPerCon_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.InitRPCQueue
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::InitRPCQueue ( )
//{
//	static UFunction* pFnInitRPCQueue = NULL;
//
//	if ( ! pFnInitRPCQueue )
//		pFnInitRPCQueue = (UFunction*) UObject::GObjObjects()->Data[ 58207 ];
//
//	UPsyNetConnection_X_execInitRPCQueue_Parms InitRPCQueue_Parms;
//
//	this->ProcessEvent ( pFnInitRPCQueue, &InitRPCQueue_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.InitRequestQue
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::InitRequestQue ( )
//{
//	static UFunction* pFnInitRequestQue = NULL;
//
//	if ( ! pFnInitRequestQue )
//		pFnInitRequestQue = (UFunction*) UObject::GObjObjects()->Data[ 58206 ];
//
//	UPsyNetConnection_X_execInitRequestQue_Parms InitRequestQue_Parms;
//
//	this->ProcessEvent ( pFnInitRequestQue, &InitRequestQue_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.InitHeaders
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetConnection_X::InitHeaders ( )
//{
//	static UFunction* pFnInitHeaders = NULL;
//
//	if ( ! pFnInitHeaders )
//		pFnInitHeaders = (UFunction*) UObject::GObjObjects()->Data[ 58205 ];
//
//	UPsyNetConnection_X_execInitHeaders_Parms InitHeaders_Parms;
//
//	this->ProcessEvent ( pFnInitHeaders, &InitHeaders_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNetConnection_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58204 ];
//
//	UPsyNetConnection_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.EventDisabled
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNetConnection_X::EventDisabled ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnEventDisabled = NULL;
//
//	if ( ! pFnEventDisabled )
//		pFnEventDisabled = (UFunction*) UObject::GObjObjects()->Data[ 58182 ];
//
//	UPsyNetConnection_X_execEventDisabled_Parms EventDisabled_Parms;
//	EventDisabled_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventDisabled, &EventDisabled_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.EventEnabled
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNetConnection_X::EventEnabled ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnEventEnabled = NULL;
//
//	if ( ! pFnEventEnabled )
//		pFnEventEnabled = (UFunction*) UObject::GObjObjects()->Data[ 58183 ];
//
//	UPsyNetConnection_X_execEventEnabled_Parms EventEnabled_Parms;
//	EventEnabled_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventEnabled, &EventEnabled_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.EventPerConDisconnected
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNetConnection_X::EventPerConDisconnected ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnEventPerConDisconnected = NULL;
//
//	if ( ! pFnEventPerConDisconnected )
//		pFnEventPerConDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58184 ];
//
//	UPsyNetConnection_X_execEventPerConDisconnected_Parms EventPerConDisconnected_Parms;
//	EventPerConDisconnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventPerConDisconnected, &EventPerConDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.EventPerConConnected
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNetConnection_X::EventPerConConnected ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnEventPerConConnected = NULL;
//
//	if ( ! pFnEventPerConConnected )
//		pFnEventPerConConnected = (UFunction*) UObject::GObjObjects()->Data[ 58185 ];
//
//	UPsyNetConnection_X_execEventPerConConnected_Parms EventPerConConnected_Parms;
//	EventPerConConnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventPerConConnected, &EventPerConConnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.EventDisconnected
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNetConnection_X::EventDisconnected ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnEventDisconnected = NULL;
//
//	if ( ! pFnEventDisconnected )
//		pFnEventDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58200 ];
//
//	UPsyNetConnection_X_execEventDisconnected_Parms EventDisconnected_Parms;
//	EventDisconnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventDisconnected, &EventDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetConnection_X.EventConnected
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UPsyNetConnection_X::EventConnected ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnEventConnected = NULL;
//
//	if ( ! pFnEventConnected )
//		pFnEventConnected = (UFunction*) UObject::GObjObjects()->Data[ 58302 ];
//
//	UPsyNetConnection_X_execEventConnected_Parms EventConnected_Parms;
//	EventConnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventConnected, &EventConnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetLocator_X.GetURL
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// unsigned char                  Environment                    ( CPF_Parm )
//
//struct FString UPsyNetLocator_X::GetURL ( unsigned char Environment )
//{
//	static UFunction* pFnGetURL = NULL;
//
//	if ( ! pFnGetURL )
//		pFnGetURL = (UFunction*) UObject::GObjObjects()->Data[ 56950 ];
//
//	UPsyNetLocator_X_execGetURL_Parms GetURL_Parms;
//	GetURL_Parms.Environment = Environment;
//
//	pFnGetURL->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetURL, &GetURL_Parms, NULL );
//
//	pFnGetURL->FunctionFlags |= 0x400;
//
//	return GetURL_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessage_X.GetBodyText
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UPsyNetMessage_X::GetBodyText ( )
//{
//	static UFunction* pFnGetBodyText = NULL;
//
//	if ( ! pFnGetBodyText )
//		pFnGetBodyText = (UFunction*) UObject::GObjObjects()->Data[ 58314 ];
//
//	UPsyNetMessage_X_execGetBodyText_Parms GetBodyText_Parms;
//
//	pFnGetBodyText->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetBodyText, &GetBodyText_Parms, NULL );
//
//	pFnGetBodyText->FunctionFlags |= 0x400;
//
//	return GetBodyText_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessage_X.SetBodyText
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetMessage_X::SetBodyText ( struct FString Value )
//{
//	static UFunction* pFnSetBodyText = NULL;
//
//	if ( ! pFnSetBodyText )
//		pFnSetBodyText = (UFunction*) UObject::GObjObjects()->Data[ 58312 ];
//
//	UPsyNetMessage_X_execSetBodyText_Parms SetBodyText_Parms;
//	memcpy ( &SetBodyText_Parms.Value, &Value, 0xC );
//
//	pFnSetBodyText->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetBodyText, &SetBodyText_Parms, NULL );
//
//	pFnSetBodyText->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetMessage_X.SetBody
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< unsigned char >        Value                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UPsyNetMessage_X::SetBody ( TArray< unsigned char >* Value )
//{
//	static UFunction* pFnSetBody = NULL;
//
//	if ( ! pFnSetBody )
//		pFnSetBody = (UFunction*) UObject::GObjObjects()->Data[ 58309 ];
//
//	UPsyNetMessage_X_execSetBody_Parms SetBody_Parms;
//
//	pFnSetBody->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetBody, &SetBody_Parms, NULL );
//
//	pFnSetBody->FunctionFlags |= 0x400;
//
//	if ( Value )
//		memcpy ( Value, &SetBody_Parms.Value, 0xC );
//};
//
//// Function ProjectX.PsyNetMessenger_X.Dispose
//// [0x00020800] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNetMessenger_X::eventDispose ( )
//{
//	static UFunction* pFnDispose = NULL;
//
//	if ( ! pFnDispose )
//		pFnDispose = (UFunction*) UObject::GObjObjects()->Data[ 58321 ];
//
//	UPsyNetMessenger_X_eventDispose_Parms Dispose_Parms;
//
//	this->ProcessEvent ( pFnDispose, &Dispose_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessenger_X.EventMessageReceived
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//void UPsyNetMessenger_X::EventMessageReceived ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnEventMessageReceived = NULL;
//
//	if ( ! pFnEventMessageReceived )
//		pFnEventMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 58319 ];
//
//	UPsyNetMessenger_X_execEventMessageReceived_Parms EventMessageReceived_Parms;
//	EventMessageReceived_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnEventMessageReceived, &EventMessageReceived_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessenger_X.SendMessage
//// [0x00020000] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UAsyncTask* UPsyNetMessenger_X::SendMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendMessage = NULL;
//
//	if ( ! pFnSendMessage )
//		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 58237 ];
//
//	UPsyNetMessenger_X_execSendMessage_Parms SendMessage_Parms;
//	SendMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
//
//	return SendMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessenger_X.Connect
//// [0x00020000] 
//// Parameters infos:
//
//void UPsyNetMessenger_X::Connect ( )
//{
//	static UFunction* pFnConnect = NULL;
//
//	if ( ! pFnConnect )
//		pFnConnect = (UFunction*) UObject::GObjObjects()->Data[ 58318 ];
//
//	UPsyNetMessenger_X_execConnect_Parms Connect_Parms;
//
//	this->ProcessEvent ( pFnConnect, &Connect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerHttp_X.CopyHeadersToMessage
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           From                           ( CPF_Parm )
//// class UPsyNetMessage_X*        To                             ( CPF_Parm )
//
//void UPsyNetMessengerHttp_X::CopyHeadersToMessage ( class UWebRequest_X* From, class UPsyNetMessage_X* To )
//{
//	static UFunction* pFnCopyHeadersToMessage = NULL;
//
//	if ( ! pFnCopyHeadersToMessage )
//		pFnCopyHeadersToMessage = (UFunction*) UObject::GObjObjects()->Data[ 58335 ];
//
//	UPsyNetMessengerHttp_X_execCopyHeadersToMessage_Parms CopyHeadersToMessage_Parms;
//	CopyHeadersToMessage_Parms.From = From;
//	CopyHeadersToMessage_Parms.To = To;
//
//	pFnCopyHeadersToMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCopyHeadersToMessage, &CopyHeadersToMessage_Parms, NULL );
//
//	pFnCopyHeadersToMessage->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetMessengerHttp_X.CopyHeadersToRequest
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UPsyNetMessage_X*        From                           ( CPF_Parm )
//// class UWebRequest_X*           To                             ( CPF_Parm )
//
//void UPsyNetMessengerHttp_X::CopyHeadersToRequest ( class UPsyNetMessage_X* From, class UWebRequest_X* To )
//{
//	static UFunction* pFnCopyHeadersToRequest = NULL;
//
//	if ( ! pFnCopyHeadersToRequest )
//		pFnCopyHeadersToRequest = (UFunction*) UObject::GObjObjects()->Data[ 58330 ];
//
//	UPsyNetMessengerHttp_X_execCopyHeadersToRequest_Parms CopyHeadersToRequest_Parms;
//	CopyHeadersToRequest_Parms.From = From;
//	CopyHeadersToRequest_Parms.To = To;
//
//	pFnCopyHeadersToRequest->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCopyHeadersToRequest, &CopyHeadersToRequest_Parms, NULL );
//
//	pFnCopyHeadersToRequest->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetMessengerHttp_X.HandleWebRequestComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PsyRequestID                   ( CPF_Parm | CPF_NeedCtorLink )
//// class UWebRequest_X*           Request                        ( CPF_Parm )
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UPsyNetMessengerHttp_X::HandleWebRequestComplete ( struct FString PsyRequestID, class UWebRequest_X* Request, class UAsyncTask* Task )
//{
//	static UFunction* pFnHandleWebRequestComplete = NULL;
//
//	if ( ! pFnHandleWebRequestComplete )
//		pFnHandleWebRequestComplete = (UFunction*) UObject::GObjObjects()->Data[ 57184 ];
//
//	UPsyNetMessengerHttp_X_execHandleWebRequestComplete_Parms HandleWebRequestComplete_Parms;
//	memcpy ( &HandleWebRequestComplete_Parms.PsyRequestID, &PsyRequestID, 0xC );
//	HandleWebRequestComplete_Parms.Request = Request;
//	HandleWebRequestComplete_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnHandleWebRequestComplete, &HandleWebRequestComplete_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerHttp_X.SendMessage
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UAsyncTask* UPsyNetMessengerHttp_X::SendMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendMessage = NULL;
//
//	if ( ! pFnSendMessage )
//		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 58325 ];
//
//	UPsyNetMessengerHttp_X_execSendMessage_Parms SendMessage_Parms;
//	SendMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
//
//	return SendMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessengerHttp_X.Init
//// [0x00020002] 
//// Parameters infos:
//// unsigned char                  Environment                    ( CPF_Parm )
//
//void UPsyNetMessengerHttp_X::Init ( unsigned char Environment )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58323 ];
//
//	UPsyNetMessengerHttp_X_execInit_Parms Init_Parms;
//	Init_Parms.Environment = Environment;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.__PsyNetMessengerWebSocket_X__SendQueuedMessages
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FQueuedPsyNetMessage    QueuedMessage                  ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::__PsyNetMessengerWebSocket_X__SendQueuedMessages ( struct FQueuedPsyNetMessage QueuedMessage )
//{
//	static UFunction* pFn__PsyNetMessengerWebSocket_X__SendQueuedMessages = NULL;
//
//	if ( ! pFn__PsyNetMessengerWebSocket_X__SendQueuedMessages )
//		pFn__PsyNetMessengerWebSocket_X__SendQueuedMessages = (UFunction*) UObject::GObjObjects()->Data[ 58406 ];
//
//	UPsyNetMessengerWebSocket_X_exec__PsyNetMessengerWebSocket_X__SendQueuedMessages_Parms __PsyNetMessengerWebSocket_X__SendQueuedMessages_Parms;
//	memcpy ( &__PsyNetMessengerWebSocket_X__SendQueuedMessages_Parms.QueuedMessage, &QueuedMessage, 0xC );
//
//	this->ProcessEvent ( pFn__PsyNetMessengerWebSocket_X__SendQueuedMessages, &__PsyNetMessengerWebSocket_X__SendQueuedMessages_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.Dispose
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::eventDispose ( )
//{
//	static UFunction* pFnDispose = NULL;
//
//	if ( ! pFnDispose )
//		pFnDispose = (UFunction*) UObject::GObjObjects()->Data[ 58405 ];
//
//	UPsyNetMessengerWebSocket_X_eventDispose_Parms Dispose_Parms;
//
//	this->ProcessEvent ( pFnDispose, &Dispose_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.HandleReceivedBunch
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UTcpConnection*          C                              ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::HandleReceivedBunch ( class UTcpConnection* C )
//{
//	static UFunction* pFnHandleReceivedBunch = NULL;
//
//	if ( ! pFnHandleReceivedBunch )
//		pFnHandleReceivedBunch = (UFunction*) UObject::GObjObjects()->Data[ 58403 ];
//
//	UPsyNetMessengerWebSocket_X_execHandleReceivedBunch_Parms HandleReceivedBunch_Parms;
//	HandleReceivedBunch_Parms.C = C;
//
//	pFnHandleReceivedBunch->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHandleReceivedBunch, &HandleReceivedBunch_Parms, NULL );
//
//	pFnHandleReceivedBunch->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.SerializeMessage
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::SerializeMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSerializeMessage = NULL;
//
//	if ( ! pFnSerializeMessage )
//		pFnSerializeMessage = (UFunction*) UObject::GObjObjects()->Data[ 58396 ];
//
//	UPsyNetMessengerWebSocket_X_execSerializeMessage_Parms SerializeMessage_Parms;
//	SerializeMessage_Parms.Message = Message;
//
//	pFnSerializeMessage->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSerializeMessage, &SerializeMessage_Parms, NULL );
//
//	pFnSerializeMessage->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.FailQueuedMessages
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::FailQueuedMessages ( class UError* Error )
//{
//	static UFunction* pFnFailQueuedMessages = NULL;
//
//	if ( ! pFnFailQueuedMessages )
//		pFnFailQueuedMessages = (UFunction*) UObject::GObjObjects()->Data[ 58399 ];
//
//	UPsyNetMessengerWebSocket_X_execFailQueuedMessages_Parms FailQueuedMessages_Parms;
//	FailQueuedMessages_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnFailQueuedMessages, &FailQueuedMessages_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.TimeoutQueuedMessages
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::TimeoutQueuedMessages ( )
//{
//	static UFunction* pFnTimeoutQueuedMessages = NULL;
//
//	if ( ! pFnTimeoutQueuedMessages )
//		pFnTimeoutQueuedMessages = (UFunction*) UObject::GObjObjects()->Data[ 58397 ];
//
//	UPsyNetMessengerWebSocket_X_execTimeoutQueuedMessages_Parms TimeoutQueuedMessages_Parms;
//
//	this->ProcessEvent ( pFnTimeoutQueuedMessages, &TimeoutQueuedMessages_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.SendMessageWithTask
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::SendMessageWithTask ( class UPsyNetMessage_X* Message, class UAsyncTask* Task )
//{
//	static UFunction* pFnSendMessageWithTask = NULL;
//
//	if ( ! pFnSendMessageWithTask )
//		pFnSendMessageWithTask = (UFunction*) UObject::GObjObjects()->Data[ 58389 ];
//
//	UPsyNetMessengerWebSocket_X_execSendMessageWithTask_Parms SendMessageWithTask_Parms;
//	SendMessageWithTask_Parms.Message = Message;
//	SendMessageWithTask_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnSendMessageWithTask, &SendMessageWithTask_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.SendQueuedMessages
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::SendQueuedMessages ( )
//{
//	static UFunction* pFnSendQueuedMessages = NULL;
//
//	if ( ! pFnSendQueuedMessages )
//		pFnSendQueuedMessages = (UFunction*) UObject::GObjObjects()->Data[ 58376 ];
//
//	UPsyNetMessengerWebSocket_X_execSendQueuedMessages_Parms SendQueuedMessages_Parms;
//
//	this->ProcessEvent ( pFnSendQueuedMessages, &SendQueuedMessages_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.QueueMessage
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::QueueMessage ( class UPsyNetMessage_X* Message, class UAsyncTask* Task )
//{
//	static UFunction* pFnQueueMessage = NULL;
//
//	if ( ! pFnQueueMessage )
//		pFnQueueMessage = (UFunction*) UObject::GObjObjects()->Data[ 58388 ];
//
//	UPsyNetMessengerWebSocket_X_execQueueMessage_Parms QueueMessage_Parms;
//	QueueMessage_Parms.Message = Message;
//	QueueMessage_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnQueueMessage, &QueueMessage_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.StripHandshakeHeaders
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::StripHandshakeHeaders ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnStripHandshakeHeaders = NULL;
//
//	if ( ! pFnStripHandshakeHeaders )
//		pFnStripHandshakeHeaders = (UFunction*) UObject::GObjObjects()->Data[ 58387 ];
//
//	UPsyNetMessengerWebSocket_X_execStripHandshakeHeaders_Parms StripHandshakeHeaders_Parms;
//	StripHandshakeHeaders_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnStripHandshakeHeaders, &StripHandshakeHeaders_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.SendMessage
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UAsyncTask* UPsyNetMessengerWebSocket_X::SendMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendMessage = NULL;
//
//	if ( ! pFnSendMessage )
//		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 58383 ];
//
//	UPsyNetMessengerWebSocket_X_execSendMessage_Parms SendMessage_Parms;
//	SendMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
//
//	return SendMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.Reconnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::Reconnect ( )
//{
//	static UFunction* pFnReconnect = NULL;
//
//	if ( ! pFnReconnect )
//		pFnReconnect = (UFunction*) UObject::GObjObjects()->Data[ 58382 ];
//
//	UPsyNetMessengerWebSocket_X_execReconnect_Parms Reconnect_Parms;
//
//	this->ProcessEvent ( pFnReconnect, &Reconnect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.GetReconnectDelay
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UPsyNetMessengerWebSocket_X::GetReconnectDelay ( )
//{
//	static UFunction* pFnGetReconnectDelay = NULL;
//
//	if ( ! pFnGetReconnectDelay )
//		pFnGetReconnectDelay = (UFunction*) UObject::GObjObjects()->Data[ 58380 ];
//
//	UPsyNetMessengerWebSocket_X_execGetReconnectDelay_Parms GetReconnectDelay_Parms;
//
//	this->ProcessEvent ( pFnGetReconnectDelay, &GetReconnectDelay_Parms, NULL );
//
//	return GetReconnectDelay_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.DelayReconnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::DelayReconnect ( )
//{
//	static UFunction* pFnDelayReconnect = NULL;
//
//	if ( ! pFnDelayReconnect )
//		pFnDelayReconnect = (UFunction*) UObject::GObjObjects()->Data[ 58373 ];
//
//	UPsyNetMessengerWebSocket_X_execDelayReconnect_Parms DelayReconnect_Parms;
//
//	this->ProcessEvent ( pFnDelayReconnect, &DelayReconnect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.HandleDisconnected
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UWebSocketConnection_X*  InConnection                   ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::HandleDisconnected ( class UWebSocketConnection_X* InConnection )
//{
//	static UFunction* pFnHandleDisconnected = NULL;
//
//	if ( ! pFnHandleDisconnected )
//		pFnHandleDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58377 ];
//
//	UPsyNetMessengerWebSocket_X_execHandleDisconnected_Parms HandleDisconnected_Parms;
//	HandleDisconnected_Parms.InConnection = InConnection;
//
//	this->ProcessEvent ( pFnHandleDisconnected, &HandleDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.HandleConnected
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UWebSocketConnection_X*  InConnection                   ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::HandleConnected ( class UWebSocketConnection_X* InConnection )
//{
//	static UFunction* pFnHandleConnected = NULL;
//
//	if ( ! pFnHandleConnected )
//		pFnHandleConnected = (UFunction*) UObject::GObjObjects()->Data[ 58374 ];
//
//	UPsyNetMessengerWebSocket_X_execHandleConnected_Parms HandleConnected_Parms;
//	HandleConnected_Parms.InConnection = InConnection;
//
//	this->ProcessEvent ( pFnHandleConnected, &HandleConnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.Disconnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::Disconnect ( )
//{
//	static UFunction* pFnDisconnect = NULL;
//
//	if ( ! pFnDisconnect )
//		pFnDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 58369 ];
//
//	UPsyNetMessengerWebSocket_X_execDisconnect_Parms Disconnect_Parms;
//
//	this->ProcessEvent ( pFnDisconnect, &Disconnect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.Connect
//// [0x00020002] 
//// Parameters infos:
//
//void UPsyNetMessengerWebSocket_X::Connect ( )
//{
//	static UFunction* pFnConnect = NULL;
//
//	if ( ! pFnConnect )
//		pFnConnect = (UFunction*) UObject::GObjObjects()->Data[ 58367 ];
//
//	UPsyNetMessengerWebSocket_X_execConnect_Parms Connect_Parms;
//
//	this->ProcessEvent ( pFnConnect, &Connect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.IsConnected
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UPsyNetMessengerWebSocket_X::IsConnected ( )
//{
//	static UFunction* pFnIsConnected = NULL;
//
//	if ( ! pFnIsConnected )
//		pFnIsConnected = (UFunction*) UObject::GObjObjects()->Data[ 58280 ];
//
//	UPsyNetMessengerWebSocket_X_execIsConnected_Parms IsConnected_Parms;
//
//	this->ProcessEvent ( pFnIsConnected, &IsConnected_Parms, NULL );
//
//	return IsConnected_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.Init
//// [0x00020002] 
//// Parameters infos:
//// unsigned char                  Environment                    ( CPF_Parm )
//// class UStringMap*              InHandshakeHeaders             ( CPF_Parm | CPF_EditInline )
//
//void UPsyNetMessengerWebSocket_X::Init ( unsigned char Environment, class UStringMap* InHandshakeHeaders )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58364 ];
//
//	UPsyNetMessengerWebSocket_X_execInit_Parms Init_Parms;
//	Init_Parms.Environment = Environment;
//	Init_Parms.InHandshakeHeaders = InHandshakeHeaders;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.EventInvalidMessageReceived
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Messenger                      ( CPF_Parm )
//// struct FString                 MessageSubstring               ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetMessengerWebSocket_X::EventInvalidMessageReceived ( class UPsyNetMessengerWebSocket_X* Messenger, struct FString MessageSubstring )
//{
//	static UFunction* pFnEventInvalidMessageReceived = NULL;
//
//	if ( ! pFnEventInvalidMessageReceived )
//		pFnEventInvalidMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 58346 ];
//
//	UPsyNetMessengerWebSocket_X_execEventInvalidMessageReceived_Parms EventInvalidMessageReceived_Parms;
//	EventInvalidMessageReceived_Parms.Messenger = Messenger;
//	memcpy ( &EventInvalidMessageReceived_Parms.MessageSubstring, &MessageSubstring, 0xC );
//
//	this->ProcessEvent ( pFnEventInvalidMessageReceived, &EventInvalidMessageReceived_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.EventDisconnected
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Messenger                      ( CPF_Parm )
//// int                            Code                           ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetMessengerWebSocket_X::EventDisconnected ( class UPsyNetMessengerWebSocket_X* Messenger, int Code, struct FString Reason )
//{
//	static UFunction* pFnEventDisconnected = NULL;
//
//	if ( ! pFnEventDisconnected )
//		pFnEventDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58347 ];
//
//	UPsyNetMessengerWebSocket_X_execEventDisconnected_Parms EventDisconnected_Parms;
//	EventDisconnected_Parms.Messenger = Messenger;
//	EventDisconnected_Parms.Code = Code;
//	memcpy ( &EventDisconnected_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnEventDisconnected, &EventDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.EventConnected
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Messenger                      ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::EventConnected ( class UPsyNetMessengerWebSocket_X* Messenger )
//{
//	static UFunction* pFnEventConnected = NULL;
//
//	if ( ! pFnEventConnected )
//		pFnEventConnected = (UFunction*) UObject::GObjObjects()->Data[ 58348 ];
//
//	UPsyNetMessengerWebSocket_X_execEventConnected_Parms EventConnected_Parms;
//	EventConnected_Parms.Messenger = Messenger;
//
//	this->ProcessEvent ( pFnEventConnected, &EventConnected_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.EventStartConnectFail
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Messenger                      ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::EventStartConnectFail ( class UPsyNetMessengerWebSocket_X* Messenger )
//{
//	static UFunction* pFnEventStartConnectFail = NULL;
//
//	if ( ! pFnEventStartConnectFail )
//		pFnEventStartConnectFail = (UFunction*) UObject::GObjObjects()->Data[ 58349 ];
//
//	UPsyNetMessengerWebSocket_X_execEventStartConnectFail_Parms EventStartConnectFail_Parms;
//	EventStartConnectFail_Parms.Messenger = Messenger;
//
//	this->ProcessEvent ( pFnEventStartConnectFail, &EventStartConnectFail_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMessengerWebSocket_X.EventStartConnect
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Messenger                      ( CPF_Parm )
//
//void UPsyNetMessengerWebSocket_X::EventStartConnect ( class UPsyNetMessengerWebSocket_X* Messenger )
//{
//	static UFunction* pFnEventStartConnect = NULL;
//
//	if ( ! pFnEventStartConnect )
//		pFnEventStartConnect = (UFunction*) UObject::GObjObjects()->Data[ 58350 ];
//
//	UPsyNetMessengerWebSocket_X_execEventStartConnect_Parms EventStartConnect_Parms;
//	EventStartConnect_Parms.Messenger = Messenger;
//
//	this->ProcessEvent ( pFnEventStartConnect, &EventStartConnect_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceSerializer_X.SerializeResponse
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//struct FString UPsyNetServiceSerializer_X::SerializeResponse ( class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnSerializeResponse = NULL;
//
//	if ( ! pFnSerializeResponse )
//		pFnSerializeResponse = (UFunction*) UObject::GObjObjects()->Data[ 58539 ];
//
//	UPsyNetServiceSerializer_X_execSerializeResponse_Parms SerializeResponse_Parms;
//	SerializeResponse_Parms.Service = Service;
//
//	pFnSerializeResponse->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSerializeResponse, &SerializeResponse_Parms, NULL );
//
//	pFnSerializeResponse->FunctionFlags |= 0x400;
//
//	return SerializeResponse_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceSerializer_X.DeserializeRequest
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 JSON                           ( CPF_Parm | CPF_NeedCtorLink )
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void UPsyNetServiceSerializer_X::DeserializeRequest ( struct FString JSON, class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnDeserializeRequest = NULL;
//
//	if ( ! pFnDeserializeRequest )
//		pFnDeserializeRequest = (UFunction*) UObject::GObjObjects()->Data[ 58551 ];
//
//	UPsyNetServiceSerializer_X_execDeserializeRequest_Parms DeserializeRequest_Parms;
//	memcpy ( &DeserializeRequest_Parms.JSON, &JSON, 0xC );
//	DeserializeRequest_Parms.Service = Service;
//
//	pFnDeserializeRequest->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDeserializeRequest, &DeserializeRequest_Parms, NULL );
//
//	pFnDeserializeRequest->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetServiceSubscriptions_X.NotifyServiceExecuted
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void UPsyNetServiceSubscriptions_X::NotifyServiceExecuted ( class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnNotifyServiceExecuted = NULL;
//
//	if ( ! pFnNotifyServiceExecuted )
//		pFnNotifyServiceExecuted = (UFunction*) UObject::GObjObjects()->Data[ 55317 ];
//
//	UPsyNetServiceSubscriptions_X_execNotifyServiceExecuted_Parms NotifyServiceExecuted_Parms;
//	NotifyServiceExecuted_Parms.Service = Service;
//
//	this->ProcessEvent ( pFnNotifyServiceExecuted, &NotifyServiceExecuted_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceSubscriptions_X.UnsubscribeAll
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Listener                       ( CPF_Parm )
//
//void UPsyNetServiceSubscriptions_X::UnsubscribeAll ( class UObject* Listener )
//{
//	static UFunction* pFnUnsubscribeAll = NULL;
//
//	if ( ! pFnUnsubscribeAll )
//		pFnUnsubscribeAll = (UFunction*) UObject::GObjObjects()->Data[ 55326 ];
//
//	UPsyNetServiceSubscriptions_X_execUnsubscribeAll_Parms UnsubscribeAll_Parms;
//	UnsubscribeAll_Parms.Listener = Listener;
//
//	pFnUnsubscribeAll->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUnsubscribeAll, &UnsubscribeAll_Parms, NULL );
//
//	pFnUnsubscribeAll->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetServiceSubscriptions_X.Unsubscribe
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetServiceSubscriptions_X::Unsubscribe ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnUnsubscribe = NULL;
//
//	if ( ! pFnUnsubscribe )
//		pFnUnsubscribe = (UFunction*) UObject::GObjObjects()->Data[ 55334 ];
//
//	UPsyNetServiceSubscriptions_X_execUnsubscribe_Parms Unsubscribe_Parms;
//	memcpy ( &Unsubscribe_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnUnsubscribe, &Unsubscribe_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceSubscriptions_X.Subscribe
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// class UClass*                  ServiceClass                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetServiceSubscriptions_X::Subscribe ( class UClass* ServiceClass, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSubscribe = NULL;
//
//	if ( ! pFnSubscribe )
//		pFnSubscribe = (UFunction*) UObject::GObjObjects()->Data[ 54593 ];
//
//	UPsyNetServiceSubscriptions_X_execSubscribe_Parms Subscribe_Parms;
//	Subscribe_Parms.ServiceClass = ServiceClass;
//	memcpy ( &Subscribe_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSubscribe, &Subscribe_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.UpdateRegisteredObjects
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UPsyNetStaticData_X::UpdateRegisteredObjects ( )
//{
//	static UFunction* pFnUpdateRegisteredObjects = NULL;
//
//	if ( ! pFnUpdateRegisteredObjects )
//		pFnUpdateRegisteredObjects = (UFunction*) UObject::GObjObjects()->Data[ 56966 ];
//
//	UPsyNetStaticData_X_execUpdateRegisteredObjects_Parms UpdateRegisteredObjects_Parms;
//
//	pFnUpdateRegisteredObjects->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUpdateRegisteredObjects, &UpdateRegisteredObjects_Parms, NULL );
//
//	pFnUpdateRegisteredObjects->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetStaticData_X.LoadFromUTF8
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< unsigned char >        SignedData                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UPsyNetStaticData_X::LoadFromUTF8 ( TArray< unsigned char >* SignedData )
//{
//	static UFunction* pFnLoadFromUTF8 = NULL;
//
//	if ( ! pFnLoadFromUTF8 )
//		pFnLoadFromUTF8 = (UFunction*) UObject::GObjObjects()->Data[ 56979 ];
//
//	UPsyNetStaticData_X_execLoadFromUTF8_Parms LoadFromUTF8_Parms;
//
//	pFnLoadFromUTF8->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnLoadFromUTF8, &LoadFromUTF8_Parms, NULL );
//
//	pFnLoadFromUTF8->FunctionFlags |= 0x400;
//
//	if ( SignedData )
//		memcpy ( SignedData, &LoadFromUTF8_Parms.SignedData, 0xC );
//
//	return LoadFromUTF8_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetStaticData_X.LoadFromSignedUTF8
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< unsigned char >        SignedData                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UPsyNetStaticData_X::LoadFromSignedUTF8 ( TArray< unsigned char >* SignedData )
//{
//	static UFunction* pFnLoadFromSignedUTF8 = NULL;
//
//	if ( ! pFnLoadFromSignedUTF8 )
//		pFnLoadFromSignedUTF8 = (UFunction*) UObject::GObjObjects()->Data[ 56978 ];
//
//	UPsyNetStaticData_X_execLoadFromSignedUTF8_Parms LoadFromSignedUTF8_Parms;
//
//	pFnLoadFromSignedUTF8->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnLoadFromSignedUTF8, &LoadFromSignedUTF8_Parms, NULL );
//
//	pFnLoadFromSignedUTF8->FunctionFlags |= 0x400;
//
//	if ( SignedData )
//		memcpy ( SignedData, &LoadFromSignedUTF8_Parms.SignedData, 0xC );
//
//	return LoadFromSignedUTF8_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetStaticData_X.InstanceComponents
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UPsyNetStaticData_X::InstanceComponents ( )
//{
//	static UFunction* pFnInstanceComponents = NULL;
//
//	if ( ! pFnInstanceComponents )
//		pFnInstanceComponents = (UFunction*) UObject::GObjObjects()->Data[ 56965 ];
//
//	UPsyNetStaticData_X_execInstanceComponents_Parms InstanceComponents_Parms;
//
//	pFnInstanceComponents->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInstanceComponents, &InstanceComponents_Parms, NULL );
//
//	pFnInstanceComponents->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.PsyNetStaticData_X.HandleDataChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineResource_X*       Resource                       ( CPF_Parm | CPF_EditInline )
//
//void UPsyNetStaticData_X::HandleDataChanged ( class UOnlineResource_X* Resource )
//{
//	static UFunction* pFnHandleDataChanged = NULL;
//
//	if ( ! pFnHandleDataChanged )
//		pFnHandleDataChanged = (UFunction*) UObject::GObjObjects()->Data[ 56974 ];
//
//	UPsyNetStaticData_X_execHandleDataChanged_Parms HandleDataChanged_Parms;
//	HandleDataChanged_Parms.Resource = Resource;
//
//	this->ProcessEvent ( pFnHandleDataChanged, &HandleDataChanged_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.RetrySync
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetStaticData_X::RetrySync ( )
//{
//	static UFunction* pFnRetrySync = NULL;
//
//	if ( ! pFnRetrySync )
//		pFnRetrySync = (UFunction*) UObject::GObjObjects()->Data[ 56977 ];
//
//	UPsyNetStaticData_X_execRetrySync_Parms RetrySync_Parms;
//
//	this->ProcessEvent ( pFnRetrySync, &RetrySync_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.HandleGetURLFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void UPsyNetStaticData_X::HandleGetURLFail ( class URPC_X* RPC )
//{
//	static UFunction* pFnHandleGetURLFail = NULL;
//
//	if ( ! pFnHandleGetURLFail )
//		pFnHandleGetURLFail = (UFunction*) UObject::GObjObjects()->Data[ 56986 ];
//
//	UPsyNetStaticData_X_execHandleGetURLFail_Parms HandleGetURLFail_Parms;
//	HandleGetURLFail_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetURLFail, &HandleGetURLFail_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.HandleGetURL
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetStaticDataURL_X* RPC                            ( CPF_Parm )
//
//void UPsyNetStaticData_X::HandleGetURL ( class URPC_GetStaticDataURL_X* RPC )
//{
//	static UFunction* pFnHandleGetURL = NULL;
//
//	if ( ! pFnHandleGetURL )
//		pFnHandleGetURL = (UFunction*) UObject::GObjObjects()->Data[ 56972 ];
//
//	UPsyNetStaticData_X_execHandleGetURL_Parms HandleGetURL_Parms;
//	HandleGetURL_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetURL, &HandleGetURL_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.Sync
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetStaticData_X::Sync ( )
//{
//	static UFunction* pFnSync = NULL;
//
//	if ( ! pFnSync )
//		pFnSync = (UFunction*) UObject::GObjObjects()->Data[ 56971 ];
//
//	UPsyNetStaticData_X_execSync_Parms Sync_Parms;
//
//	this->ProcessEvent ( pFnSync, &Sync_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.HandleCacheExpired
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UCacheTimer_X*           Timer                          ( CPF_Parm | CPF_EditInline )
//
//void UPsyNetStaticData_X::HandleCacheExpired ( class UCacheTimer_X* Timer )
//{
//	static UFunction* pFnHandleCacheExpired = NULL;
//
//	if ( ! pFnHandleCacheExpired )
//		pFnHandleCacheExpired = (UFunction*) UObject::GObjObjects()->Data[ 56968 ];
//
//	UPsyNetStaticData_X_execHandleCacheExpired_Parms HandleCacheExpired_Parms;
//	HandleCacheExpired_Parms.Timer = Timer;
//
//	this->ProcessEvent ( pFnHandleCacheExpired, &HandleCacheExpired_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.HandlePsyNetLogOut
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetStaticData_X::HandlePsyNetLogOut ( )
//{
//	static UFunction* pFnHandlePsyNetLogOut = NULL;
//
//	if ( ! pFnHandlePsyNetLogOut )
//		pFnHandlePsyNetLogOut = (UFunction*) UObject::GObjObjects()->Data[ 56970 ];
//
//	UPsyNetStaticData_X_execHandlePsyNetLogOut_Parms HandlePsyNetLogOut_Parms;
//
//	this->ProcessEvent ( pFnHandlePsyNetLogOut, &HandlePsyNetLogOut_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.HandlePsyNetLogin
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetStaticData_X::HandlePsyNetLogin ( )
//{
//	static UFunction* pFnHandlePsyNetLogin = NULL;
//
//	if ( ! pFnHandlePsyNetLogin )
//		pFnHandlePsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 56967 ];
//
//	UPsyNetStaticData_X_execHandlePsyNetLogin_Parms HandlePsyNetLogin_Parms;
//
//	this->ProcessEvent ( pFnHandlePsyNetLogin, &HandlePsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.Init
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//
//void UPsyNetStaticData_X::eventInit ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50603 ];
//
//	UPsyNetStaticData_X_eventInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetStaticData_X.EventLoaded
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetStaticData_X*     Data                           ( CPF_Parm | CPF_EditInline )
//
//void UPsyNetStaticData_X::EventLoaded ( class UPsyNetStaticData_X* Data )
//{
//	static UFunction* pFnEventLoaded = NULL;
//
//	if ( ! pFnEventLoaded )
//		pFnEventLoaded = (UFunction*) UObject::GObjObjects()->Data[ 56959 ];
//
//	UPsyNetStaticData_X_execEventLoaded_Parms EventLoaded_Parms;
//	EventLoaded_Parms.Data = Data;
//
//	this->ProcessEvent ( pFnEventLoaded, &EventLoaded_Parms, NULL );
//};
//
//// Function ProjectX.RandomStream_X.SetCurrentSeed
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            NewSeed                        ( CPF_Parm )
//
//void URandomStream_X::SetCurrentSeed ( int NewSeed )
//{
//	static UFunction* pFnSetCurrentSeed = NULL;
//
//	if ( ! pFnSetCurrentSeed )
//		pFnSetCurrentSeed = (UFunction*) UObject::GObjObjects()->Data[ 55351 ];
//
//	URandomStream_X_execSetCurrentSeed_Parms SetCurrentSeed_Parms;
//	SetCurrentSeed_Parms.NewSeed = NewSeed;
//
//	pFnSetCurrentSeed->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetCurrentSeed, &SetCurrentSeed_Parms, NULL );
//
//	pFnSetCurrentSeed->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RandomStream_X.GetNextValue
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float URandomStream_X::GetNextValue ( )
//{
//	static UFunction* pFnGetNextValue = NULL;
//
//	if ( ! pFnGetNextValue )
//		pFnGetNextValue = (UFunction*) UObject::GObjObjects()->Data[ 55349 ];
//
//	URandomStream_X_execGetNextValue_Parms GetNextValue_Parms;
//
//	pFnGetNextValue->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetNextValue, &GetNextValue_Parms, NULL );
//
//	pFnGetNextValue->FunctionFlags |= 0x400;
//
//	return GetNextValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.RenderProfiler_X.SetupPlayers
//// [0x00080002] 
//// Parameters infos:
//
//void ARenderProfiler_X::SetupPlayers ( )
//{
//	static UFunction* pFnSetupPlayers = NULL;
//
//	if ( ! pFnSetupPlayers )
//		pFnSetupPlayers = (UFunction*) UObject::GObjObjects()->Data[ 55369 ];
//
//	ARenderProfiler_X_execSetupPlayers_Parms SetupPlayers_Parms;
//
//	this->ProcessEvent ( pFnSetupPlayers, &SetupPlayers_Parms, NULL );
//};
//
//// Function ProjectX.RenderProfiler_X.PostBeginPlay
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void ARenderProfiler_X::eventPostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55368 ];
//
//	ARenderProfiler_X_eventPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.RenderProfiler_X.EventFinished
//// [0x00120000] 
//// Parameters infos:
//// class ARenderProfiler_X*       Profiler                       ( CPF_Parm )
//
//void ARenderProfiler_X::EventFinished ( class ARenderProfiler_X* Profiler )
//{
//	static UFunction* pFnEventFinished = NULL;
//
//	if ( ! pFnEventFinished )
//		pFnEventFinished = (UFunction*) UObject::GObjObjects()->Data[ 55362 ];
//
//	ARenderProfiler_X_execEventFinished_Parms EventFinished_Parms;
//	EventFinished_Parms.Profiler = Profiler;
//
//	this->ProcessEvent ( pFnEventFinished, &EventFinished_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.SetRequiresAuth
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bRequired                      ( CPF_Parm )
//
//class URPC_X* URPC_X::SetRequiresAuth ( unsigned long bRequired )
//{
//	static UFunction* pFnSetRequiresAuth = NULL;
//
//	if ( ! pFnSetRequiresAuth )
//		pFnSetRequiresAuth = (UFunction*) UObject::GObjObjects()->Data[ 55414 ];
//
//	URPC_X_execSetRequiresAuth_Parms SetRequiresAuth_Parms;
//	SetRequiresAuth_Parms.bRequired = bRequired;
//
//	this->ProcessEvent ( pFnSetRequiresAuth, &SetRequiresAuth_Parms, NULL );
//
//	return SetRequiresAuth_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.NotifySuccess
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void URPC_X::NotifySuccess ( )
//{
//	static UFunction* pFnNotifySuccess = NULL;
//
//	if ( ! pFnNotifySuccess )
//		pFnNotifySuccess = (UFunction*) UObject::GObjObjects()->Data[ 55413 ];
//
//	URPC_X_execNotifySuccess_Parms NotifySuccess_Parms;
//
//	pFnNotifySuccess->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnNotifySuccess, &NotifySuccess_Parms, NULL );
//
//	pFnNotifySuccess->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPC_X.NotifyError
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UError*                  InError                        ( CPF_Parm )
//
//void URPC_X::NotifyError ( class UError* InError )
//{
//	static UFunction* pFnNotifyError = NULL;
//
//	if ( ! pFnNotifyError )
//		pFnNotifyError = (UFunction*) UObject::GObjObjects()->Data[ 55410 ];
//
//	URPC_X_execNotifyError_Parms NotifyError_Parms;
//	NotifyError_Parms.InError = InError;
//
//	pFnNotifyError->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnNotifyError, &NotifyError_Parms, NULL );
//
//	pFnNotifyError->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPC_X.ShouldResendOnFail
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  InError                        ( CPF_Parm )
//
//bool URPC_X::eventShouldResendOnFail ( class UError* InError )
//{
//	static UFunction* pFnShouldResendOnFail = NULL;
//
//	if ( ! pFnShouldResendOnFail )
//		pFnShouldResendOnFail = (UFunction*) UObject::GObjObjects()->Data[ 55412 ];
//
//	URPC_X_eventShouldResendOnFail_Parms ShouldResendOnFail_Parms;
//	ShouldResendOnFail_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnShouldResendOnFail, &ShouldResendOnFail_Parms, NULL );
//
//	return ShouldResendOnFail_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.OverrideErrorType
//// [0x00080800] ( FUNC_Event )
//// Parameters infos:
//// class UErrorType*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UErrorType*              ErrorType                      ( CPF_Parm )
//
//class UErrorType* URPC_X::eventOverrideErrorType ( class UErrorType* ErrorType )
//{
//	static UFunction* pFnOverrideErrorType = NULL;
//
//	if ( ! pFnOverrideErrorType )
//		pFnOverrideErrorType = (UFunction*) UObject::GObjObjects()->Data[ 55418 ];
//
//	URPC_X_eventOverrideErrorType_Parms OverrideErrorType_Parms;
//	OverrideErrorType_Parms.ErrorType = ErrorType;
//
//	this->ProcessEvent ( pFnOverrideErrorType, &OverrideErrorType_Parms, NULL );
//
//	return OverrideErrorType_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.OnComplete
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_X::eventOnComplete ( )
//{
//	static UFunction* pFnOnComplete = NULL;
//
//	if ( ! pFnOnComplete )
//		pFnOnComplete = (UFunction*) UObject::GObjObjects()->Data[ 55409 ];
//
//	URPC_X_eventOnComplete_Parms OnComplete_Parms;
//
//	this->ProcessEvent ( pFnOnComplete, &OnComplete_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.OnFail
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_X::eventOnFail ( )
//{
//	static UFunction* pFnOnFail = NULL;
//
//	if ( ! pFnOnFail )
//		pFnOnFail = (UFunction*) UObject::GObjObjects()->Data[ 55408 ];
//
//	URPC_X_eventOnFail_Parms OnFail_Parms;
//
//	this->ProcessEvent ( pFnOnFail, &OnFail_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.OnSuccess
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_X::eventOnSuccess ( )
//{
//	static UFunction* pFnOnSuccess = NULL;
//
//	if ( ! pFnOnSuccess )
//		pFnOnSuccess = (UFunction*) UObject::GObjObjects()->Data[ 55406 ];
//
//	URPC_X_eventOnSuccess_Parms OnSuccess_Parms;
//
//	this->ProcessEvent ( pFnOnSuccess, &OnSuccess_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.Dispose
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_X::eventDispose ( )
//{
//	static UFunction* pFnDispose = NULL;
//
//	if ( ! pFnDispose )
//		pFnDispose = (UFunction*) UObject::GObjObjects()->Data[ 55407 ];
//
//	URPC_X_eventDispose_Parms Dispose_Parms;
//
//	this->ProcessEvent ( pFnDispose, &Dispose_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.CreateTask
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         InCallback                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* URPC_X::CreateTask ( struct FScriptDelegate InCallback )
//{
//	static UFunction* pFnCreateTask = NULL;
//
//	if ( ! pFnCreateTask )
//		pFnCreateTask = (UFunction*) UObject::GObjObjects()->Data[ 52308 ];
//
//	URPC_X_execCreateTask_Parms CreateTask_Parms;
//	memcpy ( &CreateTask_Parms.InCallback, &InCallback, 0x10 );
//
//	this->ProcessEvent ( pFnCreateTask, &CreateTask_Parms, NULL );
//
//	return CreateTask_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.NotifyOnComplete
//// [0x00020002] 
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_X* URPC_X::NotifyOnComplete ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnComplete = NULL;
//
//	if ( ! pFnNotifyOnComplete )
//		pFnNotifyOnComplete = (UFunction*) UObject::GObjObjects()->Data[ 51070 ];
//
//	URPC_X_execNotifyOnComplete_Parms NotifyOnComplete_Parms;
//	memcpy ( &NotifyOnComplete_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnComplete, &NotifyOnComplete_Parms, NULL );
//
//	return NotifyOnComplete_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.NotifyOnFail
//// [0x00020002] 
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_X* URPC_X::NotifyOnFail ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnFail = NULL;
//
//	if ( ! pFnNotifyOnFail )
//		pFnNotifyOnFail = (UFunction*) UObject::GObjObjects()->Data[ 51248 ];
//
//	URPC_X_execNotifyOnFail_Parms NotifyOnFail_Parms;
//	memcpy ( &NotifyOnFail_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnFail, &NotifyOnFail_Parms, NULL );
//
//	return NotifyOnFail_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.NotifyOnSuccess
//// [0x00020002] 
//// Parameters infos:
//// class URPC_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_X* URPC_X::NotifyOnSuccess ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnSuccess = NULL;
//
//	if ( ! pFnNotifyOnSuccess )
//		pFnNotifyOnSuccess = (UFunction*) UObject::GObjObjects()->Data[ 50769 ];
//
//	URPC_X_execNotifyOnSuccess_Parms NotifyOnSuccess_Parms;
//	memcpy ( &NotifyOnSuccess_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnSuccess, &NotifyOnSuccess_Parms, NULL );
//
//	return NotifyOnSuccess_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.GetResponseObject
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UObject* URPC_X::eventGetResponseObject ( )
//{
//	static UFunction* pFnGetResponseObject = NULL;
//
//	if ( ! pFnGetResponseObject )
//		pFnGetResponseObject = (UFunction*) UObject::GObjObjects()->Data[ 55431 ];
//
//	URPC_X_eventGetResponseObject_Parms GetResponseObject_Parms;
//
//	this->ProcessEvent ( pFnGetResponseObject, &GetResponseObject_Parms, NULL );
//
//	return GetResponseObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_X.EventComplete
//// [0x00120000] 
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void URPC_X::EventComplete ( class URPC_X* RPC )
//{
//	static UFunction* pFnEventComplete = NULL;
//
//	if ( ! pFnEventComplete )
//		pFnEventComplete = (UFunction*) UObject::GObjObjects()->Data[ 55394 ];
//
//	URPC_X_execEventComplete_Parms EventComplete_Parms;
//	EventComplete_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnEventComplete, &EventComplete_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.EventFail
//// [0x00120000] 
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void URPC_X::EventFail ( class URPC_X* RPC )
//{
//	static UFunction* pFnEventFail = NULL;
//
//	if ( ! pFnEventFail )
//		pFnEventFail = (UFunction*) UObject::GObjObjects()->Data[ 55396 ];
//
//	URPC_X_execEventFail_Parms EventFail_Parms;
//	EventFail_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnEventFail, &EventFail_Parms, NULL );
//};
//
//// Function ProjectX.RPC_X.EventSuccess
//// [0x00120000] 
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void URPC_X::EventSuccess ( class URPC_X* RPC )
//{
//	static UFunction* pFnEventSuccess = NULL;
//
//	if ( ! pFnEventSuccess )
//		pFnEventSuccess = (UFunction*) UObject::GObjObjects()->Data[ 55398 ];
//
//	URPC_X_execEventSuccess_Parms EventSuccess_Parms;
//	EventSuccess_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnEventSuccess, &EventSuccess_Parms, NULL );
//};
//
//// Function ProjectX.RPCQueue_X.OnError
//// [0x00040803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void URPCQueue_X::eventOnError ( class URPC_X* RPC, class UError* Error )
//{
//	static UFunction* pFnOnError = NULL;
//
//	if ( ! pFnOnError )
//		pFnOnError = (UFunction*) UObject::GObjObjects()->Data[ 55202 ];
//
//	URPCQueue_X_eventOnError_Parms OnError_Parms;
//	OnError_Parms.RPC = RPC;
//	OnError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnOnError, &OnError_Parms, NULL );
//};
//
//// Function ProjectX.RPCQueue_X.GetPsyNetMetrics
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMetrics_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UPsyNetMetrics_X* URPCQueue_X::GetPsyNetMetrics ( )
//{
//	static UFunction* pFnGetPsyNetMetrics = NULL;
//
//	if ( ! pFnGetPsyNetMetrics )
//		pFnGetPsyNetMetrics = (UFunction*) UObject::GObjObjects()->Data[ 55203 ];
//
//	URPCQueue_X_execGetPsyNetMetrics_Parms GetPsyNetMetrics_Parms;
//
//	this->ProcessEvent ( pFnGetPsyNetMetrics, &GetPsyNetMetrics_Parms, NULL );
//
//	return GetPsyNetMetrics_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPCQueue_X.RecordBatchMetrics
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPCBatch_X*             Batch                          ( CPF_Parm )
//
//void URPCQueue_X::RecordBatchMetrics ( class URPCBatch_X* Batch )
//{
//	static UFunction* pFnRecordBatchMetrics = NULL;
//
//	if ( ! pFnRecordBatchMetrics )
//		pFnRecordBatchMetrics = (UFunction*) UObject::GObjObjects()->Data[ 55209 ];
//
//	URPCQueue_X_execRecordBatchMetrics_Parms RecordBatchMetrics_Parms;
//	RecordBatchMetrics_Parms.Batch = Batch;
//
//	this->ProcessEvent ( pFnRecordBatchMetrics, &RecordBatchMetrics_Parms, NULL );
//};
//
//// Function ProjectX.RPCQueue_X.HandleBatchComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPCBatch_X*             Batch                          ( CPF_Parm )
//// class UPsyNetMessage_X*        Response                       ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void URPCQueue_X::HandleBatchComplete ( class URPCBatch_X* Batch, class UPsyNetMessage_X* Response, class UError* Error )
//{
//	static UFunction* pFnHandleBatchComplete = NULL;
//
//	if ( ! pFnHandleBatchComplete )
//		pFnHandleBatchComplete = (UFunction*) UObject::GObjObjects()->Data[ 55211 ];
//
//	URPCQueue_X_execHandleBatchComplete_Parms HandleBatchComplete_Parms;
//	HandleBatchComplete_Parms.Batch = Batch;
//	HandleBatchComplete_Parms.Response = Response;
//	HandleBatchComplete_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleBatchComplete, &HandleBatchComplete_Parms, NULL );
//};
//
//// Function ProjectX.RPCQueue_X.CreateBatch
//// [0x00440803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//// TArray< struct FPendingRPC >   BatchRPCs                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void URPCQueue_X::eventCreateBatch ( class UPsyNetMessage_X* Message, TArray< struct FPendingRPC >* BatchRPCs )
//{
//	static UFunction* pFnCreateBatch = NULL;
//
//	if ( ! pFnCreateBatch )
//		pFnCreateBatch = (UFunction*) UObject::GObjObjects()->Data[ 55219 ];
//
//	URPCQueue_X_eventCreateBatch_Parms CreateBatch_Parms;
//	CreateBatch_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnCreateBatch, &CreateBatch_Parms, NULL );
//
//	if ( BatchRPCs )
//		memcpy ( BatchRPCs, &CreateBatch_Parms.BatchRPCs, 0xC );
//};
//
//// Function ProjectX.RPCQueue_X.SignatureMismatch
//// [0x00022803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// int                            ServiceID                      ( CPF_Parm )
//
//void URPCQueue_X::eventSignatureMismatch ( int ServiceID )
//{
//	static UFunction* pFnSignatureMismatch = NULL;
//
//	if ( ! pFnSignatureMismatch )
//		pFnSignatureMismatch = (UFunction*) UObject::GObjObjects()->Data[ 55226 ];
//
//	URPCQueue_X_eventSignatureMismatch_Parms SignatureMismatch_Parms;
//	SignatureMismatch_Parms.ServiceID = ServiceID;
//
//	this->ProcessEvent ( pFnSignatureMismatch, &SignatureMismatch_Parms, NULL );
//};
//
//// Function ProjectX.RPCQueue_X.FailAllPending
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void URPCQueue_X::FailAllPending ( class UError* Error )
//{
//	static UFunction* pFnFailAllPending = NULL;
//
//	if ( ! pFnFailAllPending )
//		pFnFailAllPending = (UFunction*) UObject::GObjObjects()->Data[ 55199 ];
//
//	URPCQueue_X_execFailAllPending_Parms FailAllPending_Parms;
//	FailAllPending_Parms.Error = Error;
//
//	pFnFailAllPending->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFailAllPending, &FailAllPending_Parms, NULL );
//
//	pFnFailAllPending->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPCQueue_X.FailPending
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void URPCQueue_X::FailPending ( class URPC_X* RPC, class UError* Error )
//{
//	static UFunction* pFnFailPending = NULL;
//
//	if ( ! pFnFailPending )
//		pFnFailPending = (UFunction*) UObject::GObjObjects()->Data[ 55200 ];
//
//	URPCQueue_X_execFailPending_Parms FailPending_Parms;
//	FailPending_Parms.RPC = RPC;
//	FailPending_Parms.Error = Error;
//
//	pFnFailPending->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFailPending, &FailPending_Parms, NULL );
//
//	pFnFailPending->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPCQueue_X.TickReceive
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void URPCQueue_X::TickReceive ( )
//{
//	static UFunction* pFnTickReceive = NULL;
//
//	if ( ! pFnTickReceive )
//		pFnTickReceive = (UFunction*) UObject::GObjObjects()->Data[ 55198 ];
//
//	URPCQueue_X_execTickReceive_Parms TickReceive_Parms;
//
//	pFnTickReceive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnTickReceive, &TickReceive_Parms, NULL );
//
//	pFnTickReceive->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPCQueue_X.TickSend
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void URPCQueue_X::TickSend ( )
//{
//	static UFunction* pFnTickSend = NULL;
//
//	if ( ! pFnTickSend )
//		pFnTickSend = (UFunction*) UObject::GObjObjects()->Data[ 55196 ];
//
//	URPCQueue_X_execTickSend_Parms TickSend_Parms;
//
//	pFnTickSend->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnTickSend, &TickSend_Parms, NULL );
//
//	pFnTickSend->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPCQueue_X.QueueRPC
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void URPCQueue_X::QueueRPC ( class URPC_X* RPC )
//{
//	static UFunction* pFnQueueRPC = NULL;
//
//	if ( ! pFnQueueRPC )
//		pFnQueueRPC = (UFunction*) UObject::GObjObjects()->Data[ 55197 ];
//
//	URPCQueue_X_execQueueRPC_Parms QueueRPC_Parms;
//	QueueRPC_Parms.RPC = RPC;
//
//	pFnQueueRPC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnQueueRPC, &QueueRPC_Parms, NULL );
//
//	pFnQueueRPC->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.RPCQueue_X.SendRequestDelegate
//// [0x00120000] 
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class USendRequestTask* URPCQueue_X::SendRequestDelegate ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendRequestDelegate = NULL;
//
//	if ( ! pFnSendRequestDelegate )
//		pFnSendRequestDelegate = (UFunction*) UObject::GObjObjects()->Data[ 55244 ];
//
//	URPCQueue_X_execSendRequestDelegate_Parms SendRequestDelegate_Parms;
//	SendRequestDelegate_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendRequestDelegate, &SendRequestDelegate_Parms, NULL );
//
//	return SendRequestDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPCQueue_X.EventBatchError
//// [0x00120000] 
//// Parameters infos:
//// class URPCQueue_X*             RPCQueue                       ( CPF_Parm | CPF_EditInline )
//// class UError*                  Error                          ( CPF_Parm )
//
//void URPCQueue_X::EventBatchError ( class URPCQueue_X* RPCQueue, class UError* Error )
//{
//	static UFunction* pFnEventBatchError = NULL;
//
//	if ( ! pFnEventBatchError )
//		pFnEventBatchError = (UFunction*) UObject::GObjObjects()->Data[ 55246 ];
//
//	URPCQueue_X_execEventBatchError_Parms EventBatchError_Parms;
//	EventBatchError_Parms.RPCQueue = RPCQueue;
//	EventBatchError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventBatchError, &EventBatchError_Parms, NULL );
//};
//
//// Function ProjectX.RPCQueue_X.EventRPCError
//// [0x00120000] 
//// Parameters infos:
//// class URPCQueue_X*             RPCQueue                       ( CPF_Parm | CPF_EditInline )
//// class URPC_X*                  RPC                            ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void URPCQueue_X::EventRPCError ( class URPCQueue_X* RPCQueue, class URPC_X* RPC, class UError* Error )
//{
//	static UFunction* pFnEventRPCError = NULL;
//
//	if ( ! pFnEventRPCError )
//		pFnEventRPCError = (UFunction*) UObject::GObjObjects()->Data[ 55249 ];
//
//	URPCQueue_X_execEventRPCError_Parms EventRPCError_Parms;
//	EventRPCError_Parms.RPCQueue = RPCQueue;
//	EventRPCError_Parms.RPC = RPC;
//	EventRPCError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventRPCError, &EventRPCError_Parms, NULL );
//};
//
//// Function ProjectX.SeqAct_NonNativeUpdate_X.Update
//// [0x00020800] ( FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          dt                             ( CPF_Parm )
//
//bool USeqAct_NonNativeUpdate_X::eventUpdate ( float dt )
//{
//	static UFunction* pFnUpdate = NULL;
//
//	if ( ! pFnUpdate )
//		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 55549 ];
//
//	USeqAct_NonNativeUpdate_X_eventUpdate_Parms Update_Parms;
//	Update_Parms.dt = dt;
//
//	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
//
//	return Update_Parms.ReturnValue;
//};
//
//// Function ProjectX.SequenceCondition_X.Activated
//// [0x00020800] ( FUNC_Event )
//// Parameters infos:
//
//void USequenceCondition_X::eventActivated ( )
//{
//	static UFunction* pFnActivated = NULL;
//
//	if ( ! pFnActivated )
//		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 55574 ];
//
//	USequenceCondition_X_eventActivated_Parms Activated_Parms;
//
//	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
//};
//
//// Function ProjectX.Serializer_X.DeserializeObject
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// TArray< unsigned char >        InData                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void USerializer_X::DeserializeObject ( class UObject* Target, TArray< unsigned char >* InData )
//{
//	static UFunction* pFnDeserializeObject = NULL;
//
//	if ( ! pFnDeserializeObject )
//		pFnDeserializeObject = (UFunction*) UObject::GObjObjects()->Data[ 50253 ];
//
//	USerializer_X_execDeserializeObject_Parms DeserializeObject_Parms;
//	DeserializeObject_Parms.Target = Target;
//
//	pFnDeserializeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDeserializeObject, &DeserializeObject_Parms, NULL );
//
//	pFnDeserializeObject->FunctionFlags |= 0x400;
//
//	if ( InData )
//		memcpy ( InData, &DeserializeObject_Parms.InData, 0xC );
//};
//
//// Function ProjectX.Serializer_X.SerializeObject
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// TArray< unsigned char >        OutData                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void USerializer_X::SerializeObject ( class UObject* Target, TArray< unsigned char >* OutData )
//{
//	static UFunction* pFnSerializeObject = NULL;
//
//	if ( ! pFnSerializeObject )
//		pFnSerializeObject = (UFunction*) UObject::GObjObjects()->Data[ 50249 ];
//
//	USerializer_X_execSerializeObject_Parms SerializeObject_Parms;
//	SerializeObject_Parms.Target = Target;
//
//	pFnSerializeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSerializeObject, &SerializeObject_Parms, NULL );
//
//	pFnSerializeObject->FunctionFlags |= 0x400;
//
//	if ( OutData )
//		memcpy ( OutData, &SerializeObject_Parms.OutData, 0xC );
//};
//
//// Function ProjectX.JSONSerializer_X.func
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UJSONSerializer_X::func ( )
//{
//	static UFunction* pFnfunc = NULL;
//
//	if ( ! pFnfunc )
//		pFnfunc = (UFunction*) UObject::GObjObjects()->Data[ 50272 ];
//
//	UJSONSerializer_X_execfunc_Parms func_Parms;
//
//	pFnfunc->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnfunc, &func_Parms, NULL );
//
//	pFnfunc->FunctionFlags |= 0x400;
//
//	return func_Parms.ReturnValue;
//};
//
//// Function ProjectX.JSONSerializer_X.DecodeObject
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// struct FString                 Stream                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UJSONSerializer_X::DecodeObject ( class UObject* Target, struct FString* Stream )
//{
//	static UFunction* pFnDecodeObject = NULL;
//
//	if ( ! pFnDecodeObject )
//		pFnDecodeObject = (UFunction*) UObject::GObjObjects()->Data[ 50269 ];
//
//	UJSONSerializer_X_execDecodeObject_Parms DecodeObject_Parms;
//	DecodeObject_Parms.Target = Target;
//
//	pFnDecodeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDecodeObject, &DecodeObject_Parms, NULL );
//
//	pFnDecodeObject->FunctionFlags |= 0x400;
//
//	if ( Stream )
//		memcpy ( Stream, &DecodeObject_Parms.Stream, 0xC );
//};
//
//// Function ProjectX.JSONSerializer_X.EncodeObject
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// struct FString                 Stream                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UJSONSerializer_X::EncodeObject ( class UObject* Target, struct FString* Stream )
//{
//	static UFunction* pFnEncodeObject = NULL;
//
//	if ( ! pFnEncodeObject )
//		pFnEncodeObject = (UFunction*) UObject::GObjObjects()->Data[ 50266 ];
//
//	UJSONSerializer_X_execEncodeObject_Parms EncodeObject_Parms;
//	EncodeObject_Parms.Target = Target;
//
//	pFnEncodeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnEncodeObject, &EncodeObject_Parms, NULL );
//
//	pFnEncodeObject->FunctionFlags |= 0x400;
//
//	if ( Stream )
//		memcpy ( Stream, &EncodeObject_Parms.Stream, 0xC );
//};
//
//// Function ProjectX.JSONSerializer_X.DeserializeObject
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// TArray< unsigned char >        InData                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UJSONSerializer_X::DeserializeObject ( class UObject* Target, TArray< unsigned char >* InData )
//{
//	static UFunction* pFnDeserializeObject = NULL;
//
//	if ( ! pFnDeserializeObject )
//		pFnDeserializeObject = (UFunction*) UObject::GObjObjects()->Data[ 50262 ];
//
//	UJSONSerializer_X_execDeserializeObject_Parms DeserializeObject_Parms;
//	DeserializeObject_Parms.Target = Target;
//
//	pFnDeserializeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDeserializeObject, &DeserializeObject_Parms, NULL );
//
//	pFnDeserializeObject->FunctionFlags |= 0x400;
//
//	if ( InData )
//		memcpy ( InData, &DeserializeObject_Parms.InData, 0xC );
//};
//
//// Function ProjectX.JSONSerializer_X.SerializeObject
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// TArray< unsigned char >        OutData                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UJSONSerializer_X::SerializeObject ( class UObject* Target, TArray< unsigned char >* OutData )
//{
//	static UFunction* pFnSerializeObject = NULL;
//
//	if ( ! pFnSerializeObject )
//		pFnSerializeObject = (UFunction*) UObject::GObjObjects()->Data[ 50258 ];
//
//	UJSONSerializer_X_execSerializeObject_Parms SerializeObject_Parms;
//	SerializeObject_Parms.Target = Target;
//
//	pFnSerializeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSerializeObject, &SerializeObject_Parms, NULL );
//
//	pFnSerializeObject->FunctionFlags |= 0x400;
//
//	if ( OutData )
//		memcpy ( OutData, &SerializeObject_Parms.OutData, 0xC );
//};
//
//// Function ProjectX.ObjectSerializer_X.DeserializeObject
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// TArray< unsigned char >        InData                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UObjectSerializer_X::DeserializeObject ( class UObject* Target, TArray< unsigned char >* InData )
//{
//	static UFunction* pFnDeserializeObject = NULL;
//
//	if ( ! pFnDeserializeObject )
//		pFnDeserializeObject = (UFunction*) UObject::GObjObjects()->Data[ 56427 ];
//
//	UObjectSerializer_X_execDeserializeObject_Parms DeserializeObject_Parms;
//	DeserializeObject_Parms.Target = Target;
//
//	pFnDeserializeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDeserializeObject, &DeserializeObject_Parms, NULL );
//
//	pFnDeserializeObject->FunctionFlags |= 0x400;
//
//	if ( InData )
//		memcpy ( InData, &DeserializeObject_Parms.InData, 0xC );
//};
//
//// Function ProjectX.ObjectSerializer_X.SerializeObject
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// class UObject*                 Target                         ( CPF_Parm )
//// TArray< unsigned char >        OutData                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UObjectSerializer_X::SerializeObject ( class UObject* Target, TArray< unsigned char >* OutData )
//{
//	static UFunction* pFnSerializeObject = NULL;
//
//	if ( ! pFnSerializeObject )
//		pFnSerializeObject = (UFunction*) UObject::GObjObjects()->Data[ 56423 ];
//
//	UObjectSerializer_X_execSerializeObject_Parms SerializeObject_Parms;
//	SerializeObject_Parms.Target = Target;
//
//	pFnSerializeObject->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSerializeObject, &SerializeObject_Parms, NULL );
//
//	pFnSerializeObject->FunctionFlags |= 0x400;
//
//	if ( OutData )
//		memcpy ( OutData, &SerializeObject_Parms.OutData, 0xC );
//};
//
//// Function ProjectX.StateObject_X.InitExecution
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UStateObject_X::InitExecution ( )
//{
//	static UFunction* pFnInitExecution = NULL;
//
//	if ( ! pFnInitExecution )
//		pFnInitExecution = (UFunction*) UObject::GObjObjects()->Data[ 48536 ];
//
//	UStateObject_X_execInitExecution_Parms InitExecution_Parms;
//
//	pFnInitExecution->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitExecution, &InitExecution_Parms, NULL );
//
//	pFnInitExecution->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.StateObject_X.Destroyed
//// [0x00020800] ( FUNC_Event )
//// Parameters infos:
//
//void UStateObject_X::eventDestroyed ( )
//{
//	static UFunction* pFnDestroyed = NULL;
//
//	if ( ! pFnDestroyed )
//		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48535 ];
//
//	UStateObject_X_eventDestroyed_Parms Destroyed_Parms;
//
//	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
//};
//
//// Function ProjectX.StateObject_X.Destroy
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UStateObject_X::Destroy ( )
//{
//	static UFunction* pFnDestroy = NULL;
//
//	if ( ! pFnDestroy )
//		pFnDestroy = (UFunction*) UObject::GObjObjects()->Data[ 48534 ];
//
//	UStateObject_X_execDestroy_Parms Destroy_Parms;
//
//	pFnDestroy->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDestroy, &Destroy_Parms, NULL );
//
//	pFnDestroy->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.Sleep
//// [0x00020409] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          Seconds                        ( CPF_Parm )
//
//void UTickableStateObject_X::Sleep ( float Seconds )
//{
//	static UFunction* pFnSleep = NULL;
//
//	if ( ! pFnSleep )
//		pFnSleep = (UFunction*) UObject::GObjObjects()->Data[ 48964 ];
//
//	UTickableStateObject_X_execSleep_Parms Sleep_Parms;
//	Sleep_Parms.Seconds = Seconds;
//
//	pFnSleep->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSleep, &Sleep_Parms, NULL );
//
//	pFnSleep->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.Tick
//// [0x00020800] ( FUNC_Event )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UTickableStateObject_X::eventTick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48962 ];
//
//	UTickableStateObject_X_eventTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.TickableStateObject_X.ProcessState
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// float                          DeltaSeconds                   ( CPF_Parm )
//
//void UTickableStateObject_X::ProcessState ( float DeltaSeconds )
//{
//	static UFunction* pFnProcessState = NULL;
//
//	if ( ! pFnProcessState )
//		pFnProcessState = (UFunction*) UObject::GObjObjects()->Data[ 48960 ];
//
//	UTickableStateObject_X_execProcessState_Parms ProcessState_Parms;
//	ProcessState_Parms.DeltaSeconds = DeltaSeconds;
//
//	pFnProcessState->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnProcessState, &ProcessState_Parms, NULL );
//
//	pFnProcessState->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.UpdateTimers
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// float                          DeltaSeconds                   ( CPF_Parm )
//
//void UTickableStateObject_X::UpdateTimers ( float DeltaSeconds )
//{
//	static UFunction* pFnUpdateTimers = NULL;
//
//	if ( ! pFnUpdateTimers )
//		pFnUpdateTimers = (UFunction*) UObject::GObjObjects()->Data[ 48958 ];
//
//	UTickableStateObject_X_execUpdateTimers_Parms UpdateTimers_Parms;
//	UpdateTimers_Parms.DeltaSeconds = DeltaSeconds;
//
//	pFnUpdateTimers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUpdateTimers, &UpdateTimers_Parms, NULL );
//
//	pFnUpdateTimers->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.NativeTick
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UTickableStateObject_X::NativeTick ( float DeltaTime )
//{
//	static UFunction* pFnNativeTick = NULL;
//
//	if ( ! pFnNativeTick )
//		pFnNativeTick = (UFunction*) UObject::GObjObjects()->Data[ 48956 ];
//
//	UTickableStateObject_X_execNativeTick_Parms NativeTick_Parms;
//	NativeTick_Parms.DeltaTime = DeltaTime;
//
//	pFnNativeTick->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnNativeTick, &NativeTick_Parms, NULL );
//
//	pFnNativeTick->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.Destroy
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UTickableStateObject_X::Destroy ( )
//{
//	static UFunction* pFnDestroy = NULL;
//
//	if ( ! pFnDestroy )
//		pFnDestroy = (UFunction*) UObject::GObjObjects()->Data[ 48955 ];
//
//	UTickableStateObject_X_execDestroy_Parms Destroy_Parms;
//
//	pFnDestroy->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDestroy, &Destroy_Parms, NULL );
//
//	pFnDestroy->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.SetTickable
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// unsigned long                  bTick                          ( CPF_Parm )
//
//void UTickableStateObject_X::SetTickable ( unsigned long bTick )
//{
//	static UFunction* pFnSetTickable = NULL;
//
//	if ( ! pFnSetTickable )
//		pFnSetTickable = (UFunction*) UObject::GObjObjects()->Data[ 48953 ];
//
//	UTickableStateObject_X_execSetTickable_Parms SetTickable_Parms;
//	SetTickable_Parms.bTick = bTick;
//
//	pFnSetTickable->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTickable, &SetTickable_Parms, NULL );
//
//	pFnSetTickable->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.IsTimerActive
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//bool UTickableStateObject_X::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnIsTimerActive = NULL;
//
//	if ( ! pFnIsTimerActive )
//		pFnIsTimerActive = (UFunction*) UObject::GObjObjects()->Data[ 48949 ];
//
//	UTickableStateObject_X_execIsTimerActive_Parms IsTimerActive_Parms;
//	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	IsTimerActive_Parms.inObj = inObj;
//
//	pFnIsTimerActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );
//
//	pFnIsTimerActive->FunctionFlags |= 0x400;
//
//	return IsTimerActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.TickableStateObject_X.PauseTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// unsigned long                  bPause                         ( CPF_Parm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickableStateObject_X::PauseTimer ( unsigned long bPause, struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnPauseTimer = NULL;
//
//	if ( ! pFnPauseTimer )
//		pFnPauseTimer = (UFunction*) UObject::GObjObjects()->Data[ 48945 ];
//
//	UTickableStateObject_X_execPauseTimer_Parms PauseTimer_Parms;
//	PauseTimer_Parms.bPause = bPause;
//	memcpy ( &PauseTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	PauseTimer_Parms.inObj = inObj;
//
//	pFnPauseTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnPauseTimer, &PauseTimer_Parms, NULL );
//
//	pFnPauseTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.ClearAllTimers
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickableStateObject_X::ClearAllTimers ( class UObject* inObj )
//{
//	static UFunction* pFnClearAllTimers = NULL;
//
//	if ( ! pFnClearAllTimers )
//		pFnClearAllTimers = (UFunction*) UObject::GObjObjects()->Data[ 48943 ];
//
//	UTickableStateObject_X_execClearAllTimers_Parms ClearAllTimers_Parms;
//	ClearAllTimers_Parms.inObj = inObj;
//
//	pFnClearAllTimers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearAllTimers, &ClearAllTimers_Parms, NULL );
//
//	pFnClearAllTimers->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.ClearTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickableStateObject_X::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnClearTimer = NULL;
//
//	if ( ! pFnClearTimer )
//		pFnClearTimer = (UFunction*) UObject::GObjObjects()->Data[ 48940 ];
//
//	UTickableStateObject_X_execClearTimer_Parms ClearTimer_Parms;
//	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	ClearTimer_Parms.inObj = inObj;
//
//	pFnClearTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
//
//	pFnClearTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.SetStateTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          InRate                         ( CPF_Parm )
//// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//
//void UTickableStateObject_X::SetStateTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc )
//{
//	static UFunction* pFnSetStateTimer = NULL;
//
//	if ( ! pFnSetStateTimer )
//		pFnSetStateTimer = (UFunction*) UObject::GObjObjects()->Data[ 48936 ];
//
//	UTickableStateObject_X_execSetStateTimer_Parms SetStateTimer_Parms;
//	SetStateTimer_Parms.InRate = InRate;
//	SetStateTimer_Parms.inbLoop = inbLoop;
//	memcpy ( &SetStateTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//
//	pFnSetStateTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetStateTimer, &SetStateTimer_Parms, NULL );
//
//	pFnSetStateTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickableStateObject_X.SetTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          InRate                         ( CPF_Parm )
//// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickableStateObject_X::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnSetTimer = NULL;
//
//	if ( ! pFnSetTimer )
//		pFnSetTimer = (UFunction*) UObject::GObjObjects()->Data[ 48931 ];
//
//	UTickableStateObject_X_execSetTimer_Parms SetTimer_Parms;
//	SetTimer_Parms.InRate = InRate;
//	SetTimer_Parms.inbLoop = inbLoop;
//	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	SetTimer_Parms.inObj = inObj;
//
//	pFnSetTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
//
//	pFnSetTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Online_X.BuildAddress
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Host                           ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Port                           ( CPF_Parm )
//// struct FString                 IP                             ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UOnline_X::BuildAddress ( struct FString Host, int Port, struct FString IP )
//{
//	static UFunction* pFnBuildAddress = NULL;
//
//	if ( ! pFnBuildAddress )
//		pFnBuildAddress = (UFunction*) UObject::GObjObjects()->Data[ 50558 ];
//
//	UOnline_X_execBuildAddress_Parms BuildAddress_Parms;
//	memcpy ( &BuildAddress_Parms.Host, &Host, 0xC );
//	BuildAddress_Parms.Port = Port;
//	memcpy ( &BuildAddress_Parms.IP, &IP, 0xC );
//
//	this->ProcessEvent ( pFnBuildAddress, &BuildAddress_Parms, NULL );
//
//	return BuildAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.IsInOnlineGame
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnline_X::IsInOnlineGame ( )
//{
//	static UFunction* pFnIsInOnlineGame = NULL;
//
//	if ( ! pFnIsInOnlineGame )
//		pFnIsInOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 50556 ];
//
//	UOnline_X_execIsInOnlineGame_Parms IsInOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnIsInOnlineGame, &IsInOnlineGame_Parms, NULL );
//
//	return IsInOnlineGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.IsInMainMenu
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnline_X::IsInMainMenu ( )
//{
//	static UFunction* pFnIsInMainMenu = NULL;
//
//	if ( ! pFnIsInMainMenu )
//		pFnIsInMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 50513 ];
//
//	UOnline_X_execIsInMainMenu_Parms IsInMainMenu_Parms;
//
//	this->ProcessEvent ( pFnIsInMainMenu, &IsInMainMenu_Parms, NULL );
//
//	return IsInMainMenu_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.GetGRI
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class AGRI_X*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class AGRI_X* UOnline_X::GetGRI ( )
//{
//	static UFunction* pFnGetGRI = NULL;
//
//	if ( ! pFnGetGRI )
//		pFnGetGRI = (UFunction*) UObject::GObjObjects()->Data[ 50553 ];
//
//	UOnline_X_execGetGRI_Parms GetGRI_Parms;
//
//	this->ProcessEvent ( pFnGetGRI, &GetGRI_Parms, NULL );
//
//	return GetGRI_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.GetWorldInfo
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class AWorldInfo*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class AWorldInfo* UOnline_X::GetWorldInfo ( )
//{
//	static UFunction* pFnGetWorldInfo = NULL;
//
//	if ( ! pFnGetWorldInfo )
//		pFnGetWorldInfo = (UFunction*) UObject::GObjObjects()->Data[ 50551 ];
//
//	UOnline_X_execGetWorldInfo_Parms GetWorldInfo_Parms;
//
//	this->ProcessEvent ( pFnGetWorldInfo, &GetWorldInfo_Parms, NULL );
//
//	return GetWorldInfo_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.CreateUniqueNetID
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Platform                       ( CPF_Parm )
//// struct FString                 PlatformName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FUniqueNetId UOnline_X::CreateUniqueNetID ( unsigned char Platform, struct FString PlatformName )
//{
//	static UFunction* pFnCreateUniqueNetID = NULL;
//
//	if ( ! pFnCreateUniqueNetID )
//		pFnCreateUniqueNetID = (UFunction*) UObject::GObjObjects()->Data[ 50546 ];
//
//	UOnline_X_execCreateUniqueNetID_Parms CreateUniqueNetID_Parms;
//	CreateUniqueNetID_Parms.Platform = Platform;
//	memcpy ( &CreateUniqueNetID_Parms.PlatformName, &PlatformName, 0xC );
//
//	pFnCreateUniqueNetID->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnCreateUniqueNetID, &CreateUniqueNetID_Parms, NULL );
//
//	pFnCreateUniqueNetID->FunctionFlags |= 0x400;
//
//	return CreateUniqueNetID_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.UniqueLobbyIDIsSet
//// [0x00822003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          InID                           ( CPF_Parm )
//
//bool UOnline_X::UniqueLobbyIDIsSet ( struct FUniqueLobbyId InID )
//{
//	static UFunction* pFnUniqueLobbyIDIsSet = NULL;
//
//	if ( ! pFnUniqueLobbyIDIsSet )
//		pFnUniqueLobbyIDIsSet = (UFunction*) UObject::GObjObjects()->Data[ 50542 ];
//
//	UOnline_X_execUniqueLobbyIDIsSet_Parms UniqueLobbyIDIsSet_Parms;
//	memcpy ( &UniqueLobbyIDIsSet_Parms.InID, &InID, 0xC );
//
//	this->ProcessEvent ( pFnUniqueLobbyIDIsSet, &UniqueLobbyIDIsSet_Parms, NULL );
//
//	return UniqueLobbyIDIsSet_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.StringToUniqueLobbyId
//// [0x00822003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InID                           ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FUniqueLobbyId UOnline_X::StringToUniqueLobbyId ( struct FString InID )
//{
//	static UFunction* pFnStringToUniqueLobbyId = NULL;
//
//	if ( ! pFnStringToUniqueLobbyId )
//		pFnStringToUniqueLobbyId = (UFunction*) UObject::GObjObjects()->Data[ 50538 ];
//
//	UOnline_X_execStringToUniqueLobbyId_Parms StringToUniqueLobbyId_Parms;
//	memcpy ( &StringToUniqueLobbyId_Parms.InID, &InID, 0xC );
//
//	this->ProcessEvent ( pFnStringToUniqueLobbyId, &StringToUniqueLobbyId_Parms, NULL );
//
//	return StringToUniqueLobbyId_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.UniqueLobbyIdToString
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          InID                           ( CPF_Parm )
//
//struct FString UOnline_X::UniqueLobbyIdToString ( struct FUniqueLobbyId InID )
//{
//	static UFunction* pFnUniqueLobbyIdToString = NULL;
//
//	if ( ! pFnUniqueLobbyIdToString )
//		pFnUniqueLobbyIdToString = (UFunction*) UObject::GObjObjects()->Data[ 50535 ];
//
//	UOnline_X_execUniqueLobbyIdToString_Parms UniqueLobbyIdToString_Parms;
//	memcpy ( &UniqueLobbyIdToString_Parms.InID, &InID, 0xC );
//
//	this->ProcessEvent ( pFnUniqueLobbyIdToString, &UniqueLobbyIdToString_Parms, NULL );
//
//	return UniqueLobbyIdToString_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.GetUniqueNetIDWithoutSplitscreenID
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            Id                             ( CPF_Parm )
//
//struct FUniqueNetId UOnline_X::GetUniqueNetIDWithoutSplitscreenID ( struct FUniqueNetId Id )
//{
//	static UFunction* pFnGetUniqueNetIDWithoutSplitscreenID = NULL;
//
//	if ( ! pFnGetUniqueNetIDWithoutSplitscreenID )
//		pFnGetUniqueNetIDWithoutSplitscreenID = (UFunction*) UObject::GObjObjects()->Data[ 50531 ];
//
//	UOnline_X_execGetUniqueNetIDWithoutSplitscreenID_Parms GetUniqueNetIDWithoutSplitscreenID_Parms;
//	memcpy ( &GetUniqueNetIDWithoutSplitscreenID_Parms.Id, &Id, 0x48 );
//
//	this->ProcessEvent ( pFnGetUniqueNetIDWithoutSplitscreenID, &GetUniqueNetIDWithoutSplitscreenID_Parms, NULL );
//
//	return GetUniqueNetIDWithoutSplitscreenID_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.GetPrimaryIDForGuest
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InGuestID                      ( CPF_Parm )
//
//struct FUniqueNetId UOnline_X::GetPrimaryIDForGuest ( struct FUniqueNetId InGuestID )
//{
//	static UFunction* pFnGetPrimaryIDForGuest = NULL;
//
//	if ( ! pFnGetPrimaryIDForGuest )
//		pFnGetPrimaryIDForGuest = (UFunction*) UObject::GObjObjects()->Data[ 50534 ];
//
//	UOnline_X_execGetPrimaryIDForGuest_Parms GetPrimaryIDForGuest_Parms;
//	memcpy ( &GetPrimaryIDForGuest_Parms.InGuestID, &InGuestID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPrimaryIDForGuest, &GetPrimaryIDForGuest_Parms, NULL );
//
//	return GetPrimaryIDForGuest_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.UniqueNetIDIsGuest
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InID                           ( CPF_Parm )
//
//bool UOnline_X::UniqueNetIDIsGuest ( struct FUniqueNetId InID )
//{
//	static UFunction* pFnUniqueNetIDIsGuest = NULL;
//
//	if ( ! pFnUniqueNetIDIsGuest )
//		pFnUniqueNetIDIsGuest = (UFunction*) UObject::GObjObjects()->Data[ 50563 ];
//
//	UOnline_X_execUniqueNetIDIsGuest_Parms UniqueNetIDIsGuest_Parms;
//	memcpy ( &UniqueNetIDIsGuest_Parms.InID, &InID, 0x48 );
//
//	this->ProcessEvent ( pFnUniqueNetIDIsGuest, &UniqueNetIDIsGuest_Parms, NULL );
//
//	return UniqueNetIDIsGuest_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.UniqueNetIDIsValid
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InID                           ( CPF_Parm )
//
//bool UOnline_X::UniqueNetIDIsValid ( struct FUniqueNetId InID )
//{
//	static UFunction* pFnUniqueNetIDIsValid = NULL;
//
//	if ( ! pFnUniqueNetIDIsValid )
//		pFnUniqueNetIDIsValid = (UFunction*) UObject::GObjObjects()->Data[ 49497 ];
//
//	UOnline_X_execUniqueNetIDIsValid_Parms UniqueNetIDIsValid_Parms;
//	memcpy ( &UniqueNetIDIsValid_Parms.InID, &InID, 0x48 );
//
//	pFnUniqueNetIDIsValid->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUniqueNetIDIsValid, &UniqueNetIDIsValid_Parms, NULL );
//
//	pFnUniqueNetIDIsValid->FunctionFlags |= 0x400;
//
//	return UniqueNetIDIsValid_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.StringToUniqueNetId
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InID                           ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FUniqueNetId UOnline_X::StringToUniqueNetId ( struct FString InID )
//{
//	static UFunction* pFnStringToUniqueNetId = NULL;
//
//	if ( ! pFnStringToUniqueNetId )
//		pFnStringToUniqueNetId = (UFunction*) UObject::GObjObjects()->Data[ 50527 ];
//
//	UOnline_X_execStringToUniqueNetId_Parms StringToUniqueNetId_Parms;
//	memcpy ( &StringToUniqueNetId_Parms.InID, &InID, 0xC );
//
//	pFnStringToUniqueNetId->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnStringToUniqueNetId, &StringToUniqueNetId_Parms, NULL );
//
//	pFnStringToUniqueNetId->FunctionFlags |= 0x400;
//
//	return StringToUniqueNetId_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.UniqueNetIdToString
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            InID                           ( CPF_Parm )
//
//struct FString UOnline_X::UniqueNetIdToString ( struct FUniqueNetId InID )
//{
//	static UFunction* pFnUniqueNetIdToString = NULL;
//
//	if ( ! pFnUniqueNetIdToString )
//		pFnUniqueNetIdToString = (UFunction*) UObject::GObjObjects()->Data[ 48089 ];
//
//	UOnline_X_execUniqueNetIdToString_Parms UniqueNetIdToString_Parms;
//	memcpy ( &UniqueNetIdToString_Parms.InID, &InID, 0x48 );
//
//	this->ProcessEvent ( pFnUniqueNetIdToString, &UniqueNetIdToString_Parms, NULL );
//
//	return UniqueNetIdToString_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.FindUniqueNetID
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FUniqueNetId >  List                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            Search                         ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//int UOnline_X::FindUniqueNetID ( TArray< struct FUniqueNetId >* List, struct FUniqueNetId* Search )
//{
//	static UFunction* pFnFindUniqueNetID = NULL;
//
//	if ( ! pFnFindUniqueNetID )
//		pFnFindUniqueNetID = (UFunction*) UObject::GObjObjects()->Data[ 50521 ];
//
//	UOnline_X_execFindUniqueNetID_Parms FindUniqueNetID_Parms;
//
//	pFnFindUniqueNetID->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnFindUniqueNetID, &FindUniqueNetID_Parms, NULL );
//
//	pFnFindUniqueNetID->FunctionFlags |= 0x400;
//
//	if ( List )
//		memcpy ( List, &FindUniqueNetID_Parms.List, 0xC );
//
//	if ( Search )
//		memcpy ( Search, &FindUniqueNetID_Parms.Search, 0x48 );
//
//	return FindUniqueNetID_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.GetConnectionStatusError
//// [0x00084002] 
//// Parameters infos:
//// class UError*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ErrorCode                      ( CPF_Parm )
//// class UError*                  FallbackError                  ( CPF_OptionalParm | CPF_Parm )
//
//class UError* UOnline_X::GetConnectionStatusError ( int ErrorCode, class UError* FallbackError )
//{
//	static UFunction* pFnGetConnectionStatusError = NULL;
//
//	if ( ! pFnGetConnectionStatusError )
//		pFnGetConnectionStatusError = (UFunction*) UObject::GObjObjects()->Data[ 50517 ];
//
//	UOnline_X_execGetConnectionStatusError_Parms GetConnectionStatusError_Parms;
//	GetConnectionStatusError_Parms.ErrorCode = ErrorCode;
//	GetConnectionStatusError_Parms.FallbackError = FallbackError;
//
//	this->ProcessEvent ( pFnGetConnectionStatusError, &GetConnectionStatusError_Parms, NULL );
//
//	return GetConnectionStatusError_Parms.ReturnValue;
//};
//
//// Function ProjectX.Online_X.OnExit
//// [0x00080000] 
//// Parameters infos:
//
//void UOnline_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 50516 ];
//
//	UOnline_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.Online_X.OnNewGame
//// [0x00080000] 
//// Parameters infos:
//
//void UOnline_X::OnNewGame ( )
//{
//	static UFunction* pFnOnNewGame = NULL;
//
//	if ( ! pFnOnNewGame )
//		pFnOnNewGame = (UFunction*) UObject::GObjObjects()->Data[ 50515 ];
//
//	UOnline_X_execOnNewGame_Parms OnNewGame_Parms;
//
//	this->ProcessEvent ( pFnOnNewGame, &OnNewGame_Parms, NULL );
//};
//
//// Function ProjectX.Online_X.OnMainMenuOpened
//// [0x00080000] 
//// Parameters infos:
//
//void UOnline_X::OnMainMenuOpened ( )
//{
//	static UFunction* pFnOnMainMenuOpened = NULL;
//
//	if ( ! pFnOnMainMenuOpened )
//		pFnOnMainMenuOpened = (UFunction*) UObject::GObjObjects()->Data[ 50514 ];
//
//	UOnline_X_execOnMainMenuOpened_Parms OnMainMenuOpened_Parms;
//
//	this->ProcessEvent ( pFnOnMainMenuOpened, &OnMainMenuOpened_Parms, NULL );
//};
//
//// Function ProjectX.Online_X.HandleGRISpawned
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class AGRI_X*                  GRI                            ( CPF_Parm )
//
//void UOnline_X::HandleGRISpawned ( class AGRI_X* GRI )
//{
//	static UFunction* pFnHandleGRISpawned = NULL;
//
//	if ( ! pFnHandleGRISpawned )
//		pFnHandleGRISpawned = (UFunction*) UObject::GObjObjects()->Data[ 50511 ];
//
//	UOnline_X_execHandleGRISpawned_Parms HandleGRISpawned_Parms;
//	HandleGRISpawned_Parms.GRI = GRI;
//
//	this->ProcessEvent ( pFnHandleGRISpawned, &HandleGRISpawned_Parms, NULL );
//};
//
//// Function ProjectX.Online_X.OnInit
//// [0x00080000] 
//// Parameters infos:
//
//void UOnline_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50510 ];
//
//	UOnline_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.Online_X.Init
//// [0x00024002] 
//// Parameters infos:
//// class UOnlineSubsystem*        NewOnlineSubsystem             ( CPF_OptionalParm | CPF_Parm )
//
//void UOnline_X::Init ( class UOnlineSubsystem* NewOnlineSubsystem )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50506 ];
//
//	UOnline_X_execInit_Parms Init_Parms;
//	Init_Parms.NewOnlineSubsystem = NewOnlineSubsystem;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGame_Base_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50641 ];
//
//	UOnlineGame_Base_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.HasInternetConnection
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGame_Base_X::HasInternetConnection ( )
//{
//	static UFunction* pFnHasInternetConnection = NULL;
//
//	if ( ! pFnHasInternetConnection )
//		pFnHasInternetConnection = (UFunction*) UObject::GObjObjects()->Data[ 50636 ];
//
//	UOnlineGame_Base_X_execHasInternetConnection_Parms HasInternetConnection_Parms;
//
//	this->ProcessEvent ( pFnHasInternetConnection, &HasInternetConnection_Parms, NULL );
//
//	return HasInternetConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_Base_X.GetPort
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGame_Base_X::GetPort ( )
//{
//	static UFunction* pFnGetPort = NULL;
//
//	if ( ! pFnGetPort )
//		pFnGetPort = (UFunction*) UObject::GObjObjects()->Data[ 50640 ];
//
//	UOnlineGame_Base_X_execGetPort_Parms GetPort_Parms;
//
//	pFnGetPort->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetPort, &GetPort_Parms, NULL );
//
//	pFnGetPort->FunctionFlags |= 0x400;
//
//	return GetPort_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_Base_X.GetExternalHostAddress
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// unsigned long                  bWithPort                      ( CPF_Parm )
//
//struct FString UOnlineGame_Base_X::GetExternalHostAddress ( unsigned long bWithPort )
//{
//	static UFunction* pFnGetExternalHostAddress = NULL;
//
//	if ( ! pFnGetExternalHostAddress )
//		pFnGetExternalHostAddress = (UFunction*) UObject::GObjObjects()->Data[ 50643 ];
//
//	UOnlineGame_Base_X_execGetExternalHostAddress_Parms GetExternalHostAddress_Parms;
//	GetExternalHostAddress_Parms.bWithPort = bWithPort;
//
//	pFnGetExternalHostAddress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetExternalHostAddress, &GetExternalHostAddress_Parms, NULL );
//
//	pFnGetExternalHostAddress->FunctionFlags |= 0x400;
//
//	return GetExternalHostAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_Base_X.GetLocalHostAddress
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// unsigned long                  bWithPort                      ( CPF_Parm )
//
//struct FString UOnlineGame_Base_X::GetLocalHostAddress ( unsigned long bWithPort )
//{
//	static UFunction* pFnGetLocalHostAddress = NULL;
//
//	if ( ! pFnGetLocalHostAddress )
//		pFnGetLocalHostAddress = (UFunction*) UObject::GObjObjects()->Data[ 50645 ];
//
//	UOnlineGame_Base_X_execGetLocalHostAddress_Parms GetLocalHostAddress_Parms;
//	GetLocalHostAddress_Parms.bWithPort = bWithPort;
//
//	pFnGetLocalHostAddress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetLocalHostAddress, &GetLocalHostAddress_Parms, NULL );
//
//	pFnGetLocalHostAddress->FunctionFlags |= 0x400;
//
//	return GetLocalHostAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_Base_X.HandleInternetConnectionChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bConnected                     ( CPF_Parm )
//
//void UOnlineGame_Base_X::HandleInternetConnectionChanged ( unsigned long bConnected )
//{
//	static UFunction* pFnHandleInternetConnectionChanged = NULL;
//
//	if ( ! pFnHandleInternetConnectionChanged )
//		pFnHandleInternetConnectionChanged = (UFunction*) UObject::GObjObjects()->Data[ 50637 ];
//
//	UOnlineGame_Base_X_execHandleInternetConnectionChanged_Parms HandleInternetConnectionChanged_Parms;
//	HandleInternetConnectionChanged_Parms.bConnected = bConnected;
//
//	this->ProcessEvent ( pFnHandleInternetConnectionChanged, &HandleInternetConnectionChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.HandleConnectionStatusChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ConnectionStatus               ( CPF_Parm )
//
//void UOnlineGame_Base_X::HandleConnectionStatusChanged ( unsigned char ConnectionStatus )
//{
//	static UFunction* pFnHandleConnectionStatusChanged = NULL;
//
//	if ( ! pFnHandleConnectionStatusChanged )
//		pFnHandleConnectionStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 50634 ];
//
//	UOnlineGame_Base_X_execHandleConnectionStatusChanged_Parms HandleConnectionStatusChanged_Parms;
//	HandleConnectionStatusChanged_Parms.ConnectionStatus = ConnectionStatus;
//
//	this->ProcessEvent ( pFnHandleConnectionStatusChanged, &HandleConnectionStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.SetDefaultSearchType
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UClass*                  OnlineSearchClass              ( CPF_Parm )
//
//void UOnlineGame_Base_X::SetDefaultSearchType ( class UClass* OnlineSearchClass )
//{
//	static UFunction* pFnSetDefaultSearchType = NULL;
//
//	if ( ! pFnSetDefaultSearchType )
//		pFnSetDefaultSearchType = (UFunction*) UObject::GObjObjects()->Data[ 50604 ];
//
//	UOnlineGame_Base_X_execSetDefaultSearchType_Parms SetDefaultSearchType_Parms;
//	SetDefaultSearchType_Parms.OnlineSearchClass = OnlineSearchClass;
//
//	pFnSetDefaultSearchType->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetDefaultSearchType, &SetDefaultSearchType_Parms, NULL );
//
//	pFnSetDefaultSearchType->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineGame_Base_X.KickAllPlayers
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Reason                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGame_Base_X::KickAllPlayers ( struct FString Reason )
//{
//	static UFunction* pFnKickAllPlayers = NULL;
//
//	if ( ! pFnKickAllPlayers )
//		pFnKickAllPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50630 ];
//
//	UOnlineGame_Base_X_execKickAllPlayers_Parms KickAllPlayers_Parms;
//	memcpy ( &KickAllPlayers_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnKickAllPlayers, &KickAllPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.DelayedShutdownServer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGame_Base_X::DelayedShutdownServer ( )
//{
//	static UFunction* pFnDelayedShutdownServer = NULL;
//
//	if ( ! pFnDelayedShutdownServer )
//		pFnDelayedShutdownServer = (UFunction*) UObject::GObjObjects()->Data[ 50629 ];
//
//	UOnlineGame_Base_X_execDelayedShutdownServer_Parms DelayedShutdownServer_Parms;
//
//	this->ProcessEvent ( pFnDelayedShutdownServer, &DelayedShutdownServer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.OnExit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGame_Base_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 50627 ];
//
//	UOnlineGame_Base_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.GetPlaylistPlayerCount
//// [0x00080002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UGameSettingPlaylist_X*  Playlist                       ( CPF_Parm )
//
//int UOnlineGame_Base_X::GetPlaylistPlayerCount ( class UGameSettingPlaylist_X* Playlist )
//{
//	static UFunction* pFnGetPlaylistPlayerCount = NULL;
//
//	if ( ! pFnGetPlaylistPlayerCount )
//		pFnGetPlaylistPlayerCount = (UFunction*) UObject::GObjObjects()->Data[ 50628 ];
//
//	UOnlineGame_Base_X_execGetPlaylistPlayerCount_Parms GetPlaylistPlayerCount_Parms;
//	GetPlaylistPlayerCount_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnGetPlaylistPlayerCount, &GetPlaylistPlayerCount_Parms, NULL );
//
//	return GetPlaylistPlayerCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_Base_X.OnNewSettingsChosen
//// [0x00020002] 
//// Parameters infos:
//// int                            PlaylistId                     ( CPF_Parm )
//
//void UOnlineGame_Base_X::OnNewSettingsChosen ( int PlaylistId )
//{
//	static UFunction* pFnOnNewSettingsChosen = NULL;
//
//	if ( ! pFnOnNewSettingsChosen )
//		pFnOnNewSettingsChosen = (UFunction*) UObject::GObjObjects()->Data[ 50620 ];
//
//	UOnlineGame_Base_X_execOnNewSettingsChosen_Parms OnNewSettingsChosen_Parms;
//	OnNewSettingsChosen_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnOnNewSettingsChosen, &OnNewSettingsChosen_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.UpdateGameSettingsPlayerCount
//// [0x00020002] 
//// Parameters infos:
//// int                            NumPlayers                     ( CPF_Parm )
//
//void UOnlineGame_Base_X::UpdateGameSettingsPlayerCount ( int NumPlayers )
//{
//	static UFunction* pFnUpdateGameSettingsPlayerCount = NULL;
//
//	if ( ! pFnUpdateGameSettingsPlayerCount )
//		pFnUpdateGameSettingsPlayerCount = (UFunction*) UObject::GObjObjects()->Data[ 50617 ];
//
//	UOnlineGame_Base_X_execUpdateGameSettingsPlayerCount_Parms UpdateGameSettingsPlayerCount_Parms;
//	UpdateGameSettingsPlayerCount_Parms.NumPlayers = NumPlayers;
//
//	this->ProcessEvent ( pFnUpdateGameSettingsPlayerCount, &UpdateGameSettingsPlayerCount_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.UpdateGameSettings
//// [0x00020002] 
//// Parameters infos:
//// class UOnlineGameSettings_X*   InGameSettings                 ( CPF_Parm )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGame_Base_X::UpdateGameSettings ( class UOnlineGameSettings_X* InGameSettings, struct FString Options )
//{
//	static UFunction* pFnUpdateGameSettings = NULL;
//
//	if ( ! pFnUpdateGameSettings )
//		pFnUpdateGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 50613 ];
//
//	UOnlineGame_Base_X_execUpdateGameSettings_Parms UpdateGameSettings_Parms;
//	UpdateGameSettings_Parms.InGameSettings = InGameSettings;
//	memcpy ( &UpdateGameSettings_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnUpdateGameSettings, &UpdateGameSettings_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.CreateOnlineGameSettings
//// [0x00024002] 
//// Parameters infos:
//// class UOnlineGameSettings_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Options                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameSettings_X* UOnlineGame_Base_X::CreateOnlineGameSettings ( struct FString Options )
//{
//	static UFunction* pFnCreateOnlineGameSettings = NULL;
//
//	if ( ! pFnCreateOnlineGameSettings )
//		pFnCreateOnlineGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 50609 ];
//
//	UOnlineGame_Base_X_execCreateOnlineGameSettings_Parms CreateOnlineGameSettings_Parms;
//	memcpy ( &CreateOnlineGameSettings_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnCreateOnlineGameSettings, &CreateOnlineGameSettings_Parms, NULL );
//
//	return CreateOnlineGameSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_Base_X.OnNewGameInfoCreated
//// [0x00020000] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGame_Base_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 50607 ];
//
//	UOnlineGame_Base_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.InitOnlineSubsystemInterfaces
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//
//void UOnlineGame_Base_X::InitOnlineSubsystemInterfaces ( )
//{
//	static UFunction* pFnInitOnlineSubsystemInterfaces = NULL;
//
//	if ( ! pFnInitOnlineSubsystemInterfaces )
//		pFnInitOnlineSubsystemInterfaces = (UFunction*) UObject::GObjObjects()->Data[ 50599 ];
//
//	UOnlineGame_Base_X_execInitOnlineSubsystemInterfaces_Parms InitOnlineSubsystemInterfaces_Parms;
//
//	pFnInitOnlineSubsystemInterfaces->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnInitOnlineSubsystemInterfaces, &InitOnlineSubsystemInterfaces_Parms, NULL );
//
//	pFnInitOnlineSubsystemInterfaces->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineGame_Base_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGame_Base_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50598 ];
//
//	UOnlineGame_Base_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_Base_X.EventInternetConnectionChanged
//// [0x00120000] 
//// Parameters infos:
//// unsigned long                  bConnected                     ( CPF_Parm )
//
//void UOnlineGame_Base_X::EventInternetConnectionChanged ( unsigned long bConnected )
//{
//	static UFunction* pFnEventInternetConnectionChanged = NULL;
//
//	if ( ! pFnEventInternetConnectionChanged )
//		pFnEventInternetConnectionChanged = (UFunction*) UObject::GObjObjects()->Data[ 50585 ];
//
//	UOnlineGame_Base_X_execEventInternetConnectionChanged_Parms EventInternetConnectionChanged_Parms;
//	EventInternetConnectionChanged_Parms.bConnected = bConnected;
//
//	this->ProcessEvent ( pFnEventInternetConnectionChanged, &EventInternetConnectionChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGame_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50756 ];
//
//	UOnlineGame_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.HandlePublicIPComplete
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetPublicIP_X*      RPC                            ( CPF_Parm )
//
//void UOnlineGame_X::HandlePublicIPComplete ( class URPC_GetPublicIP_X* RPC )
//{
//	static UFunction* pFnHandlePublicIPComplete = NULL;
//
//	if ( ! pFnHandlePublicIPComplete )
//		pFnHandlePublicIPComplete = (UFunction*) UObject::GObjObjects()->Data[ 50759 ];
//
//	UOnlineGame_X_execHandlePublicIPComplete_Parms HandlePublicIPComplete_Parms;
//	HandlePublicIPComplete_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandlePublicIPComplete, &HandlePublicIPComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.HandlePsyNetLogin
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UOnlineGame_X::HandlePsyNetLogin ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnHandlePsyNetLogin = NULL;
//
//	if ( ! pFnHandlePsyNetLogin )
//		pFnHandlePsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 50760 ];
//
//	UOnlineGame_X_execHandlePsyNetLogin_Parms HandlePsyNetLogin_Parms;
//	HandlePsyNetLogin_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnHandlePsyNetLogin, &HandlePsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.NotifyPlayerPsyNetLogout
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGame_X::NotifyPlayerPsyNetLogout ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyPlayerPsyNetLogout = NULL;
//
//	if ( ! pFnNotifyPlayerPsyNetLogout )
//		pFnNotifyPlayerPsyNetLogout = (UFunction*) UObject::GObjObjects()->Data[ 50765 ];
//
//	UOnlineGame_X_execNotifyPlayerPsyNetLogout_Parms NotifyPlayerPsyNetLogout_Parms;
//	memcpy ( &NotifyPlayerPsyNetLogout_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyPlayerPsyNetLogout, &NotifyPlayerPsyNetLogout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.NotifyPlayerPsyNetLogin
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGame_X::NotifyPlayerPsyNetLogin ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyPlayerPsyNetLogin = NULL;
//
//	if ( ! pFnNotifyPlayerPsyNetLogin )
//		pFnNotifyPlayerPsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 50753 ];
//
//	UOnlineGame_X_execNotifyPlayerPsyNetLogin_Parms NotifyPlayerPsyNetLogin_Parms;
//	memcpy ( &NotifyPlayerPsyNetLogin_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyPlayerPsyNetLogin, &NotifyPlayerPsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.IsSignedIn
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ControllerId                   ( CPF_Parm )
//
//bool UOnlineGame_X::IsSignedIn ( int ControllerId )
//{
//	static UFunction* pFnIsSignedIn = NULL;
//
//	if ( ! pFnIsSignedIn )
//		pFnIsSignedIn = (UFunction*) UObject::GObjObjects()->Data[ 50749 ];
//
//	UOnlineGame_X_execIsSignedIn_Parms IsSignedIn_Parms;
//	IsSignedIn_Parms.ControllerId = ControllerId;
//
//	this->ProcessEvent ( pFnIsSignedIn, &IsSignedIn_Parms, NULL );
//
//	return IsSignedIn_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.CheckUpToDate
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGame_X::CheckUpToDate ( class UError** Error )
//{
//	static UFunction* pFnCheckUpToDate = NULL;
//
//	if ( ! pFnCheckUpToDate )
//		pFnCheckUpToDate = (UFunction*) UObject::GObjObjects()->Data[ 50752 ];
//
//	UOnlineGame_X_execCheckUpToDate_Parms CheckUpToDate_Parms;
//
//	this->ProcessEvent ( pFnCheckUpToDate, &CheckUpToDate_Parms, NULL );
//
//	if ( Error )
//		*Error = CheckUpToDate_Parms.Error;
//
//	return CheckUpToDate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.CheckNotTooYoung
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGame_X::CheckNotTooYoung ( class UError** Error )
//{
//	static UFunction* pFnCheckNotTooYoung = NULL;
//
//	if ( ! pFnCheckNotTooYoung )
//		pFnCheckNotTooYoung = (UFunction*) UObject::GObjObjects()->Data[ 50773 ];
//
//	UOnlineGame_X_execCheckNotTooYoung_Parms CheckNotTooYoung_Parms;
//
//	this->ProcessEvent ( pFnCheckNotTooYoung, &CheckNotTooYoung_Parms, NULL );
//
//	if ( Error )
//		*Error = CheckNotTooYoung_Parms.Error;
//
//	return CheckNotTooYoung_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.GetPsyNetLoginError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UOnlinePlayer_X*         OnlinePlayer                   ( CPF_Parm )
//
//class UError* UOnlineGame_X::GetPsyNetLoginError ( class UOnlinePlayer_X* OnlinePlayer )
//{
//	static UFunction* pFnGetPsyNetLoginError = NULL;
//
//	if ( ! pFnGetPsyNetLoginError )
//		pFnGetPsyNetLoginError = (UFunction*) UObject::GObjObjects()->Data[ 50744 ];
//
//	UOnlineGame_X_execGetPsyNetLoginError_Parms GetPsyNetLoginError_Parms;
//	GetPsyNetLoginError_Parms.OnlinePlayer = OnlinePlayer;
//
//	this->ProcessEvent ( pFnGetPsyNetLoginError, &GetPsyNetLoginError_Parms, NULL );
//
//	return GetPsyNetLoginError_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.CheckPsyNetConnection
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGame_X::CheckPsyNetConnection ( class UError** Error )
//{
//	static UFunction* pFnCheckPsyNetConnection = NULL;
//
//	if ( ! pFnCheckPsyNetConnection )
//		pFnCheckPsyNetConnection = (UFunction*) UObject::GObjObjects()->Data[ 50737 ];
//
//	UOnlineGame_X_execCheckPsyNetConnection_Parms CheckPsyNetConnection_Parms;
//
//	this->ProcessEvent ( pFnCheckPsyNetConnection, &CheckPsyNetConnection_Parms, NULL );
//
//	if ( Error )
//		*Error = CheckPsyNetConnection_Parms.Error;
//
//	return CheckPsyNetConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.ValidateUserOnlineAccount
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGame_X::ValidateUserOnlineAccount ( class UError** Error )
//{
//	static UFunction* pFnValidateUserOnlineAccount = NULL;
//
//	if ( ! pFnValidateUserOnlineAccount )
//		pFnValidateUserOnlineAccount = (UFunction*) UObject::GObjObjects()->Data[ 50741 ];
//
//	UOnlineGame_X_execValidateUserOnlineAccount_Parms ValidateUserOnlineAccount_Parms;
//
//	this->ProcessEvent ( pFnValidateUserOnlineAccount, &ValidateUserOnlineAccount_Parms, NULL );
//
//	if ( Error )
//		*Error = ValidateUserOnlineAccount_Parms.Error;
//
//	return ValidateUserOnlineAccount_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.CheckInternetConnection
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGame_X::CheckInternetConnection ( class UError** Error )
//{
//	static UFunction* pFnCheckInternetConnection = NULL;
//
//	if ( ! pFnCheckInternetConnection )
//		pFnCheckInternetConnection = (UFunction*) UObject::GObjObjects()->Data[ 50734 ];
//
//	UOnlineGame_X_execCheckInternetConnection_Parms CheckInternetConnection_Parms;
//
//	this->ProcessEvent ( pFnCheckInternetConnection, &CheckInternetConnection_Parms, NULL );
//
//	if ( Error )
//		*Error = CheckInternetConnection_Parms.Error;
//
//	return CheckInternetConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.IsOnlinePlayerID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//bool UOnlineGame_X::IsOnlinePlayerID ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnIsOnlinePlayerID = NULL;
//
//	if ( ! pFnIsOnlinePlayerID )
//		pFnIsOnlinePlayerID = (UFunction*) UObject::GObjObjects()->Data[ 50731 ];
//
//	UOnlineGame_X_execIsOnlinePlayerID_Parms IsOnlinePlayerID_Parms;
//	memcpy ( &IsOnlinePlayerID_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnIsOnlinePlayerID, &IsOnlinePlayerID_Parms, NULL );
//
//	return IsOnlinePlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.GetOnlinePlayerByID
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class UOnlinePlayer_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//class UOnlinePlayer_X* UOnlineGame_X::eventGetOnlinePlayerByID ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetOnlinePlayerByID = NULL;
//
//	if ( ! pFnGetOnlinePlayerByID )
//		pFnGetOnlinePlayerByID = (UFunction*) UObject::GObjObjects()->Data[ 50727 ];
//
//	UOnlineGame_X_eventGetOnlinePlayerByID_Parms GetOnlinePlayerByID_Parms;
//	memcpy ( &GetOnlinePlayerByID_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetOnlinePlayerByID, &GetOnlinePlayerByID_Parms, NULL );
//
//	return GetOnlinePlayerByID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.OnNewSettingsChosen
//// [0x00020002] 
//// Parameters infos:
//// int                            PlaylistId                     ( CPF_Parm )
//
//void UOnlineGame_X::OnNewSettingsChosen ( int PlaylistId )
//{
//	static UFunction* pFnOnNewSettingsChosen = NULL;
//
//	if ( ! pFnOnNewSettingsChosen )
//		pFnOnNewSettingsChosen = (UFunction*) UObject::GObjObjects()->Data[ 50724 ];
//
//	UOnlineGame_X_execOnNewSettingsChosen_Parms OnNewSettingsChosen_Parms;
//	OnNewSettingsChosen_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnOnNewSettingsChosen, &OnNewSettingsChosen_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.GetPrimaryPlayerID
//// [0x00820802] ( FUNC_Event )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FUniqueNetId UOnlineGame_X::eventGetPrimaryPlayerID ( )
//{
//	static UFunction* pFnGetPrimaryPlayerID = NULL;
//
//	if ( ! pFnGetPrimaryPlayerID )
//		pFnGetPrimaryPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 50726 ];
//
//	UOnlineGame_X_eventGetPrimaryPlayerID_Parms GetPrimaryPlayerID_Parms;
//
//	this->ProcessEvent ( pFnGetPrimaryPlayerID, &GetPrimaryPlayerID_Parms, NULL );
//
//	return GetPrimaryPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.GetPrimaryPlayer
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class UOnlinePlayer_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlinePlayer_X* UOnlineGame_X::eventGetPrimaryPlayer ( )
//{
//	static UFunction* pFnGetPrimaryPlayer = NULL;
//
//	if ( ! pFnGetPrimaryPlayer )
//		pFnGetPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 50790 ];
//
//	UOnlineGame_X_eventGetPrimaryPlayer_Parms GetPrimaryPlayer_Parms;
//
//	this->ProcessEvent ( pFnGetPrimaryPlayer, &GetPrimaryPlayer_Parms, NULL );
//
//	return GetPrimaryPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.RemoveOnlinePlayer
//// [0x00020002] 
//// Parameters infos:
//// class ULocalPlayer_X*          LocalPlayer                    ( CPF_Parm )
//
//void UOnlineGame_X::RemoveOnlinePlayer ( class ULocalPlayer_X* LocalPlayer )
//{
//	static UFunction* pFnRemoveOnlinePlayer = NULL;
//
//	if ( ! pFnRemoveOnlinePlayer )
//		pFnRemoveOnlinePlayer = (UFunction*) UObject::GObjObjects()->Data[ 50720 ];
//
//	UOnlineGame_X_execRemoveOnlinePlayer_Parms RemoveOnlinePlayer_Parms;
//	RemoveOnlinePlayer_Parms.LocalPlayer = LocalPlayer;
//
//	this->ProcessEvent ( pFnRemoveOnlinePlayer, &RemoveOnlinePlayer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.AddOnlinePlayer
//// [0x00020002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         OnlinePlayer                   ( CPF_Parm )
//
//void UOnlineGame_X::AddOnlinePlayer ( class UOnlinePlayer_X* OnlinePlayer )
//{
//	static UFunction* pFnAddOnlinePlayer = NULL;
//
//	if ( ! pFnAddOnlinePlayer )
//		pFnAddOnlinePlayer = (UFunction*) UObject::GObjObjects()->Data[ 50723 ];
//
//	UOnlineGame_X_execAddOnlinePlayer_Parms AddOnlinePlayer_Parms;
//	AddOnlinePlayer_Parms.OnlinePlayer = OnlinePlayer;
//
//	this->ProcessEvent ( pFnAddOnlinePlayer, &AddOnlinePlayer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.CreateOnlinePlayer
//// [0x00020002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class ULocalPlayer_X*          LocalPlayer                    ( CPF_Parm )
//
//class UOnlinePlayer_X* UOnlineGame_X::CreateOnlinePlayer ( class ULocalPlayer_X* LocalPlayer )
//{
//	static UFunction* pFnCreateOnlinePlayer = NULL;
//
//	if ( ! pFnCreateOnlinePlayer )
//		pFnCreateOnlinePlayer = (UFunction*) UObject::GObjObjects()->Data[ 50409 ];
//
//	UOnlineGame_X_execCreateOnlinePlayer_Parms CreateOnlinePlayer_Parms;
//	CreateOnlinePlayer_Parms.LocalPlayer = LocalPlayer;
//
//	this->ProcessEvent ( pFnCreateOnlinePlayer, &CreateOnlinePlayer_Parms, NULL );
//
//	return CreateOnlinePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.SetPlayedWith
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGame_X::SetPlayedWith ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnSetPlayedWith = NULL;
//
//	if ( ! pFnSetPlayedWith )
//		pFnSetPlayedWith = (UFunction*) UObject::GObjObjects()->Data[ 50716 ];
//
//	UOnlineGame_X_execSetPlayedWith_Parms SetPlayedWith_Parms;
//	memcpy ( &SetPlayedWith_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayedWith, &SetPlayedWith_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.GetPlayerAvatar
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FScriptDelegate         ReadOnlineAvatarCompleteDelegate ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// unsigned char                  Size                           ( CPF_OptionalParm | CPF_Parm )
//
//void UOnlineGame_X::GetPlayerAvatar ( struct FUniqueNetId PlayerID, struct FScriptDelegate ReadOnlineAvatarCompleteDelegate, unsigned char Size )
//{
//	static UFunction* pFnGetPlayerAvatar = NULL;
//
//	if ( ! pFnGetPlayerAvatar )
//		pFnGetPlayerAvatar = (UFunction*) UObject::GObjObjects()->Data[ 50711 ];
//
//	UOnlineGame_X_execGetPlayerAvatar_Parms GetPlayerAvatar_Parms;
//	memcpy ( &GetPlayerAvatar_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &GetPlayerAvatar_Parms.ReadOnlineAvatarCompleteDelegate, &ReadOnlineAvatarCompleteDelegate, 0x10 );
//	GetPlayerAvatar_Parms.Size = Size;
//
//	this->ProcessEvent ( pFnGetPlayerAvatar, &GetPlayerAvatar_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.ClearPendingAvatarDownloads
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGame_X::ClearPendingAvatarDownloads ( )
//{
//	static UFunction* pFnClearPendingAvatarDownloads = NULL;
//
//	if ( ! pFnClearPendingAvatarDownloads )
//		pFnClearPendingAvatarDownloads = (UFunction*) UObject::GObjObjects()->Data[ 50715 ];
//
//	UOnlineGame_X_execClearPendingAvatarDownloads_Parms ClearPendingAvatarDownloads_Parms;
//
//	this->ProcessEvent ( pFnClearPendingAvatarDownloads, &ClearPendingAvatarDownloads_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.SetVoiceVolume
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// float                          NewValue                       ( CPF_Parm )
//
//void UOnlineGame_X::SetVoiceVolume ( float NewValue )
//{
//	static UFunction* pFnSetVoiceVolume = NULL;
//
//	if ( ! pFnSetVoiceVolume )
//		pFnSetVoiceVolume = (UFunction*) UObject::GObjObjects()->Data[ 50709 ];
//
//	UOnlineGame_X_execSetVoiceVolume_Parms SetVoiceVolume_Parms;
//	SetVoiceVolume_Parms.NewValue = NewValue;
//
//	this->ProcessEvent ( pFnSetVoiceVolume, &SetVoiceVolume_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.OnNewGameInfoCreated
//// [0x00020002] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGame_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 50707 ];
//
//	UOnlineGame_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.OnMainMenuOpened
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGame_X::OnMainMenuOpened ( )
//{
//	static UFunction* pFnOnMainMenuOpened = NULL;
//
//	if ( ! pFnOnMainMenuOpened )
//		pFnOnMainMenuOpened = (UFunction*) UObject::GObjObjects()->Data[ 50706 ];
//
//	UOnlineGame_X_execOnMainMenuOpened_Parms OnMainMenuOpened_Parms;
//
//	this->ProcessEvent ( pFnOnMainMenuOpened, &OnMainMenuOpened_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.HandlePlayerLogin
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         OnlinePlayer                   ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGame_X::HandlePlayerLogin ( class UOnlinePlayer_X* OnlinePlayer, class UError* Error )
//{
//	static UFunction* pFnHandlePlayerLogin = NULL;
//
//	if ( ! pFnHandlePlayerLogin )
//		pFnHandlePlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 50701 ];
//
//	UOnlineGame_X_execHandlePlayerLogin_Parms HandlePlayerLogin_Parms;
//	HandlePlayerLogin_Parms.OnlinePlayer = OnlinePlayer;
//	HandlePlayerLogin_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandlePlayerLogin, &HandlePlayerLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.HandlePsyNetLoginChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlineGame_X::HandlePsyNetLoginChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnHandlePsyNetLoginChanged = NULL;
//
//	if ( ! pFnHandlePsyNetLoginChanged )
//		pFnHandlePsyNetLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 50703 ];
//
//	UOnlineGame_X_execHandlePsyNetLoginChanged_Parms HandlePsyNetLoginChanged_Parms;
//	HandlePsyNetLoginChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.IsLoggedInToPsyNet
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UOnlinePlayer_X*         OnlinePlayer                   ( CPF_Parm )
//
//bool UOnlineGame_X::IsLoggedInToPsyNet ( class UOnlinePlayer_X* OnlinePlayer )
//{
//	static UFunction* pFnIsLoggedInToPsyNet = NULL;
//
//	if ( ! pFnIsLoggedInToPsyNet )
//		pFnIsLoggedInToPsyNet = (UFunction*) UObject::GObjObjects()->Data[ 50705 ];
//
//	UOnlineGame_X_execIsLoggedInToPsyNet_Parms IsLoggedInToPsyNet_Parms;
//	IsLoggedInToPsyNet_Parms.OnlinePlayer = OnlinePlayer;
//
//	this->ProcessEvent ( pFnIsLoggedInToPsyNet, &IsLoggedInToPsyNet_Parms, NULL );
//
//	return IsLoggedInToPsyNet_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGame_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGame_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50688 ];
//
//	UOnlineGame_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.EventPlayerPsyNetLogout
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGame_X::EventPlayerPsyNetLogout ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventPlayerPsyNetLogout = NULL;
//
//	if ( ! pFnEventPlayerPsyNetLogout )
//		pFnEventPlayerPsyNetLogout = (UFunction*) UObject::GObjObjects()->Data[ 50689 ];
//
//	UOnlineGame_X_execEventPlayerPsyNetLogout_Parms EventPlayerPsyNetLogout_Parms;
//	EventPlayerPsyNetLogout_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventPlayerPsyNetLogout, &EventPlayerPsyNetLogout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.EventPlayerPsyNetLogin
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGame_X::EventPlayerPsyNetLogin ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventPlayerPsyNetLogin = NULL;
//
//	if ( ! pFnEventPlayerPsyNetLogin )
//		pFnEventPlayerPsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 50655 ];
//
//	UOnlineGame_X_execEventPlayerPsyNetLogin_Parms EventPlayerPsyNetLogin_Parms;
//	EventPlayerPsyNetLogin_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventPlayerPsyNetLogin, &EventPlayerPsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGame_X.EventConnectionError
//// [0x00124000] 
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//// class UOnlinePlayer_X*         Player                         ( CPF_OptionalParm | CPF_Parm )
//
//void UOnlineGame_X::EventConnectionError ( class UError* Error, class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventConnectionError = NULL;
//
//	if ( ! pFnEventConnectionError )
//		pFnEventConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 50657 ];
//
//	UOnlineGame_X_execEventConnectionError_Parms EventConnectionError_Parms;
//	EventConnectionError_Parms.Error = Error;
//	EventConnectionError_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventConnectionError, &EventConnectionError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServer_X.OnExit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameServer_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 51073 ];
//
//	UOnlineGameServer_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServer_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameServer_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50961 ];
//
//	UOnlineGameServer_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 51094 ];
//
//	UOnlineGameDedicatedServer_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.SetMatchID
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::SetMatchID ( struct FString Id )
//{
//	static UFunction* pFnSetMatchID = NULL;
//
//	if ( ! pFnSetMatchID )
//		pFnSetMatchID = (UFunction*) UObject::GObjObjects()->Data[ 51096 ];
//
//	UOnlineGameDedicatedServer_X_execSetMatchID_Parms SetMatchID_Parms;
//	memcpy ( &SetMatchID_Parms.Id, &Id, 0xC );
//
//	this->ProcessEvent ( pFnSetMatchID, &SetMatchID_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.CreateMatchID
//// [0x00880002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::CreateMatchID ( )
//{
//	static UFunction* pFnCreateMatchID = NULL;
//
//	if ( ! pFnCreateMatchID )
//		pFnCreateMatchID = (UFunction*) UObject::GObjObjects()->Data[ 51114 ];
//
//	UOnlineGameDedicatedServer_X_execCreateMatchID_Parms CreateMatchID_Parms;
//
//	this->ProcessEvent ( pFnCreateMatchID, &CreateMatchID_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetCurrentMapName
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FName UOnlineGameDedicatedServer_X::GetCurrentMapName ( )
//{
//	static UFunction* pFnGetCurrentMapName = NULL;
//
//	if ( ! pFnGetCurrentMapName )
//		pFnGetCurrentMapName = (UFunction*) UObject::GObjObjects()->Data[ 51092 ];
//
//	UOnlineGameDedicatedServer_X_execGetCurrentMapName_Parms GetCurrentMapName_Parms;
//
//	this->ProcessEvent ( pFnGetCurrentMapName, &GetCurrentMapName_Parms, NULL );
//
//	return GetCurrentMapName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.ClearMatchmakingBan
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::ClearMatchmakingBan ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnClearMatchmakingBan = NULL;
//
//	if ( ! pFnClearMatchmakingBan )
//		pFnClearMatchmakingBan = (UFunction*) UObject::GObjObjects()->Data[ 51087 ];
//
//	UOnlineGameDedicatedServer_X_execClearMatchmakingBan_Parms ClearMatchmakingBan_Parms;
//	memcpy ( &ClearMatchmakingBan_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnClearMatchmakingBan, &ClearMatchmakingBan_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.IssueMatchmakingBan
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::IssueMatchmakingBan ( struct FUniqueNetId PlayerID, struct FString Reason )
//{
//	static UFunction* pFnIssueMatchmakingBan = NULL;
//
//	if ( ! pFnIssueMatchmakingBan )
//		pFnIssueMatchmakingBan = (UFunction*) UObject::GObjObjects()->Data[ 51078 ];
//
//	UOnlineGameDedicatedServer_X_execIssueMatchmakingBan_Parms IssueMatchmakingBan_Parms;
//	memcpy ( &IssueMatchmakingBan_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &IssueMatchmakingBan_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnIssueMatchmakingBan, &IssueMatchmakingBan_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetTeamNum
//// [0x00020002] 
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//unsigned char UOnlineGameDedicatedServer_X::GetTeamNum ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetTeamNum = NULL;
//
//	if ( ! pFnGetTeamNum )
//		pFnGetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 51081 ];
//
//	UOnlineGameDedicatedServer_X_execGetTeamNum_Parms GetTeamNum_Parms;
//	memcpy ( &GetTeamNum_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetTeamNum, &GetTeamNum_Parms, NULL );
//
//	return GetTeamNum_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.KickPlayersOnGameEventDestroyed
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServer_X::KickPlayersOnGameEventDestroyed ( )
//{
//	static UFunction* pFnKickPlayersOnGameEventDestroyed = NULL;
//
//	if ( ! pFnKickPlayersOnGameEventDestroyed )
//		pFnKickPlayersOnGameEventDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51120 ];
//
//	UOnlineGameDedicatedServer_X_execKickPlayersOnGameEventDestroyed_Parms KickPlayersOnGameEventDestroyed_Parms;
//
//	this->ProcessEvent ( pFnKickPlayersOnGameEventDestroyed, &KickPlayersOnGameEventDestroyed_Parms, NULL );
//
//	return KickPlayersOnGameEventDestroyed_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.IsRankedMatch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServer_X::IsRankedMatch ( )
//{
//	static UFunction* pFnIsRankedMatch = NULL;
//
//	if ( ! pFnIsRankedMatch )
//		pFnIsRankedMatch = (UFunction*) UObject::GObjObjects()->Data[ 51076 ];
//
//	UOnlineGameDedicatedServer_X_execIsRankedMatch_Parms IsRankedMatch_Parms;
//
//	this->ProcessEvent ( pFnIsRankedMatch, &IsRankedMatch_Parms, NULL );
//
//	return IsRankedMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetPlaylist
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UGameSettingPlaylist_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGameSettingPlaylist_X* UOnlineGameDedicatedServer_X::GetPlaylist ( )
//{
//	static UFunction* pFnGetPlaylist = NULL;
//
//	if ( ! pFnGetPlaylist )
//		pFnGetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 50994 ];
//
//	UOnlineGameDedicatedServer_X_execGetPlaylist_Parms GetPlaylist_Parms;
//
//	this->ProcessEvent ( pFnGetPlaylist, &GetPlaylist_Parms, NULL );
//
//	return GetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.OnExit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 51072 ];
//
//	UOnlineGameDedicatedServer_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.HandleNewServerIPRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_CheckReplacementDedicatedServer_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::HandleNewServerIPRPC ( class URPC_CheckReplacementDedicatedServer_X* RPC )
//{
//	static UFunction* pFnHandleNewServerIPRPC = NULL;
//
//	if ( ! pFnHandleNewServerIPRPC )
//		pFnHandleNewServerIPRPC = (UFunction*) UObject::GObjObjects()->Data[ 51074 ];
//
//	UOnlineGameDedicatedServer_X_execHandleNewServerIPRPC_Parms HandleNewServerIPRPC_Parms;
//	HandleNewServerIPRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleNewServerIPRPC, &HandleNewServerIPRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.CheckNewServerIP
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::CheckNewServerIP ( )
//{
//	static UFunction* pFnCheckNewServerIP = NULL;
//
//	if ( ! pFnCheckNewServerIP )
//		pFnCheckNewServerIP = (UFunction*) UObject::GObjObjects()->Data[ 51066 ];
//
//	UOnlineGameDedicatedServer_X_execCheckNewServerIP_Parms CheckNewServerIP_Parms;
//
//	this->ProcessEvent ( pFnCheckNewServerIP, &CheckNewServerIP_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.CheckNewServerTimeout
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::CheckNewServerTimeout ( )
//{
//	static UFunction* pFnCheckNewServerTimeout = NULL;
//
//	if ( ! pFnCheckNewServerTimeout )
//		pFnCheckNewServerTimeout = (UFunction*) UObject::GObjObjects()->Data[ 51065 ];
//
//	UOnlineGameDedicatedServer_X_execCheckNewServerTimeout_Parms CheckNewServerTimeout_Parms;
//
//	this->ProcessEvent ( pFnCheckNewServerTimeout, &CheckNewServerTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.CheckStartShutdown
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            GameTimeRemaining              ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::CheckStartShutdown ( int GameTimeRemaining )
//{
//	static UFunction* pFnCheckStartShutdown = NULL;
//
//	if ( ! pFnCheckStartShutdown )
//		pFnCheckStartShutdown = (UFunction*) UObject::GObjObjects()->Data[ 51058 ];
//
//	UOnlineGameDedicatedServer_X_execCheckStartShutdown_Parms CheckStartShutdown_Parms;
//	CheckStartShutdown_Parms.GameTimeRemaining = GameTimeRemaining;
//
//	this->ProcessEvent ( pFnCheckStartShutdown, &CheckStartShutdown_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.AllowServerMigration
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServer_X::AllowServerMigration ( )
//{
//	static UFunction* pFnAllowServerMigration = NULL;
//
//	if ( ! pFnAllowServerMigration )
//		pFnAllowServerMigration = (UFunction*) UObject::GObjObjects()->Data[ 51063 ];
//
//	UOnlineGameDedicatedServer_X_execAllowServerMigration_Parms AllowServerMigration_Parms;
//
//	this->ProcessEvent ( pFnAllowServerMigration, &AllowServerMigration_Parms, NULL );
//
//	return AllowServerMigration_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.UpdateGameTime
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            TimeSeconds                    ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::UpdateGameTime ( int TimeSeconds )
//{
//	static UFunction* pFnUpdateGameTime = NULL;
//
//	if ( ! pFnUpdateGameTime )
//		pFnUpdateGameTime = (UFunction*) UObject::GObjObjects()->Data[ 51060 ];
//
//	UOnlineGameDedicatedServer_X_execUpdateGameTime_Parms UpdateGameTime_Parms;
//	UpdateGameTime_Parms.TimeSeconds = TimeSeconds;
//
//	this->ProcessEvent ( pFnUpdateGameTime, &UpdateGameTime_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.FindNewDedicatedServerForPlayers
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::FindNewDedicatedServerForPlayers ( struct FScriptDelegate InDelegate )
//{
//	static UFunction* pFnFindNewDedicatedServerForPlayers = NULL;
//
//	if ( ! pFnFindNewDedicatedServerForPlayers )
//		pFnFindNewDedicatedServerForPlayers = (UFunction*) UObject::GObjObjects()->Data[ 51056 ];
//
//	UOnlineGameDedicatedServer_X_execFindNewDedicatedServerForPlayers_Parms FindNewDedicatedServerForPlayers_Parms;
//	memcpy ( &FindNewDedicatedServerForPlayers_Parms.InDelegate, &InDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnFindNewDedicatedServerForPlayers, &FindNewDedicatedServerForPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.IsInPostGameLobby
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServer_X::IsInPostGameLobby ( )
//{
//	static UFunction* pFnIsInPostGameLobby = NULL;
//
//	if ( ! pFnIsInPostGameLobby )
//		pFnIsInPostGameLobby = (UFunction*) UObject::GObjObjects()->Data[ 51054 ];
//
//	UOnlineGameDedicatedServer_X_execIsInPostGameLobby_Parms IsInPostGameLobby_Parms;
//
//	this->ProcessEvent ( pFnIsInPostGameLobby, &IsInPostGameLobby_Parms, NULL );
//
//	return IsInPostGameLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.IsTravellingToNextMap
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServer_X::IsTravellingToNextMap ( )
//{
//	static UFunction* pFnIsTravellingToNextMap = NULL;
//
//	if ( ! pFnIsTravellingToNextMap )
//		pFnIsTravellingToNextMap = (UFunction*) UObject::GObjObjects()->Data[ 48795 ];
//
//	UOnlineGameDedicatedServer_X_execIsTravellingToNextMap_Parms IsTravellingToNextMap_Parms;
//
//	this->ProcessEvent ( pFnIsTravellingToNextMap, &IsTravellingToNextMap_Parms, NULL );
//
//	return IsTravellingToNextMap_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.UpdateOnlineGame
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::UpdateOnlineGame ( )
//{
//	static UFunction* pFnUpdateOnlineGame = NULL;
//
//	if ( ! pFnUpdateOnlineGame )
//		pFnUpdateOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 51052 ];
//
//	UOnlineGameDedicatedServer_X_execUpdateOnlineGame_Parms UpdateOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnUpdateOnlineGame, &UpdateOnlineGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.AllowSplitscreenJoinRankedMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServer_X::AllowSplitscreenJoinRankedMatch ( )
//{
//	static UFunction* pFnAllowSplitscreenJoinRankedMatch = NULL;
//
//	if ( ! pFnAllowSplitscreenJoinRankedMatch )
//		pFnAllowSplitscreenJoinRankedMatch = (UFunction*) UObject::GObjObjects()->Data[ 51053 ];
//
//	UOnlineGameDedicatedServer_X_execAllowSplitscreenJoinRankedMatch_Parms AllowSplitscreenJoinRankedMatch_Parms;
//
//	this->ProcessEvent ( pFnAllowSplitscreenJoinRankedMatch, &AllowSplitscreenJoinRankedMatch_Parms, NULL );
//
//	return AllowSplitscreenJoinRankedMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.AllowSplitscreenJoin
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerReplicationInfo*  PrimaryPRI                     ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Error                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameDedicatedServer_X::AllowSplitscreenJoin ( class APlayerReplicationInfo* PrimaryPRI, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString* Error )
//{
//	static UFunction* pFnAllowSplitscreenJoin = NULL;
//
//	if ( ! pFnAllowSplitscreenJoin )
//		pFnAllowSplitscreenJoin = (UFunction*) UObject::GObjObjects()->Data[ 51044 ];
//
//	UOnlineGameDedicatedServer_X_execAllowSplitscreenJoin_Parms AllowSplitscreenJoin_Parms;
//	AllowSplitscreenJoin_Parms.PrimaryPRI = PrimaryPRI;
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerName, &PlayerName, 0xC );
//
//	this->ProcessEvent ( pFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Parms, NULL );
//
//	if ( Error )
//		memcpy ( Error, &AllowSplitscreenJoin_Parms.Error, 0xC );
//
//	return AllowSplitscreenJoin_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.PlayerLoggedOut
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::PlayerLoggedOut ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedOut = NULL;
//
//	if ( ! pFnPlayerLoggedOut )
//		pFnPlayerLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 51042 ];
//
//	UOnlineGameDedicatedServer_X_execPlayerLoggedOut_Parms PlayerLoggedOut_Parms;
//	PlayerLoggedOut_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedOut, &PlayerLoggedOut_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.PlayerLoggedIn
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::PlayerLoggedIn ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedIn = NULL;
//
//	if ( ! pFnPlayerLoggedIn )
//		pFnPlayerLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 51040 ];
//
//	UOnlineGameDedicatedServer_X_execPlayerLoggedIn_Parms PlayerLoggedIn_Parms;
//	PlayerLoggedIn_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedIn, &PlayerLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.AllowPlayerLogin
//// [0x00420002] 
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::AllowPlayerLogin ( struct FString Options, struct FUniqueNetId PlayerID, struct FString* ErrorMessage )
//{
//	static UFunction* pFnAllowPlayerLogin = NULL;
//
//	if ( ! pFnAllowPlayerLogin )
//		pFnAllowPlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 51036 ];
//
//	UOnlineGameDedicatedServer_X_execAllowPlayerLogin_Parms AllowPlayerLogin_Parms;
//	memcpy ( &AllowPlayerLogin_Parms.Options, &Options, 0xC );
//	memcpy ( &AllowPlayerLogin_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnAllowPlayerLogin, &AllowPlayerLogin_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &AllowPlayerLogin_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.OnNewGameInfoCreated
//// [0x00020002] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 51034 ];
//
//	UOnlineGameDedicatedServer_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.TravelToMap
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ServerCommand                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::TravelToMap ( struct FString ServerCommand )
//{
//	static UFunction* pFnTravelToMap = NULL;
//
//	if ( ! pFnTravelToMap )
//		pFnTravelToMap = (UFunction*) UObject::GObjObjects()->Data[ 51032 ];
//
//	UOnlineGameDedicatedServer_X_execTravelToMap_Parms TravelToMap_Parms;
//	memcpy ( &TravelToMap_Parms.ServerCommand, &ServerCommand, 0xC );
//
//	this->ProcessEvent ( pFnTravelToMap, &TravelToMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GotoPrivateMatchMap
//// [0x00020000] 
//// Parameters infos:
//// struct FName                   MapName                        ( CPF_Parm )
//// int                            GameMode                       ( CPF_Parm )
//// struct FString                 GameTags                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::GotoPrivateMatchMap ( struct FName MapName, int GameMode, struct FString GameTags )
//{
//	static UFunction* pFnGotoPrivateMatchMap = NULL;
//
//	if ( ! pFnGotoPrivateMatchMap )
//		pFnGotoPrivateMatchMap = (UFunction*) UObject::GObjObjects()->Data[ 51028 ];
//
//	UOnlineGameDedicatedServer_X_execGotoPrivateMatchMap_Parms GotoPrivateMatchMap_Parms;
//	memcpy ( &GotoPrivateMatchMap_Parms.MapName, &MapName, 0x8 );
//	GotoPrivateMatchMap_Parms.GameMode = GameMode;
//	memcpy ( &GotoPrivateMatchMap_Parms.GameTags, &GameTags, 0xC );
//
//	this->ProcessEvent ( pFnGotoPrivateMatchMap, &GotoPrivateMatchMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GotoNextPrivateMatchMap
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::GotoNextPrivateMatchMap ( )
//{
//	static UFunction* pFnGotoNextPrivateMatchMap = NULL;
//
//	if ( ! pFnGotoNextPrivateMatchMap )
//		pFnGotoNextPrivateMatchMap = (UFunction*) UObject::GObjObjects()->Data[ 51026 ];
//
//	UOnlineGameDedicatedServer_X_execGotoNextPrivateMatchMap_Parms GotoNextPrivateMatchMap_Parms;
//
//	this->ProcessEvent ( pFnGotoNextPrivateMatchMap, &GotoNextPrivateMatchMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.OnPrivateEventDestroyed
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::OnPrivateEventDestroyed ( )
//{
//	static UFunction* pFnOnPrivateEventDestroyed = NULL;
//
//	if ( ! pFnOnPrivateEventDestroyed )
//		pFnOnPrivateEventDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51027 ];
//
//	UOnlineGameDedicatedServer_X_execOnPrivateEventDestroyed_Parms OnPrivateEventDestroyed_Parms;
//
//	this->ProcessEvent ( pFnOnPrivateEventDestroyed, &OnPrivateEventDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetStartServerCommand
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameDedicatedServer_X::GetStartServerCommand ( )
//{
//	static UFunction* pFnGetStartServerCommand = NULL;
//
//	if ( ! pFnGetStartServerCommand )
//		pFnGetStartServerCommand = (UFunction*) UObject::GObjObjects()->Data[ 51021 ];
//
//	UOnlineGameDedicatedServer_X_execGetStartServerCommand_Parms GetStartServerCommand_Parms;
//
//	this->ProcessEvent ( pFnGetStartServerCommand, &GetStartServerCommand_Parms, NULL );
//
//	return GetStartServerCommand_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetNextRandomMapName
//// [0x00080000] 
//// Parameters infos:
//// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            GameMode                       ( CPF_Parm )
//
//struct FName UOnlineGameDedicatedServer_X::GetNextRandomMapName ( int GameMode )
//{
//	static UFunction* pFnGetNextRandomMapName = NULL;
//
//	if ( ! pFnGetNextRandomMapName )
//		pFnGetNextRandomMapName = (UFunction*) UObject::GObjObjects()->Data[ 51024 ];
//
//	UOnlineGameDedicatedServer_X_execGetNextRandomMapName_Parms GetNextRandomMapName_Parms;
//	GetNextRandomMapName_Parms.GameMode = GameMode;
//
//	this->ProcessEvent ( pFnGetNextRandomMapName, &GetNextRandomMapName_Parms, NULL );
//
//	return GetNextRandomMapName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetNextMapName
//// [0x00024002] 
//// Parameters infos:
//// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            GameMode                       ( CPF_OptionalParm | CPF_Parm )
//
//struct FName UOnlineGameDedicatedServer_X::GetNextMapName ( int GameMode )
//{
//	static UFunction* pFnGetNextMapName = NULL;
//
//	if ( ! pFnGetNextMapName )
//		pFnGetNextMapName = (UFunction*) UObject::GObjObjects()->Data[ 51017 ];
//
//	UOnlineGameDedicatedServer_X_execGetNextMapName_Parms GetNextMapName_Parms;
//	GetNextMapName_Parms.GameMode = GameMode;
//
//	this->ProcessEvent ( pFnGetNextMapName, &GetNextMapName_Parms, NULL );
//
//	return GetNextMapName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetCustomMatchSettings
//// [0x00020002] 
//// Parameters infos:
//// struct FCustomMatchSettings    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FCustomMatchSettings UOnlineGameDedicatedServer_X::GetCustomMatchSettings ( )
//{
//	static UFunction* pFnGetCustomMatchSettings = NULL;
//
//	if ( ! pFnGetCustomMatchSettings )
//		pFnGetCustomMatchSettings = (UFunction*) UObject::GObjObjects()->Data[ 51014 ];
//
//	UOnlineGameDedicatedServer_X_execGetCustomMatchSettings_Parms GetCustomMatchSettings_Parms;
//
//	this->ProcessEvent ( pFnGetCustomMatchSettings, &GetCustomMatchSettings_Parms, NULL );
//
//	return GetCustomMatchSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetCustomMatchOwner
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FUniqueNetId UOnlineGameDedicatedServer_X::GetCustomMatchOwner ( )
//{
//	static UFunction* pFnGetCustomMatchOwner = NULL;
//
//	if ( ! pFnGetCustomMatchOwner )
//		pFnGetCustomMatchOwner = (UFunction*) UObject::GObjObjects()->Data[ 51015 ];
//
//	UOnlineGameDedicatedServer_X_execGetCustomMatchOwner_Parms GetCustomMatchOwner_Parms;
//
//	this->ProcessEvent ( pFnGetCustomMatchOwner, &GetCustomMatchOwner_Parms, NULL );
//
//	return GetCustomMatchOwner_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.UpdateCustomMatchOwner
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            NewOwner                       ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::UpdateCustomMatchOwner ( struct FUniqueNetId NewOwner )
//{
//	static UFunction* pFnUpdateCustomMatchOwner = NULL;
//
//	if ( ! pFnUpdateCustomMatchOwner )
//		pFnUpdateCustomMatchOwner = (UFunction*) UObject::GObjObjects()->Data[ 51011 ];
//
//	UOnlineGameDedicatedServer_X_execUpdateCustomMatchOwner_Parms UpdateCustomMatchOwner_Parms;
//	memcpy ( &UpdateCustomMatchOwner_Parms.NewOwner, &NewOwner, 0x48 );
//
//	this->ProcessEvent ( pFnUpdateCustomMatchOwner, &UpdateCustomMatchOwner_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.SetCustomSettings
//// [0x00020002] 
//// Parameters infos:
//// struct FCustomMatchSettings    Settings                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::SetCustomSettings ( struct FCustomMatchSettings Settings )
//{
//	static UFunction* pFnSetCustomSettings = NULL;
//
//	if ( ! pFnSetCustomSettings )
//		pFnSetCustomSettings = (UFunction*) UObject::GObjObjects()->Data[ 51013 ];
//
//	UOnlineGameDedicatedServer_X_execSetCustomSettings_Parms SetCustomSettings_Parms;
//	memcpy ( &SetCustomSettings_Parms.Settings, &Settings, 0x60 );
//
//	this->ProcessEvent ( pFnSetCustomSettings, &SetCustomSettings_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.SetupPrivateMatch
//// [0x00820002] 
//// Parameters infos:
//// struct FCustomMatchSettings    Settings                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            Creator                        ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::SetupPrivateMatch ( struct FCustomMatchSettings Settings, struct FUniqueNetId Creator )
//{
//	static UFunction* pFnSetupPrivateMatch = NULL;
//
//	if ( ! pFnSetupPrivateMatch )
//		pFnSetupPrivateMatch = (UFunction*) UObject::GObjObjects()->Data[ 51005 ];
//
//	UOnlineGameDedicatedServer_X_execSetupPrivateMatch_Parms SetupPrivateMatch_Parms;
//	memcpy ( &SetupPrivateMatch_Parms.Settings, &Settings, 0x60 );
//	memcpy ( &SetupPrivateMatch_Parms.Creator, &Creator, 0x48 );
//
//	this->ProcessEvent ( pFnSetupPrivateMatch, &SetupPrivateMatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GoToNextMap
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::GoToNextMap ( )
//{
//	static UFunction* pFnGoToNextMap = NULL;
//
//	if ( ! pFnGoToNextMap )
//		pFnGoToNextMap = (UFunction*) UObject::GObjObjects()->Data[ 51004 ];
//
//	UOnlineGameDedicatedServer_X_execGoToNextMap_Parms GoToNextMap_Parms;
//
//	this->ProcessEvent ( pFnGoToNextMap, &GoToNextMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetNextMutatorMapName
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FName UOnlineGameDedicatedServer_X::GetNextMutatorMapName ( )
//{
//	static UFunction* pFnGetNextMutatorMapName = NULL;
//
//	if ( ! pFnGetNextMutatorMapName )
//		pFnGetNextMutatorMapName = (UFunction*) UObject::GObjObjects()->Data[ 50999 ];
//
//	UOnlineGameDedicatedServer_X_execGetNextMutatorMapName_Parms GetNextMutatorMapName_Parms;
//
//	this->ProcessEvent ( pFnGetNextMutatorMapName, &GetNextMutatorMapName_Parms, NULL );
//
//	return GetNextMutatorMapName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GoToMap
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::GoToMap ( struct FString MapName )
//{
//	static UFunction* pFnGoToMap = NULL;
//
//	if ( ! pFnGoToMap )
//		pFnGoToMap = (UFunction*) UObject::GObjObjects()->Data[ 50996 ];
//
//	UOnlineGameDedicatedServer_X_execGoToMap_Parms GoToMap_Parms;
//	memcpy ( &GoToMap_Parms.MapName, &MapName, 0xC );
//
//	this->ProcessEvent ( pFnGoToMap, &GoToMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.GetPlaylistTags
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameDedicatedServer_X::GetPlaylistTags ( )
//{
//	static UFunction* pFnGetPlaylistTags = NULL;
//
//	if ( ! pFnGetPlaylistTags )
//		pFnGetPlaylistTags = (UFunction*) UObject::GObjObjects()->Data[ 50977 ];
//
//	UOnlineGameDedicatedServer_X_execGetPlaylistTags_Parms GetPlaylistTags_Parms;
//
//	this->ProcessEvent ( pFnGetPlaylistTags, &GetPlaylistTags_Parms, NULL );
//
//	return GetPlaylistTags_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.UpdateAverageMMR
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::UpdateAverageMMR ( )
//{
//	static UFunction* pFnUpdateAverageMMR = NULL;
//
//	if ( ! pFnUpdateAverageMMR )
//		pFnUpdateAverageMMR = (UFunction*) UObject::GObjObjects()->Data[ 50982 ];
//
//	UOnlineGameDedicatedServer_X_execUpdateAverageMMR_Parms UpdateAverageMMR_Parms;
//
//	this->ProcessEvent ( pFnUpdateAverageMMR, &UpdateAverageMMR_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.ClearSettings
//// [0x00880002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::ClearSettings ( )
//{
//	static UFunction* pFnClearSettings = NULL;
//
//	if ( ! pFnClearSettings )
//		pFnClearSettings = (UFunction*) UObject::GObjObjects()->Data[ 50978 ];
//
//	UOnlineGameDedicatedServer_X_execClearSettings_Parms ClearSettings_Parms;
//
//	this->ProcessEvent ( pFnClearSettings, &ClearSettings_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// int                            PlaylistId                     ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::SetPlaylist ( int PlaylistId )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 50974 ];
//
//	UOnlineGameDedicatedServer_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.HandleReservationsUpdated
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::HandleReservationsUpdated ( )
//{
//	static UFunction* pFnHandleReservationsUpdated = NULL;
//
//	if ( ! pFnHandleReservationsUpdated )
//		pFnHandleReservationsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 50971 ];
//
//	UOnlineGameDedicatedServer_X_execHandleReservationsUpdated_Parms HandleReservationsUpdated_Parms;
//
//	this->ProcessEvent ( pFnHandleReservationsUpdated, &HandleReservationsUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.InitClanforge
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::InitClanforge ( )
//{
//	static UFunction* pFnInitClanforge = NULL;
//
//	if ( ! pFnInitClanforge )
//		pFnInitClanforge = (UFunction*) UObject::GObjObjects()->Data[ 50966 ];
//
//	UOnlineGameDedicatedServer_X_execInitClanforge_Parms InitClanforge_Parms;
//
//	this->ProcessEvent ( pFnInitClanforge, &InitClanforge_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServer_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50960 ];
//
//	UOnlineGameDedicatedServer_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventMatchGUIDChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::EventMatchGUIDChanged ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnEventMatchGUIDChanged = NULL;
//
//	if ( ! pFnEventMatchGUIDChanged )
//		pFnEventMatchGUIDChanged = (UFunction*) UObject::GObjObjects()->Data[ 50964 ];
//
//	UOnlineGameDedicatedServer_X_execEventMatchGUIDChanged_Parms EventMatchGUIDChanged_Parms;
//	EventMatchGUIDChanged_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnEventMatchGUIDChanged, &EventMatchGUIDChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventActive
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::EventActive ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnEventActive = NULL;
//
//	if ( ! pFnEventActive )
//		pFnEventActive = (UFunction*) UObject::GObjObjects()->Data[ 51143 ];
//
//	UOnlineGameDedicatedServer_X_execEventActive_Parms EventActive_Parms;
//	EventActive_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnEventActive, &EventActive_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventInactive
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::EventInactive ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnEventInactive = NULL;
//
//	if ( ! pFnEventInactive )
//		pFnEventInactive = (UFunction*) UObject::GObjObjects()->Data[ 51145 ];
//
//	UOnlineGameDedicatedServer_X_execEventInactive_Parms EventInactive_Parms;
//	EventInactive_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnEventInactive, &EventInactive_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventPrivateMatchSettingsChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//// struct FCustomMatchSettings    NewSettings                    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::EventPrivateMatchSettingsChanged ( class UOnlineGameDedicatedServer_X* Server, struct FCustomMatchSettings NewSettings )
//{
//	static UFunction* pFnEventPrivateMatchSettingsChanged = NULL;
//
//	if ( ! pFnEventPrivateMatchSettingsChanged )
//		pFnEventPrivateMatchSettingsChanged = (UFunction*) UObject::GObjObjects()->Data[ 51147 ];
//
//	UOnlineGameDedicatedServer_X_execEventPrivateMatchSettingsChanged_Parms EventPrivateMatchSettingsChanged_Parms;
//	EventPrivateMatchSettingsChanged_Parms.Server = Server;
//	memcpy ( &EventPrivateMatchSettingsChanged_Parms.NewSettings, &NewSettings, 0x60 );
//
//	this->ProcessEvent ( pFnEventPrivateMatchSettingsChanged, &EventPrivateMatchSettingsChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventPlaylistSet
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::EventPlaylistSet ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnEventPlaylistSet = NULL;
//
//	if ( ! pFnEventPlaylistSet )
//		pFnEventPlaylistSet = (UFunction*) UObject::GObjObjects()->Data[ 51149 ];
//
//	UOnlineGameDedicatedServer_X_execEventPlaylistSet_Parms EventPlaylistSet_Parms;
//	EventPlaylistSet_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnEventPlaylistSet, &EventPlaylistSet_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventAverageMMRChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UOnlineGameDedicatedServer_X::EventAverageMMRChanged ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnEventAverageMMRChanged = NULL;
//
//	if ( ! pFnEventAverageMMRChanged )
//		pFnEventAverageMMRChanged = (UFunction*) UObject::GObjObjects()->Data[ 50942 ];
//
//	UOnlineGameDedicatedServer_X_execEventAverageMMRChanged_Parms EventAverageMMRChanged_Parms;
//	EventAverageMMRChanged_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnEventAverageMMRChanged, &EventAverageMMRChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServer_X.EventFoundNewDedicatedServerForPlayers
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewIP                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServer_X::EventFoundNewDedicatedServerForPlayers ( struct FString NewIP )
//{
//	static UFunction* pFnEventFoundNewDedicatedServerForPlayers = NULL;
//
//	if ( ! pFnEventFoundNewDedicatedServerForPlayers )
//		pFnEventFoundNewDedicatedServerForPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50944 ];
//
//	UOnlineGameDedicatedServer_X_execEventFoundNewDedicatedServerForPlayers_Parms EventFoundNewDedicatedServerForPlayers_Parms;
//	memcpy ( &EventFoundNewDedicatedServerForPlayers_Parms.NewIP, &NewIP, 0xC );
//
//	this->ProcessEvent ( pFnEventFoundNewDedicatedServerForPlayers, &EventFoundNewDedicatedServerForPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDLC_X.DoesPlayerOwnDLC
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FName                   DLCName                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameDLC_X::DoesPlayerOwnDLC ( struct FUniqueNetId* PlayerID, struct FName* DLCName )
//{
//	static UFunction* pFnDoesPlayerOwnDLC = NULL;
//
//	if ( ! pFnDoesPlayerOwnDLC )
//		pFnDoesPlayerOwnDLC = (UFunction*) UObject::GObjObjects()->Data[ 51339 ];
//
//	UOnlineGameDLC_X_execDoesPlayerOwnDLC_Parms DoesPlayerOwnDLC_Parms;
//
//	pFnDoesPlayerOwnDLC->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnDoesPlayerOwnDLC, &DoesPlayerOwnDLC_Parms, NULL );
//
//	pFnDoesPlayerOwnDLC->FunctionFlags |= 0x400;
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &DoesPlayerOwnDLC_Parms.PlayerID, 0x48 );
//
//	if ( DLCName )
//		memcpy ( DLCName, &DoesPlayerOwnDLC_Parms.DLCName, 0x8 );
//
//	return DoesPlayerOwnDLC_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDLC_X.HandleGetPublisherAppOwnership
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           Request                        ( CPF_Const | CPF_Parm )
//
//void UOnlineGameDLC_X::HandleGetPublisherAppOwnership ( class UWebRequest_X* Request )
//{
//	static UFunction* pFnHandleGetPublisherAppOwnership = NULL;
//
//	if ( ! pFnHandleGetPublisherAppOwnership )
//		pFnHandleGetPublisherAppOwnership = (UFunction*) UObject::GObjObjects()->Data[ 51337 ];
//
//	UOnlineGameDLC_X_execHandleGetPublisherAppOwnership_Parms HandleGetPublisherAppOwnership_Parms;
//	HandleGetPublisherAppOwnership_Parms.Request = Request;
//
//	pFnHandleGetPublisherAppOwnership->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHandleGetPublisherAppOwnership, &HandleGetPublisherAppOwnership_Parms, NULL );
//
//	pFnHandleGetPublisherAppOwnership->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.OnlineGameDLC_X.OnMatchFinished
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDLC_X::OnMatchFinished ( )
//{
//	static UFunction* pFnOnMatchFinished = NULL;
//
//	if ( ! pFnOnMatchFinished )
//		pFnOnMatchFinished = (UFunction*) UObject::GObjObjects()->Data[ 51336 ];
//
//	UOnlineGameDLC_X_execOnMatchFinished_Parms OnMatchFinished_Parms;
//
//	this->ProcessEvent ( pFnOnMatchFinished, &OnMatchFinished_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDLC_X.SyncPlayerDLC
//// [0x00024002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameDLC_X::SyncPlayerDLC ( struct FUniqueNetId PlayerID, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSyncPlayerDLC = NULL;
//
//	if ( ! pFnSyncPlayerDLC )
//		pFnSyncPlayerDLC = (UFunction*) UObject::GObjObjects()->Data[ 51331 ];
//
//	UOnlineGameDLC_X_execSyncPlayerDLC_Parms SyncPlayerDLC_Parms;
//	memcpy ( &SyncPlayerDLC_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &SyncPlayerDLC_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSyncPlayerDLC, &SyncPlayerDLC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDLC_X.UpdatePlayerDLCInfo
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// int                            PlayerInfoIndex                ( CPF_Parm )
//
//void UOnlineGameDLC_X::UpdatePlayerDLCInfo ( int PlayerInfoIndex )
//{
//	static UFunction* pFnUpdatePlayerDLCInfo = NULL;
//
//	if ( ! pFnUpdatePlayerDLCInfo )
//		pFnUpdatePlayerDLCInfo = (UFunction*) UObject::GObjObjects()->Data[ 51319 ];
//
//	UOnlineGameDLC_X_execUpdatePlayerDLCInfo_Parms UpdatePlayerDLCInfo_Parms;
//	UpdatePlayerDLCInfo_Parms.PlayerInfoIndex = PlayerInfoIndex;
//
//	this->ProcessEvent ( pFnUpdatePlayerDLCInfo, &UpdatePlayerDLCInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDLC_X.CreatePlayerDLCInfo
//// [0x00C40003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//int UOnlineGameDLC_X::CreatePlayerDLCInfo ( struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnCreatePlayerDLCInfo = NULL;
//
//	if ( ! pFnCreatePlayerDLCInfo )
//		pFnCreatePlayerDLCInfo = (UFunction*) UObject::GObjObjects()->Data[ 51313 ];
//
//	UOnlineGameDLC_X_execCreatePlayerDLCInfo_Parms CreatePlayerDLCInfo_Parms;
//
//	this->ProcessEvent ( pFnCreatePlayerDLCInfo, &CreatePlayerDLCInfo_Parms, NULL );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &CreatePlayerDLCInfo_Parms.PlayerID, 0x48 );
//
//	return CreatePlayerDLCInfo_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDLC_X.IsPlayerReadyForValidation
//// [0x00420400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameDLC_X::IsPlayerReadyForValidation ( struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnIsPlayerReadyForValidation = NULL;
//
//	if ( ! pFnIsPlayerReadyForValidation )
//		pFnIsPlayerReadyForValidation = (UFunction*) UObject::GObjObjects()->Data[ 51310 ];
//
//	UOnlineGameDLC_X_execIsPlayerReadyForValidation_Parms IsPlayerReadyForValidation_Parms;
//
//	pFnIsPlayerReadyForValidation->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsPlayerReadyForValidation, &IsPlayerReadyForValidation_Parms, NULL );
//
//	pFnIsPlayerReadyForValidation->FunctionFlags |= 0x400;
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &IsPlayerReadyForValidation_Parms.PlayerID, 0x48 );
//
//	return IsPlayerReadyForValidation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDLC_X.EventValidationReady
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameDLC_X::EventValidationReady ( )
//{
//	static UFunction* pFnEventValidationReady = NULL;
//
//	if ( ! pFnEventValidationReady )
//		pFnEventValidationReady = (UFunction*) UObject::GObjObjects()->Data[ 51305 ];
//
//	UOnlineGameDLC_X_execEventValidationReady_Parms EventValidationReady_Parms;
//
//	this->ProcessEvent ( pFnEventValidationReady, &EventValidationReady_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.IsSkillLeaderboard
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 NewLeaderboardID               ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// int                            Playlist                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameLeaderboards_X::IsSkillLeaderboard ( struct FString NewLeaderboardID, int* Playlist )
//{
//	static UFunction* pFnIsSkillLeaderboard = NULL;
//
//	if ( ! pFnIsSkillLeaderboard )
//		pFnIsSkillLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 52079 ];
//
//	UOnlineGameLeaderboards_X_execIsSkillLeaderboard_Parms IsSkillLeaderboard_Parms;
//	memcpy ( &IsSkillLeaderboard_Parms.NewLeaderboardID, &NewLeaderboardID, 0xC );
//
//	this->ProcessEvent ( pFnIsSkillLeaderboard, &IsSkillLeaderboard_Parms, NULL );
//
//	if ( Playlist )
//		*Playlist = IsSkillLeaderboard_Parms.Playlist;
//
//	return IsSkillLeaderboard_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.SortLeaderboardDataMMR
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// TArray< struct FLeaderboardData > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FLeaderboardData > Leaderboard                    ( CPF_Parm | CPF_NeedCtorLink )
//
//TArray< struct FLeaderboardData > UOnlineGameLeaderboards_X::SortLeaderboardDataMMR ( TArray< struct FLeaderboardData > Leaderboard )
//{
//	static UFunction* pFnSortLeaderboardDataMMR = NULL;
//
//	if ( ! pFnSortLeaderboardDataMMR )
//		pFnSortLeaderboardDataMMR = (UFunction*) UObject::GObjObjects()->Data[ 52074 ];
//
//	UOnlineGameLeaderboards_X_execSortLeaderboardDataMMR_Parms SortLeaderboardDataMMR_Parms;
//	memcpy ( &SortLeaderboardDataMMR_Parms.Leaderboard, &Leaderboard, 0xC );
//
//	pFnSortLeaderboardDataMMR->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSortLeaderboardDataMMR, &SortLeaderboardDataMMR_Parms, NULL );
//
//	pFnSortLeaderboardDataMMR->FunctionFlags |= 0x400;
//
//	return SortLeaderboardDataMMR_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.SortLeaderboardData
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// TArray< struct FLeaderboardData > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FLeaderboardData > Leaderboard                    ( CPF_Parm | CPF_NeedCtorLink )
//
//TArray< struct FLeaderboardData > UOnlineGameLeaderboards_X::SortLeaderboardData ( TArray< struct FLeaderboardData > Leaderboard )
//{
//	static UFunction* pFnSortLeaderboardData = NULL;
//
//	if ( ! pFnSortLeaderboardData )
//		pFnSortLeaderboardData = (UFunction*) UObject::GObjObjects()->Data[ 52068 ];
//
//	UOnlineGameLeaderboards_X_execSortLeaderboardData_Parms SortLeaderboardData_Parms;
//	memcpy ( &SortLeaderboardData_Parms.Leaderboard, &Leaderboard, 0xC );
//
//	pFnSortLeaderboardData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSortLeaderboardData, &SortLeaderboardData_Parms, NULL );
//
//	pFnSortLeaderboardData->FunctionFlags |= 0x400;
//
//	return SortLeaderboardData_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardFriendsRPC
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetLeaderboardRankForUsersBase_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameLeaderboards_X::HandleGetLeaderboardFriendsRPC ( class URPC_GetLeaderboardRankForUsersBase_X* RPC )
//{
//	static UFunction* pFnHandleGetLeaderboardFriendsRPC = NULL;
//
//	if ( ! pFnHandleGetLeaderboardFriendsRPC )
//		pFnHandleGetLeaderboardFriendsRPC = (UFunction*) UObject::GObjObjects()->Data[ 52073 ];
//
//	UOnlineGameLeaderboards_X_execHandleGetLeaderboardFriendsRPC_Parms HandleGetLeaderboardFriendsRPC_Parms;
//	HandleGetLeaderboardFriendsRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetLeaderboardFriendsRPC, &HandleGetLeaderboardFriendsRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.DispatchLeaderboardFriendsRequest
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameLeaderboards_X::DispatchLeaderboardFriendsRequest ( )
//{
//	static UFunction* pFnDispatchLeaderboardFriendsRequest = NULL;
//
//	if ( ! pFnDispatchLeaderboardFriendsRequest )
//		pFnDispatchLeaderboardFriendsRequest = (UFunction*) UObject::GObjObjects()->Data[ 52047 ];
//
//	UOnlineGameLeaderboards_X_execDispatchLeaderboardFriendsRequest_Parms DispatchLeaderboardFriendsRequest_Parms;
//
//	this->ProcessEvent ( pFnDispatchLeaderboardFriendsRequest, &DispatchLeaderboardFriendsRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardsForAllFriends
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   LeaderboardId                  ( CPF_Parm )
//
//void UOnlineGameLeaderboards_X::GetLeaderboardsForAllFriends ( struct FName LeaderboardId )
//{
//	static UFunction* pFnGetLeaderboardsForAllFriends = NULL;
//
//	if ( ! pFnGetLeaderboardsForAllFriends )
//		pFnGetLeaderboardsForAllFriends = (UFunction*) UObject::GObjObjects()->Data[ 52044 ];
//
//	UOnlineGameLeaderboards_X_execGetLeaderboardsForAllFriends_Parms GetLeaderboardsForAllFriends_Parms;
//	memcpy ( &GetLeaderboardsForAllFriends_Parms.LeaderboardId, &LeaderboardId, 0x8 );
//
//	this->ProcessEvent ( pFnGetLeaderboardsForAllFriends, &GetLeaderboardsForAllFriends_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardFriends
//// [0x00020002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         OnlinePlayer                   ( CPF_Parm )
//// struct FName                   NewLeaderboardID               ( CPF_Parm )
//// struct FScriptDelegate         NewDelegate                    ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         FailedDelegate                 ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLeaderboards_X::GetLeaderboardFriends ( class UOnlinePlayer_X* OnlinePlayer, struct FName NewLeaderboardID, struct FScriptDelegate NewDelegate, struct FScriptDelegate FailedDelegate )
//{
//	static UFunction* pFnGetLeaderboardFriends = NULL;
//
//	if ( ! pFnGetLeaderboardFriends )
//		pFnGetLeaderboardFriends = (UFunction*) UObject::GObjObjects()->Data[ 52037 ];
//
//	UOnlineGameLeaderboards_X_execGetLeaderboardFriends_Parms GetLeaderboardFriends_Parms;
//	GetLeaderboardFriends_Parms.OnlinePlayer = OnlinePlayer;
//	memcpy ( &GetLeaderboardFriends_Parms.NewLeaderboardID, &NewLeaderboardID, 0x8 );
//	memcpy ( &GetLeaderboardFriends_Parms.NewDelegate, &NewDelegate, 0x10 );
//	memcpy ( &GetLeaderboardFriends_Parms.FailedDelegate, &FailedDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnGetLeaderboardFriends, &GetLeaderboardFriends_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.HandleGetAvatar
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm )
//// class UTexture*                Avatar                         ( CPF_Parm )
//// struct FString                 OnlinePlayerName               ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLeaderboards_X::HandleGetAvatar ( struct FUniqueNetId PlayerID, class UTexture* Avatar, struct FString OnlinePlayerName )
//{
//	static UFunction* pFnHandleGetAvatar = NULL;
//
//	if ( ! pFnHandleGetAvatar )
//		pFnHandleGetAvatar = (UFunction*) UObject::GObjObjects()->Data[ 52031 ];
//
//	UOnlineGameLeaderboards_X_execHandleGetAvatar_Parms HandleGetAvatar_Parms;
//	memcpy ( &HandleGetAvatar_Parms.PlayerID, &PlayerID, 0x48 );
//	HandleGetAvatar_Parms.Avatar = Avatar;
//	memcpy ( &HandleGetAvatar_Parms.OnlinePlayerName, &OnlinePlayerName, 0xC );
//
//	this->ProcessEvent ( pFnHandleGetAvatar, &HandleGetAvatar_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.RequestPlayerAvatar
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGameLeaderboards_X::RequestPlayerAvatar ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnRequestPlayerAvatar = NULL;
//
//	if ( ! pFnRequestPlayerAvatar )
//		pFnRequestPlayerAvatar = (UFunction*) UObject::GObjObjects()->Data[ 52028 ];
//
//	UOnlineGameLeaderboards_X_execRequestPlayerAvatar_Parms RequestPlayerAvatar_Parms;
//	memcpy ( &RequestPlayerAvatar_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnRequestPlayerAvatar, &RequestPlayerAvatar_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.RequestClearPendingAvatarDownloads
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameLeaderboards_X::RequestClearPendingAvatarDownloads ( )
//{
//	static UFunction* pFnRequestClearPendingAvatarDownloads = NULL;
//
//	if ( ! pFnRequestClearPendingAvatarDownloads )
//		pFnRequestClearPendingAvatarDownloads = (UFunction*) UObject::GObjObjects()->Data[ 52030 ];
//
//	UOnlineGameLeaderboards_X_execRequestClearPendingAvatarDownloads_Parms RequestClearPendingAvatarDownloads_Parms;
//
//	this->ProcessEvent ( pFnRequestClearPendingAvatarDownloads, &RequestClearPendingAvatarDownloads_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetLeaderboardBase_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameLeaderboards_X::HandleGetLeaderboardRPC ( class URPC_GetLeaderboardBase_X* RPC )
//{
//	static UFunction* pFnHandleGetLeaderboardRPC = NULL;
//
//	if ( ! pFnHandleGetLeaderboardRPC )
//		pFnHandleGetLeaderboardRPC = (UFunction*) UObject::GObjObjects()->Data[ 52101 ];
//
//	UOnlineGameLeaderboards_X_execHandleGetLeaderboardRPC_Parms HandleGetLeaderboardRPC_Parms;
//	HandleGetLeaderboardRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetLeaderboardRPC, &HandleGetLeaderboardRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboard
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   NewLeaderboardID               ( CPF_Parm )
//// unsigned long                  bGlobal                        ( CPF_Parm )
//// struct FScriptDelegate         NewDelegate                    ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         FailedDelegate                 ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLeaderboards_X::GetLeaderboard ( struct FName NewLeaderboardID, unsigned long bGlobal, struct FScriptDelegate NewDelegate, struct FScriptDelegate FailedDelegate )
//{
//	static UFunction* pFnGetLeaderboard = NULL;
//
//	if ( ! pFnGetLeaderboard )
//		pFnGetLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 52010 ];
//
//	UOnlineGameLeaderboards_X_execGetLeaderboard_Parms GetLeaderboard_Parms;
//	memcpy ( &GetLeaderboard_Parms.NewLeaderboardID, &NewLeaderboardID, 0x8 );
//	GetLeaderboard_Parms.bGlobal = bGlobal;
//	memcpy ( &GetLeaderboard_Parms.NewDelegate, &NewDelegate, 0x10 );
//	memcpy ( &GetLeaderboard_Parms.FailedDelegate, &FailedDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnGetLeaderboard, &GetLeaderboard_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetCachedLeaderboardData
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   LeaderboardId                  ( CPF_Parm )
//// TArray< struct FLeaderboardData > LeaderboardDataList            ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameLeaderboards_X::GetCachedLeaderboardData ( struct FName LeaderboardId, TArray< struct FLeaderboardData >* LeaderboardDataList )
//{
//	static UFunction* pFnGetCachedLeaderboardData = NULL;
//
//	if ( ! pFnGetCachedLeaderboardData )
//		pFnGetCachedLeaderboardData = (UFunction*) UObject::GObjObjects()->Data[ 52003 ];
//
//	UOnlineGameLeaderboards_X_execGetCachedLeaderboardData_Parms GetCachedLeaderboardData_Parms;
//	memcpy ( &GetCachedLeaderboardData_Parms.LeaderboardId, &LeaderboardId, 0x8 );
//
//	this->ProcessEvent ( pFnGetCachedLeaderboardData, &GetCachedLeaderboardData_Parms, NULL );
//
//	if ( LeaderboardDataList )
//		memcpy ( LeaderboardDataList, &GetCachedLeaderboardData_Parms.LeaderboardDataList, 0xC );
//
//	return GetCachedLeaderboardData_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.CalcDivision
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          TopValue                       ( CPF_Parm )
//// float                          Value                          ( CPF_Parm )
//
//int UOnlineGameLeaderboards_X::CalcDivision ( float TopValue, float Value )
//{
//	static UFunction* pFnCalcDivision = NULL;
//
//	if ( ! pFnCalcDivision )
//		pFnCalcDivision = (UFunction*) UObject::GObjObjects()->Data[ 51999 ];
//
//	UOnlineGameLeaderboards_X_execCalcDivision_Parms CalcDivision_Parms;
//	CalcDivision_Parms.TopValue = TopValue;
//	CalcDivision_Parms.Value = Value;
//
//	this->ProcessEvent ( pFnCalcDivision, &CalcDivision_Parms, NULL );
//
//	return CalcDivision_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetRankForPrimaryPlayer
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   LeaderboardId                  ( CPF_Parm )
//// int                            Value                          ( CPF_Parm )
//// int                            Rank                           ( CPF_Parm | CPF_OutParm )
//// int                            Division                       ( CPF_Parm | CPF_OutParm )
//
//void UOnlineGameLeaderboards_X::GetRankForPrimaryPlayer ( struct FName LeaderboardId, int Value, int* Rank, int* Division )
//{
//	static UFunction* pFnGetRankForPrimaryPlayer = NULL;
//
//	if ( ! pFnGetRankForPrimaryPlayer )
//		pFnGetRankForPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 51991 ];
//
//	UOnlineGameLeaderboards_X_execGetRankForPrimaryPlayer_Parms GetRankForPrimaryPlayer_Parms;
//	memcpy ( &GetRankForPrimaryPlayer_Parms.LeaderboardId, &LeaderboardId, 0x8 );
//	GetRankForPrimaryPlayer_Parms.Value = Value;
//
//	this->ProcessEvent ( pFnGetRankForPrimaryPlayer, &GetRankForPrimaryPlayer_Parms, NULL );
//
//	if ( Rank )
//		*Rank = GetRankForPrimaryPlayer_Parms.Rank;
//
//	if ( Division )
//		*Division = GetRankForPrimaryPlayer_Parms.Division;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardPlayerValueRPC
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetLeaderboardValueForUserBase_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameLeaderboards_X::HandleGetLeaderboardPlayerValueRPC ( class URPC_GetLeaderboardValueForUserBase_X* RPC )
//{
//	static UFunction* pFnHandleGetLeaderboardPlayerValueRPC = NULL;
//
//	if ( ! pFnHandleGetLeaderboardPlayerValueRPC )
//		pFnHandleGetLeaderboardPlayerValueRPC = (UFunction*) UObject::GObjObjects()->Data[ 51998 ];
//
//	UOnlineGameLeaderboards_X_execHandleGetLeaderboardPlayerValueRPC_Parms HandleGetLeaderboardPlayerValueRPC_Parms;
//	HandleGetLeaderboardPlayerValueRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetLeaderboardPlayerValueRPC, &HandleGetLeaderboardPlayerValueRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardPlayerValue
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   NewLeaderboardID               ( CPF_Parm )
//// struct FScriptDelegate         NewDelegate                    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLeaderboards_X::GetLeaderboardPlayerValue ( struct FName NewLeaderboardID, struct FScriptDelegate NewDelegate )
//{
//	static UFunction* pFnGetLeaderboardPlayerValue = NULL;
//
//	if ( ! pFnGetLeaderboardPlayerValue )
//		pFnGetLeaderboardPlayerValue = (UFunction*) UObject::GObjObjects()->Data[ 51976 ];
//
//	UOnlineGameLeaderboards_X_execGetLeaderboardPlayerValue_Parms GetLeaderboardPlayerValue_Parms;
//	memcpy ( &GetLeaderboardPlayerValue_Parms.NewLeaderboardID, &NewLeaderboardID, 0x8 );
//	memcpy ( &GetLeaderboardPlayerValue_Parms.NewDelegate, &NewDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnGetLeaderboardPlayerValue, &GetLeaderboardPlayerValue_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.GetCurrentPlatformName
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameLeaderboards_X::GetCurrentPlatformName ( )
//{
//	static UFunction* pFnGetCurrentPlatformName = NULL;
//
//	if ( ! pFnGetCurrentPlatformName )
//		pFnGetCurrentPlatformName = (UFunction*) UObject::GObjObjects()->Data[ 51974 ];
//
//	UOnlineGameLeaderboards_X_execGetCurrentPlatformName_Parms GetCurrentPlatformName_Parms;
//
//	this->ProcessEvent ( pFnGetCurrentPlatformName, &GetCurrentPlatformName_Parms, NULL );
//
//	return GetCurrentPlatformName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.EventLeaderboardAvatarFound
//// [0x00520000] 
//// Parameters infos:
//// class UTexture*                Avatar                         ( CPF_Parm )
//// struct FUniqueNetId            PlayerNetId                    ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameLeaderboards_X::EventLeaderboardAvatarFound ( class UTexture* Avatar, struct FUniqueNetId* PlayerNetId )
//{
//	static UFunction* pFnEventLeaderboardAvatarFound = NULL;
//
//	if ( ! pFnEventLeaderboardAvatarFound )
//		pFnEventLeaderboardAvatarFound = (UFunction*) UObject::GObjObjects()->Data[ 51942 ];
//
//	UOnlineGameLeaderboards_X_execEventLeaderboardAvatarFound_Parms EventLeaderboardAvatarFound_Parms;
//	EventLeaderboardAvatarFound_Parms.Avatar = Avatar;
//
//	this->ProcessEvent ( pFnEventLeaderboardAvatarFound, &EventLeaderboardAvatarFound_Parms, NULL );
//
//	if ( PlayerNetId )
//		memcpy ( PlayerNetId, &EventLeaderboardAvatarFound_Parms.PlayerNetId, 0x48 );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.EventGetLeaderboardFailed
//// [0x00120000] 
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameLeaderboards_X::EventGetLeaderboardFailed ( class UError* Error )
//{
//	static UFunction* pFnEventGetLeaderboardFailed = NULL;
//
//	if ( ! pFnEventGetLeaderboardFailed )
//		pFnEventGetLeaderboardFailed = (UFunction*) UObject::GObjObjects()->Data[ 51944 ];
//
//	UOnlineGameLeaderboards_X_execEventGetLeaderboardFailed_Parms EventGetLeaderboardFailed_Parms;
//	EventGetLeaderboardFailed_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventGetLeaderboardFailed, &EventGetLeaderboardFailed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.EventNewLeaderboard
//// [0x00520000] 
//// Parameters infos:
//// struct FName                   NewLeaderboardID               ( CPF_Parm )
//// TArray< struct FLeaderboardData > NewLeaderboardData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameLeaderboards_X::EventNewLeaderboard ( struct FName NewLeaderboardID, TArray< struct FLeaderboardData >* NewLeaderboardData )
//{
//	static UFunction* pFnEventNewLeaderboard = NULL;
//
//	if ( ! pFnEventNewLeaderboard )
//		pFnEventNewLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 51946 ];
//
//	UOnlineGameLeaderboards_X_execEventNewLeaderboard_Parms EventNewLeaderboard_Parms;
//	memcpy ( &EventNewLeaderboard_Parms.NewLeaderboardID, &NewLeaderboardID, 0x8 );
//
//	this->ProcessEvent ( pFnEventNewLeaderboard, &EventNewLeaderboard_Parms, NULL );
//
//	if ( NewLeaderboardData )
//		memcpy ( NewLeaderboardData, &EventNewLeaderboard_Parms.NewLeaderboardData, 0xC );
//};
//
//// Function ProjectX.OnlineGameLeaderboards_X.OnGetLeaderboardPlayerValue
//// [0x00524000] 
//// Parameters infos:
//// class UOnlineGameLeaderboards_X* LeaderboardsRef                ( CPF_Parm )
//// struct FName                   LeaderboardId                  ( CPF_Parm )
//// class UError*                  Error                          ( CPF_OptionalParm | CPF_Parm )
//// struct FLeaderboardData        PlayerLeaderboardData          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameLeaderboards_X::OnGetLeaderboardPlayerValue ( class UOnlineGameLeaderboards_X* LeaderboardsRef, struct FName LeaderboardId, class UError* Error, struct FLeaderboardData* PlayerLeaderboardData )
//{
//	static UFunction* pFnOnGetLeaderboardPlayerValue = NULL;
//
//	if ( ! pFnOnGetLeaderboardPlayerValue )
//		pFnOnGetLeaderboardPlayerValue = (UFunction*) UObject::GObjObjects()->Data[ 51970 ];
//
//	UOnlineGameLeaderboards_X_execOnGetLeaderboardPlayerValue_Parms OnGetLeaderboardPlayerValue_Parms;
//	OnGetLeaderboardPlayerValue_Parms.LeaderboardsRef = LeaderboardsRef;
//	memcpy ( &OnGetLeaderboardPlayerValue_Parms.LeaderboardId, &LeaderboardId, 0x8 );
//	OnGetLeaderboardPlayerValue_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnOnGetLeaderboardPlayerValue, &OnGetLeaderboardPlayerValue_Parms, NULL );
//
//	if ( PlayerLeaderboardData )
//		memcpy ( PlayerLeaderboardData, &OnGetLeaderboardPlayerValue_Parms.PlayerLeaderboardData, 0x7C );
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasTimeoutPlayers
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FReservationData        P                              ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::__OnlineGameReservations_X__HasTimeoutPlayers ( struct FReservationData P )
//{
//	static UFunction* pFn__OnlineGameReservations_X__HasTimeoutPlayers = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__HasTimeoutPlayers )
//		pFn__OnlineGameReservations_X__HasTimeoutPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53734 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasTimeoutPlayers_Parms __OnlineGameReservations_X__HasTimeoutPlayers_Parms;
//	memcpy ( &__OnlineGameReservations_X__HasTimeoutPlayers_Parms.P, &P, 0xD4 );
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__HasTimeoutPlayers, &__OnlineGameReservations_X__HasTimeoutPlayers_Parms, NULL );
//
//	return __OnlineGameReservations_X__HasTimeoutPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasMultipleReservedTeams
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            TeamID                         ( CPF_Parm )
//
//bool UOnlineGameReservations_X::__OnlineGameReservations_X__HasMultipleReservedTeams ( int TeamID )
//{
//	static UFunction* pFn__OnlineGameReservations_X__HasMultipleReservedTeams = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__HasMultipleReservedTeams )
//		pFn__OnlineGameReservations_X__HasMultipleReservedTeams = (UFunction*) UObject::GObjObjects()->Data[ 53735 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasMultipleReservedTeams_Parms __OnlineGameReservations_X__HasMultipleReservedTeams_Parms;
//	__OnlineGameReservations_X__HasMultipleReservedTeams_Parms.TeamID = TeamID;
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__HasMultipleReservedTeams, &__OnlineGameReservations_X__HasMultipleReservedTeams_Parms, NULL );
//
//	return __OnlineGameReservations_X__HasMultipleReservedTeams_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasMultipleReservedTeams
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FReservationData        P                              ( CPF_Parm | CPF_NeedCtorLink )
//
//int UOnlineGameReservations_X::__OnlineGameReservations_X__HasMultipleReservedTeams ( struct FReservationData P )
//{
//	static UFunction* pFn__OnlineGameReservations_X__HasMultipleReservedTeams = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__HasMultipleReservedTeams )
//		pFn__OnlineGameReservations_X__HasMultipleReservedTeams = (UFunction*) UObject::GObjObjects()->Data[ 53738 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasMultipleReservedTeams_Parms1 __OnlineGameReservations_X__HasMultipleReservedTeams_Parms;
//	memcpy ( &__OnlineGameReservations_X__HasMultipleReservedTeams_Parms.P, &P, 0xD4 );
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__HasMultipleReservedTeams, &__OnlineGameReservations_X__HasMultipleReservedTeams_Parms, NULL );
//
//	return __OnlineGameReservations_X__HasMultipleReservedTeams_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersReserved
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FReservationData        P                              ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::__OnlineGameReservations_X__AllPlayersReserved ( struct FReservationData P )
//{
//	static UFunction* pFn__OnlineGameReservations_X__AllPlayersReserved = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__AllPlayersReserved )
//		pFn__OnlineGameReservations_X__AllPlayersReserved = (UFunction*) UObject::GObjObjects()->Data[ 53741 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__AllPlayersReserved_Parms __OnlineGameReservations_X__AllPlayersReserved_Parms;
//	memcpy ( &__OnlineGameReservations_X__AllPlayersReserved_Parms.P, &P, 0xD4 );
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__AllPlayersReserved, &__OnlineGameReservations_X__AllPlayersReserved_Parms, NULL );
//
//	return __OnlineGameReservations_X__AllPlayersReserved_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersInGame
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FReservationData        P                              ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::__OnlineGameReservations_X__AllPlayersInGame ( struct FReservationData P )
//{
//	static UFunction* pFn__OnlineGameReservations_X__AllPlayersInGame = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__AllPlayersInGame )
//		pFn__OnlineGameReservations_X__AllPlayersInGame = (UFunction*) UObject::GObjObjects()->Data[ 53744 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__AllPlayersInGame_Parms __OnlineGameReservations_X__AllPlayersInGame_Parms;
//	memcpy ( &__OnlineGameReservations_X__AllPlayersInGame_Parms.P, &P, 0xD4 );
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__AllPlayersInGame, &__OnlineGameReservations_X__AllPlayersInGame_Parms, NULL );
//
//	return __OnlineGameReservations_X__AllPlayersInGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__SetServerTraveling
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPendingReservation     P                              ( CPF_Parm )
//
//void UOnlineGameReservations_X::__OnlineGameReservations_X__SetServerTraveling ( struct FPendingReservation P )
//{
//	static UFunction* pFn__OnlineGameReservations_X__SetServerTraveling = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__SetServerTraveling )
//		pFn__OnlineGameReservations_X__SetServerTraveling = (UFunction*) UObject::GObjObjects()->Data[ 53747 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__SetServerTraveling_Parms __OnlineGameReservations_X__SetServerTraveling_Parms;
//	memcpy ( &__OnlineGameReservations_X__SetServerTraveling_Parms.P, &P, 0x8 );
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__SetServerTraveling, &__OnlineGameReservations_X__SetServerTraveling_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__GetPlayerIDs
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FReservationData        Player                         ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FUniqueNetId UOnlineGameReservations_X::__OnlineGameReservations_X__GetPlayerIDs ( struct FReservationData Player )
//{
//	static UFunction* pFn__OnlineGameReservations_X__GetPlayerIDs = NULL;
//
//	if ( ! pFn__OnlineGameReservations_X__GetPlayerIDs )
//		pFn__OnlineGameReservations_X__GetPlayerIDs = (UFunction*) UObject::GObjObjects()->Data[ 53750 ];
//
//	UOnlineGameReservations_X_exec__OnlineGameReservations_X__GetPlayerIDs_Parms __OnlineGameReservations_X__GetPlayerIDs_Parms;
//	memcpy ( &__OnlineGameReservations_X__GetPlayerIDs_Parms.Player, &Player, 0xD4 );
//
//	this->ProcessEvent ( pFn__OnlineGameReservations_X__GetPlayerIDs, &__OnlineGameReservations_X__GetPlayerIDs_Parms, NULL );
//
//	return __OnlineGameReservations_X__GetPlayerIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetPlayerIDs
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FUniqueNetId >  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FUniqueNetId >  MapLocal_7E18F3284656EF014239C0BF2A75E810 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//TArray< struct FUniqueNetId > UOnlineGameReservations_X::GetPlayerIDs ( TArray< struct FUniqueNetId >* MapLocal_7E18F3284656EF014239C0BF2A75E810 )
//{
//	static UFunction* pFnGetPlayerIDs = NULL;
//
//	if ( ! pFnGetPlayerIDs )
//		pFnGetPlayerIDs = (UFunction*) UObject::GObjObjects()->Data[ 51234 ];
//
//	UOnlineGameReservations_X_execGetPlayerIDs_Parms GetPlayerIDs_Parms;
//
//	this->ProcessEvent ( pFnGetPlayerIDs, &GetPlayerIDs_Parms, NULL );
//
//	if ( MapLocal_7E18F3284656EF014239C0BF2A75E810 )
//		memcpy ( MapLocal_7E18F3284656EF014239C0BF2A75E810, &GetPlayerIDs_Parms.MapLocal_7E18F3284656EF014239C0BF2A75E810, 0xC );
//
//	return GetPlayerIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetMapLoadTimeout
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Platform                       ( CPF_Parm )
//
//float UOnlineGameReservations_X::GetMapLoadTimeout ( unsigned char Platform )
//{
//	static UFunction* pFnGetMapLoadTimeout = NULL;
//
//	if ( ! pFnGetMapLoadTimeout )
//		pFnGetMapLoadTimeout = (UFunction*) UObject::GObjObjects()->Data[ 53516 ];
//
//	UOnlineGameReservations_X_execGetMapLoadTimeout_Parms GetMapLoadTimeout_Parms;
//	GetMapLoadTimeout_Parms.Platform = Platform;
//
//	this->ProcessEvent ( pFnGetMapLoadTimeout, &GetMapLoadTimeout_Parms, NULL );
//
//	return GetMapLoadTimeout_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetAccumulatedPrefs
//// [0x00C20003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FName >         Likes                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FName >         Dislikes                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameReservations_X::GetAccumulatedPrefs ( TArray< struct FName >* Likes, TArray< struct FName >* Dislikes )
//{
//	static UFunction* pFnGetAccumulatedPrefs = NULL;
//
//	if ( ! pFnGetAccumulatedPrefs )
//		pFnGetAccumulatedPrefs = (UFunction*) UObject::GObjObjects()->Data[ 53757 ];
//
//	UOnlineGameReservations_X_execGetAccumulatedPrefs_Parms GetAccumulatedPrefs_Parms;
//
//	this->ProcessEvent ( pFnGetAccumulatedPrefs, &GetAccumulatedPrefs_Parms, NULL );
//
//	if ( Likes )
//		memcpy ( Likes, &GetAccumulatedPrefs_Parms.Likes, 0xC );
//
//	if ( Dislikes )
//		memcpy ( Dislikes, &GetAccumulatedPrefs_Parms.Dislikes, 0xC );
//};
//
//// Function ProjectX.OnlineGameReservations_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameReservations_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 53699 ];
//
//	UOnlineGameReservations_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetMetrics
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UReservationsMetrics_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UReservationsMetrics_X* UOnlineGameReservations_X::GetMetrics ( )
//{
//	static UFunction* pFnGetMetrics = NULL;
//
//	if ( ! pFnGetMetrics )
//		pFnGetMetrics = (UFunction*) UObject::GObjObjects()->Data[ 53472 ];
//
//	UOnlineGameReservations_X_execGetMetrics_Parms GetMetrics_Parms;
//
//	this->ProcessEvent ( pFnGetMetrics, &GetMetrics_Parms, NULL );
//
//	return GetMetrics_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.OnNewGameInfoCreated
//// [0x00020000] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGameReservations_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 53697 ];
//
//	UOnlineGameReservations_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HasSplitscreenPlayers
//// [0x00820002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::HasSplitscreenPlayers ( )
//{
//	static UFunction* pFnHasSplitscreenPlayers = NULL;
//
//	if ( ! pFnHasSplitscreenPlayers )
//		pFnHasSplitscreenPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53691 ];
//
//	UOnlineGameReservations_X_execHasSplitscreenPlayers_Parms HasSplitscreenPlayers_Parms;
//
//	this->ProcessEvent ( pFnHasSplitscreenPlayers, &HasSplitscreenPlayers_Parms, NULL );
//
//	return HasSplitscreenPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.SetParty
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//// struct FUniqueNetId            PartyID                        ( CPF_Parm )
//
//void UOnlineGameReservations_X::SetParty ( struct FUniqueNetId MemberId, struct FUniqueNetId PartyID )
//{
//	static UFunction* pFnSetParty = NULL;
//
//	if ( ! pFnSetParty )
//		pFnSetParty = (UFunction*) UObject::GObjObjects()->Data[ 53687 ];
//
//	UOnlineGameReservations_X_execSetParty_Parms SetParty_Parms;
//	memcpy ( &SetParty_Parms.MemberId, &MemberId, 0x48 );
//	memcpy ( &SetParty_Parms.PartyID, &PartyID, 0x48 );
//
//	this->ProcessEvent ( pFnSetParty, &SetParty_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetPartyID
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//struct FUniqueNetId UOnlineGameReservations_X::GetPartyID ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetPartyID = NULL;
//
//	if ( ! pFnGetPartyID )
//		pFnGetPartyID = (UFunction*) UObject::GObjObjects()->Data[ 53682 ];
//
//	UOnlineGameReservations_X_execGetPartyID_Parms GetPartyID_Parms;
//	memcpy ( &GetPartyID_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPartyID, &GetPartyID_Parms, NULL );
//
//	return GetPartyID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetTeamNum
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//unsigned char UOnlineGameReservations_X::GetTeamNum ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetTeamNum = NULL;
//
//	if ( ! pFnGetTeamNum )
//		pFnGetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 51122 ];
//
//	UOnlineGameReservations_X_execGetTeamNum_Parms GetTeamNum_Parms;
//	memcpy ( &GetTeamNum_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetTeamNum, &GetTeamNum_Parms, NULL );
//
//	return GetTeamNum_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetPlayersPlatformsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameReservations_X::GetPlayersPlatformsString ( )
//{
//	static UFunction* pFnGetPlayersPlatformsString = NULL;
//
//	if ( ! pFnGetPlayersPlatformsString )
//		pFnGetPlayersPlatformsString = (UFunction*) UObject::GObjObjects()->Data[ 51246 ];
//
//	UOnlineGameReservations_X_execGetPlayersPlatformsString_Parms GetPlayersPlatformsString_Parms;
//
//	this->ProcessEvent ( pFnGetPlayersPlatformsString, &GetPlayersPlatformsString_Parms, NULL );
//
//	return GetPlayersPlatformsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetPlatformsString
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< unsigned char >        Platforms                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameReservations_X::GetPlatformsString ( TArray< unsigned char >* Platforms )
//{
//	static UFunction* pFnGetPlatformsString = NULL;
//
//	if ( ! pFnGetPlatformsString )
//		pFnGetPlatformsString = (UFunction*) UObject::GObjObjects()->Data[ 53671 ];
//
//	UOnlineGameReservations_X_execGetPlatformsString_Parms GetPlatformsString_Parms;
//
//	this->ProcessEvent ( pFnGetPlatformsString, &GetPlatformsString_Parms, NULL );
//
//	if ( Platforms )
//		memcpy ( Platforms, &GetPlatformsString_Parms.Platforms, 0xC );
//
//	return GetPlatformsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetPlayerPlatforms
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< unsigned char >        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< unsigned char > UOnlineGameReservations_X::GetPlayerPlatforms ( )
//{
//	static UFunction* pFnGetPlayerPlatforms = NULL;
//
//	if ( ! pFnGetPlayerPlatforms )
//		pFnGetPlayerPlatforms = (UFunction*) UObject::GObjObjects()->Data[ 53661 ];
//
//	UOnlineGameReservations_X_execGetPlayerPlatforms_Parms GetPlayerPlatforms_Parms;
//
//	this->ProcessEvent ( pFnGetPlayerPlatforms, &GetPlayerPlatforms_Parms, NULL );
//
//	return GetPlayerPlatforms_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.CanPlayTogether
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Platform1                      ( CPF_Parm )
//// unsigned char                  Platform2                      ( CPF_Parm )
//
//bool UOnlineGameReservations_X::CanPlayTogether ( unsigned char Platform1, unsigned char Platform2 )
//{
//	static UFunction* pFnCanPlayTogether = NULL;
//
//	if ( ! pFnCanPlayTogether )
//		pFnCanPlayTogether = (UFunction*) UObject::GObjObjects()->Data[ 53664 ];
//
//	UOnlineGameReservations_X_execCanPlayTogether_Parms CanPlayTogether_Parms;
//	CanPlayTogether_Parms.Platform1 = Platform1;
//	CanPlayTogether_Parms.Platform2 = Platform2;
//
//	this->ProcessEvent ( pFnCanPlayTogether, &CanPlayTogether_Parms, NULL );
//
//	return CanPlayTogether_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.CanAcceptReservationsForPlatform
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAddReservationMessagePublic_X* Message                        ( CPF_Parm )
//
//bool UOnlineGameReservations_X::CanAcceptReservationsForPlatform ( class UAddReservationMessagePublic_X* Message )
//{
//	static UFunction* pFnCanAcceptReservationsForPlatform = NULL;
//
//	if ( ! pFnCanAcceptReservationsForPlatform )
//		pFnCanAcceptReservationsForPlatform = (UFunction*) UObject::GObjObjects()->Data[ 53483 ];
//
//	UOnlineGameReservations_X_execCanAcceptReservationsForPlatform_Parms CanAcceptReservationsForPlatform_Parms;
//	CanAcceptReservationsForPlatform_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnCanAcceptReservationsForPlatform, &CanAcceptReservationsForPlatform_Parms, NULL );
//
//	return CanAcceptReservationsForPlatform_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetExclusivePlatform
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//unsigned char UOnlineGameReservations_X::GetExclusivePlatform ( )
//{
//	static UFunction* pFnGetExclusivePlatform = NULL;
//
//	if ( ! pFnGetExclusivePlatform )
//		pFnGetExclusivePlatform = (UFunction*) UObject::GObjObjects()->Data[ 51242 ];
//
//	UOnlineGameReservations_X_execGetExclusivePlatform_Parms GetExclusivePlatform_Parms;
//
//	this->ProcessEvent ( pFnGetExclusivePlatform, &GetExclusivePlatform_Parms, NULL );
//
//	return GetExclusivePlatform_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.CanAcceptReservations
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAddReservationMessagePublic_X* Message                        ( CPF_Parm )
//
//bool UOnlineGameReservations_X::CanAcceptReservations ( class UAddReservationMessagePublic_X* Message )
//{
//	static UFunction* pFnCanAcceptReservations = NULL;
//
//	if ( ! pFnCanAcceptReservations )
//		pFnCanAcceptReservations = (UFunction*) UObject::GObjObjects()->Data[ 53656 ];
//
//	UOnlineGameReservations_X_execCanAcceptReservations_Parms CanAcceptReservations_Parms;
//	CanAcceptReservations_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnCanAcceptReservations, &CanAcceptReservations_Parms, NULL );
//
//	return CanAcceptReservations_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetPlayerCounts
//// [0x00420002] 
//// Parameters infos:
//// int                            Team0Reserved                  ( CPF_Parm | CPF_OutParm )
//// int                            Team0Joined                    ( CPF_Parm | CPF_OutParm )
//// int                            Team1Reserved                  ( CPF_Parm | CPF_OutParm )
//// int                            Team1Joined                    ( CPF_Parm | CPF_OutParm )
//
//void UOnlineGameReservations_X::GetPlayerCounts ( int* Team0Reserved, int* Team0Joined, int* Team1Reserved, int* Team1Joined )
//{
//	static UFunction* pFnGetPlayerCounts = NULL;
//
//	if ( ! pFnGetPlayerCounts )
//		pFnGetPlayerCounts = (UFunction*) UObject::GObjObjects()->Data[ 53649 ];
//
//	UOnlineGameReservations_X_execGetPlayerCounts_Parms GetPlayerCounts_Parms;
//
//	this->ProcessEvent ( pFnGetPlayerCounts, &GetPlayerCounts_Parms, NULL );
//
//	if ( Team0Reserved )
//		*Team0Reserved = GetPlayerCounts_Parms.Team0Reserved;
//
//	if ( Team0Joined )
//		*Team0Joined = GetPlayerCounts_Parms.Team0Joined;
//
//	if ( Team1Reserved )
//		*Team1Reserved = GetPlayerCounts_Parms.Team1Reserved;
//
//	if ( Team1Joined )
//		*Team1Joined = GetPlayerCounts_Parms.Team1Joined;
//};
//
//// Function ProjectX.OnlineGameReservations_X.NotifyReservationsUpdated
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::NotifyReservationsUpdated ( )
//{
//	static UFunction* pFnNotifyReservationsUpdated = NULL;
//
//	if ( ! pFnNotifyReservationsUpdated )
//		pFnNotifyReservationsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 53648 ];
//
//	UOnlineGameReservations_X_execNotifyReservationsUpdated_Parms NotifyReservationsUpdated_Parms;
//
//	this->ProcessEvent ( pFnNotifyReservationsUpdated, &NotifyReservationsUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.OnReservationsUpdated
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::OnReservationsUpdated ( )
//{
//	static UFunction* pFnOnReservationsUpdated = NULL;
//
//	if ( ! pFnOnReservationsUpdated )
//		pFnOnReservationsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 53646 ];
//
//	UOnlineGameReservations_X_execOnReservationsUpdated_Parms OnReservationsUpdated_Parms;
//
//	this->ProcessEvent ( pFnOnReservationsUpdated, &OnReservationsUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.CheckMapLoadTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::CheckMapLoadTimeout ( )
//{
//	static UFunction* pFnCheckMapLoadTimeout = NULL;
//
//	if ( ! pFnCheckMapLoadTimeout )
//		pFnCheckMapLoadTimeout = (UFunction*) UObject::GObjObjects()->Data[ 53647 ];
//
//	UOnlineGameReservations_X_execCheckMapLoadTimeout_Parms CheckMapLoadTimeout_Parms;
//
//	this->ProcessEvent ( pFnCheckMapLoadTimeout, &CheckMapLoadTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.StartMapLoadTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::StartMapLoadTimeout ( )
//{
//	static UFunction* pFnStartMapLoadTimeout = NULL;
//
//	if ( ! pFnStartMapLoadTimeout )
//		pFnStartMapLoadTimeout = (UFunction*) UObject::GObjObjects()->Data[ 53776 ];
//
//	UOnlineGameReservations_X_execStartMapLoadTimeout_Parms StartMapLoadTimeout_Parms;
//
//	this->ProcessEvent ( pFnStartMapLoadTimeout, &StartMapLoadTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.SyncSkills
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::SyncSkills ( )
//{
//	static UFunction* pFnSyncSkills = NULL;
//
//	if ( ! pFnSyncSkills )
//		pFnSyncSkills = (UFunction*) UObject::GObjObjects()->Data[ 53644 ];
//
//	UOnlineGameReservations_X_execSyncSkills_Parms SyncSkills_Parms;
//
//	this->ProcessEvent ( pFnSyncSkills, &SyncSkills_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HackForceNotServerTravelling
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::HackForceNotServerTravelling ( )
//{
//	static UFunction* pFnHackForceNotServerTravelling = NULL;
//
//	if ( ! pFnHackForceNotServerTravelling )
//		pFnHackForceNotServerTravelling = (UFunction*) UObject::GObjObjects()->Data[ 53643 ];
//
//	UOnlineGameReservations_X_execHackForceNotServerTravelling_Parms HackForceNotServerTravelling_Parms;
//
//	this->ProcessEvent ( pFnHackForceNotServerTravelling, &HackForceNotServerTravelling_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.SetServerTraveling
//// [0x00020002] 
//// Parameters infos:
//// unsigned long                  bTraveling                     ( CPF_Parm )
//
//void UOnlineGameReservations_X::SetServerTraveling ( unsigned long bTraveling )
//{
//	static UFunction* pFnSetServerTraveling = NULL;
//
//	if ( ! pFnSetServerTraveling )
//		pFnSetServerTraveling = (UFunction*) UObject::GObjObjects()->Data[ 53640 ];
//
//	UOnlineGameReservations_X_execSetServerTraveling_Parms SetServerTraveling_Parms;
//	SetServerTraveling_Parms.bTraveling = bTraveling;
//
//	this->ProcessEvent ( pFnSetServerTraveling, &SetServerTraveling_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.CloseConnection
//// [0x00080002] 
//// Parameters infos:
//// int                            Index                          ( CPF_Parm )
//
//void UOnlineGameReservations_X::CloseConnection ( int Index )
//{
//	static UFunction* pFnCloseConnection = NULL;
//
//	if ( ! pFnCloseConnection )
//		pFnCloseConnection = (UFunction*) UObject::GObjObjects()->Data[ 53638 ];
//
//	UOnlineGameReservations_X_execCloseConnection_Parms CloseConnection_Parms;
//	CloseConnection_Parms.Index = Index;
//
//	this->ProcessEvent ( pFnCloseConnection, &CloseConnection_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.RemoveReservationIndex
//// [0x00080002] 
//// Parameters infos:
//// int                            Index                          ( CPF_Parm )
//
//void UOnlineGameReservations_X::RemoveReservationIndex ( int Index )
//{
//	static UFunction* pFnRemoveReservationIndex = NULL;
//
//	if ( ! pFnRemoveReservationIndex )
//		pFnRemoveReservationIndex = (UFunction*) UObject::GObjObjects()->Data[ 53636 ];
//
//	UOnlineGameReservations_X_execRemoveReservationIndex_Parms RemoveReservationIndex_Parms;
//	RemoveReservationIndex_Parms.Index = Index;
//
//	this->ProcessEvent ( pFnRemoveReservationIndex, &RemoveReservationIndex_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AddSpecialReservation
//// [0x00084002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PartyID                        ( CPF_OptionalParm | CPF_Parm )
//
//int UOnlineGameReservations_X::AddSpecialReservation ( struct FUniqueNetId PlayerID, struct FString PlayerName, struct FUniqueNetId PartyID )
//{
//	static UFunction* pFnAddSpecialReservation = NULL;
//
//	if ( ! pFnAddSpecialReservation )
//		pFnAddSpecialReservation = (UFunction*) UObject::GObjObjects()->Data[ 53630 ];
//
//	UOnlineGameReservations_X_execAddSpecialReservation_Parms AddSpecialReservation_Parms;
//	memcpy ( &AddSpecialReservation_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AddSpecialReservation_Parms.PlayerName, &PlayerName, 0xC );
//	memcpy ( &AddSpecialReservation_Parms.PartyID, &PartyID, 0x48 );
//
//	this->ProcessEvent ( pFnAddSpecialReservation, &AddSpecialReservation_Parms, NULL );
//
//	return AddSpecialReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandleTeamChanged
//// [0x00080002] 
//// Parameters infos:
//// class APRI_X*                  PRI                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandleTeamChanged ( class APRI_X* PRI )
//{
//	static UFunction* pFnHandleTeamChanged = NULL;
//
//	if ( ! pFnHandleTeamChanged )
//		pFnHandleTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 53627 ];
//
//	UOnlineGameReservations_X_execHandleTeamChanged_Parms HandleTeamChanged_Parms;
//	HandleTeamChanged_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnHandleTeamChanged, &HandleTeamChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.RemoveReservation
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGameReservations_X::RemoveReservation ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnRemoveReservation = NULL;
//
//	if ( ! pFnRemoveReservation )
//		pFnRemoveReservation = (UFunction*) UObject::GObjObjects()->Data[ 53624 ];
//
//	UOnlineGameReservations_X_execRemoveReservation_Parms RemoveReservation_Parms;
//	memcpy ( &RemoveReservation_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnRemoveReservation, &RemoveReservation_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.PlayerLoggedOut
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::PlayerLoggedOut ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedOut = NULL;
//
//	if ( ! pFnPlayerLoggedOut )
//		pFnPlayerLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 53621 ];
//
//	UOnlineGameReservations_X_execPlayerLoggedOut_Parms PlayerLoggedOut_Parms;
//	PlayerLoggedOut_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedOut, &PlayerLoggedOut_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.PlayerLoggedIn
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::PlayerLoggedIn ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedIn = NULL;
//
//	if ( ! pFnPlayerLoggedIn )
//		pFnPlayerLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 53616 ];
//
//	UOnlineGameReservations_X_execPlayerLoggedIn_Parms PlayerLoggedIn_Parms;
//	PlayerLoggedIn_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedIn, &PlayerLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AllowPlayerLogin
//// [0x00420002] 
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameReservations_X::AllowPlayerLogin ( struct FString Options, struct FUniqueNetId PlayerID, struct FString* ErrorMessage )
//{
//	static UFunction* pFnAllowPlayerLogin = NULL;
//
//	if ( ! pFnAllowPlayerLogin )
//		pFnAllowPlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 53610 ];
//
//	UOnlineGameReservations_X_execAllowPlayerLogin_Parms AllowPlayerLogin_Parms;
//	memcpy ( &AllowPlayerLogin_Parms.Options, &Options, 0xC );
//	memcpy ( &AllowPlayerLogin_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnAllowPlayerLogin, &AllowPlayerLogin_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &AllowPlayerLogin_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AllPlayersInGame
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::AllPlayersInGame ( )
//{
//	static UFunction* pFnAllPlayersInGame = NULL;
//
//	if ( ! pFnAllPlayersInGame )
//		pFnAllPlayersInGame = (UFunction*) UObject::GObjObjects()->Data[ 53607 ];
//
//	UOnlineGameReservations_X_execAllPlayersInGame_Parms AllPlayersInGame_Parms;
//
//	this->ProcessEvent ( pFnAllPlayersInGame, &AllPlayersInGame_Parms, NULL );
//
//	return AllPlayersInGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.AllPlayersReserved
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::AllPlayersReserved ( )
//{
//	static UFunction* pFnAllPlayersReserved = NULL;
//
//	if ( ! pFnAllPlayersReserved )
//		pFnAllPlayersReserved = (UFunction*) UObject::GObjObjects()->Data[ 53609 ];
//
//	UOnlineGameReservations_X_execAllPlayersReserved_Parms AllPlayersReserved_Parms;
//
//	this->ProcessEvent ( pFnAllPlayersReserved, &AllPlayersReserved_Parms, NULL );
//
//	return AllPlayersReserved_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HasGameEnded
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::HasGameEnded ( )
//{
//	static UFunction* pFnHasGameEnded = NULL;
//
//	if ( ! pFnHasGameEnded )
//		pFnHasGameEnded = (UFunction*) UObject::GObjObjects()->Data[ 53477 ];
//
//	UOnlineGameReservations_X_execHasGameEnded_Parms HasGameEnded_Parms;
//
//	this->ProcessEvent ( pFnHasGameEnded, &HasGameEnded_Parms, NULL );
//
//	return HasGameEnded_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HasGameStarted
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::HasGameStarted ( )
//{
//	static UFunction* pFnHasGameStarted = NULL;
//
//	if ( ! pFnHasGameStarted )
//		pFnHasGameStarted = (UFunction*) UObject::GObjObjects()->Data[ 53604 ];
//
//	UOnlineGameReservations_X_execHasGameStarted_Parms HasGameStarted_Parms;
//
//	this->ProcessEvent ( pFnHasGameStarted, &HasGameStarted_Parms, NULL );
//
//	return HasGameStarted_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.CanStartMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::CanStartMatch ( )
//{
//	static UFunction* pFnCanStartMatch = NULL;
//
//	if ( ! pFnCanStartMatch )
//		pFnCanStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 53601 ];
//
//	UOnlineGameReservations_X_execCanStartMatch_Parms CanStartMatch_Parms;
//
//	this->ProcessEvent ( pFnCanStartMatch, &CanStartMatch_Parms, NULL );
//
//	return CanStartMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HasMultipleReservedTeams
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< int >                  MapLocal_AA698AC8448DCFB5D0967BB493B335F0 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< int >                  FilterLocal_5F941196414A9B7A28E1F1BECC704174 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< int >                  DistinctLocal_3BBB97AE4644D7597256918DDDEC940E ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::HasMultipleReservedTeams ( TArray< int >* MapLocal_AA698AC8448DCFB5D0967BB493B335F0, TArray< int >* FilterLocal_5F941196414A9B7A28E1F1BECC704174, TArray< int >* DistinctLocal_3BBB97AE4644D7597256918DDDEC940E )
//{
//	static UFunction* pFnHasMultipleReservedTeams = NULL;
//
//	if ( ! pFnHasMultipleReservedTeams )
//		pFnHasMultipleReservedTeams = (UFunction*) UObject::GObjObjects()->Data[ 53603 ];
//
//	UOnlineGameReservations_X_execHasMultipleReservedTeams_Parms HasMultipleReservedTeams_Parms;
//
//	this->ProcessEvent ( pFnHasMultipleReservedTeams, &HasMultipleReservedTeams_Parms, NULL );
//
//	if ( MapLocal_AA698AC8448DCFB5D0967BB493B335F0 )
//		memcpy ( MapLocal_AA698AC8448DCFB5D0967BB493B335F0, &HasMultipleReservedTeams_Parms.MapLocal_AA698AC8448DCFB5D0967BB493B335F0, 0xC );
//
//	if ( FilterLocal_5F941196414A9B7A28E1F1BECC704174 )
//		memcpy ( FilterLocal_5F941196414A9B7A28E1F1BECC704174, &HasMultipleReservedTeams_Parms.FilterLocal_5F941196414A9B7A28E1F1BECC704174, 0xC );
//
//	if ( DistinctLocal_3BBB97AE4644D7597256918DDDEC940E )
//		memcpy ( DistinctLocal_3BBB97AE4644D7597256918DDDEC940E, &HasMultipleReservedTeams_Parms.DistinctLocal_3BBB97AE4644D7597256918DDDEC940E, 0xC );
//
//	return HasMultipleReservedTeams_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HasTimeoutPlayers
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::HasTimeoutPlayers ( )
//{
//	static UFunction* pFnHasTimeoutPlayers = NULL;
//
//	if ( ! pFnHasTimeoutPlayers )
//		pFnHasTimeoutPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53782 ];
//
//	UOnlineGameReservations_X_execHasTimeoutPlayers_Parms HasTimeoutPlayers_Parms;
//
//	this->ProcessEvent ( pFnHasTimeoutPlayers, &HasTimeoutPlayers_Parms, NULL );
//
//	return HasTimeoutPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HasJoiningPlayers
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::HasJoiningPlayers ( )
//{
//	static UFunction* pFnHasJoiningPlayers = NULL;
//
//	if ( ! pFnHasJoiningPlayers )
//		pFnHasJoiningPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53598 ];
//
//	UOnlineGameReservations_X_execHasJoiningPlayers_Parms HasJoiningPlayers_Parms;
//
//	this->ProcessEvent ( pFnHasJoiningPlayers, &HasJoiningPlayers_Parms, NULL );
//
//	return HasJoiningPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsEmpty
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::IsEmpty ( )
//{
//	static UFunction* pFnIsEmpty = NULL;
//
//	if ( ! pFnIsEmpty )
//		pFnIsEmpty = (UFunction*) UObject::GObjObjects()->Data[ 50972 ];
//
//	UOnlineGameReservations_X_execIsEmpty_Parms IsEmpty_Parms;
//
//	this->ProcessEvent ( pFnIsEmpty, &IsEmpty_Parms, NULL );
//
//	return IsEmpty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsNearlyFull
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::IsNearlyFull ( )
//{
//	static UFunction* pFnIsNearlyFull = NULL;
//
//	if ( ! pFnIsNearlyFull )
//		pFnIsNearlyFull = (UFunction*) UObject::GObjObjects()->Data[ 53594 ];
//
//	UOnlineGameReservations_X_execIsNearlyFull_Parms IsNearlyFull_Parms;
//
//	this->ProcessEvent ( pFnIsNearlyFull, &IsNearlyFull_Parms, NULL );
//
//	return IsNearlyFull_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsFull
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::IsFull ( )
//{
//	static UFunction* pFnIsFull = NULL;
//
//	if ( ! pFnIsFull )
//		pFnIsFull = (UFunction*) UObject::GObjObjects()->Data[ 53592 ];
//
//	UOnlineGameReservations_X_execIsFull_Parms IsFull_Parms;
//
//	this->ProcessEvent ( pFnIsFull, &IsFull_Parms, NULL );
//
//	return IsFull_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.GetNumReservedPlayers
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameReservations_X::GetNumReservedPlayers ( )
//{
//	static UFunction* pFnGetNumReservedPlayers = NULL;
//
//	if ( ! pFnGetNumReservedPlayers )
//		pFnGetNumReservedPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53488 ];
//
//	UOnlineGameReservations_X_execGetNumReservedPlayers_Parms GetNumReservedPlayers_Parms;
//
//	this->ProcessEvent ( pFnGetNumReservedPlayers, &GetNumReservedPlayers_Parms, NULL );
//
//	return GetNumReservedPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsCustomMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::IsCustomMatch ( )
//{
//	static UFunction* pFnIsCustomMatch = NULL;
//
//	if ( ! pFnIsCustomMatch )
//		pFnIsCustomMatch = (UFunction*) UObject::GObjObjects()->Data[ 53587 ];
//
//	UOnlineGameReservations_X_execIsCustomMatch_Parms IsCustomMatch_Parms;
//
//	this->ProcessEvent ( pFnIsCustomMatch, &IsCustomMatch_Parms, NULL );
//
//	return IsCustomMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandleReservationDisconnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandleReservationDisconnected ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnHandleReservationDisconnected = NULL;
//
//	if ( ! pFnHandleReservationDisconnected )
//		pFnHandleReservationDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 53583 ];
//
//	UOnlineGameReservations_X_execHandleReservationDisconnected_Parms HandleReservationDisconnected_Parms;
//	HandleReservationDisconnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnHandleReservationDisconnected, &HandleReservationDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.ClearGetKeysRPCs
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::ClearGetKeysRPCs ( )
//{
//	static UFunction* pFnClearGetKeysRPCs = NULL;
//
//	if ( ! pFnClearGetKeysRPCs )
//		pFnClearGetKeysRPCs = (UFunction*) UObject::GObjObjects()->Data[ 53586 ];
//
//	UOnlineGameReservations_X_execClearGetKeysRPCs_Parms ClearGetKeysRPCs_Parms;
//
//	this->ProcessEvent ( pFnClearGetKeysRPCs, &ClearGetKeysRPCs_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.ClearTeamHistory
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::ClearTeamHistory ( )
//{
//	static UFunction* pFnClearTeamHistory = NULL;
//
//	if ( ! pFnClearTeamHistory )
//		pFnClearTeamHistory = (UFunction*) UObject::GObjObjects()->Data[ 53582 ];
//
//	UOnlineGameReservations_X_execClearTeamHistory_Parms ClearTeamHistory_Parms;
//
//	this->ProcessEvent ( pFnClearTeamHistory, &ClearTeamHistory_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.ClearReservations
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::ClearReservations ( )
//{
//	static UFunction* pFnClearReservations = NULL;
//
//	if ( ! pFnClearReservations )
//		pFnClearReservations = (UFunction*) UObject::GObjObjects()->Data[ 53578 ];
//
//	UOnlineGameReservations_X_execClearReservations_Parms ClearReservations_Parms;
//
//	this->ProcessEvent ( pFnClearReservations, &ClearReservations_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.Reset
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::Reset ( )
//{
//	static UFunction* pFnReset = NULL;
//
//	if ( ! pFnReset )
//		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 53577 ];
//
//	UOnlineGameReservations_X_execReset_Parms Reset_Parms;
//
//	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.RecordTeamHistory
//// [0x00422400] ( FUNC_Native )
//// Parameters infos:
//// TArray< struct FReservationData > TestPlayers                    ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FTeamPairHistory > History                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameReservations_X::RecordTeamHistory ( TArray< struct FReservationData >* TestPlayers, TArray< struct FTeamPairHistory >* History )
//{
//	static UFunction* pFnRecordTeamHistory = NULL;
//
//	if ( ! pFnRecordTeamHistory )
//		pFnRecordTeamHistory = (UFunction*) UObject::GObjObjects()->Data[ 53572 ];
//
//	UOnlineGameReservations_X_execRecordTeamHistory_Parms RecordTeamHistory_Parms;
//
//	pFnRecordTeamHistory->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnRecordTeamHistory, &RecordTeamHistory_Parms, NULL );
//
//	pFnRecordTeamHistory->FunctionFlags |= 0x400;
//
//	if ( TestPlayers )
//		memcpy ( TestPlayers, &RecordTeamHistory_Parms.TestPlayers, 0xC );
//
//	if ( History )
//		memcpy ( History, &RecordTeamHistory_Parms.History, 0xC );
//};
//
//// Function ProjectX.OnlineGameReservations_X.ScrambleTeams
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::ScrambleTeams ( )
//{
//	static UFunction* pFnScrambleTeams = NULL;
//
//	if ( ! pFnScrambleTeams )
//		pFnScrambleTeams = (UFunction*) UObject::GObjObjects()->Data[ 53569 ];
//
//	UOnlineGameReservations_X_execScrambleTeams_Parms ScrambleTeams_Parms;
//
//	this->ProcessEvent ( pFnScrambleTeams, &ScrambleTeams_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.UpdateTeams
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::UpdateTeams ( )
//{
//	static UFunction* pFnUpdateTeams = NULL;
//
//	if ( ! pFnUpdateTeams )
//		pFnUpdateTeams = (UFunction*) UObject::GObjObjects()->Data[ 53566 ];
//
//	UOnlineGameReservations_X_execUpdateTeams_Parms UpdateTeams_Parms;
//
//	this->ProcessEvent ( pFnUpdateTeams, &UpdateTeams_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AssignTeamsByPartySize
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::AssignTeamsByPartySize ( )
//{
//	static UFunction* pFnAssignTeamsByPartySize = NULL;
//
//	if ( ! pFnAssignTeamsByPartySize )
//		pFnAssignTeamsByPartySize = (UFunction*) UObject::GObjObjects()->Data[ 53563 ];
//
//	UOnlineGameReservations_X_execAssignTeamsByPartySize_Parms AssignTeamsByPartySize_Parms;
//
//	this->ProcessEvent ( pFnAssignTeamsByPartySize, &AssignTeamsByPartySize_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AssignScrambledTeams
//// [0x00422400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            TeamSize                       ( CPF_Parm )
//// TArray< struct FTeamPairHistory > History                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FReservationData > TestPlayers                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::AssignScrambledTeams ( int TeamSize, TArray< struct FTeamPairHistory >* History, TArray< struct FReservationData >* TestPlayers )
//{
//	static UFunction* pFnAssignScrambledTeams = NULL;
//
//	if ( ! pFnAssignScrambledTeams )
//		pFnAssignScrambledTeams = (UFunction*) UObject::GObjObjects()->Data[ 53556 ];
//
//	UOnlineGameReservations_X_execAssignScrambledTeams_Parms AssignScrambledTeams_Parms;
//	AssignScrambledTeams_Parms.TeamSize = TeamSize;
//
//	pFnAssignScrambledTeams->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAssignScrambledTeams, &AssignScrambledTeams_Parms, NULL );
//
//	pFnAssignScrambledTeams->FunctionFlags |= 0x400;
//
//	if ( History )
//		memcpy ( History, &AssignScrambledTeams_Parms.History, 0xC );
//
//	if ( TestPlayers )
//		memcpy ( TestPlayers, &AssignScrambledTeams_Parms.TestPlayers, 0xC );
//
//	return AssignScrambledTeams_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.AssignTeams
//// [0x00422400] ( FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            TeamSize                       ( CPF_Parm )
//// TArray< struct FReservationData > TestPlayers                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::AssignTeams ( int TeamSize, TArray< struct FReservationData >* TestPlayers )
//{
//	static UFunction* pFnAssignTeams = NULL;
//
//	if ( ! pFnAssignTeams )
//		pFnAssignTeams = (UFunction*) UObject::GObjObjects()->Data[ 53551 ];
//
//	UOnlineGameReservations_X_execAssignTeams_Parms AssignTeams_Parms;
//	AssignTeams_Parms.TeamSize = TeamSize;
//
//	pFnAssignTeams->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAssignTeams, &AssignTeams_Parms, NULL );
//
//	pFnAssignTeams->FunctionFlags |= 0x400;
//
//	if ( TestPlayers )
//		memcpy ( TestPlayers, &AssignTeams_Parms.TestPlayers, 0xC );
//
//	return AssignTeams_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandleSkillSynced
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameSkill_X*      SkillSystem                    ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandleSkillSynced ( class UOnlineGameSkill_X* SkillSystem, struct FUniqueNetId PlayerID, class UError* Error )
//{
//	static UFunction* pFnHandleSkillSynced = NULL;
//
//	if ( ! pFnHandleSkillSynced )
//		pFnHandleSkillSynced = (UFunction*) UObject::GObjObjects()->Data[ 53547 ];
//
//	UOnlineGameReservations_X_execHandleSkillSynced_Parms HandleSkillSynced_Parms;
//	HandleSkillSynced_Parms.SkillSystem = SkillSystem;
//	memcpy ( &HandleSkillSynced_Parms.PlayerID, &PlayerID, 0x48 );
//	HandleSkillSynced_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleSkillSynced, &HandleSkillSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AllowSplitscreenJoin
//// [0x00C20002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerReplicationInfo*  PrimaryPRI                     ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Error                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::AllowSplitscreenJoin ( class APlayerReplicationInfo* PrimaryPRI, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString* Error )
//{
//	static UFunction* pFnAllowSplitscreenJoin = NULL;
//
//	if ( ! pFnAllowSplitscreenJoin )
//		pFnAllowSplitscreenJoin = (UFunction*) UObject::GObjObjects()->Data[ 51050 ];
//
//	UOnlineGameReservations_X_execAllowSplitscreenJoin_Parms AllowSplitscreenJoin_Parms;
//	AllowSplitscreenJoin_Parms.PrimaryPRI = PrimaryPRI;
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerName, &PlayerName, 0xC );
//
//	this->ProcessEvent ( pFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Parms, NULL );
//
//	if ( Error )
//		memcpy ( Error, &AllowSplitscreenJoin_Parms.Error, 0xC );
//
//	return AllowSplitscreenJoin_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsCheatingSplitscreenReservation
//// [0x00880002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAddReservationMessage_X* Message                        ( CPF_Parm )
//
//bool UOnlineGameReservations_X::IsCheatingSplitscreenReservation ( class UAddReservationMessage_X* Message )
//{
//	static UFunction* pFnIsCheatingSplitscreenReservation = NULL;
//
//	if ( ! pFnIsCheatingSplitscreenReservation )
//		pFnIsCheatingSplitscreenReservation = (UFunction*) UObject::GObjObjects()->Data[ 53545 ];
//
//	UOnlineGameReservations_X_execIsCheatingSplitscreenReservation_Parms IsCheatingSplitscreenReservation_Parms;
//	IsCheatingSplitscreenReservation_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnIsCheatingSplitscreenReservation, &IsCheatingSplitscreenReservation_Parms, NULL );
//
//	return IsCheatingSplitscreenReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsCheatingSplitscreen
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PrimaryPlayerID                ( CPF_Parm )
//// struct FUniqueNetId            SplitscreenPlayerID            ( CPF_Parm )
//
//bool UOnlineGameReservations_X::IsCheatingSplitscreen ( struct FUniqueNetId PrimaryPlayerID, struct FUniqueNetId SplitscreenPlayerID )
//{
//	static UFunction* pFnIsCheatingSplitscreen = NULL;
//
//	if ( ! pFnIsCheatingSplitscreen )
//		pFnIsCheatingSplitscreen = (UFunction*) UObject::GObjObjects()->Data[ 53546 ];
//
//	UOnlineGameReservations_X_execIsCheatingSplitscreen_Parms IsCheatingSplitscreen_Parms;
//	memcpy ( &IsCheatingSplitscreen_Parms.PrimaryPlayerID, &PrimaryPlayerID, 0x48 );
//	memcpy ( &IsCheatingSplitscreen_Parms.SplitscreenPlayerID, &SplitscreenPlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnIsCheatingSplitscreen, &IsCheatingSplitscreen_Parms, NULL );
//
//	return IsCheatingSplitscreen_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.CreateReservationData
//// [0x00884002] 
//// Parameters infos:
//// struct FReservationData        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PartyID                        ( CPF_OptionalParm | CPF_Parm )
//// unsigned char                  Status                         ( CPF_OptionalParm | CPF_Parm )
//
//struct FReservationData UOnlineGameReservations_X::CreateReservationData ( struct FUniqueNetId PlayerID, struct FString PlayerName, struct FUniqueNetId PartyID, unsigned char Status )
//{
//	static UFunction* pFnCreateReservationData = NULL;
//
//	if ( ! pFnCreateReservationData )
//		pFnCreateReservationData = (UFunction*) UObject::GObjObjects()->Data[ 53530 ];
//
//	UOnlineGameReservations_X_execCreateReservationData_Parms CreateReservationData_Parms;
//	memcpy ( &CreateReservationData_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &CreateReservationData_Parms.PlayerName, &PlayerName, 0xC );
//	memcpy ( &CreateReservationData_Parms.PartyID, &PartyID, 0x48 );
//	CreateReservationData_Parms.Status = Status;
//
//	this->ProcessEvent ( pFnCreateReservationData, &CreateReservationData_Parms, NULL );
//
//	return CreateReservationData_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.NotAllPlayersJoined
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::NotAllPlayersJoined ( )
//{
//	static UFunction* pFnNotAllPlayersJoined = NULL;
//
//	if ( ! pFnNotAllPlayersJoined )
//		pFnNotAllPlayersJoined = (UFunction*) UObject::GObjObjects()->Data[ 53528 ];
//
//	UOnlineGameReservations_X_execNotAllPlayersJoined_Parms NotAllPlayersJoined_Parms;
//
//	this->ProcessEvent ( pFnNotAllPlayersJoined, &NotAllPlayersJoined_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.DisconnectExistingPlayers
//// [0x00880002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReservationMessage             ( CPF_Parm )
//
//void UOnlineGameReservations_X::DisconnectExistingPlayers ( class UAddReservationMessage_X* ReservationMessage )
//{
//	static UFunction* pFnDisconnectExistingPlayers = NULL;
//
//	if ( ! pFnDisconnectExistingPlayers )
//		pFnDisconnectExistingPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53525 ];
//
//	UOnlineGameReservations_X_execDisconnectExistingPlayers_Parms DisconnectExistingPlayers_Parms;
//	DisconnectExistingPlayers_Parms.ReservationMessage = ReservationMessage;
//
//	this->ProcessEvent ( pFnDisconnectExistingPlayers, &DisconnectExistingPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.SetPlayers
//// [0x00480002] 
//// Parameters infos:
//// TArray< struct FReservationData > TempPlayers                    ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameReservations_X::SetPlayers ( TArray< struct FReservationData >* TempPlayers )
//{
//	static UFunction* pFnSetPlayers = NULL;
//
//	if ( ! pFnSetPlayers )
//		pFnSetPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53521 ];
//
//	UOnlineGameReservations_X_execSetPlayers_Parms SetPlayers_Parms;
//
//	this->ProcessEvent ( pFnSetPlayers, &SetPlayers_Parms, NULL );
//
//	if ( TempPlayers )
//		memcpy ( TempPlayers, &SetPlayers_Parms.TempPlayers, 0xC );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AddPlayersFromReservationMessage
//// [0x00880002] 
//// Parameters infos:
//// TArray< struct FReservationData > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// class UAddReservationMessage_X* ReservationMessage             ( CPF_Parm )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//TArray< struct FReservationData > UOnlineGameReservations_X::AddPlayersFromReservationMessage ( class UAddReservationMessage_X* ReservationMessage, class UTcpConnection* Connection )
//{
//	static UFunction* pFnAddPlayersFromReservationMessage = NULL;
//
//	if ( ! pFnAddPlayersFromReservationMessage )
//		pFnAddPlayersFromReservationMessage = (UFunction*) UObject::GObjObjects()->Data[ 53504 ];
//
//	UOnlineGameReservations_X_execAddPlayersFromReservationMessage_Parms AddPlayersFromReservationMessage_Parms;
//	AddPlayersFromReservationMessage_Parms.ReservationMessage = ReservationMessage;
//	AddPlayersFromReservationMessage_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnAddPlayersFromReservationMessage, &AddPlayersFromReservationMessage_Parms, NULL );
//
//	return AddPlayersFromReservationMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsUnique
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FName >         Prefs                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameReservations_X::IsUnique ( TArray< struct FName >* Prefs )
//{
//	static UFunction* pFnIsUnique = NULL;
//
//	if ( ! pFnIsUnique )
//		pFnIsUnique = (UFunction*) UObject::GObjObjects()->Data[ 53515 ];
//
//	UOnlineGameReservations_X_execIsUnique_Parms IsUnique_Parms;
//
//	this->ProcessEvent ( pFnIsUnique, &IsUnique_Parms, NULL );
//
//	if ( Prefs )
//		memcpy ( Prefs, &IsUnique_Parms.Prefs, 0xC );
//
//	return IsUnique_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.ForcePrivateMatch
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// struct FCustomMatchSettings    InSettings                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            StructInitializer_D43C98E84F4B706D6262C7A3AD0E666C ( CPF_Const | CPF_OutParm )
//
//void UOnlineGameReservations_X::ForcePrivateMatch ( struct FCustomMatchSettings InSettings, struct FUniqueNetId* StructInitializer_D43C98E84F4B706D6262C7A3AD0E666C )
//{
//	static UFunction* pFnForcePrivateMatch = NULL;
//
//	if ( ! pFnForcePrivateMatch )
//		pFnForcePrivateMatch = (UFunction*) UObject::GObjObjects()->Data[ 51211 ];
//
//	UOnlineGameReservations_X_execForcePrivateMatch_Parms ForcePrivateMatch_Parms;
//	memcpy ( &ForcePrivateMatch_Parms.InSettings, &InSettings, 0x60 );
//
//	this->ProcessEvent ( pFnForcePrivateMatch, &ForcePrivateMatch_Parms, NULL );
//
//	if ( StructInitializer_D43C98E84F4B706D6262C7A3AD0E666C )
//		memcpy ( StructInitializer_D43C98E84F4B706D6262C7A3AD0E666C, &ForcePrivateMatch_Parms.StructInitializer_D43C98E84F4B706D6262C7A3AD0E666C, 0x48 );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandlePrivateReservation
//// [0x00880002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessagePrivate_X* Message                        ( CPF_Parm )
//// struct FPendingReservation     StructInitializer_C6D2C8B54E9FC2863495FBAA45747FC3 ( CPF_Const | CPF_OutParm )
//
//bool UOnlineGameReservations_X::HandlePrivateReservation ( class UTcpConnection* Connection, class UAddReservationMessagePrivate_X* Message, struct FPendingReservation* StructInitializer_C6D2C8B54E9FC2863495FBAA45747FC3 )
//{
//	static UFunction* pFnHandlePrivateReservation = NULL;
//
//	if ( ! pFnHandlePrivateReservation )
//		pFnHandlePrivateReservation = (UFunction*) UObject::GObjObjects()->Data[ 53496 ];
//
//	UOnlineGameReservations_X_execHandlePrivateReservation_Parms HandlePrivateReservation_Parms;
//	HandlePrivateReservation_Parms.Connection = Connection;
//	HandlePrivateReservation_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePrivateReservation, &HandlePrivateReservation_Parms, NULL );
//
//	if ( StructInitializer_C6D2C8B54E9FC2863495FBAA45747FC3 )
//		memcpy ( StructInitializer_C6D2C8B54E9FC2863495FBAA45747FC3, &HandlePrivateReservation_Parms.StructInitializer_C6D2C8B54E9FC2863495FBAA45747FC3, 0x8 );
//
//	return HandlePrivateReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.SendGetKeysRPCs
//// [0x00080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessage_X* Message                        ( CPF_Parm )
//
//void UOnlineGameReservations_X::SendGetKeysRPCs ( class UTcpConnection* Connection, class UAddReservationMessage_X* Message )
//{
//	static UFunction* pFnSendGetKeysRPCs = NULL;
//
//	if ( ! pFnSendGetKeysRPCs )
//		pFnSendGetKeysRPCs = (UFunction*) UObject::GObjObjects()->Data[ 53503 ];
//
//	UOnlineGameReservations_X_execSendGetKeysRPCs_Parms SendGetKeysRPCs_Parms;
//	SendGetKeysRPCs_Parms.Connection = Connection;
//	SendGetKeysRPCs_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendGetKeysRPCs, &SendGetKeysRPCs_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandlePrivateReservationMessage
//// [0x20080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessagePrivate_X* Message                        ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandlePrivateReservationMessage ( class UTcpConnection* Connection, class UAddReservationMessagePrivate_X* Message )
//{
//	static UFunction* pFnHandlePrivateReservationMessage = NULL;
//
//	if ( ! pFnHandlePrivateReservationMessage )
//		pFnHandlePrivateReservationMessage = (UFunction*) UObject::GObjObjects()->Data[ 53492 ];
//
//	UOnlineGameReservations_X_execHandlePrivateReservationMessage_Parms HandlePrivateReservationMessage_Parms;
//	HandlePrivateReservationMessage_Parms.Connection = Connection;
//	HandlePrivateReservationMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePrivateReservationMessage, &HandlePrivateReservationMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.CanAcceptReservationsForServerKey
//// [0x20880002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAddReservationMessagePublic_X* Message                        ( CPF_Parm )
//// unsigned long                  bServerKey                     ( CPF_Parm )
//
//bool UOnlineGameReservations_X::CanAcceptReservationsForServerKey ( class UAddReservationMessagePublic_X* Message, unsigned long bServerKey )
//{
//	static UFunction* pFnCanAcceptReservationsForServerKey = NULL;
//
//	if ( ! pFnCanAcceptReservationsForServerKey )
//		pFnCanAcceptReservationsForServerKey = (UFunction*) UObject::GObjObjects()->Data[ 53495 ];
//
//	UOnlineGameReservations_X_execCanAcceptReservationsForServerKey_Parms CanAcceptReservationsForServerKey_Parms;
//	CanAcceptReservationsForServerKey_Parms.Message = Message;
//	CanAcceptReservationsForServerKey_Parms.bServerKey = bServerKey;
//
//	this->ProcessEvent ( pFnCanAcceptReservationsForServerKey, &CanAcceptReservationsForServerKey_Parms, NULL );
//
//	return CanAcceptReservationsForServerKey_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.RemoveKeysRPC
//// [0x00080002] 
//// Parameters infos:
//// class URPC_GetKeys_X*          RPC                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::RemoveKeysRPC ( class URPC_GetKeys_X* RPC )
//{
//	static UFunction* pFnRemoveKeysRPC = NULL;
//
//	if ( ! pFnRemoveKeysRPC )
//		pFnRemoveKeysRPC = (UFunction*) UObject::GObjObjects()->Data[ 53816 ];
//
//	UOnlineGameReservations_X_execRemoveKeysRPC_Parms RemoveKeysRPC_Parms;
//	RemoveKeysRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnRemoveKeysRPC, &RemoveKeysRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandleGetKeysRPCFail
//// [0x00080002] 
//// Parameters infos:
//// class URPC_GetKeys_X*          RPC                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandleGetKeysRPCFail ( class URPC_GetKeys_X* RPC )
//{
//	static UFunction* pFnHandleGetKeysRPCFail = NULL;
//
//	if ( ! pFnHandleGetKeysRPCFail )
//		pFnHandleGetKeysRPCFail = (UFunction*) UObject::GObjObjects()->Data[ 53823 ];
//
//	UOnlineGameReservations_X_execHandleGetKeysRPCFail_Parms HandleGetKeysRPCFail_Parms;
//	HandleGetKeysRPCFail_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetKeysRPCFail, &HandleGetKeysRPCFail_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.AddNetworkKeys
//// [0x00880002] 
//// Parameters infos:
//// class URPC_GetKeys_X*          RPC                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::AddNetworkKeys ( class URPC_GetKeys_X* RPC )
//{
//	static UFunction* pFnAddNetworkKeys = NULL;
//
//	if ( ! pFnAddNetworkKeys )
//		pFnAddNetworkKeys = (UFunction*) UObject::GObjObjects()->Data[ 53825 ];
//
//	UOnlineGameReservations_X_execAddNetworkKeys_Parms AddNetworkKeys_Parms;
//	AddNetworkKeys_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnAddNetworkKeys, &AddNetworkKeys_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.ProcessReservationMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessage_X* Message                        ( CPF_Parm )
//
//void UOnlineGameReservations_X::ProcessReservationMessage ( class UTcpConnection* Connection, class UAddReservationMessage_X* Message )
//{
//	static UFunction* pFnProcessReservationMessage = NULL;
//
//	if ( ! pFnProcessReservationMessage )
//		pFnProcessReservationMessage = (UFunction*) UObject::GObjObjects()->Data[ 53458 ];
//
//	UOnlineGameReservations_X_execProcessReservationMessage_Parms ProcessReservationMessage_Parms;
//	ProcessReservationMessage_Parms.Connection = Connection;
//	ProcessReservationMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnProcessReservationMessage, &ProcessReservationMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandleGetKeysRPCSuccess
//// [0x00080002] 
//// Parameters infos:
//// class URPC_GetKeys_X*          RPC                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandleGetKeysRPCSuccess ( class URPC_GetKeys_X* RPC )
//{
//	static UFunction* pFnHandleGetKeysRPCSuccess = NULL;
//
//	if ( ! pFnHandleGetKeysRPCSuccess )
//		pFnHandleGetKeysRPCSuccess = (UFunction*) UObject::GObjObjects()->Data[ 53831 ];
//
//	UOnlineGameReservations_X_execHandleGetKeysRPCSuccess_Parms HandleGetKeysRPCSuccess_Parms;
//	HandleGetKeysRPCSuccess_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetKeysRPCSuccess, &HandleGetKeysRPCSuccess_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandleGetKeysRPC
//// [0x20080002] 
//// Parameters infos:
//// class URPC_GetKeys_X*          RPC                            ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandleGetKeysRPC ( class URPC_GetKeys_X* RPC )
//{
//	static UFunction* pFnHandleGetKeysRPC = NULL;
//
//	if ( ! pFnHandleGetKeysRPC )
//		pFnHandleGetKeysRPC = (UFunction*) UObject::GObjObjects()->Data[ 53834 ];
//
//	UOnlineGameReservations_X_execHandleGetKeysRPC_Parms HandleGetKeysRPC_Parms;
//	HandleGetKeysRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetKeysRPC, &HandleGetKeysRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.StartMatch
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::StartMatch ( )
//{
//	static UFunction* pFnStartMatch = NULL;
//
//	if ( ! pFnStartMatch )
//		pFnStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 53491 ];
//
//	UOnlineGameReservations_X_execStartMatch_Parms StartMatch_Parms;
//
//	this->ProcessEvent ( pFnStartMatch, &StartMatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.CreateReadyMessage
//// [0x00080002] 
//// Parameters infos:
//// class UReservationsReadyMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UReservationsReadyMessage_X* UOnlineGameReservations_X::CreateReadyMessage ( )
//{
//	static UFunction* pFnCreateReadyMessage = NULL;
//
//	if ( ! pFnCreateReadyMessage )
//		pFnCreateReadyMessage = (UFunction*) UObject::GObjObjects()->Data[ 53489 ];
//
//	UOnlineGameReservations_X_execCreateReadyMessage_Parms CreateReadyMessage_Parms;
//
//	this->ProcessEvent ( pFnCreateReadyMessage, &CreateReadyMessage_Parms, NULL );
//
//	return CreateReadyMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.ShouldSyncSkills
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameReservations_X::ShouldSyncSkills ( )
//{
//	static UFunction* pFnShouldSyncSkills = NULL;
//
//	if ( ! pFnShouldSyncSkills )
//		pFnShouldSyncSkills = (UFunction*) UObject::GObjObjects()->Data[ 53486 ];
//
//	UOnlineGameReservations_X_execShouldSyncSkills_Parms ShouldSyncSkills_Parms;
//
//	this->ProcessEvent ( pFnShouldSyncSkills, &ShouldSyncSkills_Parms, NULL );
//
//	return ShouldSyncSkills_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.IsSoloPlaylist
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            PlaylistId                     ( CPF_Parm )
//
//bool UOnlineGameReservations_X::IsSoloPlaylist ( int PlaylistId )
//{
//	static UFunction* pFnIsSoloPlaylist = NULL;
//
//	if ( ! pFnIsSoloPlaylist )
//		pFnIsSoloPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 53471 ];
//
//	UOnlineGameReservations_X_execIsSoloPlaylist_Parms IsSoloPlaylist_Parms;
//	IsSoloPlaylist_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnIsSoloPlaylist, &IsSoloPlaylist_Parms, NULL );
//
//	return IsSoloPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandlePublicReservation
//// [0x00880002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessagePublic_X* Message                        ( CPF_Parm )
//// struct FPendingReservation     StructInitializer_F01CBCB0408B48261EAA1CAC1EC9D69A ( CPF_Const | CPF_OutParm )
//
//bool UOnlineGameReservations_X::HandlePublicReservation ( class UTcpConnection* Connection, class UAddReservationMessagePublic_X* Message, struct FPendingReservation* StructInitializer_F01CBCB0408B48261EAA1CAC1EC9D69A )
//{
//	static UFunction* pFnHandlePublicReservation = NULL;
//
//	if ( ! pFnHandlePublicReservation )
//		pFnHandlePublicReservation = (UFunction*) UObject::GObjObjects()->Data[ 53459 ];
//
//	UOnlineGameReservations_X_execHandlePublicReservation_Parms HandlePublicReservation_Parms;
//	HandlePublicReservation_Parms.Connection = Connection;
//	HandlePublicReservation_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePublicReservation, &HandlePublicReservation_Parms, NULL );
//
//	if ( StructInitializer_F01CBCB0408B48261EAA1CAC1EC9D69A )
//		memcpy ( StructInitializer_F01CBCB0408B48261EAA1CAC1EC9D69A, &HandlePublicReservation_Parms.StructInitializer_F01CBCB0408B48261EAA1CAC1EC9D69A, 0x8 );
//
//	return HandlePublicReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandlePublicReservationMessage
//// [0x20080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessagePublic_X* Message                        ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandlePublicReservationMessage ( class UTcpConnection* Connection, class UAddReservationMessagePublic_X* Message )
//{
//	static UFunction* pFnHandlePublicReservationMessage = NULL;
//
//	if ( ! pFnHandlePublicReservationMessage )
//		pFnHandlePublicReservationMessage = (UFunction*) UObject::GObjObjects()->Data[ 53455 ];
//
//	UOnlineGameReservations_X_execHandlePublicReservationMessage_Parms HandlePublicReservationMessage_Parms;
//	HandlePublicReservationMessage_Parms.Connection = Connection;
//	HandlePublicReservationMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePublicReservationMessage, &HandlePublicReservationMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.HandlePingMessage
//// [0x00080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameReservations_X::HandlePingMessage ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnHandlePingMessage = NULL;
//
//	if ( ! pFnHandlePingMessage )
//		pFnHandlePingMessage = (UFunction*) UObject::GObjObjects()->Data[ 53452 ];
//
//	UOnlineGameReservations_X_execHandlePingMessage_Parms HandlePingMessage_Parms;
//	HandlePingMessage_Parms.Connection = Connection;
//	HandlePingMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePingMessage, &HandlePingMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 53451 ];
//
//	UOnlineGameReservations_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.EventMigrationJoinOccurred
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::EventMigrationJoinOccurred ( )
//{
//	static UFunction* pFnEventMigrationJoinOccurred = NULL;
//
//	if ( ! pFnEventMigrationJoinOccurred )
//		pFnEventMigrationJoinOccurred = (UFunction*) UObject::GObjObjects()->Data[ 53442 ];
//
//	UOnlineGameReservations_X_execEventMigrationJoinOccurred_Parms EventMigrationJoinOccurred_Parms;
//
//	this->ProcessEvent ( pFnEventMigrationJoinOccurred, &EventMigrationJoinOccurred_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_X.EventReservationsUpdated
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameReservations_X::EventReservationsUpdated ( )
//{
//	static UFunction* pFnEventReservationsUpdated = NULL;
//
//	if ( ! pFnEventReservationsUpdated )
//		pFnEventReservationsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 53443 ];
//
//	UOnlineGameReservations_X_execEventReservationsUpdated_Parms EventReservationsUpdated_Parms;
//
//	this->ProcessEvent ( pFnEventReservationsUpdated, &EventReservationsUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameStats_X.UploadStats
//// [0x00420002] 
//// Parameters infos:
//// struct FString                 StatType                       ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FUploadStatDataSet > DataSet                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameStats_X::UploadStats ( struct FString StatType, TArray< struct FUploadStatDataSet >* DataSet )
//{
//	static UFunction* pFnUploadStats = NULL;
//
//	if ( ! pFnUploadStats )
//		pFnUploadStats = (UFunction*) UObject::GObjObjects()->Data[ 54118 ];
//
//	UOnlineGameStats_X_execUploadStats_Parms UploadStats_Parms;
//	memcpy ( &UploadStats_Parms.StatType, &StatType, 0xC );
//
//	this->ProcessEvent ( pFnUploadStats, &UploadStats_Parms, NULL );
//
//	if ( DataSet )
//		memcpy ( DataSet, &UploadStats_Parms.DataSet, 0xC );
//};
//
//// Function ProjectX.OnlinePlayer_X.GetPlayersLikesDislikes
//// [0x00420000] 
//// Parameters infos:
//// class UGameSettingPlaylist_X*  Playlist                       ( CPF_Parm )
//// TArray< struct FName >         PlayerLikes                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FName >         PlayerDislikes                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::GetPlayersLikesDislikes ( class UGameSettingPlaylist_X* Playlist, TArray< struct FName >* PlayerLikes, TArray< struct FName >* PlayerDislikes )
//{
//	static UFunction* pFnGetPlayersLikesDislikes = NULL;
//
//	if ( ! pFnGetPlayersLikesDislikes )
//		pFnGetPlayersLikesDislikes = (UFunction*) UObject::GObjObjects()->Data[ 54392 ];
//
//	UOnlinePlayer_X_execGetPlayersLikesDislikes_Parms GetPlayersLikesDislikes_Parms;
//	GetPlayersLikesDislikes_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnGetPlayersLikesDislikes, &GetPlayersLikesDislikes_Parms, NULL );
//
//	if ( PlayerLikes )
//		memcpy ( PlayerLikes, &GetPlayersLikesDislikes_Parms.PlayerLikes, 0xC );
//
//	if ( PlayerDislikes )
//		memcpy ( PlayerDislikes, &GetPlayersLikesDislikes_Parms.PlayerDislikes, 0xC );
//};
//
//// Function ProjectX.OnlinePlayer_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlinePlayer_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 54390 ];
//
//	UOnlinePlayer_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.IsGuestAccount
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayer_X::IsGuestAccount ( )
//{
//	static UFunction* pFnIsGuestAccount = NULL;
//
//	if ( ! pFnIsGuestAccount )
//		pFnIsGuestAccount = (UFunction*) UObject::GObjObjects()->Data[ 51601 ];
//
//	UOnlinePlayer_X_execIsGuestAccount_Parms IsGuestAccount_Parms;
//
//	this->ProcessEvent ( pFnIsGuestAccount, &IsGuestAccount_Parms, NULL );
//
//	return IsGuestAccount_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.SetPlayerName
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 InName                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::SetPlayerName ( struct FString InName )
//{
//	static UFunction* pFnSetPlayerName = NULL;
//
//	if ( ! pFnSetPlayerName )
//		pFnSetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 54398 ];
//
//	UOnlinePlayer_X_execSetPlayerName_Parms SetPlayerName_Parms;
//	memcpy ( &SetPlayerName_Parms.InName, &InName, 0xC );
//
//	this->ProcessEvent ( pFnSetPlayerName, &SetPlayerName_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.UpdateSplitscreenId
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayer_X::UpdateSplitscreenId ( )
//{
//	static UFunction* pFnUpdateSplitscreenId = NULL;
//
//	if ( ! pFnUpdateSplitscreenId )
//		pFnUpdateSplitscreenId = (UFunction*) UObject::GObjObjects()->Data[ 54389 ];
//
//	UOnlinePlayer_X_execUpdateSplitscreenId_Parms UpdateSplitscreenId_Parms;
//
//	this->ProcessEvent ( pFnUpdateSplitscreenId, &UpdateSplitscreenId_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.IsUpdateRequired
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayer_X::IsUpdateRequired ( )
//{
//	static UFunction* pFnIsUpdateRequired = NULL;
//
//	if ( ! pFnIsUpdateRequired )
//		pFnIsUpdateRequired = (UFunction*) UObject::GObjObjects()->Data[ 50775 ];
//
//	UOnlinePlayer_X_execIsUpdateRequired_Parms IsUpdateRequired_Parms;
//
//	this->ProcessEvent ( pFnIsUpdateRequired, &IsUpdateRequired_Parms, NULL );
//
//	return IsUpdateRequired_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.GetOnlineName
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlinePlayer_X::GetOnlineName ( )
//{
//	static UFunction* pFnGetOnlineName = NULL;
//
//	if ( ! pFnGetOnlineName )
//		pFnGetOnlineName = (UFunction*) UObject::GObjObjects()->Data[ 52948 ];
//
//	UOnlinePlayer_X_execGetOnlineName_Parms GetOnlineName_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineName, &GetOnlineName_Parms, NULL );
//
//	return GetOnlineName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.GetLocalName
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlinePlayer_X::GetLocalName ( )
//{
//	static UFunction* pFnGetLocalName = NULL;
//
//	if ( ! pFnGetLocalName )
//		pFnGetLocalName = (UFunction*) UObject::GObjObjects()->Data[ 52720 ];
//
//	UOnlinePlayer_X_execGetLocalName_Parms GetLocalName_Parms;
//
//	this->ProcessEvent ( pFnGetLocalName, &GetLocalName_Parms, NULL );
//
//	return GetLocalName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.GetRemoteName
//// [0x00024002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// int                            LocalPlayerIndex               ( CPF_OptionalParm | CPF_Parm )
//
//struct FString UOnlinePlayer_X::GetRemoteName ( int LocalPlayerIndex )
//{
//	static UFunction* pFnGetRemoteName = NULL;
//
//	if ( ! pFnGetRemoteName )
//		pFnGetRemoteName = (UFunction*) UObject::GObjObjects()->Data[ 48054 ];
//
//	UOnlinePlayer_X_execGetRemoteName_Parms GetRemoteName_Parms;
//	GetRemoteName_Parms.LocalPlayerIndex = LocalPlayerIndex;
//
//	this->ProcessEvent ( pFnGetRemoteName, &GetRemoteName_Parms, NULL );
//
//	return GetRemoteName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleCanPlayOnlineChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleCanPlayOnlineChanged ( unsigned char LocalUserNum )
//{
//	static UFunction* pFnHandleCanPlayOnlineChanged = NULL;
//
//	if ( ! pFnHandleCanPlayOnlineChanged )
//		pFnHandleCanPlayOnlineChanged = (UFunction*) UObject::GObjObjects()->Data[ 54385 ];
//
//	UOnlinePlayer_X_execHandleCanPlayOnlineChanged_Parms HandleCanPlayOnlineChanged_Parms;
//	HandleCanPlayOnlineChanged_Parms.LocalUserNum = LocalUserNum;
//
//	this->ProcessEvent ( pFnHandleCanPlayOnlineChanged, &HandleCanPlayOnlineChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.OnExit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayer_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 54383 ];
//
//	UOnlinePlayer_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.CanPlayOnline
//// [0x00020002] 
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//unsigned char UOnlinePlayer_X::CanPlayOnline ( )
//{
//	static UFunction* pFnCanPlayOnline = NULL;
//
//	if ( ! pFnCanPlayOnline )
//		pFnCanPlayOnline = (UFunction*) UObject::GObjObjects()->Data[ 50786 ];
//
//	UOnlinePlayer_X_execCanPlayOnline_Parms CanPlayOnline_Parms;
//
//	this->ProcessEvent ( pFnCanPlayOnline, &CanPlayOnline_Parms, NULL );
//
//	return CanPlayOnline_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.HandlePlayerCountryReceived
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//// struct FString                 Country                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::HandlePlayerCountryReceived ( struct FUniqueNetId InPlayerId, struct FString Country )
//{
//	static UFunction* pFnHandlePlayerCountryReceived = NULL;
//
//	if ( ! pFnHandlePlayerCountryReceived )
//		pFnHandlePlayerCountryReceived = (UFunction*) UObject::GObjObjects()->Data[ 54379 ];
//
//	UOnlinePlayer_X_execHandlePlayerCountryReceived_Parms HandlePlayerCountryReceived_Parms;
//	memcpy ( &HandlePlayerCountryReceived_Parms.InPlayerId, &InPlayerId, 0x48 );
//	memcpy ( &HandlePlayerCountryReceived_Parms.Country, &Country, 0xC );
//
//	this->ProcessEvent ( pFnHandlePlayerCountryReceived, &HandlePlayerCountryReceived_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.GetPlayerCountry
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Handler                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::GetPlayerCountry ( struct FScriptDelegate Handler )
//{
//	static UFunction* pFnGetPlayerCountry = NULL;
//
//	if ( ! pFnGetPlayerCountry )
//		pFnGetPlayerCountry = (UFunction*) UObject::GObjObjects()->Data[ 54376 ];
//
//	UOnlinePlayer_X_execGetPlayerCountry_Parms GetPlayerCountry_Parms;
//	memcpy ( &GetPlayerCountry_Parms.Handler, &Handler, 0x10 );
//
//	this->ProcessEvent ( pFnGetPlayerCountry, &GetPlayerCountry_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.CanCommunicateText
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bTryToResolve                  ( CPF_OptionalParm | CPF_Parm )
//
//unsigned char UOnlinePlayer_X::CanCommunicateText ( unsigned long bTryToResolve )
//{
//	static UFunction* pFnCanCommunicateText = NULL;
//
//	if ( ! pFnCanCommunicateText )
//		pFnCanCommunicateText = (UFunction*) UObject::GObjObjects()->Data[ 54378 ];
//
//	UOnlinePlayer_X_execCanCommunicateText_Parms CanCommunicateText_Parms;
//	CanCommunicateText_Parms.bTryToResolve = bTryToResolve;
//
//	this->ProcessEvent ( pFnCanCommunicateText, &CanCommunicateText_Parms, NULL );
//
//	return CanCommunicateText_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.OpenErrorDialog
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ErrorCode                      ( CPF_Parm )
//
//void UOnlinePlayer_X::OpenErrorDialog ( unsigned char ErrorCode )
//{
//	static UFunction* pFnOpenErrorDialog = NULL;
//
//	if ( ! pFnOpenErrorDialog )
//		pFnOpenErrorDialog = (UFunction*) UObject::GObjObjects()->Data[ 54374 ];
//
//	UOnlinePlayer_X_execOpenErrorDialog_Parms OpenErrorDialog_Parms;
//	OpenErrorDialog_Parms.ErrorCode = ErrorCode;
//
//	this->ProcessEvent ( pFnOpenErrorDialog, &OpenErrorDialog_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.OpenPS4DisplayMode
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  DisplayMode                    ( CPF_Parm )
//// TArray< struct FString >       Targets                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// int                            ServiceLabel                   ( CPF_OptionalParm | CPF_Parm )
//
//void UOnlinePlayer_X::OpenPS4DisplayMode ( unsigned char DisplayMode, TArray< struct FString > Targets, int ServiceLabel )
//{
//	static UFunction* pFnOpenPS4DisplayMode = NULL;
//
//	if ( ! pFnOpenPS4DisplayMode )
//		pFnOpenPS4DisplayMode = (UFunction*) UObject::GObjObjects()->Data[ 54369 ];
//
//	UOnlinePlayer_X_execOpenPS4DisplayMode_Parms OpenPS4DisplayMode_Parms;
//	OpenPS4DisplayMode_Parms.DisplayMode = DisplayMode;
//	memcpy ( &OpenPS4DisplayMode_Parms.Targets, &Targets, 0xC );
//	OpenPS4DisplayMode_Parms.ServiceLabel = ServiceLabel;
//
//	this->ProcessEvent ( pFnOpenPS4DisplayMode, &OpenPS4DisplayMode_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.ResetControllerColor
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            InControllerID                 ( CPF_Parm )
//
//void UOnlinePlayer_X::ResetControllerColor ( int InControllerID )
//{
//	static UFunction* pFnResetControllerColor = NULL;
//
//	if ( ! pFnResetControllerColor )
//		pFnResetControllerColor = (UFunction*) UObject::GObjObjects()->Data[ 54367 ];
//
//	UOnlinePlayer_X_execResetControllerColor_Parms ResetControllerColor_Parms;
//	ResetControllerColor_Parms.InControllerID = InControllerID;
//
//	this->ProcessEvent ( pFnResetControllerColor, &ResetControllerColor_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.SetControllerColor
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            InControllerID                 ( CPF_Parm )
//// struct FColor                  NewColor                       ( CPF_Parm )
//
//void UOnlinePlayer_X::SetControllerColor ( int InControllerID, struct FColor NewColor )
//{
//	static UFunction* pFnSetControllerColor = NULL;
//
//	if ( ! pFnSetControllerColor )
//		pFnSetControllerColor = (UFunction*) UObject::GObjObjects()->Data[ 54364 ];
//
//	UOnlinePlayer_X_execSetControllerColor_Parms SetControllerColor_Parms;
//	SetControllerColor_Parms.InControllerID = InControllerID;
//	memcpy ( &SetControllerColor_Parms.NewColor, &NewColor, 0x4 );
//
//	this->ProcessEvent ( pFnSetControllerColor, &SetControllerColor_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.PostActivityFeedMessage
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FString >       StringReplaceList              ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::PostActivityFeedMessage ( struct FString Id, TArray< struct FString > StringReplaceList )
//{
//	static UFunction* pFnPostActivityFeedMessage = NULL;
//
//	if ( ! pFnPostActivityFeedMessage )
//		pFnPostActivityFeedMessage = (UFunction*) UObject::GObjObjects()->Data[ 54360 ];
//
//	UOnlinePlayer_X_execPostActivityFeedMessage_Parms PostActivityFeedMessage_Parms;
//	memcpy ( &PostActivityFeedMessage_Parms.Id, &Id, 0xC );
//	memcpy ( &PostActivityFeedMessage_Parms.StringReplaceList, &StringReplaceList, 0xC );
//
//	this->ProcessEvent ( pFnPostActivityFeedMessage, &PostActivityFeedMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.GetSyncedAchievements
//// [0x00020002] 
//// Parameters infos:
//// TArray< unsigned long >        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//
//TArray< unsigned long > UOnlinePlayer_X::GetSyncedAchievements ( unsigned char LocalUserNum )
//{
//	static UFunction* pFnGetSyncedAchievements = NULL;
//
//	if ( ! pFnGetSyncedAchievements )
//		pFnGetSyncedAchievements = (UFunction*) UObject::GObjObjects()->Data[ 54354 ];
//
//	UOnlinePlayer_X_execGetSyncedAchievements_Parms GetSyncedAchievements_Parms;
//	GetSyncedAchievements_Parms.LocalUserNum = LocalUserNum;
//
//	this->ProcessEvent ( pFnGetSyncedAchievements, &GetSyncedAchievements_Parms, NULL );
//
//	return GetSyncedAchievements_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.UnlockAchievement
//// [0x00024002] 
//// Parameters infos:
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//// int                            AchievementId                  ( CPF_Parm )
//// float                          PercentComplete                ( CPF_OptionalParm | CPF_Parm )
//
//void UOnlinePlayer_X::UnlockAchievement ( unsigned char LocalUserNum, int AchievementId, float PercentComplete )
//{
//	static UFunction* pFnUnlockAchievement = NULL;
//
//	if ( ! pFnUnlockAchievement )
//		pFnUnlockAchievement = (UFunction*) UObject::GObjObjects()->Data[ 54350 ];
//
//	UOnlinePlayer_X_execUnlockAchievement_Parms UnlockAchievement_Parms;
//	UnlockAchievement_Parms.LocalUserNum = LocalUserNum;
//	UnlockAchievement_Parms.AchievementId = AchievementId;
//	UnlockAchievement_Parms.PercentComplete = PercentComplete;
//
//	this->ProcessEvent ( pFnUnlockAchievement, &UnlockAchievement_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.UpdateStat
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   StatName                       ( CPF_Parm )
//// int                            Points                         ( CPF_Parm )
//
//void UOnlinePlayer_X::UpdateStat ( struct FName StatName, int Points )
//{
//	static UFunction* pFnUpdateStat = NULL;
//
//	if ( ! pFnUpdateStat )
//		pFnUpdateStat = (UFunction*) UObject::GObjObjects()->Data[ 54347 ];
//
//	UOnlinePlayer_X_execUpdateStat_Parms UpdateStat_Parms;
//	memcpy ( &UpdateStat_Parms.StatName, &StatName, 0x8 );
//	UpdateStat_Parms.Points = Points;
//
//	this->ProcessEvent ( pFnUpdateStat, &UpdateStat_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleShowKeyboardComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleShowKeyboardComplete ( unsigned long bWasSuccessful )
//{
//	static UFunction* pFnHandleShowKeyboardComplete = NULL;
//
//	if ( ! pFnHandleShowKeyboardComplete )
//		pFnHandleShowKeyboardComplete = (UFunction*) UObject::GObjObjects()->Data[ 54343 ];
//
//	UOnlinePlayer_X_execHandleShowKeyboardComplete_Parms HandleShowKeyboardComplete_Parms;
//	HandleShowKeyboardComplete_Parms.bWasSuccessful = bWasSuccessful;
//
//	this->ProcessEvent ( pFnHandleShowKeyboardComplete, &HandleShowKeyboardComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HideKeyboard
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayer_X::HideKeyboard ( )
//{
//	static UFunction* pFnHideKeyboard = NULL;
//
//	if ( ! pFnHideKeyboard )
//		pFnHideKeyboard = (UFunction*) UObject::GObjObjects()->Data[ 50057 ];
//
//	UOnlinePlayer_X_execHideKeyboard_Parms HideKeyboard_Parms;
//
//	this->ProcessEvent ( pFnHideKeyboard, &HideKeyboard_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.ShowKeyboard
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 TitleText                      ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 DescriptionText                ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bIsPassword                    ( CPF_Parm )
//// struct FString                 DefaultText                    ( CPF_Parm | CPF_NeedCtorLink )
//// int                            MaxLength                      ( CPF_Parm )
//// struct FScriptDelegate         OnCompleteDelegate             ( CPF_Parm | CPF_NeedCtorLink )
//// int                            LocalPlayerNumOverride         ( CPF_OptionalParm | CPF_Parm )
//
//bool UOnlinePlayer_X::ShowKeyboard ( struct FString TitleText, struct FString DescriptionText, unsigned long bIsPassword, struct FString DefaultText, int MaxLength, struct FScriptDelegate OnCompleteDelegate, int LocalPlayerNumOverride )
//{
//	static UFunction* pFnShowKeyboard = NULL;
//
//	if ( ! pFnShowKeyboard )
//		pFnShowKeyboard = (UFunction*) UObject::GObjObjects()->Data[ 50054 ];
//
//	UOnlinePlayer_X_execShowKeyboard_Parms ShowKeyboard_Parms;
//	memcpy ( &ShowKeyboard_Parms.TitleText, &TitleText, 0xC );
//	memcpy ( &ShowKeyboard_Parms.DescriptionText, &DescriptionText, 0xC );
//	ShowKeyboard_Parms.bIsPassword = bIsPassword;
//	memcpy ( &ShowKeyboard_Parms.DefaultText, &DefaultText, 0xC );
//	ShowKeyboard_Parms.MaxLength = MaxLength;
//	memcpy ( &ShowKeyboard_Parms.OnCompleteDelegate, &OnCompleteDelegate, 0x10 );
//	ShowKeyboard_Parms.LocalPlayerNumOverride = LocalPlayerNumOverride;
//
//	this->ProcessEvent ( pFnShowKeyboard, &ShowKeyboard_Parms, NULL );
//
//	return ShowKeyboard_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.OnNewGame
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayer_X::OnNewGame ( )
//{
//	static UFunction* pFnOnNewGame = NULL;
//
//	if ( ! pFnOnNewGame )
//		pFnOnNewGame = (UFunction*) UObject::GObjObjects()->Data[ 54335 ];
//
//	UOnlinePlayer_X_execOnNewGame_Parms OnNewGame_Parms;
//
//	this->ProcessEvent ( pFnOnNewGame, &OnNewGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleControllerChange
//// [0x00080002] 
//// Parameters infos:
//// int                            InControllerID                 ( CPF_Parm )
//// unsigned long                  bIsConnected                   ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleControllerChange ( int InControllerID, unsigned long bIsConnected )
//{
//	static UFunction* pFnHandleControllerChange = NULL;
//
//	if ( ! pFnHandleControllerChange )
//		pFnHandleControllerChange = (UFunction*) UObject::GObjObjects()->Data[ 54332 ];
//
//	UOnlinePlayer_X_execHandleControllerChange_Parms HandleControllerChange_Parms;
//	HandleControllerChange_Parms.InControllerID = InControllerID;
//	HandleControllerChange_Parms.bIsConnected = bIsConnected;
//
//	this->ProcessEvent ( pFnHandleControllerChange, &HandleControllerChange_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleUserLoginStatusChange
//// [0x00080002] 
//// Parameters infos:
//// unsigned char                  NewStatus                      ( CPF_Parm )
//// struct FUniqueNetId            NewId                          ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleUserLoginStatusChange ( unsigned char NewStatus, struct FUniqueNetId NewId )
//{
//	static UFunction* pFnHandleUserLoginStatusChange = NULL;
//
//	if ( ! pFnHandleUserLoginStatusChange )
//		pFnHandleUserLoginStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 54329 ];
//
//	UOnlinePlayer_X_execHandleUserLoginStatusChange_Parms HandleUserLoginStatusChange_Parms;
//	HandleUserLoginStatusChange_Parms.NewStatus = NewStatus;
//	memcpy ( &HandleUserLoginStatusChange_Parms.NewId, &NewId, 0x48 );
//
//	this->ProcessEvent ( pFnHandleUserLoginStatusChange, &HandleUserLoginStatusChange_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.IsLoggedIn
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bRequireOnlineLogin            ( CPF_OptionalParm | CPF_Parm )
//
//bool UOnlinePlayer_X::IsLoggedIn ( unsigned long bRequireOnlineLogin )
//{
//	static UFunction* pFnIsLoggedIn = NULL;
//
//	if ( ! pFnIsLoggedIn )
//		pFnIsLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 50747 ];
//
//	UOnlinePlayer_X_execIsLoggedIn_Parms IsLoggedIn_Parms;
//	IsLoggedIn_Parms.bRequireOnlineLogin = bRequireOnlineLogin;
//
//	this->ProcessEvent ( pFnIsLoggedIn, &IsLoggedIn_Parms, NULL );
//
//	return IsLoggedIn_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleLogoutComplete
//// [0x00080002] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleLogoutComplete ( unsigned long bWasSuccessful )
//{
//	static UFunction* pFnHandleLogoutComplete = NULL;
//
//	if ( ! pFnHandleLogoutComplete )
//		pFnHandleLogoutComplete = (UFunction*) UObject::GObjObjects()->Data[ 54326 ];
//
//	UOnlinePlayer_X_execHandleLogoutComplete_Parms HandleLogoutComplete_Parms;
//	HandleLogoutComplete_Parms.bWasSuccessful = bWasSuccessful;
//
//	this->ProcessEvent ( pFnHandleLogoutComplete, &HandleLogoutComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleLoginChanged
//// [0x00080002] 
//// Parameters infos:
//// unsigned char                  PlayerNum                      ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleLoginChanged ( unsigned char PlayerNum )
//{
//	static UFunction* pFnHandleLoginChanged = NULL;
//
//	if ( ! pFnHandleLoginChanged )
//		pFnHandleLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 54323 ];
//
//	UOnlinePlayer_X_execHandleLoginChanged_Parms HandleLoginChanged_Parms;
//	HandleLoginChanged_Parms.PlayerNum = PlayerNum;
//
//	this->ProcessEvent ( pFnHandleLoginChanged, &HandleLoginChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleLoginFailed
//// [0x00080002] 
//// Parameters infos:
//// unsigned char                  PlayerNum                      ( CPF_Parm )
//// unsigned char                  ErrorCode                      ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleLoginFailed ( unsigned char PlayerNum, unsigned char ErrorCode )
//{
//	static UFunction* pFnHandleLoginFailed = NULL;
//
//	if ( ! pFnHandleLoginFailed )
//		pFnHandleLoginFailed = (UFunction*) UObject::GObjObjects()->Data[ 54320 ];
//
//	UOnlinePlayer_X_execHandleLoginFailed_Parms HandleLoginFailed_Parms;
//	HandleLoginFailed_Parms.PlayerNum = PlayerNum;
//	HandleLoginFailed_Parms.ErrorCode = ErrorCode;
//
//	this->ProcessEvent ( pFnHandleLoginFailed, &HandleLoginFailed_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.Logout
//// [0x00024002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::Logout ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnLogout = NULL;
//
//	if ( ! pFnLogout )
//		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 54318 ];
//
//	UOnlinePlayer_X_execLogout_Parms Logout_Parms;
//	memcpy ( &Logout_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.Login
//// [0x00024002] 
//// Parameters infos:
//// struct FString                 LoginName                      ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 LoginPassword                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::Login ( struct FString LoginName, struct FString LoginPassword, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnLogin = NULL;
//
//	if ( ! pFnLogin )
//		pFnLogin = (UFunction*) UObject::GObjObjects()->Data[ 54314 ];
//
//	UOnlinePlayer_X_execLogin_Parms Login_Parms;
//	memcpy ( &Login_Parms.LoginName, &LoginName, 0xC );
//	memcpy ( &Login_Parms.LoginPassword, &LoginPassword, 0xC );
//	memcpy ( &Login_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnLogin, &Login_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.OnRemoved
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlinePlayer_X::OnRemoved ( )
//{
//	static UFunction* pFnOnRemoved = NULL;
//
//	if ( ! pFnOnRemoved )
//		pFnOnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 54312 ];
//
//	UOnlinePlayer_X_execOnRemoved_Parms OnRemoved_Parms;
//
//	this->ProcessEvent ( pFnOnRemoved, &OnRemoved_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.InitPlayer
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlinePlayer_X::InitPlayer ( )
//{
//	static UFunction* pFnInitPlayer = NULL;
//
//	if ( ! pFnInitPlayer )
//		pFnInitPlayer = (UFunction*) UObject::GObjObjects()->Data[ 54309 ];
//
//	UOnlinePlayer_X_execInitPlayer_Parms InitPlayer_Parms;
//
//	this->ProcessEvent ( pFnInitPlayer, &InitPlayer_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.IsPrimaryPlayer
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayer_X::eventIsPrimaryPlayer ( )
//{
//	static UFunction* pFnIsPrimaryPlayer = NULL;
//
//	if ( ! pFnIsPrimaryPlayer )
//		pFnIsPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 49880 ];
//
//	UOnlinePlayer_X_eventIsPrimaryPlayer_Parms IsPrimaryPlayer_Parms;
//
//	this->ProcessEvent ( pFnIsPrimaryPlayer, &IsPrimaryPlayer_Parms, NULL );
//
//	return IsPrimaryPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleErrorRPC
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPCQueue_X*             InQueue                        ( CPF_Parm | CPF_EditInline )
//// class URPC_X*                  RPC                            ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleErrorRPC ( class URPCQueue_X* InQueue, class URPC_X* RPC, class UError* Error )
//{
//	static UFunction* pFnHandleErrorRPC = NULL;
//
//	if ( ! pFnHandleErrorRPC )
//		pFnHandleErrorRPC = (UFunction*) UObject::GObjObjects()->Data[ 54308 ];
//
//	UOnlinePlayer_X_execHandleErrorRPC_Parms HandleErrorRPC_Parms;
//	HandleErrorRPC_Parms.InQueue = InQueue;
//	HandleErrorRPC_Parms.RPC = RPC;
//	HandleErrorRPC_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleErrorRPC, &HandleErrorRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandlePsyNetDisconnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UOnlinePlayer_X::HandlePsyNetDisconnect ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnHandlePsyNetDisconnect = NULL;
//
//	if ( ! pFnHandlePsyNetDisconnect )
//		pFnHandlePsyNetDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 54402 ];
//
//	UOnlinePlayer_X_execHandlePsyNetDisconnect_Parms HandlePsyNetDisconnect_Parms;
//	HandlePsyNetDisconnect_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnHandlePsyNetDisconnect, &HandlePsyNetDisconnect_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.UpdatePsyNetEnabled
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayer_X::UpdatePsyNetEnabled ( )
//{
//	static UFunction* pFnUpdatePsyNetEnabled = NULL;
//
//	if ( ! pFnUpdatePsyNetEnabled )
//		pFnUpdatePsyNetEnabled = (UFunction*) UObject::GObjObjects()->Data[ 54325 ];
//
//	UOnlinePlayer_X_execUpdatePsyNetEnabled_Parms UpdatePsyNetEnabled_Parms;
//
//	this->ProcessEvent ( pFnUpdatePsyNetEnabled, &UpdatePsyNetEnabled_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleBanned
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleBanned ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnHandleBanned = NULL;
//
//	if ( ! pFnHandleBanned )
//		pFnHandleBanned = (UFunction*) UObject::GObjObjects()->Data[ 54411 ];
//
//	UOnlinePlayer_X_execHandleBanned_Parms HandleBanned_Parms;
//	HandleBanned_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnHandleBanned, &HandleBanned_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleAuthLoginChange
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleAuthLoginChange ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnHandleAuthLoginChange = NULL;
//
//	if ( ! pFnHandleAuthLoginChange )
//		pFnHandleAuthLoginChange = (UFunction*) UObject::GObjObjects()->Data[ 54418 ];
//
//	UOnlinePlayer_X_execHandleAuthLoginChange_Parms HandleAuthLoginChange_Parms;
//	HandleAuthLoginChange_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnHandleAuthLoginChange, &HandleAuthLoginChange_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.HandleLoginRPC
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//// class URPC_LoginAuthPlayer_X*  RPC                            ( CPF_Parm )
//
//void UOnlinePlayer_X::HandleLoginRPC ( class UOnlinePlayerAuthentication_X* Auth, class URPC_LoginAuthPlayer_X* RPC )
//{
//	static UFunction* pFnHandleLoginRPC = NULL;
//
//	if ( ! pFnHandleLoginRPC )
//		pFnHandleLoginRPC = (UFunction*) UObject::GObjObjects()->Data[ 54420 ];
//
//	UOnlinePlayer_X_execHandleLoginRPC_Parms HandleLoginRPC_Parms;
//	HandleLoginRPC_Parms.Auth = Auth;
//	HandleLoginRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleLoginRPC, &HandleLoginRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.UseWebSocket
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class URPC_LoginAuthPlayer_X*  RPC                            ( CPF_Parm )
//
//bool UOnlinePlayer_X::UseWebSocket ( class URPC_LoginAuthPlayer_X* RPC )
//{
//	static UFunction* pFnUseWebSocket = NULL;
//
//	if ( ! pFnUseWebSocket )
//		pFnUseWebSocket = (UFunction*) UObject::GObjObjects()->Data[ 54423 ];
//
//	UOnlinePlayer_X_execUseWebSocket_Parms UseWebSocket_Parms;
//	UseWebSocket_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnUseWebSocket, &UseWebSocket_Parms, NULL );
//
//	return UseWebSocket_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayer_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 54430 ];
//
//	UOnlinePlayer_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UOnlinePlayer_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 54434 ];
//
//	UOnlinePlayer_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.GetOnlineGame
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGame_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGame_X* UOnlinePlayer_X::GetOnlineGame ( )
//{
//	static UFunction* pFnGetOnlineGame = NULL;
//
//	if ( ! pFnGetOnlineGame )
//		pFnGetOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 54305 ];
//
//	UOnlinePlayer_X_execGetOnlineGame_Parms GetOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGame, &GetOnlineGame_Parms, NULL );
//
//	return GetOnlineGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayer_X.EventOnlineNameChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlinePlayer_X::EventOnlineNameChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventOnlineNameChanged = NULL;
//
//	if ( ! pFnEventOnlineNameChanged )
//		pFnEventOnlineNameChanged = (UFunction*) UObject::GObjObjects()->Data[ 54307 ];
//
//	UOnlinePlayer_X_execEventOnlineNameChanged_Parms EventOnlineNameChanged_Parms;
//	EventOnlineNameChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventOnlineNameChanged, &EventOnlineNameChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventPreFlushExit
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlinePlayer_X::EventPreFlushExit ( )
//{
//	static UFunction* pFnEventPreFlushExit = NULL;
//
//	if ( ! pFnEventPreFlushExit )
//		pFnEventPreFlushExit = (UFunction*) UObject::GObjObjects()->Data[ 54440 ];
//
//	UOnlinePlayer_X_execEventPreFlushExit_Parms EventPreFlushExit_Parms;
//
//	this->ProcessEvent ( pFnEventPreFlushExit, &EventPreFlushExit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventShowKeyboardComplete
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewText                        ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bCanceled                      ( CPF_Parm )
//
//void UOnlinePlayer_X::EventShowKeyboardComplete ( struct FString NewText, unsigned long bCanceled )
//{
//	static UFunction* pFnEventShowKeyboardComplete = NULL;
//
//	if ( ! pFnEventShowKeyboardComplete )
//		pFnEventShowKeyboardComplete = (UFunction*) UObject::GObjObjects()->Data[ 54284 ];
//
//	UOnlinePlayer_X_execEventShowKeyboardComplete_Parms EventShowKeyboardComplete_Parms;
//	memcpy ( &EventShowKeyboardComplete_Parms.NewText, &NewText, 0xC );
//	EventShowKeyboardComplete_Parms.bCanceled = bCanceled;
//
//	this->ProcessEvent ( pFnEventShowKeyboardComplete, &EventShowKeyboardComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventCanPlayOnlineChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlinePlayer_X::EventCanPlayOnlineChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventCanPlayOnlineChanged = NULL;
//
//	if ( ! pFnEventCanPlayOnlineChanged )
//		pFnEventCanPlayOnlineChanged = (UFunction*) UObject::GObjObjects()->Data[ 54286 ];
//
//	UOnlinePlayer_X_execEventCanPlayOnlineChanged_Parms EventCanPlayOnlineChanged_Parms;
//	EventCanPlayOnlineChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventCanPlayOnlineChanged, &EventCanPlayOnlineChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventCountryUpdated
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 Country                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayer_X::EventCountryUpdated ( struct FString Country )
//{
//	static UFunction* pFnEventCountryUpdated = NULL;
//
//	if ( ! pFnEventCountryUpdated )
//		pFnEventCountryUpdated = (UFunction*) UObject::GObjObjects()->Data[ 54288 ];
//
//	UOnlinePlayer_X_execEventCountryUpdated_Parms EventCountryUpdated_Parms;
//	memcpy ( &EventCountryUpdated_Parms.Country, &Country, 0xC );
//
//	this->ProcessEvent ( pFnEventCountryUpdated, &EventCountryUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventLoginStatusChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlinePlayer_X::EventLoginStatusChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventLoginStatusChanged = NULL;
//
//	if ( ! pFnEventLoginStatusChanged )
//		pFnEventLoginStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 54289 ];
//
//	UOnlinePlayer_X_execEventLoginStatusChanged_Parms EventLoginStatusChanged_Parms;
//	EventLoginStatusChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventLoginStatusChanged, &EventLoginStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventLogoutComplete
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlinePlayer_X::EventLogoutComplete ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnEventLogoutComplete = NULL;
//
//	if ( ! pFnEventLogoutComplete )
//		pFnEventLogoutComplete = (UFunction*) UObject::GObjObjects()->Data[ 54291 ];
//
//	UOnlinePlayer_X_execEventLogoutComplete_Parms EventLogoutComplete_Parms;
//	EventLogoutComplete_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnEventLogoutComplete, &EventLogoutComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayer_X.EventLoginComplete
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlinePlayer_X::EventLoginComplete ( class UOnlinePlayer_X* Player, class UError* Error )
//{
//	static UFunction* pFnEventLoginComplete = NULL;
//
//	if ( ! pFnEventLoginComplete )
//		pFnEventLoginComplete = (UFunction*) UObject::GObjObjects()->Data[ 54292 ];
//
//	UOnlinePlayer_X_execEventLoginComplete_Parms EventLoginComplete_Parms;
//	EventLoginComplete_Parms.Player = Player;
//	EventLoginComplete_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventLoginComplete, &EventLoginComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.GetDebugName
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlinePlayerAuthentication_X::GetDebugName ( )
//{
//	static UFunction* pFnGetDebugName = NULL;
//
//	if ( ! pFnGetDebugName )
//		pFnGetDebugName = (UFunction*) UObject::GObjObjects()->Data[ 54471 ];
//
//	UOnlinePlayerAuthentication_X_execGetDebugName_Parms GetDebugName_Parms;
//
//	this->ProcessEvent ( pFnGetDebugName, &GetDebugName_Parms, NULL );
//
//	return GetDebugName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.GotoAuthState
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   AuthStateName                  ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::GotoAuthState ( struct FName AuthStateName )
//{
//	static UFunction* pFnGotoAuthState = NULL;
//
//	if ( ! pFnGotoAuthState )
//		pFnGotoAuthState = (UFunction*) UObject::GObjObjects()->Data[ 54488 ];
//
//	UOnlinePlayerAuthentication_X_execGotoAuthState_Parms GotoAuthState_Parms;
//	memcpy ( &GotoAuthState_Parms.AuthStateName, &AuthStateName, 0x8 );
//
//	this->ProcessEvent ( pFnGotoAuthState, &GotoAuthState_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.IsBanned
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayerAuthentication_X::IsBanned ( )
//{
//	static UFunction* pFnIsBanned = NULL;
//
//	if ( ! pFnIsBanned )
//		pFnIsBanned = (UFunction*) UObject::GObjObjects()->Data[ 54415 ];
//
//	UOnlinePlayerAuthentication_X_execIsBanned_Parms IsBanned_Parms;
//
//	pFnIsBanned->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsBanned, &IsBanned_Parms, NULL );
//
//	pFnIsBanned->FunctionFlags |= 0x400;
//
//	return IsBanned_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.GetGameVersion
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlinePlayerAuthentication_X::GetGameVersion ( )
//{
//	static UFunction* pFnGetGameVersion = NULL;
//
//	if ( ! pFnGetGameVersion )
//		pFnGetGameVersion = (UFunction*) UObject::GObjObjects()->Data[ 54464 ];
//
//	UOnlinePlayerAuthentication_X_execGetGameVersion_Parms GetGameVersion_Parms;
//
//	this->ProcessEvent ( pFnGetGameVersion, &GetGameVersion_Parms, NULL );
//
//	return GetGameVersion_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.GetFeatureSet
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FName UOnlinePlayerAuthentication_X::GetFeatureSet ( )
//{
//	static UFunction* pFnGetFeatureSet = NULL;
//
//	if ( ! pFnGetFeatureSet )
//		pFnGetFeatureSet = (UFunction*) UObject::GObjObjects()->Data[ 54503 ];
//
//	UOnlinePlayerAuthentication_X_execGetFeatureSet_Parms GetFeatureSet_Parms;
//
//	pFnGetFeatureSet->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetFeatureSet, &GetFeatureSet_Parms, NULL );
//
//	pFnGetFeatureSet->FunctionFlags |= 0x400;
//
//	return GetFeatureSet_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.GetBuildRegion
//// [0x00080000] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlinePlayerAuthentication_X::GetBuildRegion ( )
//{
//	static UFunction* pFnGetBuildRegion = NULL;
//
//	if ( ! pFnGetBuildRegion )
//		pFnGetBuildRegion = (UFunction*) UObject::GObjObjects()->Data[ 54505 ];
//
//	UOnlinePlayerAuthentication_X_execGetBuildRegion_Parms GetBuildRegion_Parms;
//
//	this->ProcessEvent ( pFnGetBuildRegion, &GetBuildRegion_Parms, NULL );
//
//	return GetBuildRegion_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.HandleTrialStatusChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameTrial_X*      InTrial                        ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::HandleTrialStatusChanged ( class UOnlineGameTrial_X* InTrial )
//{
//	static UFunction* pFnHandleTrialStatusChanged = NULL;
//
//	if ( ! pFnHandleTrialStatusChanged )
//		pFnHandleTrialStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 54507 ];
//
//	UOnlinePlayerAuthentication_X_execHandleTrialStatusChanged_Parms HandleTrialStatusChanged_Parms;
//	HandleTrialStatusChanged_Parms.InTrial = InTrial;
//
//	this->ProcessEvent ( pFnHandleTrialStatusChanged, &HandleTrialStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.OnChangeAuthenticatedName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 NewName                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerAuthentication_X::OnChangeAuthenticatedName ( struct FString NewName )
//{
//	static UFunction* pFnOnChangeAuthenticatedName = NULL;
//
//	if ( ! pFnOnChangeAuthenticatedName )
//		pFnOnChangeAuthenticatedName = (UFunction*) UObject::GObjObjects()->Data[ 54509 ];
//
//	UOnlinePlayerAuthentication_X_execOnChangeAuthenticatedName_Parms OnChangeAuthenticatedName_Parms;
//	memcpy ( &OnChangeAuthenticatedName_Parms.NewName, &NewName, 0xC );
//
//	this->ProcessEvent ( pFnOnChangeAuthenticatedName, &OnChangeAuthenticatedName_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.NeedToAuthenticateName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayerAuthentication_X::NeedToAuthenticateName ( )
//{
//	static UFunction* pFnNeedToAuthenticateName = NULL;
//
//	if ( ! pFnNeedToAuthenticateName )
//		pFnNeedToAuthenticateName = (UFunction*) UObject::GObjObjects()->Data[ 54513 ];
//
//	UOnlinePlayerAuthentication_X_execNeedToAuthenticateName_Parms NeedToAuthenticateName_Parms;
//
//	this->ProcessEvent ( pFnNeedToAuthenticateName, &NeedToAuthenticateName_Parms, NULL );
//
//	return NeedToAuthenticateName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.HandleAuthTicket
//// [0x00080002] 
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 AuthTicket                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerAuthentication_X::HandleAuthTicket ( unsigned long bSuccess, struct FString AuthTicket )
//{
//	static UFunction* pFnHandleAuthTicket = NULL;
//
//	if ( ! pFnHandleAuthTicket )
//		pFnHandleAuthTicket = (UFunction*) UObject::GObjObjects()->Data[ 54480 ];
//
//	UOnlinePlayerAuthentication_X_execHandleAuthTicket_Parms HandleAuthTicket_Parms;
//	HandleAuthTicket_Parms.bSuccess = bSuccess;
//	memcpy ( &HandleAuthTicket_Parms.AuthTicket, &AuthTicket, 0xC );
//
//	this->ProcessEvent ( pFnHandleAuthTicket, &HandleAuthTicket_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.RequestAuthTicket
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayerAuthentication_X::RequestAuthTicket ( )
//{
//	static UFunction* pFnRequestAuthTicket = NULL;
//
//	if ( ! pFnRequestAuthTicket )
//		pFnRequestAuthTicket = (UFunction*) UObject::GObjObjects()->Data[ 54481 ];
//
//	UOnlinePlayerAuthentication_X_execRequestAuthTicket_Parms RequestAuthTicket_Parms;
//
//	this->ProcessEvent ( pFnRequestAuthTicket, &RequestAuthTicket_Parms, NULL );
//
//	return RequestAuthTicket_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.RequiresAuthTicket
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlinePlayerAuthentication_X::RequiresAuthTicket ( )
//{
//	static UFunction* pFnRequiresAuthTicket = NULL;
//
//	if ( ! pFnRequiresAuthTicket )
//		pFnRequiresAuthTicket = (UFunction*) UObject::GObjObjects()->Data[ 54499 ];
//
//	UOnlinePlayerAuthentication_X_execRequiresAuthTicket_Parms RequiresAuthTicket_Parms;
//
//	this->ProcessEvent ( pFnRequiresAuthTicket, &RequiresAuthTicket_Parms, NULL );
//
//	return RequiresAuthTicket_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.ReLogin
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::ReLogin ( )
//{
//	static UFunction* pFnReLogin = NULL;
//
//	if ( ! pFnReLogin )
//		pFnReLogin = (UFunction*) UObject::GObjObjects()->Data[ 50788 ];
//
//	UOnlinePlayerAuthentication_X_execReLogin_Parms ReLogin_Parms;
//
//	this->ProcessEvent ( pFnReLogin, &ReLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.Logout
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::Logout ( )
//{
//	static UFunction* pFnLogout = NULL;
//
//	if ( ! pFnLogout )
//		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 54409 ];
//
//	UOnlinePlayerAuthentication_X_execLogout_Parms Logout_Parms;
//
//	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.SetAuthLoginError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  E                              ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::SetAuthLoginError ( class UError* E )
//{
//	static UFunction* pFnSetAuthLoginError = NULL;
//
//	if ( ! pFnSetAuthLoginError )
//		pFnSetAuthLoginError = (UFunction*) UObject::GObjObjects()->Data[ 54489 ];
//
//	UOnlinePlayerAuthentication_X_execSetAuthLoginError_Parms SetAuthLoginError_Parms;
//	SetAuthLoginError_Parms.E = E;
//
//	this->ProcessEvent ( pFnSetAuthLoginError, &SetAuthLoginError_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.UpdateLoginState
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::UpdateLoginState ( )
//{
//	static UFunction* pFnUpdateLoginState = NULL;
//
//	if ( ! pFnUpdateLoginState )
//		pFnUpdateLoginState = (UFunction*) UObject::GObjObjects()->Data[ 54492 ];
//
//	UOnlinePlayerAuthentication_X_execUpdateLoginState_Parms UpdateLoginState_Parms;
//
//	this->ProcessEvent ( pFnUpdateLoginState, &UpdateLoginState_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.UpdateAuthLoginError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::UpdateAuthLoginError ( )
//{
//	static UFunction* pFnUpdateAuthLoginError = NULL;
//
//	if ( ! pFnUpdateAuthLoginError )
//		pFnUpdateAuthLoginError = (UFunction*) UObject::GObjObjects()->Data[ 54493 ];
//
//	UOnlinePlayerAuthentication_X_execUpdateAuthLoginError_Parms UpdateAuthLoginError_Parms;
//
//	this->ProcessEvent ( pFnUpdateAuthLoginError, &UpdateAuthLoginError_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.HandlePsyNetLoginChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::HandlePsyNetLoginChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnHandlePsyNetLoginChanged = NULL;
//
//	if ( ! pFnHandlePsyNetLoginChanged )
//		pFnHandlePsyNetLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 54520 ];
//
//	UOnlinePlayerAuthentication_X_execHandlePsyNetLoginChanged_Parms HandlePsyNetLoginChanged_Parms;
//	HandlePsyNetLoginChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.HandleLinkStatusChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  B                              ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::HandleLinkStatusChanged ( unsigned long B )
//{
//	static UFunction* pFnHandleLinkStatusChanged = NULL;
//
//	if ( ! pFnHandleLinkStatusChanged )
//		pFnHandleLinkStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 54521 ];
//
//	UOnlinePlayerAuthentication_X_execHandleLinkStatusChanged_Parms HandleLinkStatusChanged_Parms;
//	HandleLinkStatusChanged_Parms.B = B;
//
//	this->ProcessEvent ( pFnHandleLinkStatusChanged, &HandleLinkStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.HandleConnectionChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     C                              ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::HandleConnectionChanged ( class UPsyNetConnection_X* C )
//{
//	static UFunction* pFnHandleConnectionChanged = NULL;
//
//	if ( ! pFnHandleConnectionChanged )
//		pFnHandleConnectionChanged = (UFunction*) UObject::GObjObjects()->Data[ 54523 ];
//
//	UOnlinePlayerAuthentication_X_execHandleConnectionChanged_Parms HandleConnectionChanged_Parms;
//	HandleConnectionChanged_Parms.C = C;
//
//	this->ProcessEvent ( pFnHandleConnectionChanged, &HandleConnectionChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.HandleLoginStatusChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::HandleLoginStatusChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnHandleLoginStatusChanged = NULL;
//
//	if ( ! pFnHandleLoginStatusChanged )
//		pFnHandleLoginStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 54525 ];
//
//	UOnlinePlayerAuthentication_X_execHandleLoginStatusChanged_Parms HandleLoginStatusChanged_Parms;
//	HandleLoginStatusChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandleLoginStatusChanged, &HandleLoginStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.GetBannedMinutesRemaining
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlinePlayerAuthentication_X::GetBannedMinutesRemaining ( )
//{
//	static UFunction* pFnGetBannedMinutesRemaining = NULL;
//
//	if ( ! pFnGetBannedMinutesRemaining )
//		pFnGetBannedMinutesRemaining = (UFunction*) UObject::GObjObjects()->Data[ 54527 ];
//
//	UOnlinePlayerAuthentication_X_execGetBannedMinutesRemaining_Parms GetBannedMinutesRemaining_Parms;
//
//	this->ProcessEvent ( pFnGetBannedMinutesRemaining, &GetBannedMinutesRemaining_Parms, NULL );
//
//	return GetBannedMinutesRemaining_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.ParseBanned
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class URPC_LoginAuthPlayer_X*  RPC                            ( CPF_Parm )
//
//bool UOnlinePlayerAuthentication_X::ParseBanned ( class URPC_LoginAuthPlayer_X* RPC )
//{
//	static UFunction* pFnParseBanned = NULL;
//
//	if ( ! pFnParseBanned )
//		pFnParseBanned = (UFunction*) UObject::GObjObjects()->Data[ 54529 ];
//
//	UOnlinePlayerAuthentication_X_execParseBanned_Parms ParseBanned_Parms;
//	ParseBanned_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnParseBanned, &ParseBanned_Parms, NULL );
//
//	return ParseBanned_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.SetDefaultPlayerAuthState
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::SetDefaultPlayerAuthState ( )
//{
//	static UFunction* pFnSetDefaultPlayerAuthState = NULL;
//
//	if ( ! pFnSetDefaultPlayerAuthState )
//		pFnSetDefaultPlayerAuthState = (UFunction*) UObject::GObjObjects()->Data[ 54531 ];
//
//	UOnlinePlayerAuthentication_X_execSetDefaultPlayerAuthState_Parms SetDefaultPlayerAuthState_Parms;
//
//	this->ProcessEvent ( pFnSetDefaultPlayerAuthState, &SetDefaultPlayerAuthState_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.SetPlayerAuthState
//// [0x00020002] 
//// Parameters infos:
//// unsigned char                  InPlayerAuthState              ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::SetPlayerAuthState ( unsigned char InPlayerAuthState )
//{
//	static UFunction* pFnSetPlayerAuthState = NULL;
//
//	if ( ! pFnSetPlayerAuthState )
//		pFnSetPlayerAuthState = (UFunction*) UObject::GObjObjects()->Data[ 54539 ];
//
//	UOnlinePlayerAuthentication_X_execSetPlayerAuthState_Parms SetPlayerAuthState_Parms;
//	SetPlayerAuthState_Parms.InPlayerAuthState = InPlayerAuthState;
//
//	this->ProcessEvent ( pFnSetPlayerAuthState, &SetPlayerAuthState_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.ReceiveAuthenticatedName
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 ReceivedName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerAuthentication_X::ReceiveAuthenticatedName ( struct FString ReceivedName )
//{
//	static UFunction* pFnReceiveAuthenticatedName = NULL;
//
//	if ( ! pFnReceiveAuthenticatedName )
//		pFnReceiveAuthenticatedName = (UFunction*) UObject::GObjObjects()->Data[ 54540 ];
//
//	UOnlinePlayerAuthentication_X_execReceiveAuthenticatedName_Parms ReceiveAuthenticatedName_Parms;
//	memcpy ( &ReceiveAuthenticatedName_Parms.ReceivedName, &ReceivedName, 0xC );
//
//	this->ProcessEvent ( pFnReceiveAuthenticatedName, &ReceiveAuthenticatedName_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.OnLoginFailRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  RPC                            ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::OnLoginFailRPC ( class URPC_LoginAuthPlayer_X* RPC )
//{
//	static UFunction* pFnOnLoginFailRPC = NULL;
//
//	if ( ! pFnOnLoginFailRPC )
//		pFnOnLoginFailRPC = (UFunction*) UObject::GObjObjects()->Data[ 54543 ];
//
//	UOnlinePlayerAuthentication_X_execOnLoginFailRPC_Parms OnLoginFailRPC_Parms;
//	OnLoginFailRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnOnLoginFailRPC, &OnLoginFailRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.OnLoginSuccessRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  RPC                            ( CPF_Parm )
//// TArray< struct FString >       ArrayInitializer_9322435D472548737446A397C96F7347 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerAuthentication_X::OnLoginSuccessRPC ( class URPC_LoginAuthPlayer_X* RPC, TArray< struct FString >* ArrayInitializer_9322435D472548737446A397C96F7347 )
//{
//	static UFunction* pFnOnLoginSuccessRPC = NULL;
//
//	if ( ! pFnOnLoginSuccessRPC )
//		pFnOnLoginSuccessRPC = (UFunction*) UObject::GObjObjects()->Data[ 54546 ];
//
//	UOnlinePlayerAuthentication_X_execOnLoginSuccessRPC_Parms OnLoginSuccessRPC_Parms;
//	OnLoginSuccessRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnOnLoginSuccessRPC, &OnLoginSuccessRPC_Parms, NULL );
//
//	if ( ArrayInitializer_9322435D472548737446A397C96F7347 )
//		memcpy ( ArrayInitializer_9322435D472548737446A397C96F7347, &OnLoginSuccessRPC_Parms.ArrayInitializer_9322435D472548737446A397C96F7347, 0xC );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.SendLoginRPC
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::SendLoginRPC ( )
//{
//	static UFunction* pFnSendLoginRPC = NULL;
//
//	if ( ! pFnSendLoginRPC )
//		pFnSendLoginRPC = (UFunction*) UObject::GObjObjects()->Data[ 54477 ];
//
//	UOnlinePlayerAuthentication_X_execSendLoginRPC_Parms SendLoginRPC_Parms;
//
//	this->ProcessEvent ( pFnSendLoginRPC, &SendLoginRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.PsyNetLogin
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerAuthentication_X::PsyNetLogin ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnPsyNetLogin = NULL;
//
//	if ( ! pFnPsyNetLogin )
//		pFnPsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 54460 ];
//
//	UOnlinePlayerAuthentication_X_execPsyNetLogin_Parms PsyNetLogin_Parms;
//	memcpy ( &PsyNetLogin_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnPsyNetLogin, &PsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.OnRemoved
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::OnRemoved ( )
//{
//	static UFunction* pFnOnRemoved = NULL;
//
//	if ( ! pFnOnRemoved )
//		pFnOnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 54461 ];
//
//	UOnlinePlayerAuthentication_X_execOnRemoved_Parms OnRemoved_Parms;
//
//	this->ProcessEvent ( pFnOnRemoved, &OnRemoved_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayerAuthentication_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 54454 ];
//
//	UOnlinePlayerAuthentication_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.EventLoginResult
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::EventLoginResult ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnEventLoginResult = NULL;
//
//	if ( ! pFnEventLoginResult )
//		pFnEventLoginResult = (UFunction*) UObject::GObjObjects()->Data[ 54455 ];
//
//	UOnlinePlayerAuthentication_X_execEventLoginResult_Parms EventLoginResult_Parms;
//	EventLoginResult_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnEventLoginResult, &EventLoginResult_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.EventPlayerAuthStateChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::EventPlayerAuthStateChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnEventPlayerAuthStateChanged = NULL;
//
//	if ( ! pFnEventPlayerAuthStateChanged )
//		pFnEventPlayerAuthStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 54573 ];
//
//	UOnlinePlayerAuthentication_X_execEventPlayerAuthStateChanged_Parms EventPlayerAuthStateChanged_Parms;
//	EventPlayerAuthStateChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnEventPlayerAuthStateChanged, &EventPlayerAuthStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.EventAuthenticatedNameChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::EventAuthenticatedNameChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnEventAuthenticatedNameChanged = NULL;
//
//	if ( ! pFnEventAuthenticatedNameChanged )
//		pFnEventAuthenticatedNameChanged = (UFunction*) UObject::GObjObjects()->Data[ 54575 ];
//
//	UOnlinePlayerAuthentication_X_execEventAuthenticatedNameChanged_Parms EventAuthenticatedNameChanged_Parms;
//	EventAuthenticatedNameChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnEventAuthenticatedNameChanged, &EventAuthenticatedNameChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.EventBanned
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::EventBanned ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnEventBanned = NULL;
//
//	if ( ! pFnEventBanned )
//		pFnEventBanned = (UFunction*) UObject::GObjObjects()->Data[ 54577 ];
//
//	UOnlinePlayerAuthentication_X_execEventBanned_Parms EventBanned_Parms;
//	EventBanned_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnEventBanned, &EventBanned_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.EventLoginSuccessRPC
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//// class URPC_LoginAuthPlayer_X*  RPC                            ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::EventLoginSuccessRPC ( class UOnlinePlayerAuthentication_X* Auth, class URPC_LoginAuthPlayer_X* RPC )
//{
//	static UFunction* pFnEventLoginSuccessRPC = NULL;
//
//	if ( ! pFnEventLoginSuccessRPC )
//		pFnEventLoginSuccessRPC = (UFunction*) UObject::GObjObjects()->Data[ 54579 ];
//
//	UOnlinePlayerAuthentication_X_execEventLoginSuccessRPC_Parms EventLoginSuccessRPC_Parms;
//	EventLoginSuccessRPC_Parms.Auth = Auth;
//	EventLoginSuccessRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnEventLoginSuccessRPC, &EventLoginSuccessRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerAuthentication_X.EventLoginChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlinePlayerAuthentication_X::EventLoginChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnEventLoginChanged = NULL;
//
//	if ( ! pFnEventLoginChanged )
//		pFnEventLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 54442 ];
//
//	UOnlinePlayerAuthentication_X_execEventLoginChanged_Parms EventLoginChanged_Parms;
//	EventLoginChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnEventLoginChanged, &EventLoginChanged_Parms, NULL );
//};
//
//// Function ProjectX.SystemInfo_X.GetNetworkInfo
//// [0x00422401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< struct FString >       Types                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void USystemInfo_X::GetNetworkInfo ( TArray< struct FString >* Types )
//{
//	static UFunction* pFnGetNetworkInfo = NULL;
//
//	if ( ! pFnGetNetworkInfo )
//		pFnGetNetworkInfo = (UFunction*) UObject::GObjObjects()->Data[ 58651 ];
//
//	USystemInfo_X_execGetNetworkInfo_Parms GetNetworkInfo_Parms;
//
//	pFnGetNetworkInfo->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetNetworkInfo, &GetNetworkInfo_Parms, NULL );
//
//	pFnGetNetworkInfo->FunctionFlags |= 0x400;
//
//	if ( Types )
//		memcpy ( Types, &GetNetworkInfo_Parms.Types, 0xC );
//};
//
//// Function ProjectX.SystemInfo_X.GetOSInfo
//// [0x00426401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 Type                           ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FString                 Bit                            ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void USystemInfo_X::GetOSInfo ( struct FString* Type, struct FString* Bit )
//{
//	static UFunction* pFnGetOSInfo = NULL;
//
//	if ( ! pFnGetOSInfo )
//		pFnGetOSInfo = (UFunction*) UObject::GObjObjects()->Data[ 58648 ];
//
//	USystemInfo_X_execGetOSInfo_Parms GetOSInfo_Parms;
//
//	pFnGetOSInfo->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetOSInfo, &GetOSInfo_Parms, NULL );
//
//	pFnGetOSInfo->FunctionFlags |= 0x400;
//
//	if ( Type )
//		memcpy ( Type, &GetOSInfo_Parms.Type, 0xC );
//
//	if ( Bit )
//		memcpy ( Bit, &GetOSInfo_Parms.Bit, 0xC );
//};
//
//// Function ProjectX.SystemInfo_X.GetVideoCardInfo
//// [0x00426401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 CardName                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// int                            RAM                            ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//void USystemInfo_X::GetVideoCardInfo ( struct FString* CardName, int* RAM )
//{
//	static UFunction* pFnGetVideoCardInfo = NULL;
//
//	if ( ! pFnGetVideoCardInfo )
//		pFnGetVideoCardInfo = (UFunction*) UObject::GObjObjects()->Data[ 58645 ];
//
//	USystemInfo_X_execGetVideoCardInfo_Parms GetVideoCardInfo_Parms;
//
//	pFnGetVideoCardInfo->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetVideoCardInfo, &GetVideoCardInfo_Parms, NULL );
//
//	pFnGetVideoCardInfo->FunctionFlags |= 0x400;
//
//	if ( CardName )
//		memcpy ( CardName, &GetVideoCardInfo_Parms.CardName, 0xC );
//
//	if ( RAM )
//		*RAM = GetVideoCardInfo_Parms.RAM;
//};
//
//// Function ProjectX.SystemInfo_X.GetMemoryInfo
//// [0x00426401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          Physical                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//// float                          PageFile                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//// float                          Virtual                        ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//// int                            Used                           ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//// int                            Allocated                      ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//void USystemInfo_X::GetMemoryInfo ( float* Physical, float* PageFile, float* Virtual, int* Used, int* Allocated )
//{
//	static UFunction* pFnGetMemoryInfo = NULL;
//
//	if ( ! pFnGetMemoryInfo )
//		pFnGetMemoryInfo = (UFunction*) UObject::GObjObjects()->Data[ 58639 ];
//
//	USystemInfo_X_execGetMemoryInfo_Parms GetMemoryInfo_Parms;
//
//	pFnGetMemoryInfo->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetMemoryInfo, &GetMemoryInfo_Parms, NULL );
//
//	pFnGetMemoryInfo->FunctionFlags |= 0x400;
//
//	if ( Physical )
//		*Physical = GetMemoryInfo_Parms.Physical;
//
//	if ( PageFile )
//		*PageFile = GetMemoryInfo_Parms.PageFile;
//
//	if ( Virtual )
//		*Virtual = GetMemoryInfo_Parms.Virtual;
//
//	if ( Used )
//		*Used = GetMemoryInfo_Parms.Used;
//
//	if ( Allocated )
//		*Allocated = GetMemoryInfo_Parms.Allocated;
//};
//
//// Function ProjectX.SystemInfo_X.GetCPUInfo
//// [0x00426401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 Type                           ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FString                 Description                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FString                 Cores                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FString                 Threads                        ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void USystemInfo_X::GetCPUInfo ( struct FString* Type, struct FString* Description, struct FString* Cores, struct FString* Threads )
//{
//	static UFunction* pFnGetCPUInfo = NULL;
//
//	if ( ! pFnGetCPUInfo )
//		pFnGetCPUInfo = (UFunction*) UObject::GObjObjects()->Data[ 58633 ];
//
//	USystemInfo_X_execGetCPUInfo_Parms GetCPUInfo_Parms;
//
//	pFnGetCPUInfo->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetCPUInfo, &GetCPUInfo_Parms, NULL );
//
//	pFnGetCPUInfo->FunctionFlags |= 0x400;
//
//	if ( Type )
//		memcpy ( Type, &GetCPUInfo_Parms.Type, 0xC );
//
//	if ( Description )
//		memcpy ( Description, &GetCPUInfo_Parms.Description, 0xC );
//
//	if ( Cores )
//		memcpy ( Cores, &GetCPUInfo_Parms.Cores, 0xC );
//
//	if ( Threads )
//		memcpy ( Threads, &GetCPUInfo_Parms.Threads, 0xC );
//};
//
//// Function ProjectX.SystemInfo_X.IsSupported
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool USystemInfo_X::IsSupported ( )
//{
//	static UFunction* pFnIsSupported = NULL;
//
//	if ( ! pFnIsSupported )
//		pFnIsSupported = (UFunction*) UObject::GObjObjects()->Data[ 58638 ];
//
//	USystemInfo_X_execIsSupported_Parms IsSupported_Parms;
//
//	pFnIsSupported->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsSupported, &IsSupported_Parms, NULL );
//
//	pFnIsSupported->FunctionFlags |= 0x400;
//
//	return IsSupported_Parms.ReturnValue;
//};
//
//// Function ProjectX.TickActorComponent_X.SetTickable
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// unsigned long                  bWantsTick                     ( CPF_Parm )
//
//void UTickActorComponent_X::SetTickable ( unsigned long bWantsTick )
//{
//	static UFunction* pFnSetTickable = NULL;
//
//	if ( ! pFnSetTickable )
//		pFnSetTickable = (UFunction*) UObject::GObjObjects()->Data[ 55720 ];
//
//	UTickActorComponent_X_execSetTickable_Parms SetTickable_Parms;
//	SetTickable_Parms.bWantsTick = bWantsTick;
//
//	pFnSetTickable->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTickable, &SetTickable_Parms, NULL );
//
//	pFnSetTickable->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickActorComponent_X.ClearAllTimers
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickActorComponent_X::ClearAllTimers ( class UObject* inObj )
//{
//	static UFunction* pFnClearAllTimers = NULL;
//
//	if ( ! pFnClearAllTimers )
//		pFnClearAllTimers = (UFunction*) UObject::GObjObjects()->Data[ 55718 ];
//
//	UTickActorComponent_X_execClearAllTimers_Parms ClearAllTimers_Parms;
//	ClearAllTimers_Parms.inObj = inObj;
//
//	pFnClearAllTimers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearAllTimers, &ClearAllTimers_Parms, NULL );
//
//	pFnClearAllTimers->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickActorComponent_X.ClearTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickActorComponent_X::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnClearTimer = NULL;
//
//	if ( ! pFnClearTimer )
//		pFnClearTimer = (UFunction*) UObject::GObjObjects()->Data[ 55715 ];
//
//	UTickActorComponent_X_execClearTimer_Parms ClearTimer_Parms;
//	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	ClearTimer_Parms.inObj = inObj;
//
//	pFnClearTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
//
//	pFnClearTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickActorComponent_X.SetTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          InRate                         ( CPF_Parm )
//// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTickActorComponent_X::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnSetTimer = NULL;
//
//	if ( ! pFnSetTimer )
//		pFnSetTimer = (UFunction*) UObject::GObjObjects()->Data[ 55710 ];
//
//	UTickActorComponent_X_execSetTimer_Parms SetTimer_Parms;
//	SetTimer_Parms.InRate = InRate;
//	SetTimer_Parms.inbLoop = inbLoop;
//	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	SetTimer_Parms.inObj = inObj;
//
//	pFnSetTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
//
//	pFnSetTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickActorComponent_X.EventTick
//// [0x00120000] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UTickActorComponent_X::EventTick ( float DeltaTime )
//{
//	static UFunction* pFnEventTick = NULL;
//
//	if ( ! pFnEventTick )
//		pFnEventTick = (UFunction*) UObject::GObjObjects()->Data[ 55707 ];
//
//	UTickActorComponent_X_execEventTick_Parms EventTick_Parms;
//	EventTick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnEventTick, &EventTick_Parms, NULL );
//};
//
//// Function ProjectX.Timers_X.IsDelegateActive
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UTimers_X::IsDelegateActive ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnIsDelegateActive = NULL;
//
//	if ( ! pFnIsDelegateActive )
//		pFnIsDelegateActive = (UFunction*) UObject::GObjObjects()->Data[ 56316 ];
//
//	UTimers_X_execIsDelegateActive_Parms IsDelegateActive_Parms;
//	memcpy ( &IsDelegateActive_Parms.Callback, &Callback, 0x10 );
//
//	pFnIsDelegateActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsDelegateActive, &IsDelegateActive_Parms, NULL );
//
//	pFnIsDelegateActive->FunctionFlags |= 0x400;
//
//	return IsDelegateActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.Timers_X.ClearDelegate
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UTimers_X::ClearDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearDelegate = NULL;
//
//	if ( ! pFnClearDelegate )
//		pFnClearDelegate = (UFunction*) UObject::GObjObjects()->Data[ 56317 ];
//
//	UTimers_X_execClearDelegate_Parms ClearDelegate_Parms;
//	memcpy ( &ClearDelegate_Parms.Callback, &Callback, 0x10 );
//
//	pFnClearDelegate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearDelegate, &ClearDelegate_Parms, NULL );
//
//	pFnClearDelegate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Timers_X.SetDelegate
//// [0x00026401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//// float                          Rate                           ( CPF_Parm )
//// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTimers_X::SetDelegate ( struct FScriptDelegate Callback, float Rate, unsigned long bLoop )
//{
//	static UFunction* pFnSetDelegate = NULL;
//
//	if ( ! pFnSetDelegate )
//		pFnSetDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48629 ];
//
//	UTimers_X_execSetDelegate_Parms SetDelegate_Parms;
//	memcpy ( &SetDelegate_Parms.Callback, &Callback, 0x10 );
//	SetDelegate_Parms.Rate = Rate;
//	SetDelegate_Parms.bLoop = bLoop;
//
//	pFnSetDelegate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetDelegate, &SetDelegate_Parms, NULL );
//
//	pFnSetDelegate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Timers_X.GetRemainingTime
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Obj                            ( CPF_Parm )
//// struct FName                   FuncName                       ( CPF_Parm )
//
//float UTimers_X::GetRemainingTime ( class UObject* Obj, struct FName FuncName )
//{
//	static UFunction* pFnGetRemainingTime = NULL;
//
//	if ( ! pFnGetRemainingTime )
//		pFnGetRemainingTime = (UFunction*) UObject::GObjObjects()->Data[ 56321 ];
//
//	UTimers_X_execGetRemainingTime_Parms GetRemainingTime_Parms;
//	GetRemainingTime_Parms.Obj = Obj;
//	memcpy ( &GetRemainingTime_Parms.FuncName, &FuncName, 0x8 );
//
//	this->ProcessEvent ( pFnGetRemainingTime, &GetRemainingTime_Parms, NULL );
//
//	return GetRemainingTime_Parms.ReturnValue;
//};
//
//// Function ProjectX.Timers_X.GetRate
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Obj                            ( CPF_Parm )
//// struct FName                   FuncName                       ( CPF_Parm )
//
//float UTimers_X::GetRate ( class UObject* Obj, struct FName FuncName )
//{
//	static UFunction* pFnGetRate = NULL;
//
//	if ( ! pFnGetRate )
//		pFnGetRate = (UFunction*) UObject::GObjObjects()->Data[ 56325 ];
//
//	UTimers_X_execGetRate_Parms GetRate_Parms;
//	GetRate_Parms.Obj = Obj;
//	memcpy ( &GetRate_Parms.FuncName, &FuncName, 0x8 );
//
//	pFnGetRate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetRate, &GetRate_Parms, NULL );
//
//	pFnGetRate->FunctionFlags |= 0x400;
//
//	return GetRate_Parms.ReturnValue;
//};
//
//// Function ProjectX.Timers_X.GetCount
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Obj                            ( CPF_Parm )
//// struct FName                   FuncName                       ( CPF_Parm )
//
//float UTimers_X::GetCount ( class UObject* Obj, struct FName FuncName )
//{
//	static UFunction* pFnGetCount = NULL;
//
//	if ( ! pFnGetCount )
//		pFnGetCount = (UFunction*) UObject::GObjObjects()->Data[ 56330 ];
//
//	UTimers_X_execGetCount_Parms GetCount_Parms;
//	GetCount_Parms.Obj = Obj;
//	memcpy ( &GetCount_Parms.FuncName, &FuncName, 0x8 );
//
//	pFnGetCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetCount, &GetCount_Parms, NULL );
//
//	pFnGetCount->FunctionFlags |= 0x400;
//
//	return GetCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.Timers_X.ClearAll
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Obj                            ( CPF_Parm )
//
//void UTimers_X::ClearAll ( class UObject* Obj )
//{
//	static UFunction* pFnClearAll = NULL;
//
//	if ( ! pFnClearAll )
//		pFnClearAll = (UFunction*) UObject::GObjObjects()->Data[ 56314 ];
//
//	UTimers_X_execClearAll_Parms ClearAll_Parms;
//	ClearAll_Parms.Obj = Obj;
//
//	pFnClearAll->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearAll, &ClearAll_Parms, NULL );
//
//	pFnClearAll->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Timers_X.Clear
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Obj                            ( CPF_Parm )
//// struct FName                   FuncName                       ( CPF_Parm )
//
//void UTimers_X::Clear ( class UObject* Obj, struct FName FuncName )
//{
//	static UFunction* pFnClear = NULL;
//
//	if ( ! pFnClear )
//		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 51274 ];
//
//	UTimers_X_execClear_Parms Clear_Parms;
//	Clear_Parms.Obj = Obj;
//	memcpy ( &Clear_Parms.FuncName, &FuncName, 0x8 );
//
//	pFnClear->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
//
//	pFnClear->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.Timers_X.IsActive
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Obj                            ( CPF_Parm )
//// struct FName                   FuncName                       ( CPF_Parm )
//
//bool UTimers_X::IsActive ( class UObject* Obj, struct FName FuncName )
//{
//	static UFunction* pFnIsActive = NULL;
//
//	if ( ! pFnIsActive )
//		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 56308 ];
//
//	UTimers_X_execIsActive_Parms IsActive_Parms;
//	IsActive_Parms.Obj = Obj;
//	memcpy ( &IsActive_Parms.FuncName, &FuncName, 0x8 );
//
//	pFnIsActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );
//
//	pFnIsActive->FunctionFlags |= 0x400;
//
//	return IsActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.Timers_X.Set
//// [0x00026401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 Obj                            ( CPF_Parm )
//// struct FName                   FuncName                       ( CPF_Parm )
//// float                          Rate                           ( CPF_Parm )
//// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTimers_X::Set ( class UObject* Obj, struct FName FuncName, float Rate, unsigned long bLoop )
//{
//	static UFunction* pFnSet = NULL;
//
//	if ( ! pFnSet )
//		pFnSet = (UFunction*) UObject::GObjObjects()->Data[ 51277 ];
//
//	UTimers_X_execSet_Parms Set_Parms;
//	Set_Parms.Obj = Obj;
//	memcpy ( &Set_Parms.FuncName, &FuncName, 0x8 );
//	Set_Parms.Rate = Rate;
//	Set_Parms.bLoop = bLoop;
//
//	pFnSet->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSet, &Set_Parms, NULL );
//
//	pFnSet->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.IsDelegateActive
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UTimersComponent_X::IsDelegateActive ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnIsDelegateActive = NULL;
//
//	if ( ! pFnIsDelegateActive )
//		pFnIsDelegateActive = (UFunction*) UObject::GObjObjects()->Data[ 54963 ];
//
//	UTimersComponent_X_execIsDelegateActive_Parms IsDelegateActive_Parms;
//	memcpy ( &IsDelegateActive_Parms.Callback, &Callback, 0x10 );
//
//	pFnIsDelegateActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsDelegateActive, &IsDelegateActive_Parms, NULL );
//
//	pFnIsDelegateActive->FunctionFlags |= 0x400;
//
//	return IsDelegateActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.TimersComponent_X.ClearDelegate
//// [0x00022401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UTimersComponent_X::ClearDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearDelegate = NULL;
//
//	if ( ! pFnClearDelegate )
//		pFnClearDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54964 ];
//
//	UTimersComponent_X_execClearDelegate_Parms ClearDelegate_Parms;
//	memcpy ( &ClearDelegate_Parms.Callback, &Callback, 0x10 );
//
//	pFnClearDelegate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearDelegate, &ClearDelegate_Parms, NULL );
//
//	pFnClearDelegate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.SetDelegate
//// [0x00026401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//// float                          Rate                           ( CPF_Parm )
//// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTimersComponent_X::SetDelegate ( struct FScriptDelegate Callback, float Rate, unsigned long bLoop )
//{
//	static UFunction* pFnSetDelegate = NULL;
//
//	if ( ! pFnSetDelegate )
//		pFnSetDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54967 ];
//
//	UTimersComponent_X_execSetDelegate_Parms SetDelegate_Parms;
//	memcpy ( &SetDelegate_Parms.Callback, &Callback, 0x10 );
//	SetDelegate_Parms.Rate = Rate;
//	SetDelegate_Parms.bLoop = bLoop;
//
//	pFnSetDelegate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetDelegate, &SetDelegate_Parms, NULL );
//
//	pFnSetDelegate->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.GetRemainingTimeForTimer
//// [0x00024103] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//float UTimersComponent_X::GetRemainingTimeForTimer ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnGetRemainingTimeForTimer = NULL;
//
//	if ( ! pFnGetRemainingTimeForTimer )
//		pFnGetRemainingTimeForTimer = (UFunction*) UObject::GObjObjects()->Data[ 54969 ];
//
//	UTimersComponent_X_execGetRemainingTimeForTimer_Parms GetRemainingTimeForTimer_Parms;
//	memcpy ( &GetRemainingTimeForTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	GetRemainingTimeForTimer_Parms.inObj = inObj;
//
//	this->ProcessEvent ( pFnGetRemainingTimeForTimer, &GetRemainingTimeForTimer_Parms, NULL );
//
//	return GetRemainingTimeForTimer_Parms.ReturnValue;
//};
//
//// Function ProjectX.TimersComponent_X.GetTimerRate
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//float UTimersComponent_X::GetTimerRate ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnGetTimerRate = NULL;
//
//	if ( ! pFnGetTimerRate )
//		pFnGetTimerRate = (UFunction*) UObject::GObjObjects()->Data[ 54973 ];
//
//	UTimersComponent_X_execGetTimerRate_Parms GetTimerRate_Parms;
//	memcpy ( &GetTimerRate_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	GetTimerRate_Parms.inObj = inObj;
//
//	pFnGetTimerRate->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetTimerRate, &GetTimerRate_Parms, NULL );
//
//	pFnGetTimerRate->FunctionFlags |= 0x400;
//
//	return GetTimerRate_Parms.ReturnValue;
//};
//
//// Function ProjectX.TimersComponent_X.GetTimerCount
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//float UTimersComponent_X::GetTimerCount ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnGetTimerCount = NULL;
//
//	if ( ! pFnGetTimerCount )
//		pFnGetTimerCount = (UFunction*) UObject::GObjObjects()->Data[ 54978 ];
//
//	UTimersComponent_X_execGetTimerCount_Parms GetTimerCount_Parms;
//	memcpy ( &GetTimerCount_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	GetTimerCount_Parms.inObj = inObj;
//
//	pFnGetTimerCount->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetTimerCount, &GetTimerCount_Parms, NULL );
//
//	pFnGetTimerCount->FunctionFlags |= 0x400;
//
//	return GetTimerCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.TimersComponent_X.NotifyStateChanged
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   OldStateName                   ( CPF_Parm )
//
//void UTimersComponent_X::NotifyStateChanged ( struct FName OldStateName )
//{
//	static UFunction* pFnNotifyStateChanged = NULL;
//
//	if ( ! pFnNotifyStateChanged )
//		pFnNotifyStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 54961 ];
//
//	UTimersComponent_X_execNotifyStateChanged_Parms NotifyStateChanged_Parms;
//	memcpy ( &NotifyStateChanged_Parms.OldStateName, &OldStateName, 0x8 );
//
//	pFnNotifyStateChanged->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnNotifyStateChanged, &NotifyStateChanged_Parms, NULL );
//
//	pFnNotifyStateChanged->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.UpdateTimers
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          DeltaSeconds                   ( CPF_Parm )
//
//void UTimersComponent_X::UpdateTimers ( float DeltaSeconds )
//{
//	static UFunction* pFnUpdateTimers = NULL;
//
//	if ( ! pFnUpdateTimers )
//		pFnUpdateTimers = (UFunction*) UObject::GObjObjects()->Data[ 54959 ];
//
//	UTimersComponent_X_execUpdateTimers_Parms UpdateTimers_Parms;
//	UpdateTimers_Parms.DeltaSeconds = DeltaSeconds;
//
//	pFnUpdateTimers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnUpdateTimers, &UpdateTimers_Parms, NULL );
//
//	pFnUpdateTimers->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.ClearAllTimers
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTimersComponent_X::ClearAllTimers ( class UObject* inObj )
//{
//	static UFunction* pFnClearAllTimers = NULL;
//
//	if ( ! pFnClearAllTimers )
//		pFnClearAllTimers = (UFunction*) UObject::GObjObjects()->Data[ 54957 ];
//
//	UTimersComponent_X_execClearAllTimers_Parms ClearAllTimers_Parms;
//	ClearAllTimers_Parms.inObj = inObj;
//
//	pFnClearAllTimers->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearAllTimers, &ClearAllTimers_Parms, NULL );
//
//	pFnClearAllTimers->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.ClearTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTimersComponent_X::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnClearTimer = NULL;
//
//	if ( ! pFnClearTimer )
//		pFnClearTimer = (UFunction*) UObject::GObjObjects()->Data[ 54954 ];
//
//	UTimersComponent_X_execClearTimer_Parms ClearTimer_Parms;
//	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	ClearTimer_Parms.inObj = inObj;
//
//	pFnClearTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
//
//	pFnClearTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.IsTimerActive
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//bool UTimersComponent_X::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnIsTimerActive = NULL;
//
//	if ( ! pFnIsTimerActive )
//		pFnIsTimerActive = (UFunction*) UObject::GObjObjects()->Data[ 54950 ];
//
//	UTimersComponent_X_execIsTimerActive_Parms IsTimerActive_Parms;
//	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	IsTimerActive_Parms.inObj = inObj;
//
//	pFnIsTimerActive->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );
//
//	pFnIsTimerActive->FunctionFlags |= 0x400;
//
//	return IsTimerActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.TimersComponent_X.SetStateTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          InRate                         ( CPF_Parm )
//// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//
//void UTimersComponent_X::SetStateTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc )
//{
//	static UFunction* pFnSetStateTimer = NULL;
//
//	if ( ! pFnSetStateTimer )
//		pFnSetStateTimer = (UFunction*) UObject::GObjObjects()->Data[ 54946 ];
//
//	UTimersComponent_X_execSetStateTimer_Parms SetStateTimer_Parms;
//	SetStateTimer_Parms.InRate = InRate;
//	SetStateTimer_Parms.inbLoop = inbLoop;
//	memcpy ( &SetStateTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//
//	pFnSetStateTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetStateTimer, &SetStateTimer_Parms, NULL );
//
//	pFnSetStateTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TimersComponent_X.SetTimer
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          InRate                         ( CPF_Parm )
//// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
//// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
//// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )
//
//void UTimersComponent_X::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
//{
//	static UFunction* pFnSetTimer = NULL;
//
//	if ( ! pFnSetTimer )
//		pFnSetTimer = (UFunction*) UObject::GObjObjects()->Data[ 54941 ];
//
//	UTimersComponent_X_execSetTimer_Parms SetTimer_Parms;
//	SetTimer_Parms.InRate = InRate;
//	SetTimer_Parms.inbLoop = inbLoop;
//	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
//	SetTimer_Parms.inObj = inObj;
//
//	pFnSetTimer->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
//
//	pFnSetTimer->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickComponent_X.SetTickable
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// unsigned long                  bWantsTick                     ( CPF_Parm )
//
//void UTickComponent_X::SetTickable ( unsigned long bWantsTick )
//{
//	static UFunction* pFnSetTickable = NULL;
//
//	if ( ! pFnSetTickable )
//		pFnSetTickable = (UFunction*) UObject::GObjObjects()->Data[ 54992 ];
//
//	UTickComponent_X_execSetTickable_Parms SetTickable_Parms;
//	SetTickable_Parms.bWantsTick = bWantsTick;
//
//	pFnSetTickable->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetTickable, &SetTickable_Parms, NULL );
//
//	pFnSetTickable->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TickComponent_X.TickDelegate
//// [0x00120000] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UTickComponent_X::TickDelegate ( float DeltaTime )
//{
//	static UFunction* pFnTickDelegate = NULL;
//
//	if ( ! pFnTickDelegate )
//		pFnTickDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54987 ];
//
//	UTickComponent_X_execTickDelegate_Parms TickDelegate_Parms;
//	TickDelegate_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTickDelegate, &TickDelegate_Parms, NULL );
//};
//
//// Function ProjectX.WebRequest_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UWebRequest_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 55776 ];
//
//	UWebRequest_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.WebRequest_X.SetError
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//// class UError*                  InError                        ( CPF_Parm )
//
//void UWebRequest_X::SetError ( class UError* InError )
//{
//	static UFunction* pFnSetError = NULL;
//
//	if ( ! pFnSetError )
//		pFnSetError = (UFunction*) UObject::GObjObjects()->Data[ 55774 ];
//
//	UWebRequest_X_execSetError_Parms SetError_Parms;
//	SetError_Parms.InError = InError;
//
//	pFnSetError->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetError, &SetError_Parms, NULL );
//
//	pFnSetError->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.WebRequest_X.HasInternetConnection
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UWebRequest_X::eventHasInternetConnection ( )
//{
//	static UFunction* pFnHasInternetConnection = NULL;
//
//	if ( ! pFnHasInternetConnection )
//		pFnHasInternetConnection = (UFunction*) UObject::GObjObjects()->Data[ 55772 ];
//
//	UWebRequest_X_eventHasInternetConnection_Parms HasInternetConnection_Parms;
//
//	this->ProcessEvent ( pFnHasInternetConnection, &HasInternetConnection_Parms, NULL );
//
//	return HasInternetConnection_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.HandleHttpRequestComplete
//// [0x00040401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UHttpRequestInterface*   OriginalRequest                ( CPF_Parm )
//// class UHttpResponseInterface*  Response                       ( CPF_Parm )
//// unsigned long                  bDidSucceed                    ( CPF_Parm )
//
//void UWebRequest_X::HandleHttpRequestComplete ( class UHttpRequestInterface* OriginalRequest, class UHttpResponseInterface* Response, unsigned long bDidSucceed )
//{
//	static UFunction* pFnHandleHttpRequestComplete = NULL;
//
//	if ( ! pFnHandleHttpRequestComplete )
//		pFnHandleHttpRequestComplete = (UFunction*) UObject::GObjObjects()->Data[ 55768 ];
//
//	UWebRequest_X_execHandleHttpRequestComplete_Parms HandleHttpRequestComplete_Parms;
//	HandleHttpRequestComplete_Parms.OriginalRequest = OriginalRequest;
//	HandleHttpRequestComplete_Parms.Response = Response;
//	HandleHttpRequestComplete_Parms.bDidSucceed = bDidSucceed;
//
//	pFnHandleHttpRequestComplete->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHandleHttpRequestComplete, &HandleHttpRequestComplete_Parms, NULL );
//
//	pFnHandleHttpRequestComplete->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.WebRequest_X.ConstructHttpRequest
//// [0x00040803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//
//void UWebRequest_X::eventConstructHttpRequest ( )
//{
//	static UFunction* pFnConstructHttpRequest = NULL;
//
//	if ( ! pFnConstructHttpRequest )
//		pFnConstructHttpRequest = (UFunction*) UObject::GObjObjects()->Data[ 55766 ];
//
//	UWebRequest_X_eventConstructHttpRequest_Parms ConstructHttpRequest_Parms;
//
//	this->ProcessEvent ( pFnConstructHttpRequest, &ConstructHttpRequest_Parms, NULL );
//};
//
//// Function ProjectX.WebRequest_X.GetResponseHeader
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UWebRequest_X::GetResponseHeader ( struct FString Key )
//{
//	static UFunction* pFnGetResponseHeader = NULL;
//
//	if ( ! pFnGetResponseHeader )
//		pFnGetResponseHeader = (UFunction*) UObject::GObjObjects()->Data[ 55767 ];
//
//	UWebRequest_X_execGetResponseHeader_Parms GetResponseHeader_Parms;
//	memcpy ( &GetResponseHeader_Parms.Key, &Key, 0xC );
//
//	pFnGetResponseHeader->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetResponseHeader, &GetResponseHeader_Parms, NULL );
//
//	pFnGetResponseHeader->FunctionFlags |= 0x400;
//
//	return GetResponseHeader_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.GetResponseString
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UWebRequest_X::GetResponseString ( )
//{
//	static UFunction* pFnGetResponseString = NULL;
//
//	if ( ! pFnGetResponseString )
//		pFnGetResponseString = (UFunction*) UObject::GObjObjects()->Data[ 50895 ];
//
//	UWebRequest_X_execGetResponseString_Parms GetResponseString_Parms;
//
//	pFnGetResponseString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetResponseString, &GetResponseString_Parms, NULL );
//
//	pFnGetResponseString->FunctionFlags |= 0x400;
//
//	return GetResponseString_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.HasNewData
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UWebRequest_X::HasNewData ( )
//{
//	static UFunction* pFnHasNewData = NULL;
//
//	if ( ! pFnHasNewData )
//		pFnHasNewData = (UFunction*) UObject::GObjObjects()->Data[ 55780 ];
//
//	UWebRequest_X_execHasNewData_Parms HasNewData_Parms;
//
//	pFnHasNewData->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnHasNewData, &HasNewData_Parms, NULL );
//
//	pFnHasNewData->FunctionFlags |= 0x400;
//
//	return HasNewData_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.IsSuccess
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UWebRequest_X::IsSuccess ( )
//{
//	static UFunction* pFnIsSuccess = NULL;
//
//	if ( ! pFnIsSuccess )
//		pFnIsSuccess = (UFunction*) UObject::GObjObjects()->Data[ 50893 ];
//
//	UWebRequest_X_execIsSuccess_Parms IsSuccess_Parms;
//
//	pFnIsSuccess->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsSuccess, &IsSuccess_Parms, NULL );
//
//	pFnIsSuccess->FunctionFlags |= 0x400;
//
//	return IsSuccess_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.IsError
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UWebRequest_X::IsError ( )
//{
//	static UFunction* pFnIsError = NULL;
//
//	if ( ! pFnIsError )
//		pFnIsError = (UFunction*) UObject::GObjObjects()->Data[ 53116 ];
//
//	UWebRequest_X_execIsError_Parms IsError_Parms;
//
//	pFnIsError->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsError, &IsError_Parms, NULL );
//
//	pFnIsError->FunctionFlags |= 0x400;
//
//	return IsError_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.IsComplete
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UWebRequest_X::IsComplete ( )
//{
//	static UFunction* pFnIsComplete = NULL;
//
//	if ( ! pFnIsComplete )
//		pFnIsComplete = (UFunction*) UObject::GObjObjects()->Data[ 55764 ];
//
//	UWebRequest_X_execIsComplete_Parms IsComplete_Parms;
//
//	pFnIsComplete->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsComplete, &IsComplete_Parms, NULL );
//
//	pFnIsComplete->FunctionFlags |= 0x400;
//
//	return IsComplete_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.IsSent
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UWebRequest_X::IsSent ( )
//{
//	static UFunction* pFnIsSent = NULL;
//
//	if ( ! pFnIsSent )
//		pFnIsSent = (UFunction*) UObject::GObjObjects()->Data[ 55762 ];
//
//	UWebRequest_X_execIsSent_Parms IsSent_Parms;
//
//	pFnIsSent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnIsSent, &IsSent_Parms, NULL );
//
//	pFnIsSent->FunctionFlags |= 0x400;
//
//	return IsSent_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.GetHttpRequest
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UHttpRequestInterface*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UHttpRequestInterface* UWebRequest_X::GetHttpRequest ( )
//{
//	static UFunction* pFnGetHttpRequest = NULL;
//
//	if ( ! pFnGetHttpRequest )
//		pFnGetHttpRequest = (UFunction*) UObject::GObjObjects()->Data[ 55760 ];
//
//	UWebRequest_X_execGetHttpRequest_Parms GetHttpRequest_Parms;
//
//	pFnGetHttpRequest->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetHttpRequest, &GetHttpRequest_Parms, NULL );
//
//	pFnGetHttpRequest->FunctionFlags |= 0x400;
//
//	return GetHttpRequest_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.Send
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InURL                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         OnCompleteCallback             ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UWebRequest_X* UWebRequest_X::Send ( struct FString InURL, struct FScriptDelegate OnCompleteCallback )
//{
//	static UFunction* pFnSend = NULL;
//
//	if ( ! pFnSend )
//		pFnSend = (UFunction*) UObject::GObjObjects()->Data[ 50889 ];
//
//	UWebRequest_X_execSend_Parms Send_Parms;
//	memcpy ( &Send_Parms.InURL, &InURL, 0xC );
//	memcpy ( &Send_Parms.OnCompleteCallback, &OnCompleteCallback, 0x10 );
//
//	pFnSend->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSend, &Send_Parms, NULL );
//
//	pFnSend->FunctionFlags |= 0x400;
//
//	return Send_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.PrepareRequest
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 InURL                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UWebRequest_X::PrepareRequest ( struct FString InURL )
//{
//	static UFunction* pFnPrepareRequest = NULL;
//
//	if ( ! pFnPrepareRequest )
//		pFnPrepareRequest = (UFunction*) UObject::GObjObjects()->Data[ 55759 ];
//
//	UWebRequest_X_execPrepareRequest_Parms PrepareRequest_Parms;
//	memcpy ( &PrepareRequest_Parms.InURL, &InURL, 0xC );
//
//	pFnPrepareRequest->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnPrepareRequest, &PrepareRequest_Parms, NULL );
//
//	pFnPrepareRequest->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.WebRequest_X.SetContentFromString
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ContentString                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UWebRequest_X::SetContentFromString ( struct FString ContentString )
//{
//	static UFunction* pFnSetContentFromString = NULL;
//
//	if ( ! pFnSetContentFromString )
//		pFnSetContentFromString = (UFunction*) UObject::GObjObjects()->Data[ 55782 ];
//
//	UWebRequest_X_execSetContentFromString_Parms SetContentFromString_Parms;
//	memcpy ( &SetContentFromString_Parms.ContentString, &ContentString, 0xC );
//
//	pFnSetContentFromString->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetContentFromString, &SetContentFromString_Parms, NULL );
//
//	pFnSetContentFromString->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.WebRequest_X.SetContent
//// [0x00420401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// TArray< unsigned char >        ContentBytes                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UWebRequest_X::SetContent ( TArray< unsigned char >* ContentBytes )
//{
//	static UFunction* pFnSetContent = NULL;
//
//	if ( ! pFnSetContent )
//		pFnSetContent = (UFunction*) UObject::GObjObjects()->Data[ 55784 ];
//
//	UWebRequest_X_execSetContent_Parms SetContent_Parms;
//
//	pFnSetContent->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetContent, &SetContent_Parms, NULL );
//
//	pFnSetContent->FunctionFlags |= 0x400;
//
//	if ( ContentBytes )
//		memcpy ( ContentBytes, &SetContent_Parms.ContentBytes, 0xC );
//};
//
//// Function ProjectX.WebRequest_X.GetETag
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UWebRequest_X::GetETag ( )
//{
//	static UFunction* pFnGetETag = NULL;
//
//	if ( ! pFnGetETag )
//		pFnGetETag = (UFunction*) UObject::GObjObjects()->Data[ 55786 ];
//
//	UWebRequest_X_execGetETag_Parms GetETag_Parms;
//
//	pFnGetETag->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetETag, &GetETag_Parms, NULL );
//
//	pFnGetETag->FunctionFlags |= 0x400;
//
//	return GetETag_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.SetETag
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ETag                           ( CPF_Parm | CPF_NeedCtorLink )
//
//void UWebRequest_X::SetETag ( struct FString ETag )
//{
//	static UFunction* pFnSetETag = NULL;
//
//	if ( ! pFnSetETag )
//		pFnSetETag = (UFunction*) UObject::GObjObjects()->Data[ 55789 ];
//
//	UWebRequest_X_execSetETag_Parms SetETag_Parms;
//	memcpy ( &SetETag_Parms.ETag, &ETag, 0xC );
//
//	pFnSetETag->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetETag, &SetETag_Parms, NULL );
//
//	pFnSetETag->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.WebRequest_X.SetHeader
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//
//class UWebRequest_X* UWebRequest_X::SetHeader ( struct FString Key, struct FString Value )
//{
//	static UFunction* pFnSetHeader = NULL;
//
//	if ( ! pFnSetHeader )
//		pFnSetHeader = (UFunction*) UObject::GObjObjects()->Data[ 55753 ];
//
//	UWebRequest_X_execSetHeader_Parms SetHeader_Parms;
//	memcpy ( &SetHeader_Parms.Key, &Key, 0xC );
//	memcpy ( &SetHeader_Parms.Value, &Value, 0xC );
//
//	pFnSetHeader->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnSetHeader, &SetHeader_Parms, NULL );
//
//	pFnSetHeader->FunctionFlags |= 0x400;
//
//	return SetHeader_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.AddPlayerIDParam
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//class UWebRequest_X* UWebRequest_X::AddPlayerIDParam ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnAddPlayerIDParam = NULL;
//
//	if ( ! pFnAddPlayerIDParam )
//		pFnAddPlayerIDParam = (UFunction*) UObject::GObjObjects()->Data[ 55750 ];
//
//	UWebRequest_X_execAddPlayerIDParam_Parms AddPlayerIDParam_Parms;
//	memcpy ( &AddPlayerIDParam_Parms.PlayerID, &PlayerID, 0x48 );
//
//	pFnAddPlayerIDParam->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddPlayerIDParam, &AddPlayerIDParam_Parms, NULL );
//
//	pFnAddPlayerIDParam->FunctionFlags |= 0x400;
//
//	return AddPlayerIDParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.AddStringParam
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//
//class UWebRequest_X* UWebRequest_X::AddStringParam ( struct FString Key, struct FString Value )
//{
//	static UFunction* pFnAddStringParam = NULL;
//
//	if ( ! pFnAddStringParam )
//		pFnAddStringParam = (UFunction*) UObject::GObjObjects()->Data[ 55746 ];
//
//	UWebRequest_X_execAddStringParam_Parms AddStringParam_Parms;
//	memcpy ( &AddStringParam_Parms.Key, &Key, 0xC );
//	memcpy ( &AddStringParam_Parms.Value, &Value, 0xC );
//
//	pFnAddStringParam->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddStringParam, &AddStringParam_Parms, NULL );
//
//	pFnAddStringParam->FunctionFlags |= 0x400;
//
//	return AddStringParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.AddFloatParam
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// float                          Value                          ( CPF_Parm )
//
//class UWebRequest_X* UWebRequest_X::AddFloatParam ( struct FString Key, float Value )
//{
//	static UFunction* pFnAddFloatParam = NULL;
//
//	if ( ! pFnAddFloatParam )
//		pFnAddFloatParam = (UFunction*) UObject::GObjObjects()->Data[ 55742 ];
//
//	UWebRequest_X_execAddFloatParam_Parms AddFloatParam_Parms;
//	memcpy ( &AddFloatParam_Parms.Key, &Key, 0xC );
//	AddFloatParam_Parms.Value = Value;
//
//	pFnAddFloatParam->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddFloatParam, &AddFloatParam_Parms, NULL );
//
//	pFnAddFloatParam->FunctionFlags |= 0x400;
//
//	return AddFloatParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.AddQwordParam
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//
//class UWebRequest_X* UWebRequest_X::AddQwordParam ( struct FString Key )
//{
//	static UFunction* pFnAddQwordParam = NULL;
//
//	if ( ! pFnAddQwordParam )
//		pFnAddQwordParam = (UFunction*) UObject::GObjObjects()->Data[ 55738 ];
//
//	UWebRequest_X_execAddQwordParam_Parms AddQwordParam_Parms;
//	memcpy ( &AddQwordParam_Parms.Key, &Key, 0xC );
//
//	pFnAddQwordParam->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddQwordParam, &AddQwordParam_Parms, NULL );
//
//	pFnAddQwordParam->FunctionFlags |= 0x400;
//
//	return AddQwordParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.AddIntParam
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Value                          ( CPF_Parm )
//
//class UWebRequest_X* UWebRequest_X::AddIntParam ( struct FString Key, int Value )
//{
//	static UFunction* pFnAddIntParam = NULL;
//
//	if ( ! pFnAddIntParam )
//		pFnAddIntParam = (UFunction*) UObject::GObjObjects()->Data[ 55734 ];
//
//	UWebRequest_X_execAddIntParam_Parms AddIntParam_Parms;
//	memcpy ( &AddIntParam_Parms.Key, &Key, 0xC );
//	AddIntParam_Parms.Value = Value;
//
//	pFnAddIntParam->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddIntParam, &AddIntParam_Parms, NULL );
//
//	pFnAddIntParam->FunctionFlags |= 0x400;
//
//	return AddIntParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.Create
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UWebRequest_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UWebRequest_X* UWebRequest_X::Create ( )
//{
//	static UFunction* pFnCreate = NULL;
//
//	if ( ! pFnCreate )
//		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 50887 ];
//
//	UWebRequest_X_execCreate_Parms Create_Parms;
//
//	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
//
//	return Create_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebRequest_X.EventCompleted
//// [0x00120000] 
//// Parameters infos:
//// class UWebRequest_X*           Request                        ( CPF_Parm )
//
//void UWebRequest_X::EventCompleted ( class UWebRequest_X* Request )
//{
//	static UFunction* pFnEventCompleted = NULL;
//
//	if ( ! pFnEventCompleted )
//		pFnEventCompleted = (UFunction*) UObject::GObjObjects()->Data[ 55724 ];
//
//	UWebRequest_X_execEventCompleted_Parms EventCompleted_Parms;
//	EventCompleted_Parms.Request = Request;
//
//	this->ProcessEvent ( pFnEventCompleted, &EventCompleted_Parms, NULL );
//};
//
//// Function ProjectX.AnimNodeBlendBase_X.SetActiveChildNamed
//// [0x00024002] 
//// Parameters infos:
//// struct FName                   ChildName                      ( CPF_Parm )
//// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )
//
//void UAnimNodeBlendBase_X::SetActiveChildNamed ( struct FName ChildName, unsigned long bForce )
//{
//	static UFunction* pFnSetActiveChildNamed = NULL;
//
//	if ( ! pFnSetActiveChildNamed )
//		pFnSetActiveChildNamed = (UFunction*) UObject::GObjObjects()->Data[ 48168 ];
//
//	UAnimNodeBlendBase_X_execSetActiveChildNamed_Parms SetActiveChildNamed_Parms;
//	memcpy ( &SetActiveChildNamed_Parms.ChildName, &ChildName, 0x8 );
//	SetActiveChildNamed_Parms.bForce = bForce;
//
//	this->ProcessEvent ( pFnSetActiveChildNamed, &SetActiveChildNamed_Parms, NULL );
//};
//
//// Function ProjectX.AnimNodeBlendBase_X.GetAnimDuration
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ChildIndex                     ( CPF_Parm )
//
//float UAnimNodeBlendBase_X::GetAnimDuration ( int ChildIndex )
//{
//	static UFunction* pFnGetAnimDuration = NULL;
//
//	if ( ! pFnGetAnimDuration )
//		pFnGetAnimDuration = (UFunction*) UObject::GObjObjects()->Data[ 48165 ];
//
//	UAnimNodeBlendBase_X_execGetAnimDuration_Parms GetAnimDuration_Parms;
//	GetAnimDuration_Parms.ChildIndex = ChildIndex;
//
//	pFnGetAnimDuration->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetAnimDuration, &GetAnimDuration_Parms, NULL );
//
//	pFnGetAnimDuration->FunctionFlags |= 0x400;
//
//	return GetAnimDuration_Parms.ReturnValue;
//};
//
//// Function ProjectX.AnimNodeBlendBase_X.GetBlendTime
//// [0x00024401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ChildIndex                     ( CPF_Parm )
//// unsigned long                  bGetDefault                    ( CPF_OptionalParm | CPF_Parm )
//
//float UAnimNodeBlendBase_X::GetBlendTime ( int ChildIndex, unsigned long bGetDefault )
//{
//	static UFunction* pFnGetBlendTime = NULL;
//
//	if ( ! pFnGetBlendTime )
//		pFnGetBlendTime = (UFunction*) UObject::GObjObjects()->Data[ 48161 ];
//
//	UAnimNodeBlendBase_X_execGetBlendTime_Parms GetBlendTime_Parms;
//	GetBlendTime_Parms.ChildIndex = ChildIndex;
//	GetBlendTime_Parms.bGetDefault = bGetDefault;
//
//	pFnGetBlendTime->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetBlendTime, &GetBlendTime_Parms, NULL );
//
//	pFnGetBlendTime->FunctionFlags |= 0x400;
//
//	return GetBlendTime_Parms.ReturnValue;
//};
//
//// Function ProjectX.AnimNodePose_X.PlayAnim
//// [0x00024400] ( FUNC_Native )
//// Parameters infos:
//// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
//// float                          InRate                         ( CPF_OptionalParm | CPF_Parm )
//// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )
//
//void UAnimNodePose_X::PlayAnim ( unsigned long bLoop, float InRate, float StartTime )
//{
//	static UFunction* pFnPlayAnim = NULL;
//
//	if ( ! pFnPlayAnim )
//		pFnPlayAnim = (UFunction*) UObject::GObjObjects()->Data[ 48177 ];
//
//	UAnimNodePose_X_execPlayAnim_Parms PlayAnim_Parms;
//	PlayAnim_Parms.bLoop = bLoop;
//	PlayAnim_Parms.InRate = InRate;
//	PlayAnim_Parms.StartTime = StartTime;
//
//	pFnPlayAnim->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnPlayAnim, &PlayAnim_Parms, NULL );
//
//	pFnPlayAnim->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AnimNodeSlot_X.AddNodeToGroup
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FName                   GroupName                      ( CPF_Parm )
//
//void UAnimNodeSlot_X::AddNodeToGroup ( struct FName GroupName )
//{
//	static UFunction* pFnAddNodeToGroup = NULL;
//
//	if ( ! pFnAddNodeToGroup )
//		pFnAddNodeToGroup = (UFunction*) UObject::GObjObjects()->Data[ 48189 ];
//
//	UAnimNodeSlot_X_execAddNodeToGroup_Parms AddNodeToGroup_Parms;
//	memcpy ( &AddNodeToGroup_Parms.GroupName, &GroupName, 0x8 );
//
//	pFnAddNodeToGroup->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnAddNodeToGroup, &AddNodeToGroup_Parms, NULL );
//
//	pFnAddNodeToGroup->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.AnimNodeSlot_X.PlaySettings
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FCustomAnimSettings     Settings                       ( CPF_Parm )
//
//float UAnimNodeSlot_X::PlaySettings ( struct FCustomAnimSettings Settings )
//{
//	static UFunction* pFnPlaySettings = NULL;
//
//	if ( ! pFnPlaySettings )
//		pFnPlaySettings = (UFunction*) UObject::GObjObjects()->Data[ 48185 ];
//
//	UAnimNodeSlot_X_execPlaySettings_Parms PlaySettings_Parms;
//	memcpy ( &PlaySettings_Parms.Settings, &Settings, 0x34 );
//
//	this->ProcessEvent ( pFnPlaySettings, &PlaySettings_Parms, NULL );
//
//	return PlaySettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.AnimNotify_PlayParticleEffect_X.OnParticleSystemFinished
//// [0x00020102] 
//// Parameters infos:
//// class UParticleSystemComponent* Component                      ( CPF_Parm | CPF_EditInline )
//
//void UAnimNotify_PlayParticleEffect_X::OnParticleSystemFinished ( class UParticleSystemComponent* Component )
//{
//	static UFunction* pFnOnParticleSystemFinished = NULL;
//
//	if ( ! pFnOnParticleSystemFinished )
//		pFnOnParticleSystemFinished = (UFunction*) UObject::GObjObjects()->Data[ 48203 ];
//
//	UAnimNotify_PlayParticleEffect_X_execOnParticleSystemFinished_Parms OnParticleSystemFinished_Parms;
//	OnParticleSystemFinished_Parms.Component = Component;
//
//	this->ProcessEvent ( pFnOnParticleSystemFinished, &OnParticleSystemFinished_Parms, NULL );
//};
//
//// Function ProjectX.AnimNotify_PlayParticleEffect_X.NotifyEnd
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class AActor*                  Owner                          ( CPF_Parm )
//// class UAnimNodeSequence*       AnimSeqInstigator              ( CPF_Parm )
//
//void UAnimNotify_PlayParticleEffect_X::eventNotifyEnd ( class AActor* Owner, class UAnimNodeSequence* AnimSeqInstigator )
//{
//	static UFunction* pFnNotifyEnd = NULL;
//
//	if ( ! pFnNotifyEnd )
//		pFnNotifyEnd = (UFunction*) UObject::GObjObjects()->Data[ 48199 ];
//
//	UAnimNotify_PlayParticleEffect_X_eventNotifyEnd_Parms NotifyEnd_Parms;
//	NotifyEnd_Parms.Owner = Owner;
//	NotifyEnd_Parms.AnimSeqInstigator = AnimSeqInstigator;
//
//	this->ProcessEvent ( pFnNotifyEnd, &NotifyEnd_Parms, NULL );
//};
//
//// Function ProjectX.AnimNotify_PlayParticleEffect_X.Notify
//// [0x00820802] ( FUNC_Event )
//// Parameters infos:
//// class AActor*                  Owner                          ( CPF_Parm )
//// class UAnimNodeSequence*       AnimSeqInstigator              ( CPF_Parm )
//
//void UAnimNotify_PlayParticleEffect_X::eventNotify ( class AActor* Owner, class UAnimNodeSequence* AnimSeqInstigator )
//{
//	static UFunction* pFnNotify = NULL;
//
//	if ( ! pFnNotify )
//		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48193 ];
//
//	UAnimNotify_PlayParticleEffect_X_eventNotify_Parms Notify_Parms;
//	Notify_Parms.Owner = Owner;
//	Notify_Parms.AnimSeqInstigator = AnimSeqInstigator;
//
//	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
//};
//
//// Function ProjectX.TcpConnection.OnDisconnected
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UTcpConnection::eventOnDisconnected ( )
//{
//	static UFunction* pFnOnDisconnected = NULL;
//
//	if ( ! pFnOnDisconnected )
//		pFnOnDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 55679 ];
//
//	UTcpConnection_eventOnDisconnected_Parms OnDisconnected_Parms;
//
//	this->ProcessEvent ( pFnOnDisconnected, &OnDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.TcpConnection.OnConnected
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UTcpConnection::eventOnConnected ( )
//{
//	static UFunction* pFnOnConnected = NULL;
//
//	if ( ! pFnOnConnected )
//		pFnOnConnected = (UFunction*) UObject::GObjObjects()->Data[ 55678 ];
//
//	UTcpConnection_eventOnConnected_Parms OnConnected_Parms;
//
//	this->ProcessEvent ( pFnOnConnected, &OnConnected_Parms, NULL );
//};
//
//// Function ProjectX.TcpConnection.Close
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UTcpConnection::Close ( )
//{
//	static UFunction* pFnClose = NULL;
//
//	if ( ! pFnClose )
//		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 55677 ];
//
//	UTcpConnection_execClose_Parms Close_Parms;
//
//	pFnClose->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );
//
//	pFnClose->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.TcpConnection.GetRemoteAddress
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UTcpConnection::GetRemoteAddress ( )
//{
//	static UFunction* pFnGetRemoteAddress = NULL;
//
//	if ( ! pFnGetRemoteAddress )
//		pFnGetRemoteAddress = (UFunction*) UObject::GObjObjects()->Data[ 55675 ];
//
//	UTcpConnection_execGetRemoteAddress_Parms GetRemoteAddress_Parms;
//
//	pFnGetRemoteAddress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetRemoteAddress, &GetRemoteAddress_Parms, NULL );
//
//	pFnGetRemoteAddress->FunctionFlags |= 0x400;
//
//	return GetRemoteAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpConnection.GetAddress
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UTcpConnection::GetAddress ( )
//{
//	static UFunction* pFnGetAddress = NULL;
//
//	if ( ! pFnGetAddress )
//		pFnGetAddress = (UFunction*) UObject::GObjObjects()->Data[ 55672 ];
//
//	UTcpConnection_execGetAddress_Parms GetAddress_Parms;
//
//	pFnGetAddress->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnGetAddress, &GetAddress_Parms, NULL );
//
//	pFnGetAddress->FunctionFlags |= 0x400;
//
//	return GetAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.TcpConnection.EventReceivedBunch
//// [0x00120000] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpConnection::EventReceivedBunch ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnEventReceivedBunch = NULL;
//
//	if ( ! pFnEventReceivedBunch )
//		pFnEventReceivedBunch = (UFunction*) UObject::GObjObjects()->Data[ 55674 ];
//
//	UTcpConnection_execEventReceivedBunch_Parms EventReceivedBunch_Parms;
//	EventReceivedBunch_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventReceivedBunch, &EventReceivedBunch_Parms, NULL );
//};
//
//// Function ProjectX.TcpConnection.EventDisconnected
//// [0x00120000] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpConnection::EventDisconnected ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnEventDisconnected = NULL;
//
//	if ( ! pFnEventDisconnected )
//		pFnEventDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 55657 ];
//
//	UTcpConnection_execEventDisconnected_Parms EventDisconnected_Parms;
//	EventDisconnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventDisconnected, &EventDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.TcpConnection.EventConnected
//// [0x00120000] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//
//void UTcpConnection::EventConnected ( class UTcpConnection* Connection )
//{
//	static UFunction* pFnEventConnected = NULL;
//
//	if ( ! pFnEventConnected )
//		pFnEventConnected = (UFunction*) UObject::GObjObjects()->Data[ 55658 ];
//
//	UTcpConnection_execEventConnected_Parms EventConnected_Parms;
//	EventConnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnEventConnected, &EventConnected_Parms, NULL );
//};
//
//// Function ProjectX.WebSocketConnection_X.Close
//// [0x00020400] ( FUNC_Native )
//// Parameters infos:
//
//void UWebSocketConnection_X::Close ( )
//{
//	static UFunction* pFnClose = NULL;
//
//	if ( ! pFnClose )
//		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 58718 ];
//
//	UWebSocketConnection_X_execClose_Parms Close_Parms;
//
//	pFnClose->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );
//
//	pFnClose->FunctionFlags |= 0x400;
//};
//
//// Function ProjectX.WebSocketConnection_X.BeginWebSocketConnect
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//// class UStringMap*              HandshakeHeaders               ( CPF_Parm | CPF_EditInline )
//
//bool UWebSocketConnection_X::BeginWebSocketConnect ( struct FString Address, class UStringMap* HandshakeHeaders )
//{
//	static UFunction* pFnBeginWebSocketConnect = NULL;
//
//	if ( ! pFnBeginWebSocketConnect )
//		pFnBeginWebSocketConnect = (UFunction*) UObject::GObjObjects()->Data[ 58371 ];
//
//	UWebSocketConnection_X_execBeginWebSocketConnect_Parms BeginWebSocketConnect_Parms;
//	memcpy ( &BeginWebSocketConnect_Parms.Address, &Address, 0xC );
//	BeginWebSocketConnect_Parms.HandshakeHeaders = HandshakeHeaders;
//
//	pFnBeginWebSocketConnect->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBeginWebSocketConnect, &BeginWebSocketConnect_Parms, NULL );
//
//	pFnBeginWebSocketConnect->FunctionFlags |= 0x400;
//
//	return BeginWebSocketConnect_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebSocketConnection_X.BeginConnect
//// [0x00020401] ( FUNC_Final | FUNC_Native )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UWebSocketConnection_X::BeginConnect ( struct FString Address )
//{
//	static UFunction* pFnBeginConnect = NULL;
//
//	if ( ! pFnBeginConnect )
//		pFnBeginConnect = (UFunction*) UObject::GObjObjects()->Data[ 58713 ];
//
//	UWebSocketConnection_X_execBeginConnect_Parms BeginConnect_Parms;
//	memcpy ( &BeginConnect_Parms.Address, &Address, 0xC );
//
//	pFnBeginConnect->FunctionFlags |= ~0x400;
//
//	this->ProcessEvent ( pFnBeginConnect, &BeginConnect_Parms, NULL );
//
//	pFnBeginConnect->FunctionFlags |= 0x400;
//
//	return BeginConnect_Parms.ReturnValue;
//};
//
//// Function ProjectX.PrivilegeCheck_X.HasFeatureRestriction
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            OutControllerID                ( CPF_Parm | CPF_OutParm )
//// unsigned char                  OutFailedPrivilege             ( CPF_Parm | CPF_OutParm )
//
//bool UPrivilegeCheck_X::HasFeatureRestriction ( int* OutControllerID, unsigned char* OutFailedPrivilege )
//{
//	static UFunction* pFnHasFeatureRestriction = NULL;
//
//	if ( ! pFnHasFeatureRestriction )
//		pFnHasFeatureRestriction = (UFunction*) UObject::GObjObjects()->Data[ 55143 ];
//
//	UPrivilegeCheck_X_execHasFeatureRestriction_Parms HasFeatureRestriction_Parms;
//
//	this->ProcessEvent ( pFnHasFeatureRestriction, &HasFeatureRestriction_Parms, NULL );
//
//	if ( OutControllerID )
//		*OutControllerID = HasFeatureRestriction_Parms.OutControllerID;
//
//	if ( OutFailedPrivilege )
//		*OutFailedPrivilege = HasFeatureRestriction_Parms.OutFailedPrivilege;
//
//	return HasFeatureRestriction_Parms.ReturnValue;
//};
//
//// Function ProjectX.PrivilegeCheck_X.OnFinished
//// [0x00080002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::OnFinished ( )
//{
//	static UFunction* pFnOnFinished = NULL;
//
//	if ( ! pFnOnFinished )
//		pFnOnFinished = (UFunction*) UObject::GObjObjects()->Data[ 55144 ];
//
//	UPrivilegeCheck_X_execOnFinished_Parms OnFinished_Parms;
//
//	this->ProcessEvent ( pFnOnFinished, &OnFinished_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.Fail
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPrivilegeCheck_X::Fail ( struct FString Reason )
//{
//	static UFunction* pFnFail = NULL;
//
//	if ( ! pFnFail )
//		pFnFail = (UFunction*) UObject::GObjObjects()->Data[ 55150 ];
//
//	UPrivilegeCheck_X_execFail_Parms Fail_Parms;
//	memcpy ( &Fail_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnFail, &Fail_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.HandlePrivilege
//// [0x00080002] 
//// Parameters infos:
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//// unsigned char                  Privilege                      ( CPF_Parm )
//// unsigned char                  Level                          ( CPF_Parm )
//
//void UPrivilegeCheck_X::HandlePrivilege ( unsigned char LocalUserNum, unsigned char Privilege, unsigned char Level )
//{
//	static UFunction* pFnHandlePrivilege = NULL;
//
//	if ( ! pFnHandlePrivilege )
//		pFnHandlePrivilege = (UFunction*) UObject::GObjObjects()->Data[ 55151 ];
//
//	UPrivilegeCheck_X_execHandlePrivilege_Parms HandlePrivilege_Parms;
//	HandlePrivilege_Parms.LocalUserNum = LocalUserNum;
//	HandlePrivilege_Parms.Privilege = Privilege;
//	HandlePrivilege_Parms.Level = Level;
//
//	this->ProcessEvent ( pFnHandlePrivilege, &HandlePrivilege_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.CheckPrivilege
//// [0x00080002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::CheckPrivilege ( )
//{
//	static UFunction* pFnCheckPrivilege = NULL;
//
//	if ( ! pFnCheckPrivilege )
//		pFnCheckPrivilege = (UFunction*) UObject::GObjObjects()->Data[ 55153 ];
//
//	UPrivilegeCheck_X_execCheckPrivilege_Parms CheckPrivilege_Parms;
//
//	this->ProcessEvent ( pFnCheckPrivilege, &CheckPrivilege_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.CheckPsyNet
//// [0x00080002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::CheckPsyNet ( )
//{
//	static UFunction* pFnCheckPsyNet = NULL;
//
//	if ( ! pFnCheckPsyNet )
//		pFnCheckPsyNet = (UFunction*) UObject::GObjObjects()->Data[ 55158 ];
//
//	UPrivilegeCheck_X_execCheckPsyNet_Parms CheckPsyNet_Parms;
//
//	this->ProcessEvent ( pFnCheckPsyNet, &CheckPsyNet_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.ValidateUserOnlineAccount
//// [0x00080002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::ValidateUserOnlineAccount ( )
//{
//	static UFunction* pFnValidateUserOnlineAccount = NULL;
//
//	if ( ! pFnValidateUserOnlineAccount )
//		pFnValidateUserOnlineAccount = (UFunction*) UObject::GObjObjects()->Data[ 55162 ];
//
//	UPrivilegeCheck_X_execValidateUserOnlineAccount_Parms ValidateUserOnlineAccount_Parms;
//
//	this->ProcessEvent ( pFnValidateUserOnlineAccount, &ValidateUserOnlineAccount_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.CheckInternet
//// [0x00080002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::CheckInternet ( )
//{
//	static UFunction* pFnCheckInternet = NULL;
//
//	if ( ! pFnCheckInternet )
//		pFnCheckInternet = (UFunction*) UObject::GObjObjects()->Data[ 55163 ];
//
//	UPrivilegeCheck_X_execCheckInternet_Parms CheckInternet_Parms;
//
//	this->ProcessEvent ( pFnCheckInternet, &CheckInternet_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.RequirePrivilege
//// [0x00020002] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Privilege                      ( CPF_Parm )
//
//class UPrivilegeCheck_X* UPrivilegeCheck_X::RequirePrivilege ( unsigned char Privilege )
//{
//	static UFunction* pFnRequirePrivilege = NULL;
//
//	if ( ! pFnRequirePrivilege )
//		pFnRequirePrivilege = (UFunction*) UObject::GObjObjects()->Data[ 53305 ];
//
//	UPrivilegeCheck_X_execRequirePrivilege_Parms RequirePrivilege_Parms;
//	RequirePrivilege_Parms.Privilege = Privilege;
//
//	this->ProcessEvent ( pFnRequirePrivilege, &RequirePrivilege_Parms, NULL );
//
//	return RequirePrivilege_Parms.ReturnValue;
//};
//
//// Function ProjectX.PrivilegeCheck_X.RequirePsyNet
//// [0x00020002] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPrivilegeCheck_X* UPrivilegeCheck_X::RequirePsyNet ( )
//{
//	static UFunction* pFnRequirePsyNet = NULL;
//
//	if ( ! pFnRequirePsyNet )
//		pFnRequirePsyNet = (UFunction*) UObject::GObjObjects()->Data[ 53299 ];
//
//	UPrivilegeCheck_X_execRequirePsyNet_Parms RequirePsyNet_Parms;
//
//	this->ProcessEvent ( pFnRequirePsyNet, &RequirePsyNet_Parms, NULL );
//
//	return RequirePsyNet_Parms.ReturnValue;
//};
//
//// Function ProjectX.PrivilegeCheck_X.RequireUserOnlineAccount
//// [0x00020002] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPrivilegeCheck_X* UPrivilegeCheck_X::RequireUserOnlineAccount ( )
//{
//	static UFunction* pFnRequireUserOnlineAccount = NULL;
//
//	if ( ! pFnRequireUserOnlineAccount )
//		pFnRequireUserOnlineAccount = (UFunction*) UObject::GObjObjects()->Data[ 53297 ];
//
//	UPrivilegeCheck_X_execRequireUserOnlineAccount_Parms RequireUserOnlineAccount_Parms;
//
//	this->ProcessEvent ( pFnRequireUserOnlineAccount, &RequireUserOnlineAccount_Parms, NULL );
//
//	return RequireUserOnlineAccount_Parms.ReturnValue;
//};
//
//// Function ProjectX.PrivilegeCheck_X.RequireInternet
//// [0x00020002] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPrivilegeCheck_X* UPrivilegeCheck_X::RequireInternet ( )
//{
//	static UFunction* pFnRequireInternet = NULL;
//
//	if ( ! pFnRequireInternet )
//		pFnRequireInternet = (UFunction*) UObject::GObjObjects()->Data[ 53292 ];
//
//	UPrivilegeCheck_X_execRequireInternet_Parms RequireInternet_Parms;
//
//	this->ProcessEvent ( pFnRequireInternet, &RequireInternet_Parms, NULL );
//
//	return RequireInternet_Parms.ReturnValue;
//};
//
//// Function ProjectX.PrivilegeCheck_X.StartNextCheck
//// [0x00080002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::StartNextCheck ( )
//{
//	static UFunction* pFnStartNextCheck = NULL;
//
//	if ( ! pFnStartNextCheck )
//		pFnStartNextCheck = (UFunction*) UObject::GObjObjects()->Data[ 55166 ];
//
//	UPrivilegeCheck_X_execStartNextCheck_Parms StartNextCheck_Parms;
//
//	this->ProcessEvent ( pFnStartNextCheck, &StartNextCheck_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.Start
//// [0x00020002] 
//// Parameters infos:
//
//void UPrivilegeCheck_X::Start ( )
//{
//	static UFunction* pFnStart = NULL;
//
//	if ( ! pFnStart )
//		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 55167 ];
//
//	UPrivilegeCheck_X_execStart_Parms Start_Parms;
//
//	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.Init
//// [0x00020002] 
//// Parameters infos:
//// int                            ControllerId                   ( CPF_Parm )
//
//void UPrivilegeCheck_X::Init ( int ControllerId )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55139 ];
//
//	UPrivilegeCheck_X_execInit_Parms Init_Parms;
//	Init_Parms.ControllerId = ControllerId;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PrivilegeCheck_X.CheckDelegate
//// [0x00140001] ( FUNC_Final )
//// Parameters infos:
//
//void UPrivilegeCheck_X::CheckDelegate ( )
//{
//	static UFunction* pFnCheckDelegate = NULL;
//
//	if ( ! pFnCheckDelegate )
//		pFnCheckDelegate = (UFunction*) UObject::GObjObjects()->Data[ 55142 ];
//
//	UPrivilegeCheck_X_execCheckDelegate_Parms CheckDelegate_Parms;
//
//	this->ProcessEvent ( pFnCheckDelegate, &CheckDelegate_Parms, NULL );
//};
//
//// Function ProjectX.ActivateAnimSeriesComponent_X.SetAnimSeriesActiveInComponent
//// [0x00080002] 
//// Parameters infos:
//// class USkeletalMeshComponent*  SKC                            ( CPF_Parm | CPF_EditInline )
//// unsigned long                  bActive                        ( CPF_Parm )
//
//void UActivateAnimSeriesComponent_X::SetAnimSeriesActiveInComponent ( class USkeletalMeshComponent* SKC, unsigned long bActive )
//{
//	static UFunction* pFnSetAnimSeriesActiveInComponent = NULL;
//
//	if ( ! pFnSetAnimSeriesActiveInComponent )
//		pFnSetAnimSeriesActiveInComponent = (UFunction*) UObject::GObjObjects()->Data[ 48017 ];
//
//	UActivateAnimSeriesComponent_X_execSetAnimSeriesActiveInComponent_Parms SetAnimSeriesActiveInComponent_Parms;
//	SetAnimSeriesActiveInComponent_Parms.SKC = SKC;
//	SetAnimSeriesActiveInComponent_Parms.bActive = bActive;
//
//	this->ProcessEvent ( pFnSetAnimSeriesActiveInComponent, &SetAnimSeriesActiveInComponent_Parms, NULL );
//};
//
//// Function ProjectX.ActivateAnimSeriesComponent_X.SetAnimSeriesActive
//// [0x00080002] 
//// Parameters infos:
//// unsigned long                  bActive                        ( CPF_Parm )
//
//void UActivateAnimSeriesComponent_X::SetAnimSeriesActive ( unsigned long bActive )
//{
//	static UFunction* pFnSetAnimSeriesActive = NULL;
//
//	if ( ! pFnSetAnimSeriesActive )
//		pFnSetAnimSeriesActive = (UFunction*) UObject::GObjObjects()->Data[ 48013 ];
//
//	UActivateAnimSeriesComponent_X_execSetAnimSeriesActive_Parms SetAnimSeriesActive_Parms;
//	SetAnimSeriesActive_Parms.bActive = bActive;
//
//	this->ProcessEvent ( pFnSetAnimSeriesActive, &SetAnimSeriesActive_Parms, NULL );
//};
//
//// Function ProjectX.ActivateAnimSeriesComponent_X.Detached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UActivateAnimSeriesComponent_X::eventDetached ( )
//{
//	static UFunction* pFnDetached = NULL;
//
//	if ( ! pFnDetached )
//		pFnDetached = (UFunction*) UObject::GObjObjects()->Data[ 48012 ];
//
//	UActivateAnimSeriesComponent_X_eventDetached_Parms Detached_Parms;
//
//	this->ProcessEvent ( pFnDetached, &Detached_Parms, NULL );
//};
//
//// Function ProjectX.ActivateAnimSeriesComponent_X.Attached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UActivateAnimSeriesComponent_X::eventAttached ( )
//{
//	static UFunction* pFnAttached = NULL;
//
//	if ( ! pFnAttached )
//		pFnAttached = (UFunction*) UObject::GObjObjects()->Data[ 48011 ];
//
//	UActivateAnimSeriesComponent_X_eventAttached_Parms Attached_Parms;
//
//	this->ProcessEvent ( pFnAttached, &Attached_Parms, NULL );
//};
//
//// Function ProjectX.AddReservationMessage_X.GetPlayerMapPrefs
//// [0x00420000] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// TArray< struct FName >         Likes                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FName >         Dislikes                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UAddReservationMessage_X::GetPlayerMapPrefs ( struct FUniqueNetId PlayerID, TArray< struct FName >* Likes, TArray< struct FName >* Dislikes )
//{
//	static UFunction* pFnGetPlayerMapPrefs = NULL;
//
//	if ( ! pFnGetPlayerMapPrefs )
//		pFnGetPlayerMapPrefs = (UFunction*) UObject::GObjObjects()->Data[ 48062 ];
//
//	UAddReservationMessage_X_execGetPlayerMapPrefs_Parms GetPlayerMapPrefs_Parms;
//	memcpy ( &GetPlayerMapPrefs_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPlayerMapPrefs, &GetPlayerMapPrefs_Parms, NULL );
//
//	if ( Likes )
//		memcpy ( Likes, &GetPlayerMapPrefs_Parms.Likes, 0xC );
//
//	if ( Dislikes )
//		memcpy ( Dislikes, &GetPlayerMapPrefs_Parms.Dislikes, 0xC );
//};
//
//// Function ProjectX.AddReservationMessage_X.SetDisableCrossPlay
//// [0x00020002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bValue                         ( CPF_Parm )
//
//class UAddReservationMessage_X* UAddReservationMessage_X::SetDisableCrossPlay ( unsigned long bValue )
//{
//	static UFunction* pFnSetDisableCrossPlay = NULL;
//
//	if ( ! pFnSetDisableCrossPlay )
//		pFnSetDisableCrossPlay = (UFunction*) UObject::GObjObjects()->Data[ 48063 ];
//
//	UAddReservationMessage_X_execSetDisableCrossPlay_Parms SetDisableCrossPlay_Parms;
//	SetDisableCrossPlay_Parms.bValue = bValue;
//
//	this->ProcessEvent ( pFnSetDisableCrossPlay, &SetDisableCrossPlay_Parms, NULL );
//
//	return SetDisableCrossPlay_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessage_X.AddPlayer
//// [0x00820002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bRemotePlayer                  ( CPF_Parm )
//
//class UAddReservationMessage_X* UAddReservationMessage_X::AddPlayer ( struct FUniqueNetId PlayerID, struct FString PlayerName, unsigned long bRemotePlayer )
//{
//	static UFunction* pFnAddPlayer = NULL;
//
//	if ( ! pFnAddPlayer )
//		pFnAddPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48056 ];
//
//	UAddReservationMessage_X_execAddPlayer_Parms AddPlayer_Parms;
//	memcpy ( &AddPlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AddPlayer_Parms.PlayerName, &PlayerName, 0xC );
//	AddPlayer_Parms.bRemotePlayer = bRemotePlayer;
//
//	this->ProcessEvent ( pFnAddPlayer, &AddPlayer_Parms, NULL );
//
//	return AddPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessage_X.AddOnlinePlayer
//// [0x00024002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//// unsigned long                  bFriendJoin                    ( CPF_OptionalParm | CPF_Parm )
//
//class UAddReservationMessage_X* UAddReservationMessage_X::AddOnlinePlayer ( class UOnlinePlayer_X* Player, unsigned long bFriendJoin )
//{
//	static UFunction* pFnAddOnlinePlayer = NULL;
//
//	if ( ! pFnAddOnlinePlayer )
//		pFnAddOnlinePlayer = (UFunction*) UObject::GObjObjects()->Data[ 48049 ];
//
//	UAddReservationMessage_X_execAddOnlinePlayer_Parms AddOnlinePlayer_Parms;
//	AddOnlinePlayer_Parms.Player = Player;
//	AddOnlinePlayer_Parms.bFriendJoin = bFriendJoin;
//
//	this->ProcessEvent ( pFnAddOnlinePlayer, &AddOnlinePlayer_Parms, NULL );
//
//	return AddOnlinePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessage_X.AddPlayers
//// [0x00820002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UAddReservationMessage_X* UAddReservationMessage_X::AddPlayers ( )
//{
//	static UFunction* pFnAddPlayers = NULL;
//
//	if ( ! pFnAddPlayers )
//		pFnAddPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48034 ];
//
//	UAddReservationMessage_X_execAddPlayers_Parms AddPlayers_Parms;
//
//	this->ProcessEvent ( pFnAddPlayers, &AddPlayers_Parms, NULL );
//
//	return AddPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePartyConfigChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::HandlePartyConfigChanged ( )
//{
//	static UFunction* pFnHandlePartyConfigChanged = NULL;
//
//	if ( ! pFnHandlePartyConfigChanged )
//		pFnHandlePartyConfigChanged = (UFunction*) UObject::GObjObjects()->Data[ 52453 ];
//
//	UOnlineGameParty_X_execHandlePartyConfigChanged_Parms HandlePartyConfigChanged_Parms;
//
//	this->ProcessEvent ( pFnHandlePartyConfigChanged, &HandlePartyConfigChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleMessageForMetrics
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleMessageForMetrics ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleMessageForMetrics = NULL;
//
//	if ( ! pFnHandleMessageForMetrics )
//		pFnHandleMessageForMetrics = (UFunction*) UObject::GObjObjects()->Data[ 52774 ];
//
//	UOnlineGameParty_X_execHandleMessageForMetrics_Parms HandleMessageForMetrics_Parms;
//	HandleMessageForMetrics_Parms.Component = Component;
//	HandleMessageForMetrics_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleMessageForMetrics, &HandleMessageForMetrics_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePlayerTradeComplete
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandlePlayerTradeComplete ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandlePlayerTradeComplete = NULL;
//
//	if ( ! pFnHandlePlayerTradeComplete )
//		pFnHandlePlayerTradeComplete = (UFunction*) UObject::GObjObjects()->Data[ 52778 ];
//
//	UOnlineGameParty_X_execHandlePlayerTradeComplete_Parms HandlePlayerTradeComplete_Parms;
//	HandlePlayerTradeComplete_Parms.Component = Component;
//	HandlePlayerTradeComplete_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePlayerTradeComplete, &HandlePlayerTradeComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SendPlayerTradeComplete
//// [0x00880002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::SendPlayerTradeComplete ( )
//{
//	static UFunction* pFnSendPlayerTradeComplete = NULL;
//
//	if ( ! pFnSendPlayerTradeComplete )
//		pFnSendPlayerTradeComplete = (UFunction*) UObject::GObjObjects()->Data[ 52781 ];
//
//	UOnlineGameParty_X_execSendPlayerTradeComplete_Parms SendPlayerTradeComplete_Parms;
//
//	this->ProcessEvent ( pFnSendPlayerTradeComplete, &SendPlayerTradeComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SendPlayerTradeCompleteAndClear
//// [0x00080002] 
//// Parameters infos:
//// unsigned long                  bWasCanceled                   ( CPF_Parm )
//
//void UOnlineGameParty_X::SendPlayerTradeCompleteAndClear ( unsigned long bWasCanceled )
//{
//	static UFunction* pFnSendPlayerTradeCompleteAndClear = NULL;
//
//	if ( ! pFnSendPlayerTradeCompleteAndClear )
//		pFnSendPlayerTradeCompleteAndClear = (UFunction*) UObject::GObjObjects()->Data[ 52787 ];
//
//	UOnlineGameParty_X_execSendPlayerTradeCompleteAndClear_Parms SendPlayerTradeCompleteAndClear_Parms;
//	SendPlayerTradeCompleteAndClear_Parms.bWasCanceled = bWasCanceled;
//
//	this->ProcessEvent ( pFnSendPlayerTradeCompleteAndClear, &SendPlayerTradeCompleteAndClear_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleReadyToTrade
//// [0x00880002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleReadyToTrade ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleReadyToTrade = NULL;
//
//	if ( ! pFnHandleReadyToTrade )
//		pFnHandleReadyToTrade = (UFunction*) UObject::GObjObjects()->Data[ 52792 ];
//
//	UOnlineGameParty_X_execHandleReadyToTrade_Parms HandleReadyToTrade_Parms;
//	HandleReadyToTrade_Parms.Component = Component;
//	HandleReadyToTrade_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleReadyToTrade, &HandleReadyToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.ReadyToTrade
//// [0x00820002] 
//// Parameters infos:
//// unsigned long                  bReadyToTrade                  ( CPF_Parm )
//
//void UOnlineGameParty_X::ReadyToTrade ( unsigned long bReadyToTrade )
//{
//	static UFunction* pFnReadyToTrade = NULL;
//
//	if ( ! pFnReadyToTrade )
//		pFnReadyToTrade = (UFunction*) UObject::GObjObjects()->Data[ 52794 ];
//
//	UOnlineGameParty_X_execReadyToTrade_Parms ReadyToTrade_Parms;
//	ReadyToTrade_Parms.bReadyToTrade = bReadyToTrade;
//
//	this->ProcessEvent ( pFnReadyToTrade, &ReadyToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SetPartyMessageHandlerTradeProductUpdate
//// [0x00080000] 
//// Parameters infos:
//// unsigned long                  bAddHandler                    ( CPF_Parm )
//
//void UOnlineGameParty_X::SetPartyMessageHandlerTradeProductUpdate ( unsigned long bAddHandler )
//{
//	static UFunction* pFnSetPartyMessageHandlerTradeProductUpdate = NULL;
//
//	if ( ! pFnSetPartyMessageHandlerTradeProductUpdate )
//		pFnSetPartyMessageHandlerTradeProductUpdate = (UFunction*) UObject::GObjObjects()->Data[ 52806 ];
//
//	UOnlineGameParty_X_execSetPartyMessageHandlerTradeProductUpdate_Parms SetPartyMessageHandlerTradeProductUpdate_Parms;
//	SetPartyMessageHandlerTradeProductUpdate_Parms.bAddHandler = bAddHandler;
//
//	this->ProcessEvent ( pFnSetPartyMessageHandlerTradeProductUpdate, &SetPartyMessageHandlerTradeProductUpdate_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.ClearLocalTradingPlayer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bWasCanceled                   ( CPF_Parm )
//
//void UOnlineGameParty_X::ClearLocalTradingPlayer ( unsigned long bWasCanceled )
//{
//	static UFunction* pFnClearLocalTradingPlayer = NULL;
//
//	if ( ! pFnClearLocalTradingPlayer )
//		pFnClearLocalTradingPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52521 ];
//
//	UOnlineGameParty_X_execClearLocalTradingPlayer_Parms ClearLocalTradingPlayer_Parms;
//	ClearLocalTradingPlayer_Parms.bWasCanceled = bWasCanceled;
//
//	this->ProcessEvent ( pFnClearLocalTradingPlayer, &ClearLocalTradingPlayer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.ClearTradingPlayer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PartyMemberID                  ( CPF_Parm )
//
//bool UOnlineGameParty_X::ClearTradingPlayer ( struct FUniqueNetId PartyMemberID )
//{
//	static UFunction* pFnClearTradingPlayer = NULL;
//
//	if ( ! pFnClearTradingPlayer )
//		pFnClearTradingPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52609 ];
//
//	UOnlineGameParty_X_execClearTradingPlayer_Parms ClearTradingPlayer_Parms;
//	memcpy ( &ClearTradingPlayer_Parms.PartyMemberID, &PartyMemberID, 0x48 );
//
//	this->ProcessEvent ( pFnClearTradingPlayer, &ClearTradingPlayer_Parms, NULL );
//
//	return ClearTradingPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleAcceptInviteToTrade
//// [0x00880002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleAcceptInviteToTrade ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleAcceptInviteToTrade = NULL;
//
//	if ( ! pFnHandleAcceptInviteToTrade )
//		pFnHandleAcceptInviteToTrade = (UFunction*) UObject::GObjObjects()->Data[ 52817 ];
//
//	UOnlineGameParty_X_execHandleAcceptInviteToTrade_Parms HandleAcceptInviteToTrade_Parms;
//	HandleAcceptInviteToTrade_Parms.Component = Component;
//	HandleAcceptInviteToTrade_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleAcceptInviteToTrade, &HandleAcceptInviteToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.CanAcceptTrade
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::CanAcceptTrade ( )
//{
//	static UFunction* pFnCanAcceptTrade = NULL;
//
//	if ( ! pFnCanAcceptTrade )
//		pFnCanAcceptTrade = (UFunction*) UObject::GObjObjects()->Data[ 52822 ];
//
//	UOnlineGameParty_X_execCanAcceptTrade_Parms CanAcceptTrade_Parms;
//
//	this->ProcessEvent ( pFnCanAcceptTrade, &CanAcceptTrade_Parms, NULL );
//
//	return CanAcceptTrade_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.AcceptInviteToTrade
//// [0x00820002] 
//// Parameters infos:
//// unsigned long                  bAccepted                      ( CPF_Parm )
//
//void UOnlineGameParty_X::AcceptInviteToTrade ( unsigned long bAccepted )
//{
//	static UFunction* pFnAcceptInviteToTrade = NULL;
//
//	if ( ! pFnAcceptInviteToTrade )
//		pFnAcceptInviteToTrade = (UFunction*) UObject::GObjObjects()->Data[ 52834 ];
//
//	UOnlineGameParty_X_execAcceptInviteToTrade_Parms AcceptInviteToTrade_Parms;
//	AcceptInviteToTrade_Parms.bAccepted = bAccepted;
//
//	this->ProcessEvent ( pFnAcceptInviteToTrade, &AcceptInviteToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.ResolveGuids
//// [0x00480002] 
//// Parameters infos:
//// struct FGuid                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FGuid                   A                              ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FGuid                   B                              ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//struct FGuid UOnlineGameParty_X::ResolveGuids ( struct FGuid* A, struct FGuid* B )
//{
//	static UFunction* pFnResolveGuids = NULL;
//
//	if ( ! pFnResolveGuids )
//		pFnResolveGuids = (UFunction*) UObject::GObjObjects()->Data[ 52836 ];
//
//	UOnlineGameParty_X_execResolveGuids_Parms ResolveGuids_Parms;
//
//	this->ProcessEvent ( pFnResolveGuids, &ResolveGuids_Parms, NULL );
//
//	if ( A )
//		memcpy ( A, &ResolveGuids_Parms.A, 0x10 );
//
//	if ( B )
//		memcpy ( B, &ResolveGuids_Parms.B, 0x10 );
//
//	return ResolveGuids_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetTradingPlayerID
//// [0x00820002] 
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FUniqueNetId UOnlineGameParty_X::GetTradingPlayerID ( )
//{
//	static UFunction* pFnGetTradingPlayerID = NULL;
//
//	if ( ! pFnGetTradingPlayerID )
//		pFnGetTradingPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 52850 ];
//
//	UOnlineGameParty_X_execGetTradingPlayerID_Parms GetTradingPlayerID_Parms;
//
//	this->ProcessEvent ( pFnGetTradingPlayerID, &GetTradingPlayerID_Parms, NULL );
//
//	return GetTradingPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetTradingPlayerName
//// [0x00820002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameParty_X::GetTradingPlayerName ( )
//{
//	static UFunction* pFnGetTradingPlayerName = NULL;
//
//	if ( ! pFnGetTradingPlayerName )
//		pFnGetTradingPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 52854 ];
//
//	UOnlineGameParty_X_execGetTradingPlayerName_Parms GetTradingPlayerName_Parms;
//
//	this->ProcessEvent ( pFnGetTradingPlayerName, &GetTradingPlayerName_Parms, NULL );
//
//	return GetTradingPlayerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleInviteToTradeMessage
//// [0x20080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UPartyMessage_InviteToTrade_X* Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleInviteToTradeMessage ( class UOnlineMessageComponent_X* Component, class UPartyMessage_InviteToTrade_X* Message )
//{
//	static UFunction* pFnHandleInviteToTradeMessage = NULL;
//
//	if ( ! pFnHandleInviteToTradeMessage )
//		pFnHandleInviteToTradeMessage = (UFunction*) UObject::GObjObjects()->Data[ 52859 ];
//
//	UOnlineGameParty_X_execHandleInviteToTradeMessage_Parms HandleInviteToTradeMessage_Parms;
//	HandleInviteToTradeMessage_Parms.Component = Component;
//	HandleInviteToTradeMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleInviteToTradeMessage, &HandleInviteToTradeMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.InvitePlayerToTrade
//// [0x00820002] 
//// Parameters infos:
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//void UOnlineGameParty_X::InvitePlayerToTrade ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnInvitePlayerToTrade = NULL;
//
//	if ( ! pFnInvitePlayerToTrade )
//		pFnInvitePlayerToTrade = (UFunction*) UObject::GObjObjects()->Data[ 52863 ];
//
//	UOnlineGameParty_X_execInvitePlayerToTrade_Parms InvitePlayerToTrade_Parms;
//	memcpy ( &InvitePlayerToTrade_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnInvitePlayerToTrade, &InvitePlayerToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPlayerTrading
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsPlayerTrading ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnIsPlayerTrading = NULL;
//
//	if ( ! pFnIsPlayerTrading )
//		pFnIsPlayerTrading = (UFunction*) UObject::GObjObjects()->Data[ 52869 ];
//
//	UOnlineGameParty_X_execIsPlayerTrading_Parms IsPlayerTrading_Parms;
//	memcpy ( &IsPlayerTrading_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnIsPlayerTrading, &IsPlayerTrading_Parms, NULL );
//
//	return IsPlayerTrading_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.SetPlayersTrading
//// [0x00820002] 
//// Parameters infos:
//// struct FUniqueNetId            InMember1Id                    ( CPF_Parm )
//// struct FUniqueNetId            InMember2Id                    ( CPF_Parm )
//// unsigned long                  bTrading                       ( CPF_Parm )
//
//void UOnlineGameParty_X::SetPlayersTrading ( struct FUniqueNetId InMember1Id, struct FUniqueNetId InMember2Id, unsigned long bTrading )
//{
//	static UFunction* pFnSetPlayersTrading = NULL;
//
//	if ( ! pFnSetPlayersTrading )
//		pFnSetPlayersTrading = (UFunction*) UObject::GObjObjects()->Data[ 52875 ];
//
//	UOnlineGameParty_X_execSetPlayersTrading_Parms SetPlayersTrading_Parms;
//	memcpy ( &SetPlayersTrading_Parms.InMember1Id, &InMember1Id, 0x48 );
//	memcpy ( &SetPlayersTrading_Parms.InMember2Id, &InMember2Id, 0x48 );
//	SetPlayersTrading_Parms.bTrading = bTrading;
//
//	this->ProcessEvent ( pFnSetPlayersTrading, &SetPlayersTrading_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetMemberName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//struct FString UOnlineGameParty_X::GetMemberName ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnGetMemberName = NULL;
//
//	if ( ! pFnGetMemberName )
//		pFnGetMemberName = (UFunction*) UObject::GObjObjects()->Data[ 52879 ];
//
//	UOnlineGameParty_X_execGetMemberName_Parms GetMemberName_Parms;
//	memcpy ( &GetMemberName_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnGetMemberName, &GetMemberName_Parms, NULL );
//
//	return GetMemberName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetOrderedPartyMemberIDs
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FUniqueNetId >  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FUniqueNetId > UOnlineGameParty_X::GetOrderedPartyMemberIDs ( )
//{
//	static UFunction* pFnGetOrderedPartyMemberIDs = NULL;
//
//	if ( ! pFnGetOrderedPartyMemberIDs )
//		pFnGetOrderedPartyMemberIDs = (UFunction*) UObject::GObjObjects()->Data[ 52306 ];
//
//	UOnlineGameParty_X_execGetOrderedPartyMemberIDs_Parms GetOrderedPartyMemberIDs_Parms;
//
//	this->ProcessEvent ( pFnGetOrderedPartyMemberIDs, &GetOrderedPartyMemberIDs_Parms, NULL );
//
//	return GetOrderedPartyMemberIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetPartyMemberIDs
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FUniqueNetId >  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FUniqueNetId > UOnlineGameParty_X::GetPartyMemberIDs ( )
//{
//	static UFunction* pFnGetPartyMemberIDs = NULL;
//
//	if ( ! pFnGetPartyMemberIDs )
//		pFnGetPartyMemberIDs = (UFunction*) UObject::GObjObjects()->Data[ 52890 ];
//
//	UOnlineGameParty_X_execGetPartyMemberIDs_Parms GetPartyMemberIDs_Parms;
//
//	this->ProcessEvent ( pFnGetPartyMemberIDs, &GetPartyMemberIDs_Parms, NULL );
//
//	return GetPartyMemberIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleSessionCreated
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::HandleSessionCreated ( )
//{
//	static UFunction* pFnHandleSessionCreated = NULL;
//
//	if ( ! pFnHandleSessionCreated )
//		pFnHandleSessionCreated = (UFunction*) UObject::GObjObjects()->Data[ 52895 ];
//
//	UOnlineGameParty_X_execHandleSessionCreated_Parms HandleSessionCreated_Parms;
//
//	this->ProcessEvent ( pFnHandleSessionCreated, &HandleSessionCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.IsProcessing
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::IsProcessing ( )
//{
//	static UFunction* pFnIsProcessing = NULL;
//
//	if ( ! pFnIsProcessing )
//		pFnIsProcessing = (UFunction*) UObject::GObjObjects()->Data[ 52772 ];
//
//	UOnlineGameParty_X_execIsProcessing_Parms IsProcessing_Parms;
//
//	this->ProcessEvent ( pFnIsProcessing, &IsProcessing_Parms, NULL );
//
//	return IsProcessing_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.SetProcessingStatus
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  Status                         ( CPF_Parm )
//
//void UOnlineGameParty_X::SetProcessingStatus ( unsigned char Status )
//{
//	static UFunction* pFnSetProcessingStatus = NULL;
//
//	if ( ! pFnSetProcessingStatus )
//		pFnSetProcessingStatus = (UFunction*) UObject::GObjObjects()->Data[ 52493 ];
//
//	UOnlineGameParty_X_execSetProcessingStatus_Parms SetProcessingStatus_Parms;
//	SetProcessingStatus_Parms.Status = Status;
//
//	this->ProcessEvent ( pFnSetProcessingStatus, &SetProcessingStatus_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.PrintDebugInfo
//// [0x00820102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameParty_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 52763 ];
//
//	UOnlineGameParty_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetPlayerRatingString
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// int                            Playlist                       ( CPF_Parm )
//
//struct FString UOnlineGameParty_X::GetPlayerRatingString ( struct FUniqueNetId PlayerID, int Playlist )
//{
//	static UFunction* pFnGetPlayerRatingString = NULL;
//
//	if ( ! pFnGetPlayerRatingString )
//		pFnGetPlayerRatingString = (UFunction*) UObject::GObjObjects()->Data[ 52758 ];
//
//	UOnlineGameParty_X_execGetPlayerRatingString_Parms GetPlayerRatingString_Parms;
//	memcpy ( &GetPlayerRatingString_Parms.PlayerID, &PlayerID, 0x48 );
//	GetPlayerRatingString_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnGetPlayerRatingString, &GetPlayerRatingString_Parms, NULL );
//
//	return GetPlayerRatingString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.OnPartyError
//// [0x00080002] 
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameParty_X::OnPartyError ( class UError* Error )
//{
//	static UFunction* pFnOnPartyError = NULL;
//
//	if ( ! pFnOnPartyError )
//		pFnOnPartyError = (UFunction*) UObject::GObjObjects()->Data[ 52756 ];
//
//	UOnlineGameParty_X_execOnPartyError_Parms OnPartyError_Parms;
//	OnPartyError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnOnPartyError, &OnPartyError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePartyError
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandlePartyError ( struct FString Error )
//{
//	static UFunction* pFnHandlePartyError = NULL;
//
//	if ( ! pFnHandlePartyError )
//		pFnHandlePartyError = (UFunction*) UObject::GObjObjects()->Data[ 52754 ];
//
//	UOnlineGameParty_X_execHandlePartyError_Parms HandlePartyError_Parms;
//	memcpy ( &HandlePartyError_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnHandlePartyError, &HandlePartyError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnPartyChanged
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::OnPartyChanged ( )
//{
//	static UFunction* pFnOnPartyChanged = NULL;
//
//	if ( ! pFnOnPartyChanged )
//		pFnOnPartyChanged = (UFunction*) UObject::GObjObjects()->Data[ 52752 ];
//
//	UOnlineGameParty_X_execOnPartyChanged_Parms OnPartyChanged_Parms;
//
//	this->ProcessEvent ( pFnOnPartyChanged, &OnPartyChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.TryGetValueInt
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// TArray< struct FLobbyMetaData > MetaData                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// int                            Value                          ( CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameParty_X::TryGetValueInt ( struct FString Key, TArray< struct FLobbyMetaData >* MetaData, int* Value )
//{
//	static UFunction* pFnTryGetValueInt = NULL;
//
//	if ( ! pFnTryGetValueInt )
//		pFnTryGetValueInt = (UFunction*) UObject::GObjObjects()->Data[ 52745 ];
//
//	UOnlineGameParty_X_execTryGetValueInt_Parms TryGetValueInt_Parms;
//	memcpy ( &TryGetValueInt_Parms.Key, &Key, 0xC );
//
//	this->ProcessEvent ( pFnTryGetValueInt, &TryGetValueInt_Parms, NULL );
//
//	if ( MetaData )
//		memcpy ( MetaData, &TryGetValueInt_Parms.MetaData, 0xC );
//
//	if ( Value )
//		*Value = TryGetValueInt_Parms.Value;
//
//	return TryGetValueInt_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.PartyHasDisableCrossPlay
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::PartyHasDisableCrossPlay ( )
//{
//	static UFunction* pFnPartyHasDisableCrossPlay = NULL;
//
//	if ( ! pFnPartyHasDisableCrossPlay )
//		pFnPartyHasDisableCrossPlay = (UFunction*) UObject::GObjObjects()->Data[ 51635 ];
//
//	UOnlineGameParty_X_execPartyHasDisableCrossPlay_Parms PartyHasDisableCrossPlay_Parms;
//
//	this->ProcessEvent ( pFnPartyHasDisableCrossPlay, &PartyHasDisableCrossPlay_Parms, NULL );
//
//	return PartyHasDisableCrossPlay_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.SetDisableCrossPlayForMember
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PartyMemberID                  ( CPF_Parm )
//// unsigned long                  bDisableCrossPlay              ( CPF_Parm )
//
//void UOnlineGameParty_X::SetDisableCrossPlayForMember ( struct FUniqueNetId PartyMemberID, unsigned long bDisableCrossPlay )
//{
//	static UFunction* pFnSetDisableCrossPlayForMember = NULL;
//
//	if ( ! pFnSetDisableCrossPlayForMember )
//		pFnSetDisableCrossPlayForMember = (UFunction*) UObject::GObjObjects()->Data[ 52901 ];
//
//	UOnlineGameParty_X_execSetDisableCrossPlayForMember_Parms SetDisableCrossPlayForMember_Parms;
//	memcpy ( &SetDisableCrossPlayForMember_Parms.PartyMemberID, &PartyMemberID, 0x48 );
//	SetDisableCrossPlayForMember_Parms.bDisableCrossPlay = bDisableCrossPlay;
//
//	this->ProcessEvent ( pFnSetDisableCrossPlayForMember, &SetDisableCrossPlayForMember_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleDisableCrossPlayMessage
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleDisableCrossPlayMessage ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleDisableCrossPlayMessage = NULL;
//
//	if ( ! pFnHandleDisableCrossPlayMessage )
//		pFnHandleDisableCrossPlayMessage = (UFunction*) UObject::GObjObjects()->Data[ 52903 ];
//
//	UOnlineGameParty_X_execHandleDisableCrossPlayMessage_Parms HandleDisableCrossPlayMessage_Parms;
//	HandleDisableCrossPlayMessage_Parms.Component = Component;
//	HandleDisableCrossPlayMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleDisableCrossPlayMessage, &HandleDisableCrossPlayMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastDisableCrossPlay
//// [0x00880003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastDisableCrossPlay ( )
//{
//	static UFunction* pFnBroadcastDisableCrossPlay = NULL;
//
//	if ( ! pFnBroadcastDisableCrossPlay )
//		pFnBroadcastDisableCrossPlay = (UFunction*) UObject::GObjObjects()->Data[ 52907 ];
//
//	UOnlineGameParty_X_execBroadcastDisableCrossPlay_Parms BroadcastDisableCrossPlay_Parms;
//
//	this->ProcessEvent ( pFnBroadcastDisableCrossPlay, &BroadcastDisableCrossPlay_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetAnyLoggedInRestrictionPlayerName
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameParty_X::GetAnyLoggedInRestrictionPlayerName ( )
//{
//	static UFunction* pFnGetAnyLoggedInRestrictionPlayerName = NULL;
//
//	if ( ! pFnGetAnyLoggedInRestrictionPlayerName )
//		pFnGetAnyLoggedInRestrictionPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 52913 ];
//
//	UOnlineGameParty_X_execGetAnyLoggedInRestrictionPlayerName_Parms GetAnyLoggedInRestrictionPlayerName_Parms;
//
//	this->ProcessEvent ( pFnGetAnyLoggedInRestrictionPlayerName, &GetAnyLoggedInRestrictionPlayerName_Parms, NULL );
//
//	return GetAnyLoggedInRestrictionPlayerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetAnyAppOwnerRestrictionPlayerName
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameParty_X::GetAnyAppOwnerRestrictionPlayerName ( )
//{
//	static UFunction* pFnGetAnyAppOwnerRestrictionPlayerName = NULL;
//
//	if ( ! pFnGetAnyAppOwnerRestrictionPlayerName )
//		pFnGetAnyAppOwnerRestrictionPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 52920 ];
//
//	UOnlineGameParty_X_execGetAnyAppOwnerRestrictionPlayerName_Parms GetAnyAppOwnerRestrictionPlayerName_Parms;
//
//	this->ProcessEvent ( pFnGetAnyAppOwnerRestrictionPlayerName, &GetAnyAppOwnerRestrictionPlayerName_Parms, NULL );
//
//	return GetAnyAppOwnerRestrictionPlayerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetMatchmakingRestrictionError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameParty_X::GetMatchmakingRestrictionError ( )
//{
//	static UFunction* pFnGetMatchmakingRestrictionError = NULL;
//
//	if ( ! pFnGetMatchmakingRestrictionError )
//		pFnGetMatchmakingRestrictionError = (UFunction*) UObject::GObjObjects()->Data[ 51380 ];
//
//	UOnlineGameParty_X_execGetMatchmakingRestrictionError_Parms GetMatchmakingRestrictionError_Parms;
//
//	this->ProcessEvent ( pFnGetMatchmakingRestrictionError, &GetMatchmakingRestrictionError_Parms, NULL );
//
//	return GetMatchmakingRestrictionError_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPlayerInMainMenu
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsPlayerInMainMenu ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnIsPlayerInMainMenu = NULL;
//
//	if ( ! pFnIsPlayerInMainMenu )
//		pFnIsPlayerInMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 52925 ];
//
//	UOnlineGameParty_X_execIsPlayerInMainMenu_Parms IsPlayerInMainMenu_Parms;
//	memcpy ( &IsPlayerInMainMenu_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnIsPlayerInMainMenu, &IsPlayerInMainMenu_Parms, NULL );
//
//	return IsPlayerInMainMenu_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPlayerInMatch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsPlayerInMatch ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnIsPlayerInMatch = NULL;
//
//	if ( ! pFnIsPlayerInMatch )
//		pFnIsPlayerInMatch = (UFunction*) UObject::GObjObjects()->Data[ 52927 ];
//
//	UOnlineGameParty_X_execIsPlayerInMatch_Parms IsPlayerInMatch_Parms;
//	memcpy ( &IsPlayerInMatch_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnIsPlayerInMatch, &IsPlayerInMatch_Parms, NULL );
//
//	return IsPlayerInMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.SetAvailableForMatchmakingForMember
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PartyMemberID                  ( CPF_Parm )
//// int                            MatchmakeRestrictions          ( CPF_Parm )
//
//void UOnlineGameParty_X::SetAvailableForMatchmakingForMember ( struct FUniqueNetId PartyMemberID, int MatchmakeRestrictions )
//{
//	static UFunction* pFnSetAvailableForMatchmakingForMember = NULL;
//
//	if ( ! pFnSetAvailableForMatchmakingForMember )
//		pFnSetAvailableForMatchmakingForMember = (UFunction*) UObject::GObjObjects()->Data[ 52738 ];
//
//	UOnlineGameParty_X_execSetAvailableForMatchmakingForMember_Parms SetAvailableForMatchmakingForMember_Parms;
//	memcpy ( &SetAvailableForMatchmakingForMember_Parms.PartyMemberID, &PartyMemberID, 0x48 );
//	SetAvailableForMatchmakingForMember_Parms.MatchmakeRestrictions = MatchmakeRestrictions;
//
//	this->ProcessEvent ( pFnSetAvailableForMatchmakingForMember, &SetAvailableForMatchmakingForMember_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleMatchmakingAvailability
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleMatchmakingAvailability ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleMatchmakingAvailability = NULL;
//
//	if ( ! pFnHandleMatchmakingAvailability )
//		pFnHandleMatchmakingAvailability = (UFunction*) UObject::GObjObjects()->Data[ 52733 ];
//
//	UOnlineGameParty_X_execHandleMatchmakingAvailability_Parms HandleMatchmakingAvailability_Parms;
//	HandleMatchmakingAvailability_Parms.Component = Component;
//	HandleMatchmakingAvailability_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleMatchmakingAvailability, &HandleMatchmakingAvailability_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BuildMatchmakingRestrictions
//// [0x00080002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameParty_X::BuildMatchmakingRestrictions ( )
//{
//	static UFunction* pFnBuildMatchmakingRestrictions = NULL;
//
//	if ( ! pFnBuildMatchmakingRestrictions )
//		pFnBuildMatchmakingRestrictions = (UFunction*) UObject::GObjObjects()->Data[ 52737 ];
//
//	UOnlineGameParty_X_execBuildMatchmakingRestrictions_Parms BuildMatchmakingRestrictions_Parms;
//
//	this->ProcessEvent ( pFnBuildMatchmakingRestrictions, &BuildMatchmakingRestrictions_Parms, NULL );
//
//	return BuildMatchmakingRestrictions_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastMatchmakingAvailabilityDelayed
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastMatchmakingAvailabilityDelayed ( )
//{
//	static UFunction* pFnBroadcastMatchmakingAvailabilityDelayed = NULL;
//
//	if ( ! pFnBroadcastMatchmakingAvailabilityDelayed )
//		pFnBroadcastMatchmakingAvailabilityDelayed = (UFunction*) UObject::GObjObjects()->Data[ 52936 ];
//
//	UOnlineGameParty_X_execBroadcastMatchmakingAvailabilityDelayed_Parms BroadcastMatchmakingAvailabilityDelayed_Parms;
//
//	this->ProcessEvent ( pFnBroadcastMatchmakingAvailabilityDelayed, &BroadcastMatchmakingAvailabilityDelayed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastMatchmakingAvailability
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastMatchmakingAvailability ( )
//{
//	static UFunction* pFnBroadcastMatchmakingAvailability = NULL;
//
//	if ( ! pFnBroadcastMatchmakingAvailability )
//		pFnBroadcastMatchmakingAvailability = (UFunction*) UObject::GObjObjects()->Data[ 52662 ];
//
//	UOnlineGameParty_X_execBroadcastMatchmakingAvailability_Parms BroadcastMatchmakingAvailability_Parms;
//
//	this->ProcessEvent ( pFnBroadcastMatchmakingAvailability, &BroadcastMatchmakingAvailability_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastAllLocalPlayers
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastAllLocalPlayers ( )
//{
//	static UFunction* pFnBroadcastAllLocalPlayers = NULL;
//
//	if ( ! pFnBroadcastAllLocalPlayers )
//		pFnBroadcastAllLocalPlayers = (UFunction*) UObject::GObjObjects()->Data[ 52727 ];
//
//	UOnlineGameParty_X_execBroadcastAllLocalPlayers_Parms BroadcastAllLocalPlayers_Parms;
//
//	this->ProcessEvent ( pFnBroadcastAllLocalPlayers, &BroadcastAllLocalPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastLocalPlayersDelayed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastLocalPlayersDelayed ( )
//{
//	static UFunction* pFnBroadcastLocalPlayersDelayed = NULL;
//
//	if ( ! pFnBroadcastLocalPlayersDelayed )
//		pFnBroadcastLocalPlayersDelayed = (UFunction*) UObject::GObjObjects()->Data[ 52724 ];
//
//	UOnlineGameParty_X_execBroadcastLocalPlayersDelayed_Parms BroadcastLocalPlayersDelayed_Parms;
//
//	this->ProcessEvent ( pFnBroadcastLocalPlayersDelayed, &BroadcastLocalPlayersDelayed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastLocalPlayers
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastLocalPlayers ( )
//{
//	static UFunction* pFnBroadcastLocalPlayers = NULL;
//
//	if ( ! pFnBroadcastLocalPlayers )
//		pFnBroadcastLocalPlayers = (UFunction*) UObject::GObjObjects()->Data[ 52596 ];
//
//	UOnlineGameParty_X_execBroadcastLocalPlayers_Parms BroadcastLocalPlayers_Parms;
//
//	this->ProcessEvent ( pFnBroadcastLocalPlayers, &BroadcastLocalPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePsyNetLoginChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlineGameParty_X::HandlePsyNetLoginChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnHandlePsyNetLoginChanged = NULL;
//
//	if ( ! pFnHandlePsyNetLoginChanged )
//		pFnHandlePsyNetLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 52723 ];
//
//	UOnlineGameParty_X_execHandlePsyNetLoginChanged_Parms HandlePsyNetLoginChanged_Parms;
//	HandlePsyNetLoginChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLocalPlayerLoginStatusChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleLocalPlayerLoginStatusChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnHandleLocalPlayerLoginStatusChanged = NULL;
//
//	if ( ! pFnHandleLocalPlayerLoginStatusChanged )
//		pFnHandleLocalPlayerLoginStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 52717 ];
//
//	UOnlineGameParty_X_execHandleLocalPlayerLoginStatusChanged_Parms HandleLocalPlayerLoginStatusChanged_Parms;
//	HandleLocalPlayerLoginStatusChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandleLocalPlayerLoginStatusChanged, &HandleLocalPlayerLoginStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLocalPlayerLeave
//// [0x00080002] 
//// Parameters infos:
//// class ULocalPlayer*            Player                         ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleLocalPlayerLeave ( class ULocalPlayer* Player )
//{
//	static UFunction* pFnHandleLocalPlayerLeave = NULL;
//
//	if ( ! pFnHandleLocalPlayerLeave )
//		pFnHandleLocalPlayerLeave = (UFunction*) UObject::GObjObjects()->Data[ 52714 ];
//
//	UOnlineGameParty_X_execHandleLocalPlayerLeave_Parms HandleLocalPlayerLeave_Parms;
//	HandleLocalPlayerLeave_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandleLocalPlayerLeave, &HandleLocalPlayerLeave_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.UpdatePartyMember
//// [0x20080002] 
//// Parameters infos:
//// class ULocalPlayer_X*          Player                         ( CPF_Parm )
//
//void UOnlineGameParty_X::UpdatePartyMember ( class ULocalPlayer_X* Player )
//{
//	static UFunction* pFnUpdatePartyMember = NULL;
//
//	if ( ! pFnUpdatePartyMember )
//		pFnUpdatePartyMember = (UFunction*) UObject::GObjObjects()->Data[ 52716 ];
//
//	UOnlineGameParty_X_execUpdatePartyMember_Parms UpdatePartyMember_Parms;
//	UpdatePartyMember_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnUpdatePartyMember, &UpdatePartyMember_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleOnlinePlayerNameChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleOnlinePlayerNameChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnHandleOnlinePlayerNameChanged = NULL;
//
//	if ( ! pFnHandleOnlinePlayerNameChanged )
//		pFnHandleOnlinePlayerNameChanged = (UFunction*) UObject::GObjObjects()->Data[ 52946 ];
//
//	UOnlineGameParty_X_execHandleOnlinePlayerNameChanged_Parms HandleOnlinePlayerNameChanged_Parms;
//	HandleOnlinePlayerNameChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandleOnlinePlayerNameChanged, &HandleOnlinePlayerNameChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLocalPlayerJoin
//// [0x00080002] 
//// Parameters infos:
//// class ULocalPlayer*            Player                         ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleLocalPlayerJoin ( class ULocalPlayer* Player )
//{
//	static UFunction* pFnHandleLocalPlayerJoin = NULL;
//
//	if ( ! pFnHandleLocalPlayerJoin )
//		pFnHandleLocalPlayerJoin = (UFunction*) UObject::GObjObjects()->Data[ 52712 ];
//
//	UOnlineGameParty_X_execHandleLocalPlayerJoin_Parms HandleLocalPlayerJoin_Parms;
//	HandleLocalPlayerJoin_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandleLocalPlayerJoin, &HandleLocalPlayerJoin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.ProcessLocalPlayersMessage
//// [0x00080002] 
//// Parameters infos:
//// class UPartyMessage_LocalPlayers_X* Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::ProcessLocalPlayersMessage ( class UPartyMessage_LocalPlayers_X* Message )
//{
//	static UFunction* pFnProcessLocalPlayersMessage = NULL;
//
//	if ( ! pFnProcessLocalPlayersMessage )
//		pFnProcessLocalPlayersMessage = (UFunction*) UObject::GObjObjects()->Data[ 52704 ];
//
//	UOnlineGameParty_X_execProcessLocalPlayersMessage_Parms ProcessLocalPlayersMessage_Parms;
//	ProcessLocalPlayersMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnProcessLocalPlayersMessage, &ProcessLocalPlayersMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLocalPlayers
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 ObjMessage                     ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleLocalPlayers ( class UOnlineMessageComponent_X* Component, class UObject* ObjMessage )
//{
//	static UFunction* pFnHandleLocalPlayers = NULL;
//
//	if ( ! pFnHandleLocalPlayers )
//		pFnHandleLocalPlayers = (UFunction*) UObject::GObjObjects()->Data[ 52696 ];
//
//	UOnlineGameParty_X_execHandleLocalPlayers_Parms HandleLocalPlayers_Parms;
//	HandleLocalPlayers_Parms.Component = Component;
//	HandleLocalPlayers_Parms.ObjMessage = ObjMessage;
//
//	this->ProcessEvent ( pFnHandleLocalPlayers, &HandleLocalPlayers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.AllowSplitScreenPlayer
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ControllerId                   ( CPF_Parm )
//// class UError*                  OutError                       ( CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameParty_X::AllowSplitScreenPlayer ( int ControllerId, class UError** OutError )
//{
//	static UFunction* pFnAllowSplitScreenPlayer = NULL;
//
//	if ( ! pFnAllowSplitScreenPlayer )
//		pFnAllowSplitScreenPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52691 ];
//
//	UOnlineGameParty_X_execAllowSplitScreenPlayer_Parms AllowSplitScreenPlayer_Parms;
//	AllowSplitScreenPlayer_Parms.ControllerId = ControllerId;
//
//	this->ProcessEvent ( pFnAllowSplitScreenPlayer, &AllowSplitScreenPlayer_Parms, NULL );
//
//	if ( OutError )
//		*OutError = AllowSplitScreenPlayer_Parms.OutError;
//
//	return AllowSplitScreenPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetPartySize
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameParty_X::GetPartySize ( )
//{
//	static UFunction* pFnGetPartySize = NULL;
//
//	if ( ! pFnGetPartySize )
//		pFnGetPartySize = (UFunction*) UObject::GObjObjects()->Data[ 52473 ];
//
//	UOnlineGameParty_X_execGetPartySize_Parms GetPartySize_Parms;
//
//	this->ProcessEvent ( pFnGetPartySize, &GetPartySize_Parms, NULL );
//
//	return GetPartySize_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleSearchStatus
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleSearchStatus ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleSearchStatus = NULL;
//
//	if ( ! pFnHandleSearchStatus )
//		pFnHandleSearchStatus = (UFunction*) UObject::GObjObjects()->Data[ 52686 ];
//
//	UOnlineGameParty_X_execHandleSearchStatus_Parms HandleSearchStatus_Parms;
//	HandleSearchStatus_Parms.Component = Component;
//	HandleSearchStatus_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleSearchStatus, &HandleSearchStatus_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastSearchStatus
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastSearchStatus ( )
//{
//	static UFunction* pFnBroadcastSearchStatus = NULL;
//
//	if ( ! pFnBroadcastSearchStatus )
//		pFnBroadcastSearchStatus = (UFunction*) UObject::GObjObjects()->Data[ 52685 ];
//
//	UOnlineGameParty_X_execBroadcastSearchStatus_Parms BroadcastSearchStatus_Parms;
//
//	this->ProcessEvent ( pFnBroadcastSearchStatus, &BroadcastSearchStatus_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetSearchStatusMessage
//// [0x00080002] 
//// Parameters infos:
//// class UPartyMessage_SearchStatus_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPartyMessage_SearchStatus_X* UOnlineGameParty_X::GetSearchStatusMessage ( )
//{
//	static UFunction* pFnGetSearchStatusMessage = NULL;
//
//	if ( ! pFnGetSearchStatusMessage )
//		pFnGetSearchStatusMessage = (UFunction*) UObject::GObjObjects()->Data[ 52683 ];
//
//	UOnlineGameParty_X_execGetSearchStatusMessage_Parms GetSearchStatusMessage_Parms;
//
//	this->ProcessEvent ( pFnGetSearchStatusMessage, &GetSearchStatusMessage_Parms, NULL );
//
//	return GetSearchStatusMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.TogglePartyLock
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::TogglePartyLock ( )
//{
//	static UFunction* pFnTogglePartyLock = NULL;
//
//	if ( ! pFnTogglePartyLock )
//		pFnTogglePartyLock = (UFunction*) UObject::GObjObjects()->Data[ 52681 ];
//
//	UOnlineGameParty_X_execTogglePartyLock_Parms TogglePartyLock_Parms;
//
//	this->ProcessEvent ( pFnTogglePartyLock, &TogglePartyLock_Parms, NULL );
//
//	return TogglePartyLock_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetMaxPartySize
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameParty_X::GetMaxPartySize ( )
//{
//	static UFunction* pFnGetMaxPartySize = NULL;
//
//	if ( ! pFnGetMaxPartySize )
//		pFnGetMaxPartySize = (UFunction*) UObject::GObjObjects()->Data[ 52677 ];
//
//	UOnlineGameParty_X_execGetMaxPartySize_Parms GetMaxPartySize_Parms;
//
//	this->ProcessEvent ( pFnGetMaxPartySize, &GetMaxPartySize_Parms, NULL );
//
//	return GetMaxPartySize_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.AllowPartySize
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InSize                         ( CPF_Parm )
//
//bool UOnlineGameParty_X::AllowPartySize ( int InSize )
//{
//	static UFunction* pFnAllowPartySize = NULL;
//
//	if ( ! pFnAllowPartySize )
//		pFnAllowPartySize = (UFunction*) UObject::GObjObjects()->Data[ 52673 ];
//
//	UOnlineGameParty_X_execAllowPartySize_Parms AllowPartySize_Parms;
//	AllowPartySize_Parms.InSize = InSize;
//
//	this->ProcessEvent ( pFnAllowPartySize, &AllowPartySize_Parms, NULL );
//
//	return AllowPartySize_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPartyOverFull
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::IsPartyOverFull ( )
//{
//	static UFunction* pFnIsPartyOverFull = NULL;
//
//	if ( ! pFnIsPartyOverFull )
//		pFnIsPartyOverFull = (UFunction*) UObject::GObjObjects()->Data[ 52584 ];
//
//	UOnlineGameParty_X_execIsPartyOverFull_Parms IsPartyOverFull_Parms;
//
//	this->ProcessEvent ( pFnIsPartyOverFull, &IsPartyOverFull_Parms, NULL );
//
//	return IsPartyOverFull_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.AllowNewMember
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::AllowNewMember ( )
//{
//	static UFunction* pFnAllowNewMember = NULL;
//
//	if ( ! pFnAllowNewMember )
//		pFnAllowNewMember = (UFunction*) UObject::GObjObjects()->Data[ 52527 ];
//
//	UOnlineGameParty_X_execAllowNewMember_Parms AllowNewMember_Parms;
//
//	this->ProcessEvent ( pFnAllowNewMember, &AllowNewMember_Parms, NULL );
//
//	return AllowNewMember_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.UpdatePartyLock
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::UpdatePartyLock ( )
//{
//	static UFunction* pFnUpdatePartyLock = NULL;
//
//	if ( ! pFnUpdatePartyLock )
//		pFnUpdatePartyLock = (UFunction*) UObject::GObjObjects()->Data[ 52474 ];
//
//	UOnlineGameParty_X_execUpdatePartyLock_Parms UpdatePartyLock_Parms;
//
//	this->ProcessEvent ( pFnUpdatePartyLock, &UpdatePartyLock_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleFindGameStateChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   NewState                       ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleFindGameStateChanged ( struct FName NewState )
//{
//	static UFunction* pFnHandleFindGameStateChanged = NULL;
//
//	if ( ! pFnHandleFindGameStateChanged )
//		pFnHandleFindGameStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 52671 ];
//
//	UOnlineGameParty_X_execHandleFindGameStateChanged_Parms HandleFindGameStateChanged_Parms;
//	memcpy ( &HandleFindGameStateChanged_Parms.NewState, &NewState, 0x8 );
//
//	this->ProcessEvent ( pFnHandleFindGameStateChanged, &HandleFindGameStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.ClearLastServerAddress
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::ClearLastServerAddress ( )
//{
//	static UFunction* pFnClearLastServerAddress = NULL;
//
//	if ( ! pFnClearLastServerAddress )
//		pFnClearLastServerAddress = (UFunction*) UObject::GObjObjects()->Data[ 50044 ];
//
//	UOnlineGameParty_X_execClearLastServerAddress_Parms ClearLastServerAddress_Parms;
//
//	this->ProcessEvent ( pFnClearLastServerAddress, &ClearLastServerAddress_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnNewGameInfoCreated
//// [0x00020002] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGameParty_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 52665 ];
//
//	UOnlineGameParty_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnNewSettingsChosen
//// [0x00020002] 
//// Parameters infos:
//// int                            PlaylistId                     ( CPF_Parm )
//
//void UOnlineGameParty_X::OnNewSettingsChosen ( int PlaylistId )
//{
//	static UFunction* pFnOnNewSettingsChosen = NULL;
//
//	if ( ! pFnOnNewSettingsChosen )
//		pFnOnNewSettingsChosen = (UFunction*) UObject::GObjObjects()->Data[ 52663 ];
//
//	UOnlineGameParty_X_execOnNewSettingsChosen_Parms OnNewSettingsChosen_Parms;
//	OnNewSettingsChosen_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnOnNewSettingsChosen, &OnNewSettingsChosen_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnNewGame
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::OnNewGame ( )
//{
//	static UFunction* pFnOnNewGame = NULL;
//
//	if ( ! pFnOnNewGame )
//		pFnOnNewGame = (UFunction*) UObject::GObjObjects()->Data[ 52661 ];
//
//	UOnlineGameParty_X_execOnNewGame_Parms OnNewGame_Parms;
//
//	this->ProcessEvent ( pFnOnNewGame, &OnNewGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SetMatchmakingSearching
//// [0x00020002] 
//// Parameters infos:
//// unsigned long                  bState                         ( CPF_Parm )
//
//void UOnlineGameParty_X::SetMatchmakingSearching ( unsigned long bState )
//{
//	static UFunction* pFnSetMatchmakingSearching = NULL;
//
//	if ( ! pFnSetMatchmakingSearching )
//		pFnSetMatchmakingSearching = (UFunction*) UObject::GObjObjects()->Data[ 52659 ];
//
//	UOnlineGameParty_X_execSetMatchmakingSearching_Parms SetMatchmakingSearching_Parms;
//	SetMatchmakingSearching_Parms.bState = bState;
//
//	this->ProcessEvent ( pFnSetMatchmakingSearching, &SetMatchmakingSearching_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SetSearchState
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   SearchState                    ( CPF_Parm )
//
//void UOnlineGameParty_X::SetSearchState ( struct FName SearchState )
//{
//	static UFunction* pFnSetSearchState = NULL;
//
//	if ( ! pFnSetSearchState )
//		pFnSetSearchState = (UFunction*) UObject::GObjObjects()->Data[ 52657 ];
//
//	UOnlineGameParty_X_execSetSearchState_Parms SetSearchState_Parms;
//	memcpy ( &SetSearchState_Parms.SearchState, &SearchState, 0x8 );
//
//	this->ProcessEvent ( pFnSetSearchState, &SetSearchState_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetLocalMemberId
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FUniqueNetId UOnlineGameParty_X::GetLocalMemberId ( )
//{
//	static UFunction* pFnGetLocalMemberId = NULL;
//
//	if ( ! pFnGetLocalMemberId )
//		pFnGetLocalMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52523 ];
//
//	UOnlineGameParty_X_execGetLocalMemberId_Parms GetLocalMemberId_Parms;
//
//	this->ProcessEvent ( pFnGetLocalMemberId, &GetLocalMemberId_Parms, NULL );
//
//	return GetLocalMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsMemberLocal
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsMemberLocal ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnIsMemberLocal = NULL;
//
//	if ( ! pFnIsMemberLocal )
//		pFnIsMemberLocal = (UFunction*) UObject::GObjObjects()->Data[ 52512 ];
//
//	UOnlineGameParty_X_execIsMemberLocal_Parms IsMemberLocal_Parms;
//	memcpy ( &IsMemberLocal_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnIsMemberLocal, &IsMemberLocal_Parms, NULL );
//
//	return IsMemberLocal_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HasRemoteMember
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::HasRemoteMember ( )
//{
//	static UFunction* pFnHasRemoteMember = NULL;
//
//	if ( ! pFnHasRemoteMember )
//		pFnHasRemoteMember = (UFunction*) UObject::GObjObjects()->Data[ 52650 ];
//
//	UOnlineGameParty_X_execHasRemoteMember_Parms HasRemoteMember_Parms;
//
//	this->ProcessEvent ( pFnHasRemoteMember, &HasRemoteMember_Parms, NULL );
//
//	return HasRemoteMember_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.OnPartyLeaderChanged
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::OnPartyLeaderChanged ( )
//{
//	static UFunction* pFnOnPartyLeaderChanged = NULL;
//
//	if ( ! pFnOnPartyLeaderChanged )
//		pFnOnPartyLeaderChanged = (UFunction*) UObject::GObjObjects()->Data[ 52653 ];
//
//	UOnlineGameParty_X_execOnPartyLeaderChanged_Parms OnPartyLeaderChanged_Parms;
//
//	this->ProcessEvent ( pFnOnPartyLeaderChanged, &OnPartyLeaderChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleKickMessage
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleKickMessage ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleKickMessage = NULL;
//
//	if ( ! pFnHandleKickMessage )
//		pFnHandleKickMessage = (UFunction*) UObject::GObjObjects()->Data[ 52640 ];
//
//	UOnlineGameParty_X_execHandleKickMessage_Parms HandleKickMessage_Parms;
//	HandleKickMessage_Parms.Component = Component;
//	HandleKickMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleKickMessage, &HandleKickMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLobbySettingsUpdateMessage
//// [0x20080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UPartyMessage_LobbySettings_X* LobbySettingsMessage           ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleLobbySettingsUpdateMessage ( class UOnlineMessageComponent_X* Component, class UPartyMessage_LobbySettings_X* LobbySettingsMessage )
//{
//	static UFunction* pFnHandleLobbySettingsUpdateMessage = NULL;
//
//	if ( ! pFnHandleLobbySettingsUpdateMessage )
//		pFnHandleLobbySettingsUpdateMessage = (UFunction*) UObject::GObjObjects()->Data[ 52645 ];
//
//	UOnlineGameParty_X_execHandleLobbySettingsUpdateMessage_Parms HandleLobbySettingsUpdateMessage_Parms;
//	HandleLobbySettingsUpdateMessage_Parms.Component = Component;
//	HandleLobbySettingsUpdateMessage_Parms.LobbySettingsMessage = LobbySettingsMessage;
//
//	this->ProcessEvent ( pFnHandleLobbySettingsUpdateMessage, &HandleLobbySettingsUpdateMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLobbyDestroyed
//// [0x00480002] 
//// Parameters infos:
//// unsigned char                  Reason                         ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::HandleLobbyDestroyed ( unsigned char Reason, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnHandleLobbyDestroyed = NULL;
//
//	if ( ! pFnHandleLobbyDestroyed )
//		pFnHandleLobbyDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52633 ];
//
//	UOnlineGameParty_X_execHandleLobbyDestroyed_Parms HandleLobbyDestroyed_Parms;
//	HandleLobbyDestroyed_Parms.Reason = Reason;
//
//	this->ProcessEvent ( pFnHandleLobbyDestroyed, &HandleLobbyDestroyed_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &HandleLobbyDestroyed_Parms.LobbyId, 0xC );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLobbyReceiveBinaryData
//// [0x00480002] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< unsigned char >        Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandleLobbyReceiveBinaryData ( int MemberIndex, struct FActiveLobbyInfo* LobbyInfo, TArray< unsigned char >* Data )
//{
//	static UFunction* pFnHandleLobbyReceiveBinaryData = NULL;
//
//	if ( ! pFnHandleLobbyReceiveBinaryData )
//		pFnHandleLobbyReceiveBinaryData = (UFunction*) UObject::GObjObjects()->Data[ 52625 ];
//
//	UOnlineGameParty_X_execHandleLobbyReceiveBinaryData_Parms HandleLobbyReceiveBinaryData_Parms;
//	HandleLobbyReceiveBinaryData_Parms.MemberIndex = MemberIndex;
//
//	this->ProcessEvent ( pFnHandleLobbyReceiveBinaryData, &HandleLobbyReceiveBinaryData_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &HandleLobbyReceiveBinaryData_Parms.LobbyInfo, 0x24 );
//
//	if ( Data )
//		memcpy ( Data, &HandleLobbyReceiveBinaryData_Parms.Data, 0xC );
//};
//
//// Function ProjectX.OnlineGameParty_X.RemoveAllPartyMembers
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::RemoveAllPartyMembers ( )
//{
//	static UFunction* pFnRemoveAllPartyMembers = NULL;
//
//	if ( ! pFnRemoveAllPartyMembers )
//		pFnRemoveAllPartyMembers = (UFunction*) UObject::GObjObjects()->Data[ 52631 ];
//
//	UOnlineGameParty_X_execRemoveAllPartyMembers_Parms RemoveAllPartyMembers_Parms;
//
//	this->ProcessEvent ( pFnRemoveAllPartyMembers, &RemoveAllPartyMembers_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.RemovePartyMemberByLocalPlayer
//// [0x00080002] 
//// Parameters infos:
//// class ULocalPlayer*            Player                         ( CPF_Parm )
//
//void UOnlineGameParty_X::RemovePartyMemberByLocalPlayer ( class ULocalPlayer* Player )
//{
//	static UFunction* pFnRemovePartyMemberByLocalPlayer = NULL;
//
//	if ( ! pFnRemovePartyMemberByLocalPlayer )
//		pFnRemovePartyMemberByLocalPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52622 ];
//
//	UOnlineGameParty_X_execRemovePartyMemberByLocalPlayer_Parms RemovePartyMemberByLocalPlayer_Parms;
//	RemovePartyMemberByLocalPlayer_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnRemovePartyMemberByLocalPlayer, &RemovePartyMemberByLocalPlayer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.RemovePartyMemberByID
//// [0x00080002] 
//// Parameters infos:
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//void UOnlineGameParty_X::RemovePartyMemberByID ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnRemovePartyMemberByID = NULL;
//
//	if ( ! pFnRemovePartyMemberByID )
//		pFnRemovePartyMemberByID = (UFunction*) UObject::GObjObjects()->Data[ 52619 ];
//
//	UOnlineGameParty_X_execRemovePartyMemberByID_Parms RemovePartyMemberByID_Parms;
//	memcpy ( &RemovePartyMemberByID_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnRemovePartyMemberByID, &RemovePartyMemberByID_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.AddPartyMember
//// [0x00084002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PrimaryMemberId                ( CPF_Parm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//// struct FString                 MemberName                     ( CPF_Parm | CPF_NeedCtorLink )
//// int                            ControllerId                   ( CPF_OptionalParm | CPF_Parm )
//
//int UOnlineGameParty_X::AddPartyMember ( struct FUniqueNetId PrimaryMemberId, struct FUniqueNetId MemberId, struct FString MemberName, int ControllerId )
//{
//	static UFunction* pFnAddPartyMember = NULL;
//
//	if ( ! pFnAddPartyMember )
//		pFnAddPartyMember = (UFunction*) UObject::GObjObjects()->Data[ 52610 ];
//
//	UOnlineGameParty_X_execAddPartyMember_Parms AddPartyMember_Parms;
//	memcpy ( &AddPartyMember_Parms.PrimaryMemberId, &PrimaryMemberId, 0x48 );
//	memcpy ( &AddPartyMember_Parms.MemberId, &MemberId, 0x48 );
//	memcpy ( &AddPartyMember_Parms.MemberName, &MemberName, 0xC );
//	AddPartyMember_Parms.ControllerId = ControllerId;
//
//	this->ProcessEvent ( pFnAddPartyMember, &AddPartyMember_Parms, NULL );
//
//	return AddPartyMember_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.OnEditExistingPartyMember
//// [0x00080000] 
//// Parameters infos:
//// int                            PartyMemberIdx                 ( CPF_Parm )
//
//void UOnlineGameParty_X::OnEditExistingPartyMember ( int PartyMemberIdx )
//{
//	static UFunction* pFnOnEditExistingPartyMember = NULL;
//
//	if ( ! pFnOnEditExistingPartyMember )
//		pFnOnEditExistingPartyMember = (UFunction*) UObject::GObjObjects()->Data[ 52618 ];
//
//	UOnlineGameParty_X_execOnEditExistingPartyMember_Parms OnEditExistingPartyMember_Parms;
//	OnEditExistingPartyMember_Parms.PartyMemberIdx = PartyMemberIdx;
//
//	this->ProcessEvent ( pFnOnEditExistingPartyMember, &OnEditExistingPartyMember_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnAddNewPartyMember
//// [0x00080000] 
//// Parameters infos:
//// int                            PartyMemberIdx                 ( CPF_Parm )
//
//void UOnlineGameParty_X::OnAddNewPartyMember ( int PartyMemberIdx )
//{
//	static UFunction* pFnOnAddNewPartyMember = NULL;
//
//	if ( ! pFnOnAddNewPartyMember )
//		pFnOnAddNewPartyMember = (UFunction*) UObject::GObjObjects()->Data[ 52955 ];
//
//	UOnlineGameParty_X_execOnAddNewPartyMember_Parms OnAddNewPartyMember_Parms;
//	OnAddNewPartyMember_Parms.PartyMemberIdx = PartyMemberIdx;
//
//	this->ProcessEvent ( pFnOnAddNewPartyMember, &OnAddNewPartyMember_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.UpdatePartyInfo
//// [0x00C40003] ( FUNC_Final )
//// Parameters infos:
//// struct FActiveLobbyInfo        Lobby                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::UpdatePartyInfo ( struct FActiveLobbyInfo* Lobby )
//{
//	static UFunction* pFnUpdatePartyInfo = NULL;
//
//	if ( ! pFnUpdatePartyInfo )
//		pFnUpdatePartyInfo = (UFunction*) UObject::GObjObjects()->Data[ 52583 ];
//
//	UOnlineGameParty_X_execUpdatePartyInfo_Parms UpdatePartyInfo_Parms;
//
//	this->ProcessEvent ( pFnUpdatePartyInfo, &UpdatePartyInfo_Parms, NULL );
//
//	if ( Lobby )
//		memcpy ( Lobby, &UpdatePartyInfo_Parms.Lobby, 0x24 );
//};
//
//// Function ProjectX.OnlineGameParty_X.UpdatePartyLeader
//// [0x00C40003] ( FUNC_Final )
//// Parameters infos:
//// struct FActiveLobbyInfo        Lobby                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::UpdatePartyLeader ( struct FActiveLobbyInfo* Lobby )
//{
//	static UFunction* pFnUpdatePartyLeader = NULL;
//
//	if ( ! pFnUpdatePartyLeader )
//		pFnUpdatePartyLeader = (UFunction*) UObject::GObjObjects()->Data[ 52608 ];
//
//	UOnlineGameParty_X_execUpdatePartyLeader_Parms UpdatePartyLeader_Parms;
//
//	this->ProcessEvent ( pFnUpdatePartyLeader, &UpdatePartyLeader_Parms, NULL );
//
//	if ( Lobby )
//		memcpy ( Lobby, &UpdatePartyLeader_Parms.Lobby, 0x24 );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLobbySettingsUpdated
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// struct FActiveLobbyInfo        Lobby                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandleLobbySettingsUpdated ( struct FActiveLobbyInfo* Lobby )
//{
//	static UFunction* pFnHandleLobbySettingsUpdated = NULL;
//
//	if ( ! pFnHandleLobbySettingsUpdated )
//		pFnHandleLobbySettingsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 52958 ];
//
//	UOnlineGameParty_X_execHandleLobbySettingsUpdated_Parms HandleLobbySettingsUpdated_Parms;
//
//	this->ProcessEvent ( pFnHandleLobbySettingsUpdated, &HandleLobbySettingsUpdated_Parms, NULL );
//
//	if ( Lobby )
//		memcpy ( Lobby, &HandleLobbySettingsUpdated_Parms.Lobby, 0x24 );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnNewLobby
//// [0x00080000] 
//// Parameters infos:
//
//void UOnlineGameParty_X::OnNewLobby ( )
//{
//	static UFunction* pFnOnNewLobby = NULL;
//
//	if ( ! pFnOnNewLobby )
//		pFnOnNewLobby = (UFunction*) UObject::GObjObjects()->Data[ 52961 ];
//
//	UOnlineGameParty_X_execOnNewLobby_Parms OnNewLobby_Parms;
//
//	this->ProcessEvent ( pFnOnNewLobby, &OnNewLobby_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleJoinLobby
//// [0x00480002] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyUID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::HandleJoinLobby ( unsigned long bWasSuccessful, struct FString Error, struct FActiveLobbyInfo* LobbyInfo, struct FUniqueLobbyId* LobbyUID )
//{
//	static UFunction* pFnHandleJoinLobby = NULL;
//
//	if ( ! pFnHandleJoinLobby )
//		pFnHandleJoinLobby = (UFunction*) UObject::GObjObjects()->Data[ 52587 ];
//
//	UOnlineGameParty_X_execHandleJoinLobby_Parms HandleJoinLobby_Parms;
//	HandleJoinLobby_Parms.bWasSuccessful = bWasSuccessful;
//	memcpy ( &HandleJoinLobby_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnHandleJoinLobby, &HandleJoinLobby_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &HandleJoinLobby_Parms.LobbyInfo, 0x24 );
//
//	if ( LobbyUID )
//		memcpy ( LobbyUID, &HandleJoinLobby_Parms.LobbyUID, 0xC );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastStateDelayed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastStateDelayed ( )
//{
//	static UFunction* pFnBroadcastStateDelayed = NULL;
//
//	if ( ! pFnBroadcastStateDelayed )
//		pFnBroadcastStateDelayed = (UFunction*) UObject::GObjObjects()->Data[ 52594 ];
//
//	UOnlineGameParty_X_execBroadcastStateDelayed_Parms BroadcastStateDelayed_Parms;
//
//	this->ProcessEvent ( pFnBroadcastStateDelayed, &BroadcastStateDelayed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastState
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastState ( )
//{
//	static UFunction* pFnBroadcastState = NULL;
//
//	if ( ! pFnBroadcastState )
//		pFnBroadcastState = (UFunction*) UObject::GObjObjects()->Data[ 52586 ];
//
//	UOnlineGameParty_X_execBroadcastState_Parms BroadcastState_Parms;
//
//	this->ProcessEvent ( pFnBroadcastState, &BroadcastState_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleLobbyMemberStatusUpdate
//// [0x00480002] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// int                            InstigatorIndex                ( CPF_Parm )
//// struct FString                 Status                         ( CPF_Parm | CPF_NeedCtorLink )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandleLobbyMemberStatusUpdate ( int MemberIndex, int InstigatorIndex, struct FString Status, struct FActiveLobbyInfo* LobbyInfo )
//{
//	static UFunction* pFnHandleLobbyMemberStatusUpdate = NULL;
//
//	if ( ! pFnHandleLobbyMemberStatusUpdate )
//		pFnHandleLobbyMemberStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 52577 ];
//
//	UOnlineGameParty_X_execHandleLobbyMemberStatusUpdate_Parms HandleLobbyMemberStatusUpdate_Parms;
//	HandleLobbyMemberStatusUpdate_Parms.MemberIndex = MemberIndex;
//	HandleLobbyMemberStatusUpdate_Parms.InstigatorIndex = InstigatorIndex;
//	memcpy ( &HandleLobbyMemberStatusUpdate_Parms.Status, &Status, 0xC );
//
//	this->ProcessEvent ( pFnHandleLobbyMemberStatusUpdate, &HandleLobbyMemberStatusUpdate_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &HandleLobbyMemberStatusUpdate_Parms.LobbyInfo, 0x24 );
//};
//
//// Function ProjectX.OnlineGameParty_X.CancelJoinGameFromPartyDestroyed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::CancelJoinGameFromPartyDestroyed ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnCancelJoinGameFromPartyDestroyed = NULL;
//
//	if ( ! pFnCancelJoinGameFromPartyDestroyed )
//		pFnCancelJoinGameFromPartyDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52582 ];
//
//	UOnlineGameParty_X_execCancelJoinGameFromPartyDestroyed_Parms CancelJoinGameFromPartyDestroyed_Parms;
//	CancelJoinGameFromPartyDestroyed_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnCancelJoinGameFromPartyDestroyed, &CancelJoinGameFromPartyDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePartyJoinGameComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 FailReason                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandlePartyJoinGameComplete ( unsigned long bSuccess, struct FString FailReason )
//{
//	static UFunction* pFnHandlePartyJoinGameComplete = NULL;
//
//	if ( ! pFnHandlePartyJoinGameComplete )
//		pFnHandlePartyJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 52574 ];
//
//	UOnlineGameParty_X_execHandlePartyJoinGameComplete_Parms HandlePartyJoinGameComplete_Parms;
//	HandlePartyJoinGameComplete_Parms.bSuccess = bSuccess;
//	memcpy ( &HandlePartyJoinGameComplete_Parms.FailReason, &FailReason, 0xC );
//
//	this->ProcessEvent ( pFnHandlePartyJoinGameComplete, &HandlePartyJoinGameComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleConfirmJoinGame
//// [0x00824003] ( FUNC_Final )
//// Parameters infos:
//// struct FPartyJoinMatchSettings InSettings                     ( CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandleConfirmJoinGame ( struct FPartyJoinMatchSettings InSettings )
//{
//	static UFunction* pFnHandleConfirmJoinGame = NULL;
//
//	if ( ! pFnHandleConfirmJoinGame )
//		pFnHandleConfirmJoinGame = (UFunction*) UObject::GObjObjects()->Data[ 52567 ];
//
//	UOnlineGameParty_X_execHandleConfirmJoinGame_Parms HandleConfirmJoinGame_Parms;
//	memcpy ( &HandleConfirmJoinGame_Parms.InSettings, &InSettings, 0x2C );
//
//	this->ProcessEvent ( pFnHandleConfirmJoinGame, &HandleConfirmJoinGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.JoinFriend
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PartyMemberID                  ( CPF_Parm )
//
//bool UOnlineGameParty_X::JoinFriend ( struct FUniqueNetId PartyMemberID )
//{
//	static UFunction* pFnJoinFriend = NULL;
//
//	if ( ! pFnJoinFriend )
//		pFnJoinFriend = (UFunction*) UObject::GObjObjects()->Data[ 52572 ];
//
//	UOnlineGameParty_X_execJoinFriend_Parms JoinFriend_Parms;
//	memcpy ( &JoinFriend_Parms.PartyMemberID, &PartyMemberID, 0x48 );
//
//	this->ProcessEvent ( pFnJoinFriend, &JoinFriend_Parms, NULL );
//
//	return JoinFriend_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.WantsToFollowTheLeaderOutOfGame
//// [0x00080000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::WantsToFollowTheLeaderOutOfGame ( )
//{
//	static UFunction* pFnWantsToFollowTheLeaderOutOfGame = NULL;
//
//	if ( ! pFnWantsToFollowTheLeaderOutOfGame )
//		pFnWantsToFollowTheLeaderOutOfGame = (UFunction*) UObject::GObjObjects()->Data[ 52568 ];
//
//	UOnlineGameParty_X_execWantsToFollowTheLeaderOutOfGame_Parms WantsToFollowTheLeaderOutOfGame_Parms;
//
//	this->ProcessEvent ( pFnWantsToFollowTheLeaderOutOfGame, &WantsToFollowTheLeaderOutOfGame_Parms, NULL );
//
//	return WantsToFollowTheLeaderOutOfGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsInSameMatch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PartyMemberA                   ( CPF_Parm )
//// struct FUniqueNetId            PartymemberB                   ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsInSameMatch ( struct FUniqueNetId PartyMemberA, struct FUniqueNetId PartymemberB )
//{
//	static UFunction* pFnIsInSameMatch = NULL;
//
//	if ( ! pFnIsInSameMatch )
//		pFnIsInSameMatch = (UFunction*) UObject::GObjObjects()->Data[ 52570 ];
//
//	UOnlineGameParty_X_execIsInSameMatch_Parms IsInSameMatch_Parms;
//	memcpy ( &IsInSameMatch_Parms.PartyMemberA, &PartyMemberA, 0x48 );
//	memcpy ( &IsInSameMatch_Parms.PartymemberB, &PartymemberB, 0x48 );
//
//	this->ProcessEvent ( pFnIsInSameMatch, &IsInSameMatch_Parms, NULL );
//
//	return IsInSameMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePartyJoinGame
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 MessageObject                  ( CPF_Parm )
//
//void UOnlineGameParty_X::HandlePartyJoinGame ( class UOnlineMessageComponent_X* Component, class UObject* MessageObject )
//{
//	static UFunction* pFnHandlePartyJoinGame = NULL;
//
//	if ( ! pFnHandlePartyJoinGame )
//		pFnHandlePartyJoinGame = (UFunction*) UObject::GObjObjects()->Data[ 52562 ];
//
//	UOnlineGameParty_X_execHandlePartyJoinGame_Parms HandlePartyJoinGame_Parms;
//	HandlePartyJoinGame_Parms.Component = Component;
//	HandlePartyJoinGame_Parms.MessageObject = MessageObject;
//
//	this->ProcessEvent ( pFnHandlePartyJoinGame, &HandlePartyJoinGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.CanBroadcastMatchmakingMessages
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::CanBroadcastMatchmakingMessages ( )
//{
//	static UFunction* pFnCanBroadcastMatchmakingMessages = NULL;
//
//	if ( ! pFnCanBroadcastMatchmakingMessages )
//		pFnCanBroadcastMatchmakingMessages = (UFunction*) UObject::GObjObjects()->Data[ 52565 ];
//
//	UOnlineGameParty_X_execCanBroadcastMatchmakingMessages_Parms CanBroadcastMatchmakingMessages_Parms;
//
//	this->ProcessEvent ( pFnCanBroadcastMatchmakingMessages, &CanBroadcastMatchmakingMessages_Parms, NULL );
//
//	return CanBroadcastMatchmakingMessages_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastPartyServer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::BroadcastPartyServer ( )
//{
//	static UFunction* pFnBroadcastPartyServer = NULL;
//
//	if ( ! pFnBroadcastPartyServer )
//		pFnBroadcastPartyServer = (UFunction*) UObject::GObjObjects()->Data[ 52561 ];
//
//	UOnlineGameParty_X_execBroadcastPartyServer_Parms BroadcastPartyServer_Parms;
//
//	this->ProcessEvent ( pFnBroadcastPartyServer, &BroadcastPartyServer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleServerReserved
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::HandleServerReserved ( )
//{
//	static UFunction* pFnHandleServerReserved = NULL;
//
//	if ( ! pFnHandleServerReserved )
//		pFnHandleServerReserved = (UFunction*) UObject::GObjObjects()->Data[ 52560 ];
//
//	UOnlineGameParty_X_execHandleServerReserved_Parms HandleServerReserved_Parms;
//
//	this->ProcessEvent ( pFnHandleServerReserved, &HandleServerReserved_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleJoinGameComplete
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 FailReason                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::HandleJoinGameComplete ( unsigned long bSuccess, struct FString FailReason )
//{
//	static UFunction* pFnHandleJoinGameComplete = NULL;
//
//	if ( ! pFnHandleJoinGameComplete )
//		pFnHandleJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 52552 ];
//
//	UOnlineGameParty_X_execHandleJoinGameComplete_Parms HandleJoinGameComplete_Parms;
//	HandleJoinGameComplete_Parms.bSuccess = bSuccess;
//	memcpy ( &HandleJoinGameComplete_Parms.FailReason, &FailReason, 0xC );
//
//	this->ProcessEvent ( pFnHandleJoinGameComplete, &HandleJoinGameComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetPartyMemberServer
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FPartyMemberServer      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FPartyMemberServer      StructInitializer_A14FF4584224245B374C708E05811EB6 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//struct FPartyMemberServer UOnlineGameParty_X::GetPartyMemberServer ( struct FPartyMemberServer* StructInitializer_A14FF4584224245B374C708E05811EB6 )
//{
//	static UFunction* pFnGetPartyMemberServer = NULL;
//
//	if ( ! pFnGetPartyMemberServer )
//		pFnGetPartyMemberServer = (UFunction*) UObject::GObjObjects()->Data[ 52556 ];
//
//	UOnlineGameParty_X_execGetPartyMemberServer_Parms GetPartyMemberServer_Parms;
//
//	this->ProcessEvent ( pFnGetPartyMemberServer, &GetPartyMemberServer_Parms, NULL );
//
//	if ( StructInitializer_A14FF4584224245B374C708E05811EB6 )
//		memcpy ( StructInitializer_A14FF4584224245B374C708E05811EB6, &GetPartyMemberServer_Parms.StructInitializer_A14FF4584224245B374C708E05811EB6, 0x1C );
//
//	return GetPartyMemberServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePartyMemberJoinGame
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UPartyMessage_PartyMemberJoinGame_X* MessageObject                  ( CPF_Parm )
//
//void UOnlineGameParty_X::HandlePartyMemberJoinGame ( class UOnlineMessageComponent_X* Component, class UPartyMessage_PartyMemberJoinGame_X* MessageObject )
//{
//	static UFunction* pFnHandlePartyMemberJoinGame = NULL;
//
//	if ( ! pFnHandlePartyMemberJoinGame )
//		pFnHandlePartyMemberJoinGame = (UFunction*) UObject::GObjObjects()->Data[ 52976 ];
//
//	UOnlineGameParty_X_execHandlePartyMemberJoinGame_Parms HandlePartyMemberJoinGame_Parms;
//	HandlePartyMemberJoinGame_Parms.Component = Component;
//	HandlePartyMemberJoinGame_Parms.MessageObject = MessageObject;
//
//	this->ProcessEvent ( pFnHandlePartyMemberJoinGame, &HandlePartyMemberJoinGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SetPartyMemberJoinGame
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FPartyMemberServer      Server                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameParty_X::SetPartyMemberJoinGame ( struct FUniqueNetId* PlayerID, struct FPartyMemberServer* Server )
//{
//	static UFunction* pFnSetPartyMemberJoinGame = NULL;
//
//	if ( ! pFnSetPartyMemberJoinGame )
//		pFnSetPartyMemberJoinGame = (UFunction*) UObject::GObjObjects()->Data[ 52558 ];
//
//	UOnlineGameParty_X_execSetPartyMemberJoinGame_Parms SetPartyMemberJoinGame_Parms;
//
//	this->ProcessEvent ( pFnSetPartyMemberJoinGame, &SetPartyMemberJoinGame_Parms, NULL );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &SetPartyMemberJoinGame_Parms.PlayerID, 0x48 );
//
//	if ( Server )
//		memcpy ( Server, &SetPartyMemberJoinGame_Parms.Server, 0x1C );
//
//	return SetPartyMemberJoinGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastPartyMember
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FPartyMemberServer      Server                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::BroadcastPartyMember ( struct FUniqueNetId PlayerID, struct FPartyMemberServer Server )
//{
//	static UFunction* pFnBroadcastPartyMember = NULL;
//
//	if ( ! pFnBroadcastPartyMember )
//		pFnBroadcastPartyMember = (UFunction*) UObject::GObjObjects()->Data[ 52559 ];
//
//	UOnlineGameParty_X_execBroadcastPartyMember_Parms BroadcastPartyMember_Parms;
//	memcpy ( &BroadcastPartyMember_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &BroadcastPartyMember_Parms.Server, &Server, 0x1C );
//
//	this->ProcessEvent ( pFnBroadcastPartyMember, &BroadcastPartyMember_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.BroadcastLobbySettings
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::BroadcastLobbySettings ( struct FActiveLobbyInfo LobbyInfo )
//{
//	static UFunction* pFnBroadcastLobbySettings = NULL;
//
//	if ( ! pFnBroadcastLobbySettings )
//		pFnBroadcastLobbySettings = (UFunction*) UObject::GObjObjects()->Data[ 52585 ];
//
//	UOnlineGameParty_X_execBroadcastLobbySettings_Parms BroadcastLobbySettings_Parms;
//	memcpy ( &BroadcastLobbySettings_Parms.LobbyInfo, &LobbyInfo, 0x24 );
//
//	this->ProcessEvent ( pFnBroadcastLobbySettings, &BroadcastLobbySettings_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.SetLeader
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            NewLeader                      ( CPF_Parm )
//
//bool UOnlineGameParty_X::SetLeader ( struct FUniqueNetId NewLeader )
//{
//	static UFunction* pFnSetLeader = NULL;
//
//	if ( ! pFnSetLeader )
//		pFnSetLeader = (UFunction*) UObject::GObjObjects()->Data[ 52549 ];
//
//	UOnlineGameParty_X_execSetLeader_Parms SetLeader_Parms;
//	memcpy ( &SetLeader_Parms.NewLeader, &NewLeader, 0x48 );
//
//	this->ProcessEvent ( pFnSetLeader, &SetLeader_Parms, NULL );
//
//	return SetLeader_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPrimaryPlayerIndex
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            MemberIdx                      ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsPrimaryPlayerIndex ( int MemberIdx )
//{
//	static UFunction* pFnIsPrimaryPlayerIndex = NULL;
//
//	if ( ! pFnIsPrimaryPlayerIndex )
//		pFnIsPrimaryPlayerIndex = (UFunction*) UObject::GObjObjects()->Data[ 52546 ];
//
//	UOnlineGameParty_X_execIsPrimaryPlayerIndex_Parms IsPrimaryPlayerIndex_Parms;
//	IsPrimaryPlayerIndex_Parms.MemberIdx = MemberIdx;
//
//	this->ProcessEvent ( pFnIsPrimaryPlayerIndex, &IsPrimaryPlayerIndex_Parms, NULL );
//
//	return IsPrimaryPlayerIndex_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPrimaryPlayer
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameParty_X::IsPrimaryPlayer ( struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnIsPrimaryPlayer = NULL;
//
//	if ( ! pFnIsPrimaryPlayer )
//		pFnIsPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52543 ];
//
//	UOnlineGameParty_X_execIsPrimaryPlayer_Parms IsPrimaryPlayer_Parms;
//
//	this->ProcessEvent ( pFnIsPrimaryPlayer, &IsPrimaryPlayer_Parms, NULL );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &IsPrimaryPlayer_Parms.PlayerID, 0x48 );
//
//	return IsPrimaryPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPlayerInParty
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UOnlineGameParty_X::IsPlayerInParty ( struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnIsPlayerInParty = NULL;
//
//	if ( ! pFnIsPlayerInParty )
//		pFnIsPlayerInParty = (UFunction*) UObject::GObjObjects()->Data[ 51386 ];
//
//	UOnlineGameParty_X_execIsPlayerInParty_Parms IsPlayerInParty_Parms;
//
//	this->ProcessEvent ( pFnIsPlayerInParty, &IsPlayerInParty_Parms, NULL );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &IsPlayerInParty_Parms.PlayerID, 0x48 );
//
//	return IsPlayerInParty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.KickPlayer
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// unsigned char                  Reason                         ( CPF_Parm )
//
//bool UOnlineGameParty_X::KickPlayer ( struct FUniqueNetId PlayerID, unsigned char Reason )
//{
//	static UFunction* pFnKickPlayer = NULL;
//
//	if ( ! pFnKickPlayer )
//		pFnKickPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52529 ];
//
//	UOnlineGameParty_X_execKickPlayer_Parms KickPlayer_Parms;
//	memcpy ( &KickPlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	KickPlayer_Parms.Reason = Reason;
//
//	this->ProcessEvent ( pFnKickPlayer, &KickPlayer_Parms, NULL );
//
//	return KickPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.ShowInviteUI
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//
//bool UOnlineGameParty_X::ShowInviteUI ( unsigned char LocalUserNum )
//{
//	static UFunction* pFnShowInviteUI = NULL;
//
//	if ( ! pFnShowInviteUI )
//		pFnShowInviteUI = (UFunction*) UObject::GObjObjects()->Data[ 52524 ];
//
//	UOnlineGameParty_X_execShowInviteUI_Parms ShowInviteUI_Parms;
//	ShowInviteUI_Parms.LocalUserNum = LocalUserNum;
//
//	this->ProcessEvent ( pFnShowInviteUI, &ShowInviteUI_Parms, NULL );
//
//	return ShowInviteUI_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.LeaveParty
//// [0x00820002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          StructInitializer_0EEE7C704C4D292A57E0DCAF12ABFE47 ( CPF_Const | CPF_OutParm )
//
//bool UOnlineGameParty_X::LeaveParty ( struct FString Reason, struct FUniqueLobbyId* StructInitializer_0EEE7C704C4D292A57E0DCAF12ABFE47 )
//{
//	static UFunction* pFnLeaveParty = NULL;
//
//	if ( ! pFnLeaveParty )
//		pFnLeaveParty = (UFunction*) UObject::GObjObjects()->Data[ 51390 ];
//
//	UOnlineGameParty_X_execLeaveParty_Parms LeaveParty_Parms;
//	memcpy ( &LeaveParty_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnLeaveParty, &LeaveParty_Parms, NULL );
//
//	if ( StructInitializer_0EEE7C704C4D292A57E0DCAF12ABFE47 )
//		memcpy ( StructInitializer_0EEE7C704C4D292A57E0DCAF12ABFE47, &LeaveParty_Parms.StructInitializer_0EEE7C704C4D292A57E0DCAF12ABFE47, 0xC );
//
//	return LeaveParty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsInCurrentGame
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//bool UOnlineGameParty_X::IsInCurrentGame ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnIsInCurrentGame = NULL;
//
//	if ( ! pFnIsInCurrentGame )
//		pFnIsInCurrentGame = (UFunction*) UObject::GObjObjects()->Data[ 52513 ];
//
//	UOnlineGameParty_X_execIsInCurrentGame_Parms IsInCurrentGame_Parms;
//	memcpy ( &IsInCurrentGame_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnIsInCurrentGame, &IsInCurrentGame_Parms, NULL );
//
//	return IsInCurrentGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsPartyLeader
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::IsPartyLeader ( )
//{
//	static UFunction* pFnIsPartyLeader = NULL;
//
//	if ( ! pFnIsPartyLeader )
//		pFnIsPartyLeader = (UFunction*) UObject::GObjObjects()->Data[ 48046 ];
//
//	UOnlineGameParty_X_execIsPartyLeader_Parms IsPartyLeader_Parms;
//
//	this->ProcessEvent ( pFnIsPartyLeader, &IsPartyLeader_Parms, NULL );
//
//	return IsPartyLeader_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.IsInParty
//// [0x00820002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::IsInParty ( )
//{
//	static UFunction* pFnIsInParty = NULL;
//
//	if ( ! pFnIsInParty )
//		pFnIsInParty = (UFunction*) UObject::GObjObjects()->Data[ 51384 ];
//
//	UOnlineGameParty_X_execIsInParty_Parms IsInParty_Parms;
//
//	this->ProcessEvent ( pFnIsInParty, &IsInParty_Parms, NULL );
//
//	return IsInParty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.HandleJoinPartyPrivilegeCheck
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPrivilegeCheck_X*       PrivilegeCheck                 ( CPF_Parm )
//
//void UOnlineGameParty_X::HandleJoinPartyPrivilegeCheck ( class UPrivilegeCheck_X* PrivilegeCheck )
//{
//	static UFunction* pFnHandleJoinPartyPrivilegeCheck = NULL;
//
//	if ( ! pFnHandleJoinPartyPrivilegeCheck )
//		pFnHandleJoinPartyPrivilegeCheck = (UFunction*) UObject::GObjObjects()->Data[ 52508 ];
//
//	UOnlineGameParty_X_execHandleJoinPartyPrivilegeCheck_Parms HandleJoinPartyPrivilegeCheck_Parms;
//	HandleJoinPartyPrivilegeCheck_Parms.PrivilegeCheck = PrivilegeCheck;
//
//	this->ProcessEvent ( pFnHandleJoinPartyPrivilegeCheck, &HandleJoinPartyPrivilegeCheck_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.JoinParty
//// [0x00C20002] 
//// Parameters infos:
//// int                            LocalPlayerNum                 ( CPF_Parm )
//// struct FUniqueLobbyId          InPartyId                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FPendingInviteData      StructInitializer_02282E2440F8609DC3FE3AA52C804E7A ( CPF_Const | CPF_OutParm )
//
//void UOnlineGameParty_X::JoinParty ( int LocalPlayerNum, struct FUniqueLobbyId* InPartyId, struct FPendingInviteData* StructInitializer_02282E2440F8609DC3FE3AA52C804E7A )
//{
//	static UFunction* pFnJoinParty = NULL;
//
//	if ( ! pFnJoinParty )
//		pFnJoinParty = (UFunction*) UObject::GObjObjects()->Data[ 52501 ];
//
//	UOnlineGameParty_X_execJoinParty_Parms JoinParty_Parms;
//	JoinParty_Parms.LocalPlayerNum = LocalPlayerNum;
//
//	this->ProcessEvent ( pFnJoinParty, &JoinParty_Parms, NULL );
//
//	if ( InPartyId )
//		memcpy ( InPartyId, &JoinParty_Parms.InPartyId, 0xC );
//
//	if ( StructInitializer_02282E2440F8609DC3FE3AA52C804E7A )
//		memcpy ( StructInitializer_02282E2440F8609DC3FE3AA52C804E7A, &JoinParty_Parms.StructInitializer_02282E2440F8609DC3FE3AA52C804E7A, 0x14 );
//};
//
//// Function ProjectX.OnlineGameParty_X.CheckPartyTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::CheckPartyTimeout ( )
//{
//	static UFunction* pFnCheckPartyTimeout = NULL;
//
//	if ( ! pFnCheckPartyTimeout )
//		pFnCheckPartyTimeout = (UFunction*) UObject::GObjObjects()->Data[ 52500 ];
//
//	UOnlineGameParty_X_execCheckPartyTimeout_Parms CheckPartyTimeout_Parms;
//
//	this->ProcessEvent ( pFnCheckPartyTimeout, &CheckPartyTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.StartPartyTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::StartPartyTimeout ( )
//{
//	static UFunction* pFnStartPartyTimeout = NULL;
//
//	if ( ! pFnStartPartyTimeout )
//		pFnStartPartyTimeout = (UFunction*) UObject::GObjObjects()->Data[ 52499 ];
//
//	UOnlineGameParty_X_execStartPartyTimeout_Parms StartPartyTimeout_Parms;
//
//	this->ProcessEvent ( pFnStartPartyTimeout, &StartPartyTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnPartyCreated
//// [0x00480002] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          InPartyId                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::OnPartyCreated ( unsigned long bWasSuccessful, struct FString Error, struct FUniqueLobbyId* InPartyId )
//{
//	static UFunction* pFnOnPartyCreated = NULL;
//
//	if ( ! pFnOnPartyCreated )
//		pFnOnPartyCreated = (UFunction*) UObject::GObjObjects()->Data[ 52489 ];
//
//	UOnlineGameParty_X_execOnPartyCreated_Parms OnPartyCreated_Parms;
//	OnPartyCreated_Parms.bWasSuccessful = bWasSuccessful;
//	memcpy ( &OnPartyCreated_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnOnPartyCreated, &OnPartyCreated_Parms, NULL );
//
//	if ( InPartyId )
//		memcpy ( InPartyId, &OnPartyCreated_Parms.InPartyId, 0xC );
//};
//
//// Function ProjectX.OnlineGameParty_X.CreatePartyInternal
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::CreatePartyInternal ( )
//{
//	static UFunction* pFnCreatePartyInternal = NULL;
//
//	if ( ! pFnCreatePartyInternal )
//		pFnCreatePartyInternal = (UFunction*) UObject::GObjObjects()->Data[ 52488 ];
//
//	UOnlineGameParty_X_execCreatePartyInternal_Parms CreatePartyInternal_Parms;
//
//	this->ProcessEvent ( pFnCreatePartyInternal, &CreatePartyInternal_Parms, NULL );
//
//	return CreatePartyInternal_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.CreateParty
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            LocalPlayerNum                 ( CPF_Parm )
//// struct FScriptDelegate         Handler                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameParty_X::CreateParty ( int LocalPlayerNum, struct FScriptDelegate Handler )
//{
//	static UFunction* pFnCreateParty = NULL;
//
//	if ( ! pFnCreateParty )
//		pFnCreateParty = (UFunction*) UObject::GObjObjects()->Data[ 52481 ];
//
//	UOnlineGameParty_X_execCreateParty_Parms CreateParty_Parms;
//	CreateParty_Parms.LocalPlayerNum = LocalPlayerNum;
//	memcpy ( &CreateParty_Parms.Handler, &Handler, 0x10 );
//
//	this->ProcessEvent ( pFnCreateParty, &CreateParty_Parms, NULL );
//
//	return CreateParty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.GetCreatePartyPlatformInterface
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineLobbyInterface*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineLobbyInterface* UOnlineGameParty_X::GetCreatePartyPlatformInterface ( )
//{
//	static UFunction* pFnGetCreatePartyPlatformInterface = NULL;
//
//	if ( ! pFnGetCreatePartyPlatformInterface )
//		pFnGetCreatePartyPlatformInterface = (UFunction*) UObject::GObjObjects()->Data[ 52485 ];
//
//	UOnlineGameParty_X_execGetCreatePartyPlatformInterface_Parms GetCreatePartyPlatformInterface_Parms;
//
//	this->ProcessEvent ( pFnGetCreatePartyPlatformInterface, &GetCreatePartyPlatformInterface_Parms, NULL );
//
//	return GetCreatePartyPlatformInterface_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.ShouldCreatePsyNetParty
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::ShouldCreatePsyNetParty ( )
//{
//	static UFunction* pFnShouldCreatePsyNetParty = NULL;
//
//	if ( ! pFnShouldCreatePsyNetParty )
//		pFnShouldCreatePsyNetParty = (UFunction*) UObject::GObjObjects()->Data[ 53002 ];
//
//	UOnlineGameParty_X_execShouldCreatePsyNetParty_Parms ShouldCreatePsyNetParty_Parms;
//
//	this->ProcessEvent ( pFnShouldCreatePsyNetParty, &ShouldCreatePsyNetParty_Parms, NULL );
//
//	return ShouldCreatePsyNetParty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.SetLobbyInterfacePsyNet
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::SetLobbyInterfacePsyNet ( )
//{
//	static UFunction* pFnSetLobbyInterfacePsyNet = NULL;
//
//	if ( ! pFnSetLobbyInterfacePsyNet )
//		pFnSetLobbyInterfacePsyNet = (UFunction*) UObject::GObjObjects()->Data[ 53004 ];
//
//	UOnlineGameParty_X_execSetLobbyInterfacePsyNet_Parms SetLobbyInterfacePsyNet_Parms;
//
//	this->ProcessEvent ( pFnSetLobbyInterfacePsyNet, &SetLobbyInterfacePsyNet_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePlayerInvitedPsyNet
//// [0x00480002] 
//// Parameters infos:
//// unsigned long                  bAccepted                      ( CPF_Parm )
//// struct FUniqueLobbyId          InLobbyId                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::HandlePlayerInvitedPsyNet ( unsigned long bAccepted, struct FUniqueLobbyId* InLobbyId, struct FUniqueNetId* FriendId )
//{
//	static UFunction* pFnHandlePlayerInvitedPsyNet = NULL;
//
//	if ( ! pFnHandlePlayerInvitedPsyNet )
//		pFnHandlePlayerInvitedPsyNet = (UFunction*) UObject::GObjObjects()->Data[ 53008 ];
//
//	UOnlineGameParty_X_execHandlePlayerInvitedPsyNet_Parms HandlePlayerInvitedPsyNet_Parms;
//	HandlePlayerInvitedPsyNet_Parms.bAccepted = bAccepted;
//
//	this->ProcessEvent ( pFnHandlePlayerInvitedPsyNet, &HandlePlayerInvitedPsyNet_Parms, NULL );
//
//	if ( InLobbyId )
//		memcpy ( InLobbyId, &HandlePlayerInvitedPsyNet_Parms.InLobbyId, 0xC );
//
//	if ( FriendId )
//		memcpy ( FriendId, &HandlePlayerInvitedPsyNet_Parms.FriendId, 0x48 );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePlayerInvitedPlatform
//// [0x00480002] 
//// Parameters infos:
//// unsigned long                  bAccepted                      ( CPF_Parm )
//// struct FUniqueLobbyId          InLobbyId                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::HandlePlayerInvitedPlatform ( unsigned long bAccepted, struct FUniqueLobbyId* InLobbyId, struct FUniqueNetId* FriendId )
//{
//	static UFunction* pFnHandlePlayerInvitedPlatform = NULL;
//
//	if ( ! pFnHandlePlayerInvitedPlatform )
//		pFnHandlePlayerInvitedPlatform = (UFunction*) UObject::GObjObjects()->Data[ 53009 ];
//
//	UOnlineGameParty_X_execHandlePlayerInvitedPlatform_Parms HandlePlayerInvitedPlatform_Parms;
//	HandlePlayerInvitedPlatform_Parms.bAccepted = bAccepted;
//
//	this->ProcessEvent ( pFnHandlePlayerInvitedPlatform, &HandlePlayerInvitedPlatform_Parms, NULL );
//
//	if ( InLobbyId )
//		memcpy ( InLobbyId, &HandlePlayerInvitedPlatform_Parms.InLobbyId, 0xC );
//
//	if ( FriendId )
//		memcpy ( FriendId, &HandlePlayerInvitedPlatform_Parms.FriendId, 0x48 );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePlayerInvited
//// [0x00480002] 
//// Parameters infos:
//// unsigned long                  bAccepted                      ( CPF_Parm )
//// struct FUniqueLobbyId          InLobbyId                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::HandlePlayerInvited ( unsigned long bAccepted, struct FUniqueLobbyId* InLobbyId, struct FUniqueNetId* FriendId )
//{
//	static UFunction* pFnHandlePlayerInvited = NULL;
//
//	if ( ! pFnHandlePlayerInvited )
//		pFnHandlePlayerInvited = (UFunction*) UObject::GObjObjects()->Data[ 52475 ];
//
//	UOnlineGameParty_X_execHandlePlayerInvited_Parms HandlePlayerInvited_Parms;
//	HandlePlayerInvited_Parms.bAccepted = bAccepted;
//
//	this->ProcessEvent ( pFnHandlePlayerInvited, &HandlePlayerInvited_Parms, NULL );
//
//	if ( InLobbyId )
//		memcpy ( InLobbyId, &HandlePlayerInvited_Parms.InLobbyId, 0xC );
//
//	if ( FriendId )
//		memcpy ( FriendId, &HandlePlayerInvited_Parms.FriendId, 0x48 );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePartySizeTracker
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::HandlePartySizeTracker ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnHandlePartySizeTracker = NULL;
//
//	if ( ! pFnHandlePartySizeTracker )
//		pFnHandlePartySizeTracker = (UFunction*) UObject::GObjObjects()->Data[ 52470 ];
//
//	UOnlineGameParty_X_execHandlePartySizeTracker_Parms HandlePartySizeTracker_Parms;
//	HandlePartySizeTracker_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnHandlePartySizeTracker, &HandlePartySizeTracker_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.HandlePrimaryPlayerIdChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineGameAccount_X*    InAccount                      ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGameParty_X::HandlePrimaryPlayerIdChanged ( class UOnlineGameAccount_X* InAccount, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnHandlePrimaryPlayerIdChanged = NULL;
//
//	if ( ! pFnHandlePrimaryPlayerIdChanged )
//		pFnHandlePrimaryPlayerIdChanged = (UFunction*) UObject::GObjObjects()->Data[ 52466 ];
//
//	UOnlineGameParty_X_execHandlePrimaryPlayerIdChanged_Parms HandlePrimaryPlayerIdChanged_Parms;
//	HandlePrimaryPlayerIdChanged_Parms.InAccount = InAccount;
//	memcpy ( &HandlePrimaryPlayerIdChanged_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnHandlePrimaryPlayerIdChanged, &HandlePrimaryPlayerIdChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.GetMetrics
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPartyMetrics_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UPartyMetrics_X* UOnlineGameParty_X::GetMetrics ( )
//{
//	static UFunction* pFnGetMetrics = NULL;
//
//	if ( ! pFnGetMetrics )
//		pFnGetMetrics = (UFunction*) UObject::GObjObjects()->Data[ 52469 ];
//
//	UOnlineGameParty_X_execGetMetrics_Parms GetMetrics_Parms;
//
//	this->ProcessEvent ( pFnGetMetrics, &GetMetrics_Parms, NULL );
//
//	return GetMetrics_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.SetLobbyInterface
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineLobbyInterface*   Lobby                          ( CPF_Parm )
//
//void UOnlineGameParty_X::SetLobbyInterface ( class UOnlineLobbyInterface* Lobby )
//{
//	static UFunction* pFnSetLobbyInterface = NULL;
//
//	if ( ! pFnSetLobbyInterface )
//		pFnSetLobbyInterface = (UFunction*) UObject::GObjObjects()->Data[ 52486 ];
//
//	UOnlineGameParty_X_execSetLobbyInterface_Parms SetLobbyInterface_Parms;
//	SetLobbyInterface_Parms.Lobby = Lobby;
//
//	this->ProcessEvent ( pFnSetLobbyInterface, &SetLobbyInterface_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.IsUsingPsyNetParty
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameParty_X::IsUsingPsyNetParty ( )
//{
//	static UFunction* pFnIsUsingPsyNetParty = NULL;
//
//	if ( ! pFnIsUsingPsyNetParty )
//		pFnIsUsingPsyNetParty = (UFunction*) UObject::GObjObjects()->Data[ 52496 ];
//
//	UOnlineGameParty_X_execIsUsingPsyNetParty_Parms IsUsingPsyNetParty_Parms;
//
//	this->ProcessEvent ( pFnIsUsingPsyNetParty, &IsUsingPsyNetParty_Parms, NULL );
//
//	return IsUsingPsyNetParty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameParty_X.InitLobbyInterfaces
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameParty_X::InitLobbyInterfaces ( )
//{
//	static UFunction* pFnInitLobbyInterfaces = NULL;
//
//	if ( ! pFnInitLobbyInterfaces )
//		pFnInitLobbyInterfaces = (UFunction*) UObject::GObjObjects()->Data[ 52454 ];
//
//	UOnlineGameParty_X_execInitLobbyInterfaces_Parms InitLobbyInterfaces_Parms;
//
//	this->ProcessEvent ( pFnInitLobbyInterfaces, &InitLobbyInterfaces_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameParty_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 52451 ];
//
//	UOnlineGameParty_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPlayerIsCurrentlyTrading
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPlayerIsCurrentlyTrading ( class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnEventPlayerIsCurrentlyTrading = NULL;
//
//	if ( ! pFnEventPlayerIsCurrentlyTrading )
//		pFnEventPlayerIsCurrentlyTrading = (UFunction*) UObject::GObjObjects()->Data[ 52452 ];
//
//	UOnlineGameParty_X_execEventPlayerIsCurrentlyTrading_Parms EventPlayerIsCurrentlyTrading_Parms;
//	EventPlayerIsCurrentlyTrading_Parms.PartyObject = PartyObject;
//	memcpy ( &EventPlayerIsCurrentlyTrading_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnEventPlayerIsCurrentlyTrading, &EventPlayerIsCurrentlyTrading_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPlayerInMatchChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPlayerInMatchChanged ( class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnEventPlayerInMatchChanged = NULL;
//
//	if ( ! pFnEventPlayerInMatchChanged )
//		pFnEventPlayerInMatchChanged = (UFunction*) UObject::GObjObjects()->Data[ 53019 ];
//
//	UOnlineGameParty_X_execEventPlayerInMatchChanged_Parms EventPlayerInMatchChanged_Parms;
//	EventPlayerInMatchChanged_Parms.PartyObject = PartyObject;
//	memcpy ( &EventPlayerInMatchChanged_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnEventPlayerInMatchChanged, &EventPlayerInMatchChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventAnotherInviteToTrade
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//void UOnlineGameParty_X::EventAnotherInviteToTrade ( class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnEventAnotherInviteToTrade = NULL;
//
//	if ( ! pFnEventAnotherInviteToTrade )
//		pFnEventAnotherInviteToTrade = (UFunction*) UObject::GObjObjects()->Data[ 53022 ];
//
//	UOnlineGameParty_X_execEventAnotherInviteToTrade_Parms EventAnotherInviteToTrade_Parms;
//	EventAnotherInviteToTrade_Parms.PartyObject = PartyObject;
//	memcpy ( &EventAnotherInviteToTrade_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnEventAnotherInviteToTrade, &EventAnotherInviteToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventTradeReady
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventTradeReady ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventTradeReady = NULL;
//
//	if ( ! pFnEventTradeReady )
//		pFnEventTradeReady = (UFunction*) UObject::GObjObjects()->Data[ 53025 ];
//
//	UOnlineGameParty_X_execEventTradeReady_Parms EventTradeReady_Parms;
//	EventTradeReady_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventTradeReady, &EventTradeReady_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventNotReadyToTrade
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventNotReadyToTrade ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventNotReadyToTrade = NULL;
//
//	if ( ! pFnEventNotReadyToTrade )
//		pFnEventNotReadyToTrade = (UFunction*) UObject::GObjObjects()->Data[ 53028 ];
//
//	UOnlineGameParty_X_execEventNotReadyToTrade_Parms EventNotReadyToTrade_Parms;
//	EventNotReadyToTrade_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventNotReadyToTrade, &EventNotReadyToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventReadyToTrade
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventReadyToTrade ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventReadyToTrade = NULL;
//
//	if ( ! pFnEventReadyToTrade )
//		pFnEventReadyToTrade = (UFunction*) UObject::GObjObjects()->Data[ 53030 ];
//
//	UOnlineGameParty_X_execEventReadyToTrade_Parms EventReadyToTrade_Parms;
//	EventReadyToTrade_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventReadyToTrade, &EventReadyToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventCloseInviteToTrade
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// unsigned long                  bWasCanceled                   ( CPF_Parm )
//
//void UOnlineGameParty_X::EventCloseInviteToTrade ( class UOnlineGameParty_X* PartyObject, unsigned long bWasCanceled )
//{
//	static UFunction* pFnEventCloseInviteToTrade = NULL;
//
//	if ( ! pFnEventCloseInviteToTrade )
//		pFnEventCloseInviteToTrade = (UFunction*) UObject::GObjObjects()->Data[ 53032 ];
//
//	UOnlineGameParty_X_execEventCloseInviteToTrade_Parms EventCloseInviteToTrade_Parms;
//	EventCloseInviteToTrade_Parms.PartyObject = PartyObject;
//	EventCloseInviteToTrade_Parms.bWasCanceled = bWasCanceled;
//
//	this->ProcessEvent ( pFnEventCloseInviteToTrade, &EventCloseInviteToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventAcceptedInviteToTrade
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventAcceptedInviteToTrade ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventAcceptedInviteToTrade = NULL;
//
//	if ( ! pFnEventAcceptedInviteToTrade )
//		pFnEventAcceptedInviteToTrade = (UFunction*) UObject::GObjObjects()->Data[ 53034 ];
//
//	UOnlineGameParty_X_execEventAcceptedInviteToTrade_Parms EventAcceptedInviteToTrade_Parms;
//	EventAcceptedInviteToTrade_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventAcceptedInviteToTrade, &EventAcceptedInviteToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventInviteToTrade
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//void UOnlineGameParty_X::EventInviteToTrade ( class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnEventInviteToTrade = NULL;
//
//	if ( ! pFnEventInviteToTrade )
//		pFnEventInviteToTrade = (UFunction*) UObject::GObjObjects()->Data[ 53037 ];
//
//	UOnlineGameParty_X_execEventInviteToTrade_Parms EventInviteToTrade_Parms;
//	EventInviteToTrade_Parms.PartyObject = PartyObject;
//	memcpy ( &EventInviteToTrade_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnEventInviteToTrade, &EventInviteToTrade_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPlayerTradingChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//// unsigned long                  bIsPlayerTrading               ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPlayerTradingChanged ( class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId, unsigned long bIsPlayerTrading )
//{
//	static UFunction* pFnEventPlayerTradingChanged = NULL;
//
//	if ( ! pFnEventPlayerTradingChanged )
//		pFnEventPlayerTradingChanged = (UFunction*) UObject::GObjObjects()->Data[ 53039 ];
//
//	UOnlineGameParty_X_execEventPlayerTradingChanged_Parms EventPlayerTradingChanged_Parms;
//	EventPlayerTradingChanged_Parms.PartyObject = PartyObject;
//	memcpy ( &EventPlayerTradingChanged_Parms.InMemberId, &InMemberId, 0x48 );
//	EventPlayerTradingChanged_Parms.bIsPlayerTrading = bIsPlayerTrading;
//
//	this->ProcessEvent ( pFnEventPlayerTradingChanged, &EventPlayerTradingChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventDisableCrossPlayChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventDisableCrossPlayChanged ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventDisableCrossPlayChanged = NULL;
//
//	if ( ! pFnEventDisableCrossPlayChanged )
//		pFnEventDisableCrossPlayChanged = (UFunction*) UObject::GObjObjects()->Data[ 53042 ];
//
//	UOnlineGameParty_X_execEventDisableCrossPlayChanged_Parms EventDisableCrossPlayChanged_Parms;
//	EventDisableCrossPlayChanged_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventDisableCrossPlayChanged, &EventDisableCrossPlayChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventProcessingStatusChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventProcessingStatusChanged ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventProcessingStatusChanged = NULL;
//
//	if ( ! pFnEventProcessingStatusChanged )
//		pFnEventProcessingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 52397 ];
//
//	UOnlineGameParty_X_execEventProcessingStatusChanged_Parms EventProcessingStatusChanged_Parms;
//	EventProcessingStatusChanged_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventProcessingStatusChanged, &EventProcessingStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventLeaderLeftOnlineGame
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventLeaderLeftOnlineGame ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventLeaderLeftOnlineGame = NULL;
//
//	if ( ! pFnEventLeaderLeftOnlineGame )
//		pFnEventLeaderLeftOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 52399 ];
//
//	UOnlineGameParty_X_execEventLeaderLeftOnlineGame_Parms EventLeaderLeftOnlineGame_Parms;
//	EventLeaderLeftOnlineGame_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventLeaderLeftOnlineGame, &EventLeaderLeftOnlineGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventConfirmJoinGameMessage
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventConfirmJoinGameMessage ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventConfirmJoinGameMessage = NULL;
//
//	if ( ! pFnEventConfirmJoinGameMessage )
//		pFnEventConfirmJoinGameMessage = (UFunction*) UObject::GObjObjects()->Data[ 52401 ];
//
//	UOnlineGameParty_X_execEventConfirmJoinGameMessage_Parms EventConfirmJoinGameMessage_Parms;
//	EventConfirmJoinGameMessage_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventConfirmJoinGameMessage, &EventConfirmJoinGameMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartyDestroyed
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPartyDestroyed ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventPartyDestroyed = NULL;
//
//	if ( ! pFnEventPartyDestroyed )
//		pFnEventPartyDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52402 ];
//
//	UOnlineGameParty_X_execEventPartyDestroyed_Parms EventPartyDestroyed_Parms;
//	EventPartyDestroyed_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventPartyDestroyed, &EventPartyDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartyJoinGameSuccess
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPartyJoinGameSuccess ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventPartyJoinGameSuccess = NULL;
//
//	if ( ! pFnEventPartyJoinGameSuccess )
//		pFnEventPartyJoinGameSuccess = (UFunction*) UObject::GObjObjects()->Data[ 52404 ];
//
//	UOnlineGameParty_X_execEventPartyJoinGameSuccess_Parms EventPartyJoinGameSuccess_Parms;
//	EventPartyJoinGameSuccess_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventPartyJoinGameSuccess, &EventPartyJoinGameSuccess_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartyJoinGameError
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FString                 LocalizedErrorString           ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameParty_X::EventPartyJoinGameError ( class UOnlineGameParty_X* PartyObject, struct FString LocalizedErrorString )
//{
//	static UFunction* pFnEventPartyJoinGameError = NULL;
//
//	if ( ! pFnEventPartyJoinGameError )
//		pFnEventPartyJoinGameError = (UFunction*) UObject::GObjObjects()->Data[ 52406 ];
//
//	UOnlineGameParty_X_execEventPartyJoinGameError_Parms EventPartyJoinGameError_Parms;
//	EventPartyJoinGameError_Parms.PartyObject = PartyObject;
//	memcpy ( &EventPartyJoinGameError_Parms.LocalizedErrorString, &LocalizedErrorString, 0xC );
//
//	this->ProcessEvent ( pFnEventPartyJoinGameError, &EventPartyJoinGameError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartyError
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPartyError ( class UOnlineGameParty_X* PartyObject, class UError* Error )
//{
//	static UFunction* pFnEventPartyError = NULL;
//
//	if ( ! pFnEventPartyError )
//		pFnEventPartyError = (UFunction*) UObject::GObjObjects()->Data[ 52408 ];
//
//	UOnlineGameParty_X_execEventPartyError_Parms EventPartyError_Parms;
//	EventPartyError_Parms.PartyObject = PartyObject;
//	EventPartyError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventPartyError, &EventPartyError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventSearchStatusChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// class UPartyMessage_SearchStatus_X* StatusMessage                  ( CPF_Parm )
//
//void UOnlineGameParty_X::EventSearchStatusChanged ( class UOnlineGameParty_X* PartyObject, class UPartyMessage_SearchStatus_X* StatusMessage )
//{
//	static UFunction* pFnEventSearchStatusChanged = NULL;
//
//	if ( ! pFnEventSearchStatusChanged )
//		pFnEventSearchStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 52410 ];
//
//	UOnlineGameParty_X_execEventSearchStatusChanged_Parms EventSearchStatusChanged_Parms;
//	EventSearchStatusChanged_Parms.PartyObject = PartyObject;
//	EventSearchStatusChanged_Parms.StatusMessage = StatusMessage;
//
//	this->ProcessEvent ( pFnEventSearchStatusChanged, &EventSearchStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartySizeChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// int                            NewSize                        ( CPF_Parm )
//// int                            OldSize                        ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPartySizeChanged ( class UOnlineGameParty_X* PartyObject, int NewSize, int OldSize )
//{
//	static UFunction* pFnEventPartySizeChanged = NULL;
//
//	if ( ! pFnEventPartySizeChanged )
//		pFnEventPartySizeChanged = (UFunction*) UObject::GObjObjects()->Data[ 52411 ];
//
//	UOnlineGameParty_X_execEventPartySizeChanged_Parms EventPartySizeChanged_Parms;
//	EventPartySizeChanged_Parms.PartyObject = PartyObject;
//	EventPartySizeChanged_Parms.NewSize = NewSize;
//	EventPartySizeChanged_Parms.OldSize = OldSize;
//
//	this->ProcessEvent ( pFnEventPartySizeChanged, &EventPartySizeChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartyChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPartyChanged ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnEventPartyChanged = NULL;
//
//	if ( ! pFnEventPartyChanged )
//		pFnEventPartyChanged = (UFunction*) UObject::GObjObjects()->Data[ 52413 ];
//
//	UOnlineGameParty_X_execEventPartyChanged_Parms EventPartyChanged_Parms;
//	EventPartyChanged_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventPartyChanged, &EventPartyChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPlayerInvited
//// [0x00520000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// struct FUniqueLobbyId          InPartyId                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameParty_X::EventPlayerInvited ( class UOnlineGameParty_X* PartyObject, struct FUniqueLobbyId* InPartyId, struct FUniqueNetId* FriendId )
//{
//	static UFunction* pFnEventPlayerInvited = NULL;
//
//	if ( ! pFnEventPlayerInvited )
//		pFnEventPlayerInvited = (UFunction*) UObject::GObjObjects()->Data[ 52415 ];
//
//	UOnlineGameParty_X_execEventPlayerInvited_Parms EventPlayerInvited_Parms;
//	EventPlayerInvited_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnEventPlayerInvited, &EventPlayerInvited_Parms, NULL );
//
//	if ( InPartyId )
//		memcpy ( InPartyId, &EventPlayerInvited_Parms.InPartyId, 0xC );
//
//	if ( FriendId )
//		memcpy ( FriendId, &EventPlayerInvited_Parms.FriendId, 0x48 );
//};
//
//// Function ProjectX.OnlineGameParty_X.EventPartyCreated
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//
//void UOnlineGameParty_X::EventPartyCreated ( class UOnlineGameParty_X* PartyObject, unsigned long bWasSuccessful )
//{
//	static UFunction* pFnEventPartyCreated = NULL;
//
//	if ( ! pFnEventPartyCreated )
//		pFnEventPartyCreated = (UFunction*) UObject::GObjObjects()->Data[ 52417 ];
//
//	UOnlineGameParty_X_execEventPartyCreated_Parms EventPartyCreated_Parms;
//	EventPartyCreated_Parms.PartyObject = PartyObject;
//	EventPartyCreated_Parms.bWasSuccessful = bWasSuccessful;
//
//	this->ProcessEvent ( pFnEventPartyCreated, &EventPartyCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameAccount_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50860 ];
//
//	UOnlineGameAccount_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.OnMainMenuOpened
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameAccount_X::OnMainMenuOpened ( )
//{
//	static UFunction* pFnOnMainMenuOpened = NULL;
//
//	if ( ! pFnOnMainMenuOpened )
//		pFnOnMainMenuOpened = (UFunction*) UObject::GObjObjects()->Data[ 50859 ];
//
//	UOnlineGameAccount_X_execOnMainMenuOpened_Parms OnMainMenuOpened_Parms;
//
//	this->ProcessEvent ( pFnOnMainMenuOpened, &OnMainMenuOpened_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.GetNumLocalPlayers
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameAccount_X::GetNumLocalPlayers ( )
//{
//	static UFunction* pFnGetNumLocalPlayers = NULL;
//
//	if ( ! pFnGetNumLocalPlayers )
//		pFnGetNumLocalPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50856 ];
//
//	UOnlineGameAccount_X_execGetNumLocalPlayers_Parms GetNumLocalPlayers_Parms;
//
//	this->ProcessEvent ( pFnGetNumLocalPlayers, &GetNumLocalPlayers_Parms, NULL );
//
//	return GetNumLocalPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameAccount_X.SendUpdatePlayerCurrentGameRPC
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameAccount_X::SendUpdatePlayerCurrentGameRPC ( )
//{
//	static UFunction* pFnSendUpdatePlayerCurrentGameRPC = NULL;
//
//	if ( ! pFnSendUpdatePlayerCurrentGameRPC )
//		pFnSendUpdatePlayerCurrentGameRPC = (UFunction*) UObject::GObjObjects()->Data[ 50858 ];
//
//	UOnlineGameAccount_X_execSendUpdatePlayerCurrentGameRPC_Parms SendUpdatePlayerCurrentGameRPC_Parms;
//
//	this->ProcessEvent ( pFnSendUpdatePlayerCurrentGameRPC, &SendUpdatePlayerCurrentGameRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.SendUpdatePlayerCurrentGameRequest
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameAccount_X::SendUpdatePlayerCurrentGameRequest ( )
//{
//	static UFunction* pFnSendUpdatePlayerCurrentGameRequest = NULL;
//
//	if ( ! pFnSendUpdatePlayerCurrentGameRequest )
//		pFnSendUpdatePlayerCurrentGameRequest = (UFunction*) UObject::GObjObjects()->Data[ 50855 ];
//
//	UOnlineGameAccount_X_execSendUpdatePlayerCurrentGameRequest_Parms SendUpdatePlayerCurrentGameRequest_Parms;
//
//	this->ProcessEvent ( pFnSendUpdatePlayerCurrentGameRequest, &SendUpdatePlayerCurrentGameRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.UpdateCurrentGame
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameAccount_X::UpdateCurrentGame ( )
//{
//	static UFunction* pFnUpdateCurrentGame = NULL;
//
//	if ( ! pFnUpdateCurrentGame )
//		pFnUpdateCurrentGame = (UFunction*) UObject::GObjObjects()->Data[ 50854 ];
//
//	UOnlineGameAccount_X_execUpdateCurrentGame_Parms UpdateCurrentGame_Parms;
//
//	this->ProcessEvent ( pFnUpdateCurrentGame, &UpdateCurrentGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.ClearCurrentPlaylist
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameAccount_X::ClearCurrentPlaylist ( )
//{
//	static UFunction* pFnClearCurrentPlaylist = NULL;
//
//	if ( ! pFnClearCurrentPlaylist )
//		pFnClearCurrentPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 50853 ];
//
//	UOnlineGameAccount_X_execClearCurrentPlaylist_Parms ClearCurrentPlaylist_Parms;
//
//	this->ProcessEvent ( pFnClearCurrentPlaylist, &ClearCurrentPlaylist_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.SetCurrentPlaylist
//// [0x00020002] 
//// Parameters infos:
//// int                            PlaylistId                     ( CPF_Parm )
//
//void UOnlineGameAccount_X::SetCurrentPlaylist ( int PlaylistId )
//{
//	static UFunction* pFnSetCurrentPlaylist = NULL;
//
//	if ( ! pFnSetCurrentPlaylist )
//		pFnSetCurrentPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 50850 ];
//
//	UOnlineGameAccount_X_execSetCurrentPlaylist_Parms SetCurrentPlaylist_Parms;
//	SetCurrentPlaylist_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnSetCurrentPlaylist, &SetCurrentPlaylist_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.HandleServerAddressChanged
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameAccount_X::HandleServerAddressChanged ( )
//{
//	static UFunction* pFnHandleServerAddressChanged = NULL;
//
//	if ( ! pFnHandleServerAddressChanged )
//		pFnHandleServerAddressChanged = (UFunction*) UObject::GObjObjects()->Data[ 50845 ];
//
//	UOnlineGameAccount_X_execHandleServerAddressChanged_Parms HandleServerAddressChanged_Parms;
//
//	this->ProcessEvent ( pFnHandleServerAddressChanged, &HandleServerAddressChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.HandlePsyNetLoginChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayerAuthentication_X* Auth                           ( CPF_Parm )
//
//void UOnlineGameAccount_X::HandlePsyNetLoginChanged ( class UOnlinePlayerAuthentication_X* Auth )
//{
//	static UFunction* pFnHandlePsyNetLoginChanged = NULL;
//
//	if ( ! pFnHandlePsyNetLoginChanged )
//		pFnHandlePsyNetLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 50843 ];
//
//	UOnlineGameAccount_X_execHandlePsyNetLoginChanged_Parms HandlePsyNetLoginChanged_Parms;
//	HandlePsyNetLoginChanged_Parms.Auth = Auth;
//
//	this->ProcessEvent ( pFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.HandlePlayerLoginStatusChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGameAccount_X::HandlePlayerLoginStatusChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnHandlePlayerLoginStatusChanged = NULL;
//
//	if ( ! pFnHandlePlayerLoginStatusChanged )
//		pFnHandlePlayerLoginStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 50841 ];
//
//	UOnlineGameAccount_X_execHandlePlayerLoginStatusChanged_Parms HandlePlayerLoginStatusChanged_Parms;
//	HandlePlayerLoginStatusChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandlePlayerLoginStatusChanged, &HandlePlayerLoginStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.OnPrimaryPlayerIdChanged
//// [0x00880002] 
//// Parameters infos:
//
//void UOnlineGameAccount_X::OnPrimaryPlayerIdChanged ( )
//{
//	static UFunction* pFnOnPrimaryPlayerIdChanged = NULL;
//
//	if ( ! pFnOnPrimaryPlayerIdChanged )
//		pFnOnPrimaryPlayerIdChanged = (UFunction*) UObject::GObjObjects()->Data[ 50839 ];
//
//	UOnlineGameAccount_X_execOnPrimaryPlayerIdChanged_Parms OnPrimaryPlayerIdChanged_Parms;
//
//	this->ProcessEvent ( pFnOnPrimaryPlayerIdChanged, &OnPrimaryPlayerIdChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.SetPrimaryPlayer
//// [0x00020002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGameAccount_X::SetPrimaryPlayer ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnSetPrimaryPlayer = NULL;
//
//	if ( ! pFnSetPrimaryPlayer )
//		pFnSetPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 50836 ];
//
//	UOnlineGameAccount_X_execSetPrimaryPlayer_Parms SetPrimaryPlayer_Parms;
//	SetPrimaryPlayer_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnSetPrimaryPlayer, &SetPrimaryPlayer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameAccount_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50833 ];
//
//	UOnlineGameAccount_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.EventCurrentPlaylistSet
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameAccount_X*    InAccount                      ( CPF_Parm )
//// class UGameSettingPlaylist_X*  NewPlaylist                    ( CPF_Parm )
//
//void UOnlineGameAccount_X::EventCurrentPlaylistSet ( class UOnlineGameAccount_X* InAccount, class UGameSettingPlaylist_X* NewPlaylist )
//{
//	static UFunction* pFnEventCurrentPlaylistSet = NULL;
//
//	if ( ! pFnEventCurrentPlaylistSet )
//		pFnEventCurrentPlaylistSet = (UFunction*) UObject::GObjObjects()->Data[ 50834 ];
//
//	UOnlineGameAccount_X_execEventCurrentPlaylistSet_Parms EventCurrentPlaylistSet_Parms;
//	EventCurrentPlaylistSet_Parms.InAccount = InAccount;
//	EventCurrentPlaylistSet_Parms.NewPlaylist = NewPlaylist;
//
//	this->ProcessEvent ( pFnEventCurrentPlaylistSet, &EventCurrentPlaylistSet_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameAccount_X.EventPrimaryPlayerIdChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameAccount_X*    InAccount                      ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGameAccount_X::EventPrimaryPlayerIdChanged ( class UOnlineGameAccount_X* InAccount, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnEventPrimaryPlayerIdChanged = NULL;
//
//	if ( ! pFnEventPrimaryPlayerIdChanged )
//		pFnEventPrimaryPlayerIdChanged = (UFunction*) UObject::GObjObjects()->Data[ 50828 ];
//
//	UOnlineGameAccount_X_execEventPrimaryPlayerIdChanged_Parms EventPrimaryPlayerIdChanged_Parms;
//	EventPrimaryPlayerIdChanged_Parms.InAccount = InAccount;
//	memcpy ( &EventPrimaryPlayerIdChanged_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnEventPrimaryPlayerIdChanged, &EventPrimaryPlayerIdChanged_Parms, NULL );
//};
//
//// Function ProjectX.AddReservationMessagePrivate_X.GetDebugString
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UAddReservationMessagePrivate_X::GetDebugString ( )
//{
//	static UFunction* pFnGetDebugString = NULL;
//
//	if ( ! pFnGetDebugString )
//		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 48077 ];
//
//	UAddReservationMessagePrivate_X_execGetDebugString_Parms GetDebugString_Parms;
//
//	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );
//
//	return GetDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessagePrivate_X.SetSettings
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// class UAddReservationMessagePrivate_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FCustomMatchSettings    InSettings                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UAddReservationMessagePrivate_X* UAddReservationMessagePrivate_X::SetSettings ( struct FCustomMatchSettings* InSettings )
//{
//	static UFunction* pFnSetSettings = NULL;
//
//	if ( ! pFnSetSettings )
//		pFnSetSettings = (UFunction*) UObject::GObjObjects()->Data[ 48074 ];
//
//	UAddReservationMessagePrivate_X_execSetSettings_Parms SetSettings_Parms;
//
//	this->ProcessEvent ( pFnSetSettings, &SetSettings_Parms, NULL );
//
//	if ( InSettings )
//		memcpy ( InSettings, &SetSettings_Parms.InSettings, 0x60 );
//
//	return SetSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.AddPlayers
//// [0x00020002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UAddReservationMessage_X* UAddReservationMessagePublic_X::AddPlayers ( )
//{
//	static UFunction* pFnAddPlayers = NULL;
//
//	if ( ! pFnAddPlayers )
//		pFnAddPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48106 ];
//
//	UAddReservationMessagePublic_X_execAddPlayers_Parms AddPlayers_Parms;
//
//	this->ProcessEvent ( pFnAddPlayers, &AddPlayers_Parms, NULL );
//
//	return AddPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.SetPlayerPref
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// class UGameSettingPlaylist_X*  Playlist                       ( CPF_Parm )
//// class UOnlinePlayer_X*         OnlinePlayer                   ( CPF_Parm )
//
//void UAddReservationMessagePublic_X::SetPlayerPref ( class UGameSettingPlaylist_X* Playlist, class UOnlinePlayer_X* OnlinePlayer )
//{
//	static UFunction* pFnSetPlayerPref = NULL;
//
//	if ( ! pFnSetPlayerPref )
//		pFnSetPlayerPref = (UFunction*) UObject::GObjObjects()->Data[ 48107 ];
//
//	UAddReservationMessagePublic_X_execSetPlayerPref_Parms SetPlayerPref_Parms;
//	SetPlayerPref_Parms.Playlist = Playlist;
//	SetPlayerPref_Parms.OnlinePlayer = OnlinePlayer;
//
//	this->ProcessEvent ( pFnSetPlayerPref, &SetPlayerPref_Parms, NULL );
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.GetPlayerMapPrefs
//// [0x00420002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// TArray< struct FName >         Likes                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FName >         Dislikes                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UAddReservationMessagePublic_X::GetPlayerMapPrefs ( struct FUniqueNetId PlayerID, TArray< struct FName >* Likes, TArray< struct FName >* Dislikes )
//{
//	static UFunction* pFnGetPlayerMapPrefs = NULL;
//
//	if ( ! pFnGetPlayerMapPrefs )
//		pFnGetPlayerMapPrefs = (UFunction*) UObject::GObjObjects()->Data[ 48117 ];
//
//	UAddReservationMessagePublic_X_execGetPlayerMapPrefs_Parms GetPlayerMapPrefs_Parms;
//	memcpy ( &GetPlayerMapPrefs_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPlayerMapPrefs, &GetPlayerMapPrefs_Parms, NULL );
//
//	if ( Likes )
//		memcpy ( Likes, &GetPlayerMapPrefs_Parms.Likes, 0xC );
//
//	if ( Dislikes )
//		memcpy ( Dislikes, &GetPlayerMapPrefs_Parms.Dislikes, 0xC );
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.AddPlayer
//// [0x00820002] 
//// Parameters infos:
//// class UAddReservationMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bRemotePlayer                  ( CPF_Parm )
//
//class UAddReservationMessage_X* UAddReservationMessagePublic_X::AddPlayer ( struct FUniqueNetId PlayerID, struct FString PlayerName, unsigned long bRemotePlayer )
//{
//	static UFunction* pFnAddPlayer = NULL;
//
//	if ( ! pFnAddPlayer )
//		pFnAddPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48095 ];
//
//	UAddReservationMessagePublic_X_execAddPlayer_Parms AddPlayer_Parms;
//	memcpy ( &AddPlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AddPlayer_Parms.PlayerName, &PlayerName, 0xC );
//	AddPlayer_Parms.bRemotePlayer = bRemotePlayer;
//
//	this->ProcessEvent ( pFnAddPlayer, &AddPlayer_Parms, NULL );
//
//	return AddPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.GetDebugString
//// [0x00820002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UAddReservationMessagePublic_X::GetDebugString ( )
//{
//	static UFunction* pFnGetDebugString = NULL;
//
//	if ( ! pFnGetDebugString )
//		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 48091 ];
//
//	UAddReservationMessagePublic_X_execGetDebugString_Parms GetDebugString_Parms;
//
//	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );
//
//	return GetDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.GetPlayerDebugString
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FReservationPlayerData  Player                         ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UAddReservationMessagePublic_X::GetPlayerDebugString ( struct FReservationPlayerData Player )
//{
//	static UFunction* pFnGetPlayerDebugString = NULL;
//
//	if ( ! pFnGetPlayerDebugString )
//		pFnGetPlayerDebugString = (UFunction*) UObject::GObjObjects()->Data[ 48086 ];
//
//	UAddReservationMessagePublic_X_execGetPlayerDebugString_Parms GetPlayerDebugString_Parms;
//	memcpy ( &GetPlayerDebugString_Parms.Player, &Player, 0x88 );
//
//	this->ProcessEvent ( pFnGetPlayerDebugString, &GetPlayerDebugString_Parms, NULL );
//
//	return GetPlayerDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.AddReservationMessagePublic_X.SetSettings
//// [0x00420002] 
//// Parameters infos:
//// class UAddReservationMessagePublic_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FJoinMatchSettings      InSettings                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UAddReservationMessagePublic_X* UAddReservationMessagePublic_X::SetSettings ( struct FJoinMatchSettings* InSettings )
//{
//	static UFunction* pFnSetSettings = NULL;
//
//	if ( ! pFnSetSettings )
//		pFnSetSettings = (UFunction*) UObject::GObjObjects()->Data[ 48083 ];
//
//	UAddReservationMessagePublic_X_execSetSettings_Parms SetSettings_Parms;
//
//	this->ProcessEvent ( pFnSetSettings, &SetSettings_Parms, NULL );
//
//	if ( InSettings )
//		memcpy ( InSettings, &SetSettings_Parms.InSettings, 0x18 );
//
//	return SetSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.SkillsSynced
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//bool UOnlineGameSkill_X::SkillsSynced ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnSkillsSynced = NULL;
//
//	if ( ! pFnSkillsSynced )
//		pFnSkillsSynced = (UFunction*) UObject::GObjObjects()->Data[ 54046 ];
//
//	UOnlineGameSkill_X_execSkillsSynced_Parms SkillsSynced_Parms;
//	memcpy ( &SkillsSynced_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnSkillsSynced, &SkillsSynced_Parms, NULL );
//
//	return SkillsSynced_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetHighestSkillTier
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//int UOnlineGameSkill_X::GetHighestSkillTier ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetHighestSkillTier = NULL;
//
//	if ( ! pFnGetHighestSkillTier )
//		pFnGetHighestSkillTier = (UFunction*) UObject::GObjObjects()->Data[ 54047 ];
//
//	UOnlineGameSkill_X_execGetHighestSkillTier_Parms GetHighestSkillTier_Parms;
//	memcpy ( &GetHighestSkillTier_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetHighestSkillTier, &GetHighestSkillTier_Parms, NULL );
//
//	return GetHighestSkillTier_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetPlayerSeasonRewardProgress
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// struct FPlayerSeasonRewardProgress ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//struct FPlayerSeasonRewardProgress UOnlineGameSkill_X::GetPlayerSeasonRewardProgress ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetPlayerSeasonRewardProgress = NULL;
//
//	if ( ! pFnGetPlayerSeasonRewardProgress )
//		pFnGetPlayerSeasonRewardProgress = (UFunction*) UObject::GObjObjects()->Data[ 54050 ];
//
//	UOnlineGameSkill_X_execGetPlayerSeasonRewardProgress_Parms GetPlayerSeasonRewardProgress_Parms;
//	memcpy ( &GetPlayerSeasonRewardProgress_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPlayerSeasonRewardProgress, &GetPlayerSeasonRewardProgress_Parms, NULL );
//
//	return GetPlayerSeasonRewardProgress_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetPlaylistSkillCache
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// class UPlaylistSkillCache_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            Playlist                       ( CPF_Parm )
//
//class UPlaylistSkillCache_X* UOnlineGameSkill_X::GetPlaylistSkillCache ( int Playlist )
//{
//	static UFunction* pFnGetPlaylistSkillCache = NULL;
//
//	if ( ! pFnGetPlaylistSkillCache )
//		pFnGetPlaylistSkillCache = (UFunction*) UObject::GObjObjects()->Data[ 54018 ];
//
//	UOnlineGameSkill_X_execGetPlaylistSkillCache_Parms GetPlaylistSkillCache_Parms;
//	GetPlaylistSkillCache_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnGetPlaylistSkillCache, &GetPlaylistSkillCache_Parms, NULL );
//
//	return GetPlaylistSkillCache_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.HandleSkillsUpdateFailed
//// [0x00080000] 
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void UOnlineGameSkill_X::HandleSkillsUpdateFailed ( class URPC_X* RPC )
//{
//	static UFunction* pFnHandleSkillsUpdateFailed = NULL;
//
//	if ( ! pFnHandleSkillsUpdateFailed )
//		pFnHandleSkillsUpdateFailed = (UFunction*) UObject::GObjObjects()->Data[ 54045 ];
//
//	UOnlineGameSkill_X_execHandleSkillsUpdateFailed_Parms HandleSkillsUpdateFailed_Parms;
//	HandleSkillsUpdateFailed_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleSkillsUpdateFailed, &HandleSkillsUpdateFailed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.SetPlayerSeasonReward
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FPlayerSeasonRewardProgress Reward                         ( CPF_Parm )
//
//void UOnlineGameSkill_X::SetPlayerSeasonReward ( struct FPlayerSeasonRewardProgress Reward )
//{
//	static UFunction* pFnSetPlayerSeasonReward = NULL;
//
//	if ( ! pFnSetPlayerSeasonReward )
//		pFnSetPlayerSeasonReward = (UFunction*) UObject::GObjObjects()->Data[ 48920 ];
//
//	UOnlineGameSkill_X_execSetPlayerSeasonReward_Parms SetPlayerSeasonReward_Parms;
//	memcpy ( &SetPlayerSeasonReward_Parms.Reward, &Reward, 0x50 );
//
//	this->ProcessEvent ( pFnSetPlayerSeasonReward, &SetPlayerSeasonReward_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.ReplicateSeasonReward
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPlayerSeasonRewardProgress Reward                         ( CPF_Parm )
//
//void UOnlineGameSkill_X::ReplicateSeasonReward ( struct FPlayerSeasonRewardProgress Reward )
//{
//	static UFunction* pFnReplicateSeasonReward = NULL;
//
//	if ( ! pFnReplicateSeasonReward )
//		pFnReplicateSeasonReward = (UFunction*) UObject::GObjObjects()->Data[ 54060 ];
//
//	UOnlineGameSkill_X_execReplicateSeasonReward_Parms ReplicateSeasonReward_Parms;
//	memcpy ( &ReplicateSeasonReward_Parms.Reward, &Reward, 0x50 );
//
//	this->ProcessEvent ( pFnReplicateSeasonReward, &ReplicateSeasonReward_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.HandleSkillsUpdated
//// [0x00880002] 
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//// struct FPlayerSeasonRewardProgress StructInitializer_8C606A674EBD0B00535960A884487B9A ( CPF_Const | CPF_OutParm )
//
//void UOnlineGameSkill_X::HandleSkillsUpdated ( class URPC_X* RPC, struct FPlayerSeasonRewardProgress* StructInitializer_8C606A674EBD0B00535960A884487B9A )
//{
//	static UFunction* pFnHandleSkillsUpdated = NULL;
//
//	if ( ! pFnHandleSkillsUpdated )
//		pFnHandleSkillsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 54063 ];
//
//	UOnlineGameSkill_X_execHandleSkillsUpdated_Parms HandleSkillsUpdated_Parms;
//	HandleSkillsUpdated_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleSkillsUpdated, &HandleSkillsUpdated_Parms, NULL );
//
//	if ( StructInitializer_8C606A674EBD0B00535960A884487B9A )
//		memcpy ( StructInitializer_8C606A674EBD0B00535960A884487B9A, &HandleSkillsUpdated_Parms.StructInitializer_8C606A674EBD0B00535960A884487B9A, 0x50 );
//};
//
//// Function ProjectX.OnlineGameSkill_X.SubmitMatch
//// [0x00020002] 
//// Parameters infos:
//// class UMatchRecorder_X*        MatchRecorder                  ( CPF_Parm )
//// struct FString                 MatchGUID                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameSkill_X::SubmitMatch ( class UMatchRecorder_X* MatchRecorder, struct FString MatchGUID )
//{
//	static UFunction* pFnSubmitMatch = NULL;
//
//	if ( ! pFnSubmitMatch )
//		pFnSubmitMatch = (UFunction*) UObject::GObjObjects()->Data[ 54066 ];
//
//	UOnlineGameSkill_X_execSubmitMatch_Parms SubmitMatch_Parms;
//	SubmitMatch_Parms.MatchRecorder = MatchRecorder;
//	memcpy ( &SubmitMatch_Parms.MatchGUID, &MatchGUID, 0xC );
//
//	this->ProcessEvent ( pFnSubmitMatch, &SubmitMatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.Clear
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameSkill_X::Clear ( )
//{
//	static UFunction* pFnClear = NULL;
//
//	if ( ! pFnClear )
//		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 54042 ];
//
//	UOnlineGameSkill_X_execClear_Parms Clear_Parms;
//
//	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetMMR
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          Mu                             ( CPF_Parm )
//// float                          Sigma                          ( CPF_Parm )
//
//float UOnlineGameSkill_X::GetMMR ( float Mu, float Sigma )
//{
//	static UFunction* pFnGetMMR = NULL;
//
//	if ( ! pFnGetMMR )
//		pFnGetMMR = (UFunction*) UObject::GObjObjects()->Data[ 54038 ];
//
//	UOnlineGameSkill_X_execGetMMR_Parms GetMMR_Parms;
//	GetMMR_Parms.Mu = Mu;
//	GetMMR_Parms.Sigma = Sigma;
//
//	this->ProcessEvent ( pFnGetMMR, &GetMMR_Parms, NULL );
//
//	return GetMMR_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetPlayerMMR
//// [0x00820002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// int                            Playlist                       ( CPF_Parm )
//
//float UOnlineGameSkill_X::GetPlayerMMR ( struct FUniqueNetId PlayerID, int Playlist )
//{
//	static UFunction* pFnGetPlayerMMR = NULL;
//
//	if ( ! pFnGetPlayerMMR )
//		pFnGetPlayerMMR = (UFunction*) UObject::GObjObjects()->Data[ 50985 ];
//
//	UOnlineGameSkill_X_execGetPlayerMMR_Parms GetPlayerMMR_Parms;
//	memcpy ( &GetPlayerMMR_Parms.PlayerID, &PlayerID, 0x48 );
//	GetPlayerMMR_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnGetPlayerMMR, &GetPlayerMMR_Parms, NULL );
//
//	return GetPlayerMMR_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetPlayerRating
//// [0x00020002] 
//// Parameters infos:
//// struct FPlayerSkillRating      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// int                            Playlist                       ( CPF_Parm )
//
//struct FPlayerSkillRating UOnlineGameSkill_X::GetPlayerRating ( struct FUniqueNetId PlayerID, int Playlist )
//{
//	static UFunction* pFnGetPlayerRating = NULL;
//
//	if ( ! pFnGetPlayerRating )
//		pFnGetPlayerRating = (UFunction*) UObject::GObjObjects()->Data[ 48104 ];
//
//	UOnlineGameSkill_X_execGetPlayerRating_Parms GetPlayerRating_Parms;
//	memcpy ( &GetPlayerRating_Parms.PlayerID, &PlayerID, 0x48 );
//	GetPlayerRating_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnGetPlayerRating, &GetPlayerRating_Parms, NULL );
//
//	return GetPlayerRating_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.OnSkillSynced
//// [0x00080002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameSkill_X::OnSkillSynced ( struct FUniqueNetId PlayerID, class UError* Error )
//{
//	static UFunction* pFnOnSkillSynced = NULL;
//
//	if ( ! pFnOnSkillSynced )
//		pFnOnSkillSynced = (UFunction*) UObject::GObjObjects()->Data[ 54032 ];
//
//	UOnlineGameSkill_X_execOnSkillSynced_Parms OnSkillSynced_Parms;
//	memcpy ( &OnSkillSynced_Parms.PlayerID, &PlayerID, 0x48 );
//	OnSkillSynced_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnOnSkillSynced, &OnSkillSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.CacheSeasonReward
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPlayerSeasonRewardProgress Reward                         ( CPF_Parm )
//
//void UOnlineGameSkill_X::CacheSeasonReward ( struct FPlayerSeasonRewardProgress Reward )
//{
//	static UFunction* pFnCacheSeasonReward = NULL;
//
//	if ( ! pFnCacheSeasonReward )
//		pFnCacheSeasonReward = (UFunction*) UObject::GObjObjects()->Data[ 54062 ];
//
//	UOnlineGameSkill_X_execCacheSeasonReward_Parms CacheSeasonReward_Parms;
//	memcpy ( &CacheSeasonReward_Parms.Reward, &Reward, 0x50 );
//
//	this->ProcessEvent ( pFnCacheSeasonReward, &CacheSeasonReward_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.HandleSkillRequestCompleteRPC
//// [0x20880002] 
//// Parameters infos:
//// class URPC_GetPlayerSkill_X*   RPC                            ( CPF_Parm )
//
//void UOnlineGameSkill_X::HandleSkillRequestCompleteRPC ( class URPC_GetPlayerSkill_X* RPC )
//{
//	static UFunction* pFnHandleSkillRequestCompleteRPC = NULL;
//
//	if ( ! pFnHandleSkillRequestCompleteRPC )
//		pFnHandleSkillRequestCompleteRPC = (UFunction*) UObject::GObjObjects()->Data[ 54087 ];
//
//	UOnlineGameSkill_X_execHandleSkillRequestCompleteRPC_Parms HandleSkillRequestCompleteRPC_Parms;
//	HandleSkillRequestCompleteRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleSkillRequestCompleteRPC, &HandleSkillRequestCompleteRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.SyncPlayerSkill
//// [0x00824002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameSkill_X::SyncPlayerSkill ( struct FUniqueNetId PlayerID, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSyncPlayerSkill = NULL;
//
//	if ( ! pFnSyncPlayerSkill )
//		pFnSyncPlayerSkill = (UFunction*) UObject::GObjObjects()->Data[ 54022 ];
//
//	UOnlineGameSkill_X_execSyncPlayerSkill_Parms SyncPlayerSkill_Parms;
//	memcpy ( &SyncPlayerSkill_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &SyncPlayerSkill_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSyncPlayerSkill, &SyncPlayerSkill_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.CacheSkill
//// [0x00020002] 
//// Parameters infos:
//// struct FPlayerSkillRating      Rating                         ( CPF_Parm )
//// int                            Playlist                       ( CPF_Parm )
//
//void UOnlineGameSkill_X::CacheSkill ( struct FPlayerSkillRating Rating, int Playlist )
//{
//	static UFunction* pFnCacheSkill = NULL;
//
//	if ( ! pFnCacheSkill )
//		pFnCacheSkill = (UFunction*) UObject::GObjObjects()->Data[ 54019 ];
//
//	UOnlineGameSkill_X_execCacheSkill_Parms CacheSkill_Parms;
//	memcpy ( &CacheSkill_Parms.Rating, &Rating, 0x60 );
//	CacheSkill_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnCacheSkill, &CacheSkill_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.PreCacheSkill
//// [0x00020002] 
//// Parameters infos:
//// struct FPlayerSkillRating      Rating                         ( CPF_Parm )
//// int                            Playlist                       ( CPF_Parm )
//
//void UOnlineGameSkill_X::PreCacheSkill ( struct FPlayerSkillRating Rating, int Playlist )
//{
//	static UFunction* pFnPreCacheSkill = NULL;
//
//	if ( ! pFnPreCacheSkill )
//		pFnPreCacheSkill = (UFunction*) UObject::GObjObjects()->Data[ 54015 ];
//
//	UOnlineGameSkill_X_execPreCacheSkill_Parms PreCacheSkill_Parms;
//	memcpy ( &PreCacheSkill_Parms.Rating, &Rating, 0x60 );
//	PreCacheSkill_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnPreCacheSkill, &PreCacheSkill_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameSkill_X.GetSkillPlaylistID
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            PlaylistId                     ( CPF_Parm )
//
//int UOnlineGameSkill_X::GetSkillPlaylistID ( int PlaylistId )
//{
//	static UFunction* pFnGetSkillPlaylistID = NULL;
//
//	if ( ! pFnGetSkillPlaylistID )
//		pFnGetSkillPlaylistID = (UFunction*) UObject::GObjObjects()->Data[ 54012 ];
//
//	UOnlineGameSkill_X_execGetSkillPlaylistID_Parms GetSkillPlaylistID_Parms;
//	GetSkillPlaylistID_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnGetSkillPlaylistID, &GetSkillPlaylistID_Parms, NULL );
//
//	return GetSkillPlaylistID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameSkill_X.EventSkillSynced
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameSkill_X*      Skill                          ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameSkill_X::EventSkillSynced ( class UOnlineGameSkill_X* Skill, struct FUniqueNetId PlayerID, class UError* Error )
//{
//	static UFunction* pFnEventSkillSynced = NULL;
//
//	if ( ! pFnEventSkillSynced )
//		pFnEventSkillSynced = (UFunction*) UObject::GObjObjects()->Data[ 54002 ];
//
//	UOnlineGameSkill_X_execEventSkillSynced_Parms EventSkillSynced_Parms;
//	EventSkillSynced_Parms.Skill = Skill;
//	memcpy ( &EventSkillSynced_Parms.PlayerID, &PlayerID, 0x48 );
//	EventSkillSynced_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventSkillSynced, &EventSkillSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.GetAccessiblePlaylists
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FName >         SelectedPlaylists              ( CPF_Parm | CPF_NeedCtorLink )
//
//TArray< struct FName > UOnlineGamePlaylists_X::GetAccessiblePlaylists ( TArray< struct FName > SelectedPlaylists )
//{
//	static UFunction* pFnGetAccessiblePlaylists = NULL;
//
//	if ( ! pFnGetAccessiblePlaylists )
//		pFnGetAccessiblePlaylists = (UFunction*) UObject::GObjObjects()->Data[ 53183 ];
//
//	UOnlineGamePlaylists_X_execGetAccessiblePlaylists_Parms GetAccessiblePlaylists_Parms;
//	memcpy ( &GetAccessiblePlaylists_Parms.SelectedPlaylists, &SelectedPlaylists, 0xC );
//
//	this->ProcessEvent ( pFnGetAccessiblePlaylists, &GetAccessiblePlaylists_Parms, NULL );
//
//	return GetAccessiblePlaylists_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.IsRankedEnabled
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGamePlaylists_X::IsRankedEnabled ( )
//{
//	static UFunction* pFnIsRankedEnabled = NULL;
//
//	if ( ! pFnIsRankedEnabled )
//		pFnIsRankedEnabled = (UFunction*) UObject::GObjObjects()->Data[ 53156 ];
//
//	UOnlineGamePlaylists_X_execIsRankedEnabled_Parms IsRankedEnabled_Parms;
//
//	this->ProcessEvent ( pFnIsRankedEnabled, &IsRankedEnabled_Parms, NULL );
//
//	return IsRankedEnabled_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.IsRankedPlaylistID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            PlaylistId                     ( CPF_Parm )
//
//bool UOnlineGamePlaylists_X::IsRankedPlaylistID ( int PlaylistId )
//{
//	static UFunction* pFnIsRankedPlaylistID = NULL;
//
//	if ( ! pFnIsRankedPlaylistID )
//		pFnIsRankedPlaylistID = (UFunction*) UObject::GObjObjects()->Data[ 53175 ];
//
//	UOnlineGamePlaylists_X_execIsRankedPlaylistID_Parms IsRankedPlaylistID_Parms;
//	IsRankedPlaylistID_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnIsRankedPlaylistID, &IsRankedPlaylistID_Parms, NULL );
//
//	return IsRankedPlaylistID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.IsRankedPlaylistName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   PlaylistName                   ( CPF_Parm )
//
//bool UOnlineGamePlaylists_X::IsRankedPlaylistName ( struct FName PlaylistName )
//{
//	static UFunction* pFnIsRankedPlaylistName = NULL;
//
//	if ( ! pFnIsRankedPlaylistName )
//		pFnIsRankedPlaylistName = (UFunction*) UObject::GObjObjects()->Data[ 53172 ];
//
//	UOnlineGamePlaylists_X_execIsRankedPlaylistName_Parms IsRankedPlaylistName_Parms;
//	memcpy ( &IsRankedPlaylistName_Parms.PlaylistName, &PlaylistName, 0x8 );
//
//	this->ProcessEvent ( pFnIsRankedPlaylistName, &IsRankedPlaylistName_Parms, NULL );
//
//	return IsRankedPlaylistName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.NamesToIDs
//// [0x00420002] 
//// Parameters infos:
//// TArray< struct FName >         Names                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< int >                  Ids                            ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGamePlaylists_X::NamesToIDs ( TArray< struct FName >* Names, TArray< int >* Ids )
//{
//	static UFunction* pFnNamesToIDs = NULL;
//
//	if ( ! pFnNamesToIDs )
//		pFnNamesToIDs = (UFunction*) UObject::GObjObjects()->Data[ 53165 ];
//
//	UOnlineGamePlaylists_X_execNamesToIDs_Parms NamesToIDs_Parms;
//
//	this->ProcessEvent ( pFnNamesToIDs, &NamesToIDs_Parms, NULL );
//
//	if ( Names )
//		memcpy ( Names, &NamesToIDs_Parms.Names, 0xC );
//
//	if ( Ids )
//		memcpy ( Ids, &NamesToIDs_Parms.Ids, 0xC );
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.GetPlaylistFriendlyName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// int                            PlaylistId                     ( CPF_Parm )
//
//struct FString UOnlineGamePlaylists_X::GetPlaylistFriendlyName ( int PlaylistId )
//{
//	static UFunction* pFnGetPlaylistFriendlyName = NULL;
//
//	if ( ! pFnGetPlaylistFriendlyName )
//		pFnGetPlaylistFriendlyName = (UFunction*) UObject::GObjObjects()->Data[ 52316 ];
//
//	UOnlineGamePlaylists_X_execGetPlaylistFriendlyName_Parms GetPlaylistFriendlyName_Parms;
//	GetPlaylistFriendlyName_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnGetPlaylistFriendlyName, &GetPlaylistFriendlyName_Parms, NULL );
//
//	return GetPlaylistFriendlyName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.CopyPlaylistGameTags
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGamePlaylists_X::CopyPlaylistGameTags ( )
//{
//	static UFunction* pFnCopyPlaylistGameTags = NULL;
//
//	if ( ! pFnCopyPlaylistGameTags )
//		pFnCopyPlaylistGameTags = (UFunction*) UObject::GObjObjects()->Data[ 53160 ];
//
//	UOnlineGamePlaylists_X_execCopyPlaylistGameTags_Parms CopyPlaylistGameTags_Parms;
//
//	this->ProcessEvent ( pFnCopyPlaylistGameTags, &CopyPlaylistGameTags_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.HandlePlaylistsChanged
//// [0x00080002] 
//// Parameters infos:
//// class UObjectProvider*         Provider                       ( CPF_Parm )
//
//void UOnlineGamePlaylists_X::HandlePlaylistsChanged ( class UObjectProvider* Provider )
//{
//	static UFunction* pFnHandlePlaylistsChanged = NULL;
//
//	if ( ! pFnHandlePlaylistsChanged )
//		pFnHandlePlaylistsChanged = (UFunction*) UObject::GObjObjects()->Data[ 53162 ];
//
//	UOnlineGamePlaylists_X_execHandlePlaylistsChanged_Parms HandlePlaylistsChanged_Parms;
//	HandlePlaylistsChanged_Parms.Provider = Provider;
//
//	this->ProcessEvent ( pFnHandlePlaylistsChanged, &HandlePlaylistsChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.NameToID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   PlaylistName                   ( CPF_Parm )
//
//int UOnlineGamePlaylists_X::NameToID ( struct FName PlaylistName )
//{
//	static UFunction* pFnNameToID = NULL;
//
//	if ( ! pFnNameToID )
//		pFnNameToID = (UFunction*) UObject::GObjObjects()->Data[ 48913 ];
//
//	UOnlineGamePlaylists_X_execNameToID_Parms NameToID_Parms;
//	memcpy ( &NameToID_Parms.PlaylistName, &PlaylistName, 0x8 );
//
//	this->ProcessEvent ( pFnNameToID, &NameToID_Parms, NULL );
//
//	return NameToID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.GetPlaylistByID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UGameSettingPlaylist_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            PlaylistId                     ( CPF_Parm )
//
//class UGameSettingPlaylist_X* UOnlineGamePlaylists_X::GetPlaylistByID ( int PlaylistId )
//{
//	static UFunction* pFnGetPlaylistByID = NULL;
//
//	if ( ! pFnGetPlaylistByID )
//		pFnGetPlaylistByID = (UFunction*) UObject::GObjObjects()->Data[ 48113 ];
//
//	UOnlineGamePlaylists_X_execGetPlaylistByID_Parms GetPlaylistByID_Parms;
//	GetPlaylistByID_Parms.PlaylistId = PlaylistId;
//
//	this->ProcessEvent ( pFnGetPlaylistByID, &GetPlaylistByID_Parms, NULL );
//
//	return GetPlaylistByID_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.GetPlaylistByName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UGameSettingPlaylist_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   PlaylistName                   ( CPF_Parm )
//
//class UGameSettingPlaylist_X* UOnlineGamePlaylists_X::GetPlaylistByName ( struct FName PlaylistName )
//{
//	static UFunction* pFnGetPlaylistByName = NULL;
//
//	if ( ! pFnGetPlaylistByName )
//		pFnGetPlaylistByName = (UFunction*) UObject::GObjObjects()->Data[ 53159 ];
//
//	UOnlineGamePlaylists_X_execGetPlaylistByName_Parms GetPlaylistByName_Parms;
//	memcpy ( &GetPlaylistByName_Parms.PlaylistName, &PlaylistName, 0x8 );
//
//	this->ProcessEvent ( pFnGetPlaylistByName, &GetPlaylistByName_Parms, NULL );
//
//	return GetPlaylistByName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.IsPlaylistEnabled
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UGameSettingPlaylist_X*  Playlist                       ( CPF_Parm )
//
//bool UOnlineGamePlaylists_X::IsPlaylistEnabled ( class UGameSettingPlaylist_X* Playlist )
//{
//	static UFunction* pFnIsPlaylistEnabled = NULL;
//
//	if ( ! pFnIsPlaylistEnabled )
//		pFnIsPlaylistEnabled = (UFunction*) UObject::GObjObjects()->Data[ 53152 ];
//
//	UOnlineGamePlaylists_X_execIsPlaylistEnabled_Parms IsPlaylistEnabled_Parms;
//	IsPlaylistEnabled_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnIsPlaylistEnabled, &IsPlaylistEnabled_Parms, NULL );
//
//	return IsPlaylistEnabled_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.NotifyWhenChanged
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePlaylists_X::NotifyWhenChanged ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyWhenChanged = NULL;
//
//	if ( ! pFnNotifyWhenChanged )
//		pFnNotifyWhenChanged = (UFunction*) UObject::GObjObjects()->Data[ 53155 ];
//
//	UOnlineGamePlaylists_X_execNotifyWhenChanged_Parms NotifyWhenChanged_Parms;
//	memcpy ( &NotifyWhenChanged_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyWhenChanged, &NotifyWhenChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGamePlaylists_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 53150 ];
//
//	UOnlineGamePlaylists_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlaylists_X.EventPlaylistsChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePlaylists_X*  PlaylistsObj                   ( CPF_Parm )
//
//void UOnlineGamePlaylists_X::EventPlaylistsChanged ( class UOnlineGamePlaylists_X* PlaylistsObj )
//{
//	static UFunction* pFnEventPlaylistsChanged = NULL;
//
//	if ( ! pFnEventPlaylistsChanged )
//		pFnEventPlaylistsChanged = (UFunction*) UObject::GObjObjects()->Data[ 53151 ];
//
//	UOnlineGamePlaylists_X_execEventPlaylistsChanged_Parms EventPlaylistsChanged_Parms;
//	EventPlaylistsChanged_Parms.PlaylistsObj = PlaylistsObj;
//
//	this->ProcessEvent ( pFnEventPlaylistsChanged, &EventPlaylistsChanged_Parms, NULL );
//};
//
//// Function ProjectX.GameSettingPlaylist_X.ShouldUpdateSkills
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UGameSettingPlaylist_X::ShouldUpdateSkills ( )
//{
//	static UFunction* pFnShouldUpdateSkills = NULL;
//
//	if ( ! pFnShouldUpdateSkills )
//		pFnShouldUpdateSkills = (UFunction*) UObject::GObjObjects()->Data[ 49574 ];
//
//	UGameSettingPlaylist_X_execShouldUpdateSkills_Parms ShouldUpdateSkills_Parms;
//
//	this->ProcessEvent ( pFnShouldUpdateSkills, &ShouldUpdateSkills_Parms, NULL );
//
//	return ShouldUpdateSkills_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingPlaylist_X.IsValidID
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylistID                   ( CPF_Parm )
//
//bool UGameSettingPlaylist_X::IsValidID ( int InPlaylistID )
//{
//	static UFunction* pFnIsValidID = NULL;
//
//	if ( ! pFnIsValidID )
//		pFnIsValidID = (UFunction*) UObject::GObjObjects()->Data[ 49571 ];
//
//	UGameSettingPlaylist_X_execIsValidID_Parms IsValidID_Parms;
//	IsValidID_Parms.InPlaylistID = InPlaylistID;
//
//	this->ProcessEvent ( pFnIsValidID, &IsValidID_Parms, NULL );
//
//	return IsValidID_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingPlaylist_X.IsValid
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UGameSettingPlaylist_X::IsValid ( )
//{
//	static UFunction* pFnIsValid = NULL;
//
//	if ( ! pFnIsValid )
//		pFnIsValid = (UFunction*) UObject::GObjObjects()->Data[ 49569 ];
//
//	UGameSettingPlaylist_X_execIsValid_Parms IsValid_Parms;
//
//	this->ProcessEvent ( pFnIsValid, &IsValid_Parms, NULL );
//
//	return IsValid_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingPlaylist_X.GetLocalizedDescription
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UGameSettingPlaylist_X::GetLocalizedDescription ( )
//{
//	static UFunction* pFnGetLocalizedDescription = NULL;
//
//	if ( ! pFnGetLocalizedDescription )
//		pFnGetLocalizedDescription = (UFunction*) UObject::GObjObjects()->Data[ 49566 ];
//
//	UGameSettingPlaylist_X_execGetLocalizedDescription_Parms GetLocalizedDescription_Parms;
//
//	this->ProcessEvent ( pFnGetLocalizedDescription, &GetLocalizedDescription_Parms, NULL );
//
//	return GetLocalizedDescription_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingPlaylist_X.GetLocalizedName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UGameSettingPlaylist_X::GetLocalizedName ( )
//{
//	static UFunction* pFnGetLocalizedName = NULL;
//
//	if ( ! pFnGetLocalizedName )
//		pFnGetLocalizedName = (UFunction*) UObject::GObjObjects()->Data[ 49562 ];
//
//	UGameSettingPlaylist_X_execGetLocalizedName_Parms GetLocalizedName_Parms;
//
//	this->ProcessEvent ( pFnGetLocalizedName, &GetLocalizedName_Parms, NULL );
//
//	return GetLocalizedName_Parms.ReturnValue;
//};
//
//// Function ProjectX.GameSettingPlaylist_X.Setup
//// [0x00020002] 
//// Parameters infos:
//// class UPlaylistSettings_X*     Settings                       ( CPF_Parm )
//
//void UGameSettingPlaylist_X::Setup ( class UPlaylistSettings_X* Settings )
//{
//	static UFunction* pFnSetup = NULL;
//
//	if ( ! pFnSetup )
//		pFnSetup = (UFunction*) UObject::GObjObjects()->Data[ 49564 ];
//
//	UGameSettingPlaylist_X_execSetup_Parms Setup_Parms;
//	Setup_Parms.Settings = Settings;
//
//	this->ProcessEvent ( pFnSetup, &Setup_Parms, NULL );
//};
//
//// Function ProjectX.SeqEvent_Spawned_X.TriggerFor
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class AActor*                  A                              ( CPF_Parm )
//
//void USeqEvent_Spawned_X::TriggerFor ( class AActor* A )
//{
//	static UFunction* pFnTriggerFor = NULL;
//
//	if ( ! pFnTriggerFor )
//		pFnTriggerFor = (UFunction*) UObject::GObjObjects()->Data[ 55570 ];
//
//	USeqEvent_Spawned_X_execTriggerFor_Parms TriggerFor_Parms;
//	TriggerFor_Parms.A = A;
//
//	this->ProcessEvent ( pFnTriggerFor, &TriggerFor_Parms, NULL );
//};
//
//// Function ProjectX.CameraStateBlender_X.IsTransitioning
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UCameraStateBlender_X::IsTransitioning ( )
//{
//	static UFunction* pFnIsTransitioning = NULL;
//
//	if ( ! pFnIsTransitioning )
//		pFnIsTransitioning = (UFunction*) UObject::GObjObjects()->Data[ 48367 ];
//
//	UCameraStateBlender_X_execIsTransitioning_Parms IsTransitioning_Parms;
//
//	this->ProcessEvent ( pFnIsTransitioning, &IsTransitioning_Parms, NULL );
//
//	return IsTransitioning_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraStateBlender_X.BlendCameraState
//// [0x00480002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraStateBlender_X::BlendCameraState ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnBlendCameraState = NULL;
//
//	if ( ! pFnBlendCameraState )
//		pFnBlendCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48360 ];
//
//	UCameraStateBlender_X_execBlendCameraState_Parms BlendCameraState_Parms;
//	BlendCameraState_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnBlendCameraState, &BlendCameraState_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &BlendCameraState_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraStateBlender_X.PostProcessPOV
//// [0x00420002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraStateBlender_X::PostProcessPOV ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnPostProcessPOV = NULL;
//
//	if ( ! pFnPostProcessPOV )
//		pFnPostProcessPOV = (UFunction*) UObject::GObjObjects()->Data[ 48354 ];
//
//	UCameraStateBlender_X_execPostProcessPOV_Parms PostProcessPOV_Parms;
//	PostProcessPOV_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnPostProcessPOV, &PostProcessPOV_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &PostProcessPOV_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraStateBlender_X.UpdatePOV
//// [0x00420002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraStateBlender_X::UpdatePOV ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnUpdatePOV = NULL;
//
//	if ( ! pFnUpdatePOV )
//		pFnUpdatePOV = (UFunction*) UObject::GObjObjects()->Data[ 48351 ];
//
//	UCameraStateBlender_X_execUpdatePOV_Parms UpdatePOV_Parms;
//	UpdatePOV_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdatePOV, &UpdatePOV_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &UpdatePOV_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraStateBlender_X.Tick
//// [0x00020002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UCameraStateBlender_X::Tick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48349 ];
//
//	UCameraStateBlender_X_execTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.CameraStateBlender_X.ClearTransitionDelta
//// [0x00880002] 
//// Parameters infos:
//
//void UCameraStateBlender_X::ClearTransitionDelta ( )
//{
//	static UFunction* pFnClearTransitionDelta = NULL;
//
//	if ( ! pFnClearTransitionDelta )
//		pFnClearTransitionDelta = (UFunction*) UObject::GObjObjects()->Data[ 48347 ];
//
//	UCameraStateBlender_X_execClearTransitionDelta_Parms ClearTransitionDelta_Parms;
//
//	this->ProcessEvent ( pFnClearTransitionDelta, &ClearTransitionDelta_Parms, NULL );
//};
//
//// Function ProjectX.CameraStateBlender_X.ClearTransition
//// [0x00880002] 
//// Parameters infos:
//
//void UCameraStateBlender_X::ClearTransition ( )
//{
//	static UFunction* pFnClearTransition = NULL;
//
//	if ( ! pFnClearTransition )
//		pFnClearTransition = (UFunction*) UObject::GObjObjects()->Data[ 48345 ];
//
//	UCameraStateBlender_X_execClearTransition_Parms ClearTransition_Parms;
//
//	this->ProcessEvent ( pFnClearTransition, &ClearTransition_Parms, NULL );
//};
//
//// Function ProjectX.CameraStateBlender_X.TransitionToState
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UCameraState_X*          NewState                       ( CPF_Parm )
//
//bool UCameraStateBlender_X::TransitionToState ( class UCameraState_X* NewState )
//{
//	static UFunction* pFnTransitionToState = NULL;
//
//	if ( ! pFnTransitionToState )
//		pFnTransitionToState = (UFunction*) UObject::GObjObjects()->Data[ 48340 ];
//
//	UCameraStateBlender_X_execTransitionToState_Parms TransitionToState_Parms;
//	TransitionToState_Parms.NewState = NewState;
//
//	this->ProcessEvent ( pFnTransitionToState, &TransitionToState_Parms, NULL );
//
//	return TransitionToState_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraStateBlender_X.Snap
//// [0x00020002] 
//// Parameters infos:
//
//void UCameraStateBlender_X::Snap ( )
//{
//	static UFunction* pFnSnap = NULL;
//
//	if ( ! pFnSnap )
//		pFnSnap = (UFunction*) UObject::GObjObjects()->Data[ 48338 ];
//
//	UCameraStateBlender_X_execSnap_Parms Snap_Parms;
//
//	this->ProcessEvent ( pFnSnap, &Snap_Parms, NULL );
//};
//
//// Function ProjectX.CameraStateBlender_X.EventBlenderStateChanged
//// [0x00120000] 
//// Parameters infos:
//// class UCameraStateBlender_X*   CameraBender                   ( CPF_Parm | CPF_EditInline )
//
//void UCameraStateBlender_X::EventBlenderStateChanged ( class UCameraStateBlender_X* CameraBender )
//{
//	static UFunction* pFnEventBlenderStateChanged = NULL;
//
//	if ( ! pFnEventBlenderStateChanged )
//		pFnEventBlenderStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 48339 ];
//
//	UCameraStateBlender_X_execEventBlenderStateChanged_Parms EventBlenderStateChanged_Parms;
//	EventBlenderStateChanged_Parms.CameraBender = CameraBender;
//
//	this->ProcessEvent ( pFnEventBlenderStateChanged, &EventBlenderStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_X.OnSnap
//// [0x00020000] 
//// Parameters infos:
//
//void UCameraState_X::OnSnap ( )
//{
//	static UFunction* pFnOnSnap = NULL;
//
//	if ( ! pFnOnSnap )
//		pFnOnSnap = (UFunction*) UObject::GObjObjects()->Data[ 48560 ];
//
//	UCameraState_X_execOnSnap_Parms OnSnap_Parms;
//
//	this->ProcessEvent ( pFnOnSnap, &OnSnap_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_X.ModifyPostProcessSettings
//// [0x00420000] 
//// Parameters infos:
//// struct FPostProcessSettings    PP                             ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UCameraState_X::ModifyPostProcessSettings ( struct FPostProcessSettings* PP )
//{
//	static UFunction* pFnModifyPostProcessSettings = NULL;
//
//	if ( ! pFnModifyPostProcessSettings )
//		pFnModifyPostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 48558 ];
//
//	UCameraState_X_execModifyPostProcessSettings_Parms ModifyPostProcessSettings_Parms;
//
//	this->ProcessEvent ( pFnModifyPostProcessSettings, &ModifyPostProcessSettings_Parms, NULL );
//
//	if ( PP )
//		memcpy ( PP, &ModifyPostProcessSettings_Parms.PP, 0x150 );
//};
//
//// Function ProjectX.CameraState_X.ProcessViewRotation
//// [0x00420000] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FRotator                OutViewRotation                ( CPF_Parm | CPF_OutParm )
//// struct FRotator                OutDeltaRot                    ( CPF_Parm | CPF_OutParm )
//
//void UCameraState_X::ProcessViewRotation ( float DeltaTime, struct FRotator* OutViewRotation, struct FRotator* OutDeltaRot )
//{
//	static UFunction* pFnProcessViewRotation = NULL;
//
//	if ( ! pFnProcessViewRotation )
//		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 48554 ];
//
//	UCameraState_X_execProcessViewRotation_Parms ProcessViewRotation_Parms;
//	ProcessViewRotation_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );
//
//	if ( OutViewRotation )
//		memcpy ( OutViewRotation, &ProcessViewRotation_Parms.OutViewRotation, 0xC );
//
//	if ( OutDeltaRot )
//		memcpy ( OutDeltaRot, &ProcessViewRotation_Parms.OutDeltaRot, 0xC );
//};
//
//// Function ProjectX.CameraState_X.UpdatePOV
//// [0x00420000] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraState_X::UpdatePOV ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnUpdatePOV = NULL;
//
//	if ( ! pFnUpdatePOV )
//		pFnUpdatePOV = (UFunction*) UObject::GObjObjects()->Data[ 48551 ];
//
//	UCameraState_X_execUpdatePOV_Parms UpdatePOV_Parms;
//	UpdatePOV_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdatePOV, &UpdatePOV_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &UpdatePOV_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraState_X.Tick
//// [0x00020000] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UCameraState_X::Tick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48549 ];
//
//	UCameraState_X_execTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_X.EndCameraState
//// [0x00020000] 
//// Parameters infos:
//
//void UCameraState_X::EndCameraState ( )
//{
//	static UFunction* pFnEndCameraState = NULL;
//
//	if ( ! pFnEndCameraState )
//		pFnEndCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48548 ];
//
//	UCameraState_X_execEndCameraState_Parms EndCameraState_Parms;
//
//	this->ProcessEvent ( pFnEndCameraState, &EndCameraState_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_X.BeginCameraState
//// [0x00020000] 
//// Parameters infos:
//
//void UCameraState_X::BeginCameraState ( )
//{
//	static UFunction* pFnBeginCameraState = NULL;
//
//	if ( ! pFnBeginCameraState )
//		pFnBeginCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48547 ];
//
//	UCameraState_X_execBeginCameraState_Parms BeginCameraState_Parms;
//
//	this->ProcessEvent ( pFnBeginCameraState, &BeginCameraState_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_X.GetEndBlendParams
//// [0x00020002] 
//// Parameters infos:
//// struct FViewTargetTransitionParams ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UCameraState_X*          NewState                       ( CPF_Parm )
//
//struct FViewTargetTransitionParams UCameraState_X::GetEndBlendParams ( class UCameraState_X* NewState )
//{
//	static UFunction* pFnGetEndBlendParams = NULL;
//
//	if ( ! pFnGetEndBlendParams )
//		pFnGetEndBlendParams = (UFunction*) UObject::GObjObjects()->Data[ 48343 ];
//
//	UCameraState_X_execGetEndBlendParams_Parms GetEndBlendParams_Parms;
//	GetEndBlendParams_Parms.NewState = NewState;
//
//	this->ProcessEvent ( pFnGetEndBlendParams, &GetEndBlendParams_Parms, NULL );
//
//	return GetEndBlendParams_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraState_X.GetStartBlendParams
//// [0x00020002] 
//// Parameters infos:
//// struct FViewTargetTransitionParams ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UCameraState_X*          PreviousState                  ( CPF_Parm )
//
//struct FViewTargetTransitionParams UCameraState_X::GetStartBlendParams ( class UCameraState_X* PreviousState )
//{
//	static UFunction* pFnGetStartBlendParams = NULL;
//
//	if ( ! pFnGetStartBlendParams )
//		pFnGetStartBlendParams = (UFunction*) UObject::GObjObjects()->Data[ 48543 ];
//
//	UCameraState_X_execGetStartBlendParams_Parms GetStartBlendParams_Parms;
//	GetStartBlendParams_Parms.PreviousState = PreviousState;
//
//	this->ProcessEvent ( pFnGetStartBlendParams, &GetStartBlendParams_Parms, NULL );
//
//	return GetStartBlendParams_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraState_X.ShouldKeepExecuting
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UCameraState_X::ShouldKeepExecuting ( )
//{
//	static UFunction* pFnShouldKeepExecuting = NULL;
//
//	if ( ! pFnShouldKeepExecuting )
//		pFnShouldKeepExecuting = (UFunction*) UObject::GObjObjects()->Data[ 48456 ];
//
//	UCameraState_X_execShouldKeepExecuting_Parms ShouldKeepExecuting_Parms;
//
//	this->ProcessEvent ( pFnShouldKeepExecuting, &ShouldKeepExecuting_Parms, NULL );
//
//	return ShouldKeepExecuting_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraState_X.ShouldExecute
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UCameraState_X::ShouldExecute ( )
//{
//	static UFunction* pFnShouldExecute = NULL;
//
//	if ( ! pFnShouldExecute )
//		pFnShouldExecute = (UFunction*) UObject::GObjObjects()->Data[ 48458 ];
//
//	UCameraState_X_execShouldExecute_Parms ShouldExecute_Parms;
//
//	this->ProcessEvent ( pFnShouldExecute, &ShouldExecute_Parms, NULL );
//
//	return ShouldExecute_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraState_X.Init
//// [0x00020002] 
//// Parameters infos:
//// class ACamera_X*               InCamera                       ( CPF_Parm )
//
//void UCameraState_X::Init ( class ACamera_X* InCamera )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 48541 ];
//
//	UCameraState_X_execInit_Parms Init_Parms;
//	Init_Parms.InCamera = InCamera;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.CameraUtils_X.BlendPOVs
//// [0x00422003] ( FUNC_Final )
//// Parameters infos:
//// struct FCameraOrientation      FromPOV                        ( CPF_Parm )
//// struct FCameraOrientation      ToPOV                          ( CPF_Parm )
//// float                          Percent                        ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraUtils_X::BlendPOVs ( struct FCameraOrientation FromPOV, struct FCameraOrientation ToPOV, float Percent, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnBlendPOVs = NULL;
//
//	if ( ! pFnBlendPOVs )
//		pFnBlendPOVs = (UFunction*) UObject::GObjObjects()->Data[ 56858 ];
//
//	UCameraUtils_X_execBlendPOVs_Parms BlendPOVs_Parms;
//	memcpy ( &BlendPOVs_Parms.FromPOV, &FromPOV, 0x2C );
//	memcpy ( &BlendPOVs_Parms.ToPOV, &ToPOV, 0x2C );
//	BlendPOVs_Parms.Percent = Percent;
//
//	this->ProcessEvent ( pFnBlendPOVs, &BlendPOVs_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &BlendPOVs_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraUtils_X.GetBlendPercent
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FViewTargetTransitionParams BlendParams                    ( CPF_Parm )
//// float                          Time                           ( CPF_Parm )
//
//float UCameraUtils_X::GetBlendPercent ( struct FViewTargetTransitionParams BlendParams, float Time )
//{
//	static UFunction* pFnGetBlendPercent = NULL;
//
//	if ( ! pFnGetBlendPercent )
//		pFnGetBlendPercent = (UFunction*) UObject::GObjObjects()->Data[ 48365 ];
//
//	UCameraUtils_X_execGetBlendPercent_Parms GetBlendPercent_Parms;
//	memcpy ( &GetBlendPercent_Parms.BlendParams, &BlendParams, 0x10 );
//	GetBlendPercent_Parms.Time = Time;
//
//	this->ProcessEvent ( pFnGetBlendPercent, &GetBlendPercent_Parms, NULL );
//
//	return GetBlendPercent_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraUtils_X.IsPointInView
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FVector                 Point                          ( CPF_Parm )
//// struct FVector                 ViewStart                      ( CPF_Parm )
//// struct FRotator                ViewRotation                   ( CPF_Parm )
//// float                          FOV                            ( CPF_Parm )
//
//bool UCameraUtils_X::IsPointInView ( struct FVector Point, struct FVector ViewStart, struct FRotator ViewRotation, float FOV )
//{
//	static UFunction* pFnIsPointInView = NULL;
//
//	if ( ! pFnIsPointInView )
//		pFnIsPointInView = (UFunction*) UObject::GObjObjects()->Data[ 56857 ];
//
//	UCameraUtils_X_execIsPointInView_Parms IsPointInView_Parms;
//	memcpy ( &IsPointInView_Parms.Point, &Point, 0xC );
//	memcpy ( &IsPointInView_Parms.ViewStart, &ViewStart, 0xC );
//	memcpy ( &IsPointInView_Parms.ViewRotation, &ViewRotation, 0xC );
//	IsPointInView_Parms.FOV = FOV;
//
//	this->ProcessEvent ( pFnIsPointInView, &IsPointInView_Parms, NULL );
//
//	return IsPointInView_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraUtils_X.GetFrustumDistanceFromWidth
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          FOV                            ( CPF_Parm )
//// float                          Width                          ( CPF_Parm )
//// float                          AspectRatio                    ( CPF_Parm )
//
//float UCameraUtils_X::GetFrustumDistanceFromWidth ( float FOV, float Width, float AspectRatio )
//{
//	static UFunction* pFnGetFrustumDistanceFromWidth = NULL;
//
//	if ( ! pFnGetFrustumDistanceFromWidth )
//		pFnGetFrustumDistanceFromWidth = (UFunction*) UObject::GObjObjects()->Data[ 56863 ];
//
//	UCameraUtils_X_execGetFrustumDistanceFromWidth_Parms GetFrustumDistanceFromWidth_Parms;
//	GetFrustumDistanceFromWidth_Parms.FOV = FOV;
//	GetFrustumDistanceFromWidth_Parms.Width = Width;
//	GetFrustumDistanceFromWidth_Parms.AspectRatio = AspectRatio;
//
//	this->ProcessEvent ( pFnGetFrustumDistanceFromWidth, &GetFrustumDistanceFromWidth_Parms, NULL );
//
//	return GetFrustumDistanceFromWidth_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraUtils_X.GetFrustumDistanceFromHeight
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          FOV                            ( CPF_Parm )
//// float                          Height                         ( CPF_Parm )
//
//float UCameraUtils_X::GetFrustumDistanceFromHeight ( float FOV, float Height )
//{
//	static UFunction* pFnGetFrustumDistanceFromHeight = NULL;
//
//	if ( ! pFnGetFrustumDistanceFromHeight )
//		pFnGetFrustumDistanceFromHeight = (UFunction*) UObject::GObjObjects()->Data[ 56869 ];
//
//	UCameraUtils_X_execGetFrustumDistanceFromHeight_Parms GetFrustumDistanceFromHeight_Parms;
//	GetFrustumDistanceFromHeight_Parms.FOV = FOV;
//	GetFrustumDistanceFromHeight_Parms.Height = Height;
//
//	this->ProcessEvent ( pFnGetFrustumDistanceFromHeight, &GetFrustumDistanceFromHeight_Parms, NULL );
//
//	return GetFrustumDistanceFromHeight_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraUtils_X.GetFrustumSize
//// [0x00422003] ( FUNC_Final )
//// Parameters infos:
//// float                          Dist                           ( CPF_Parm )
//// float                          FOV                            ( CPF_Parm )
//// float                          AspectRatio                    ( CPF_Parm )
//// float                          OutWidth                       ( CPF_Parm | CPF_OutParm )
//// float                          OutHeight                      ( CPF_Parm | CPF_OutParm )
//
//void UCameraUtils_X::GetFrustumSize ( float Dist, float FOV, float AspectRatio, float* OutWidth, float* OutHeight )
//{
//	static UFunction* pFnGetFrustumSize = NULL;
//
//	if ( ! pFnGetFrustumSize )
//		pFnGetFrustumSize = (UFunction*) UObject::GObjObjects()->Data[ 56847 ];
//
//	UCameraUtils_X_execGetFrustumSize_Parms GetFrustumSize_Parms;
//	GetFrustumSize_Parms.Dist = Dist;
//	GetFrustumSize_Parms.FOV = FOV;
//	GetFrustumSize_Parms.AspectRatio = AspectRatio;
//
//	this->ProcessEvent ( pFnGetFrustumSize, &GetFrustumSize_Parms, NULL );
//
//	if ( OutWidth )
//		*OutWidth = GetFrustumSize_Parms.OutWidth;
//
//	if ( OutHeight )
//		*OutHeight = GetFrustumSize_Parms.OutHeight;
//};
//
//// Function ProjectX.CameraUtils_X.CalculateDistanceRotation
//// [0x00422003] ( FUNC_Final )
//// Parameters infos:
//// struct FVector                 Focus                          ( CPF_Parm )
//// struct FVector                 Origin                         ( CPF_Parm )
//// float                          OutDistance                    ( CPF_Parm | CPF_OutParm )
//// struct FRotator                OutRotation                    ( CPF_Parm | CPF_OutParm )
//
//void UCameraUtils_X::CalculateDistanceRotation ( struct FVector Focus, struct FVector Origin, float* OutDistance, struct FRotator* OutRotation )
//{
//	static UFunction* pFnCalculateDistanceRotation = NULL;
//
//	if ( ! pFnCalculateDistanceRotation )
//		pFnCalculateDistanceRotation = (UFunction*) UObject::GObjObjects()->Data[ 56842 ];
//
//	UCameraUtils_X_execCalculateDistanceRotation_Parms CalculateDistanceRotation_Parms;
//	memcpy ( &CalculateDistanceRotation_Parms.Focus, &Focus, 0xC );
//	memcpy ( &CalculateDistanceRotation_Parms.Origin, &Origin, 0xC );
//
//	this->ProcessEvent ( pFnCalculateDistanceRotation, &CalculateDistanceRotation_Parms, NULL );
//
//	if ( OutDistance )
//		*OutDistance = CalculateDistanceRotation_Parms.OutDistance;
//
//	if ( OutRotation )
//		memcpy ( OutRotation, &CalculateDistanceRotation_Parms.OutRotation, 0xC );
//};
//
//// Function ProjectX.CameraModifier_CameraShake_X.ModifyCameraShakeScale
//// [0x00020002] 
//// Parameters infos:
//// class UCameraShake*            Shake                          ( CPF_Parm )
//// float                          NewScale                       ( CPF_Parm )
//
//void UCameraModifier_CameraShake_X::ModifyCameraShakeScale ( class UCameraShake* Shake, float NewScale )
//{
//	static UFunction* pFnModifyCameraShakeScale = NULL;
//
//	if ( ! pFnModifyCameraShakeScale )
//		pFnModifyCameraShakeScale = (UFunction*) UObject::GObjObjects()->Data[ 48528 ];
//
//	UCameraModifier_CameraShake_X_execModifyCameraShakeScale_Parms ModifyCameraShakeScale_Parms;
//	ModifyCameraShakeScale_Parms.Shake = Shake;
//	ModifyCameraShakeScale_Parms.NewScale = NewScale;
//
//	this->ProcessEvent ( pFnModifyCameraShakeScale, &ModifyCameraShakeScale_Parms, NULL );
//};
//
//// Function ProjectX.CameraModifier_CameraShake_X.RemoveCameraShake
//// [0x00020002] 
//// Parameters infos:
//// class UCameraShake*            Shake                          ( CPF_Parm )
//
//void UCameraModifier_CameraShake_X::RemoveCameraShake ( class UCameraShake* Shake )
//{
//	static UFunction* pFnRemoveCameraShake = NULL;
//
//	if ( ! pFnRemoveCameraShake )
//		pFnRemoveCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 48524 ];
//
//	UCameraModifier_CameraShake_X_execRemoveCameraShake_Parms RemoveCameraShake_Parms;
//	RemoveCameraShake_Parms.Shake = Shake;
//
//	this->ProcessEvent ( pFnRemoveCameraShake, &RemoveCameraShake_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_CamActor_X.UpdatePOV
//// [0x00C20002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraState_CamActor_X::UpdatePOV ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnUpdatePOV = NULL;
//
//	if ( ! pFnUpdatePOV )
//		pFnUpdatePOV = (UFunction*) UObject::GObjObjects()->Data[ 48574 ];
//
//	UCameraState_CamActor_X_execUpdatePOV_Parms UpdatePOV_Parms;
//	UpdatePOV_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdatePOV, &UpdatePOV_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &UpdatePOV_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraState_CamActor_X.EndCameraState
//// [0x00020002] 
//// Parameters infos:
//
//void UCameraState_CamActor_X::EndCameraState ( )
//{
//	static UFunction* pFnEndCameraState = NULL;
//
//	if ( ! pFnEndCameraState )
//		pFnEndCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48571 ];
//
//	UCameraState_CamActor_X_execEndCameraState_Parms EndCameraState_Parms;
//
//	this->ProcessEvent ( pFnEndCameraState, &EndCameraState_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_CamActor_X.BeginCameraState
//// [0x00020002] 
//// Parameters infos:
//
//void UCameraState_CamActor_X::BeginCameraState ( )
//{
//	static UFunction* pFnBeginCameraState = NULL;
//
//	if ( ! pFnBeginCameraState )
//		pFnBeginCameraState = (UFunction*) UObject::GObjObjects()->Data[ 48572 ];
//
//	UCameraState_CamActor_X_execBeginCameraState_Parms BeginCameraState_Parms;
//
//	this->ProcessEvent ( pFnBeginCameraState, &BeginCameraState_Parms, NULL );
//};
//
//// Function ProjectX.CameraState_CamActor_X.GetBlendParams
//// [0x00020002] 
//// Parameters infos:
//// struct FViewTargetTransitionParams ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UCameraState_X*          PrevState                      ( CPF_Parm )
//
//struct FViewTargetTransitionParams UCameraState_CamActor_X::GetBlendParams ( class UCameraState_X* PrevState )
//{
//	static UFunction* pFnGetBlendParams = NULL;
//
//	if ( ! pFnGetBlendParams )
//		pFnGetBlendParams = (UFunction*) UObject::GObjObjects()->Data[ 48568 ];
//
//	UCameraState_CamActor_X_execGetBlendParams_Parms GetBlendParams_Parms;
//	GetBlendParams_Parms.PrevState = PrevState;
//
//	this->ProcessEvent ( pFnGetBlendParams, &GetBlendParams_Parms, NULL );
//
//	return GetBlendParams_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraState_CamActor_X.ShouldExecute
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UCameraState_CamActor_X::ShouldExecute ( )
//{
//	static UFunction* pFnShouldExecute = NULL;
//
//	if ( ! pFnShouldExecute )
//		pFnShouldExecute = (UFunction*) UObject::GObjObjects()->Data[ 48565 ];
//
//	UCameraState_CamActor_X_execShouldExecute_Parms ShouldExecute_Parms;
//
//	this->ProcessEvent ( pFnShouldExecute, &ShouldExecute_Parms, NULL );
//
//	return ShouldExecute_Parms.ReturnValue;
//};
//
//// Function ProjectX.HUD_X.SetShowDebugObject
//// [0x00020002] 
//// Parameters infos:
//// class UObject*                 inObj                          ( CPF_Parm )
//
//void AHUD_X::SetShowDebugObject ( class UObject* inObj )
//{
//	static UFunction* pFnSetShowDebugObject = NULL;
//
//	if ( ! pFnSetShowDebugObject )
//		pFnSetShowDebugObject = (UFunction*) UObject::GObjObjects()->Data[ 50210 ];
//
//	AHUD_X_execSetShowDebugObject_Parms SetShowDebugObject_Parms;
//	SetShowDebugObject_Parms.inObj = inObj;
//
//	this->ProcessEvent ( pFnSetShowDebugObject, &SetShowDebugObject_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.ShowDebugInfo
//// [0x00420002] 
//// Parameters infos:
//// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
//// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )
//
//void AHUD_X::ShowDebugInfo ( float* out_YL, float* out_YPos )
//{
//	static UFunction* pFnShowDebugInfo = NULL;
//
//	if ( ! pFnShowDebugInfo )
//		pFnShowDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50206 ];
//
//	AHUD_X_execShowDebugInfo_Parms ShowDebugInfo_Parms;
//
//	this->ProcessEvent ( pFnShowDebugInfo, &ShowDebugInfo_Parms, NULL );
//
//	if ( out_YL )
//		*out_YL = ShowDebugInfo_Parms.out_YL;
//
//	if ( out_YPos )
//		*out_YPos = ShowDebugInfo_Parms.out_YPos;
//};
//
//// Function ProjectX.HUD_X.ShowDebug
//// [0x00024202] ( FUNC_Exec )
//// Parameters infos:
//// struct FName                   DebugType                      ( CPF_OptionalParm | CPF_Parm )
//
//void AHUD_X::ShowDebug ( struct FName DebugType )
//{
//	static UFunction* pFnShowDebug = NULL;
//
//	if ( ! pFnShowDebug )
//		pFnShowDebug = (UFunction*) UObject::GObjObjects()->Data[ 50203 ];
//
//	AHUD_X_execShowDebug_Parms ShowDebug_Parms;
//	memcpy ( &ShowDebug_Parms.DebugType, &DebugType, 0x8 );
//
//	this->ProcessEvent ( pFnShowDebug, &ShowDebug_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.DebugCategory
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   DebugType                      ( CPF_Parm )
//
//void AHUD_X::DebugCategory ( struct FName DebugType )
//{
//	static UFunction* pFnDebugCategory = NULL;
//
//	if ( ! pFnDebugCategory )
//		pFnDebugCategory = (UFunction*) UObject::GObjObjects()->Data[ 50205 ];
//
//	AHUD_X_execDebugCategory_Parms DebugCategory_Parms;
//	memcpy ( &DebugCategory_Parms.DebugType, &DebugType, 0x8 );
//
//	this->ProcessEvent ( pFnDebugCategory, &DebugCategory_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.DebugCategorySwitch
//// [0x00020202] ( FUNC_Exec )
//// Parameters infos:
//// unsigned long                  bForward                       ( CPF_Parm )
//
//void AHUD_X::DebugCategorySwitch ( unsigned long bForward )
//{
//	static UFunction* pFnDebugCategorySwitch = NULL;
//
//	if ( ! pFnDebugCategorySwitch )
//		pFnDebugCategorySwitch = (UFunction*) UObject::GObjObjects()->Data[ 50200 ];
//
//	AHUD_X_execDebugCategorySwitch_Parms DebugCategorySwitch_Parms;
//	DebugCategorySwitch_Parms.bForward = bForward;
//
//	this->ProcessEvent ( pFnDebugCategorySwitch, &DebugCategorySwitch_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.DrawPauseScreen
//// [0x00880002] 
//// Parameters infos:
//
//void AHUD_X::DrawPauseScreen ( )
//{
//	static UFunction* pFnDrawPauseScreen = NULL;
//
//	if ( ! pFnDrawPauseScreen )
//		pFnDrawPauseScreen = (UFunction*) UObject::GObjObjects()->Data[ 50195 ];
//
//	AHUD_X_execDrawPauseScreen_Parms DrawPauseScreen_Parms;
//
//	this->ProcessEvent ( pFnDrawPauseScreen, &DrawPauseScreen_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.ShouldShowConsoleMessage
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FConsoleMessage         InConsoleMessage               ( CPF_Const | CPF_Parm | CPF_NeedCtorLink )
//
//bool AHUD_X::ShouldShowConsoleMessage ( struct FConsoleMessage InConsoleMessage )
//{
//	static UFunction* pFnShouldShowConsoleMessage = NULL;
//
//	if ( ! pFnShouldShowConsoleMessage )
//		pFnShouldShowConsoleMessage = (UFunction*) UObject::GObjObjects()->Data[ 50191 ];
//
//	AHUD_X_execShouldShowConsoleMessage_Parms ShouldShowConsoleMessage_Parms;
//	memcpy ( &ShouldShowConsoleMessage_Parms.InConsoleMessage, &InConsoleMessage, 0x18 );
//
//	this->ProcessEvent ( pFnShouldShowConsoleMessage, &ShouldShowConsoleMessage_Parms, NULL );
//
//	return ShouldShowConsoleMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.HUD_X.DrawDebugTexture
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void AHUD_X::DrawDebugTexture ( )
//{
//	static UFunction* pFnDrawDebugTexture = NULL;
//
//	if ( ! pFnDrawDebugTexture )
//		pFnDrawDebugTexture = (UFunction*) UObject::GObjObjects()->Data[ 50194 ];
//
//	AHUD_X_execDrawDebugTexture_Parms DrawDebugTexture_Parms;
//
//	this->ProcessEvent ( pFnDrawDebugTexture, &DrawDebugTexture_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.DrawHUD
//// [0x00020000] 
//// Parameters infos:
//
//void AHUD_X::DrawHUD ( )
//{
//	static UFunction* pFnDrawHUD = NULL;
//
//	if ( ! pFnDrawHUD )
//		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 50190 ];
//
//	AHUD_X_execDrawHUD_Parms DrawHUD_Parms;
//
//	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
//};
//
//// Function ProjectX.HUD_X.PostBeginPlay
//// [0x00020002] 
//// Parameters infos:
//
//void AHUD_X::PostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50189 ];
//
//	AHUD_X_execPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.OnlineImageDownloaderWeb_X.OnDownloadComplete
//// [0x00080002] 
//// Parameters infos:
//// class UHttpRequestInterface*   Request                        ( CPF_Parm )
//// class UHttpResponseInterface*  Response                       ( CPF_Parm )
//// unsigned long                  bDidSucceed                    ( CPF_Parm )
//
//void UOnlineImageDownloaderWeb_X::OnDownloadComplete ( class UHttpRequestInterface* Request, class UHttpResponseInterface* Response, unsigned long bDidSucceed )
//{
//	static UFunction* pFnOnDownloadComplete = NULL;
//
//	if ( ! pFnOnDownloadComplete )
//		pFnOnDownloadComplete = (UFunction*) UObject::GObjObjects()->Data[ 54272 ];
//
//	UOnlineImageDownloaderWeb_X_execOnDownloadComplete_Parms OnDownloadComplete_Parms;
//	OnDownloadComplete_Parms.Request = Request;
//	OnDownloadComplete_Parms.Response = Response;
//	OnDownloadComplete_Parms.bDidSucceed = bDidSucceed;
//
//	this->ProcessEvent ( pFnOnDownloadComplete, &OnDownloadComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineImageDownloaderWeb_X.RequestOnlineImage
//// [0x00824002] 
//// Parameters infos:
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bSRGB                          ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineImageDownloaderWeb_X::RequestOnlineImage ( struct FString URL, unsigned long bSRGB, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnRequestOnlineImage = NULL;
//
//	if ( ! pFnRequestOnlineImage )
//		pFnRequestOnlineImage = (UFunction*) UObject::GObjObjects()->Data[ 54266 ];
//
//	UOnlineImageDownloaderWeb_X_execRequestOnlineImage_Parms RequestOnlineImage_Parms;
//	memcpy ( &RequestOnlineImage_Parms.URL, &URL, 0xC );
//	RequestOnlineImage_Parms.bSRGB = bSRGB;
//	memcpy ( &RequestOnlineImage_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnRequestOnlineImage, &RequestOnlineImage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineImageDownloaderWeb_X.EventImageDownloaded
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineImageDownloaderWeb_X* Downloader                     ( CPF_Parm )
//// struct FDownloadedImage        Image                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineImageDownloaderWeb_X::EventImageDownloaded ( class UOnlineImageDownloaderWeb_X* Downloader, struct FDownloadedImage Image )
//{
//	static UFunction* pFnEventImageDownloaded = NULL;
//
//	if ( ! pFnEventImageDownloaded )
//		pFnEventImageDownloaded = (UFunction*) UObject::GObjObjects()->Data[ 54259 ];
//
//	UOnlineImageDownloaderWeb_X_execEventImageDownloaded_Parms EventImageDownloaded_Parms;
//	EventImageDownloaded_Parms.Downloader = Downloader;
//	memcpy ( &EventImageDownloaded_Parms.Image, &Image, 0x10 );
//
//	this->ProcessEvent ( pFnEventImageDownloaded, &EventImageDownloaded_Parms, NULL );
//};
//
//// Function ProjectX.__CheatManager_X__RandomSleep.__CheatManager_X__RandomSleep
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__CheatManager_X__RandomSleep::__CheatManager_X__RandomSleep ( )
//{
//	static UFunction* pFn__CheatManager_X__RandomSleep = NULL;
//
//	if ( ! pFn__CheatManager_X__RandomSleep )
//		pFn__CheatManager_X__RandomSleep = (UFunction*) UObject::GObjObjects()->Data[ 58762 ];
//
//	U__CheatManager_X__RandomSleep_exec__CheatManager_X__RandomSleep_Parms __CheatManager_X__RandomSleep_Parms;
//
//	this->ProcessEvent ( pFn__CheatManager_X__RandomSleep, &__CheatManager_X__RandomSleep_Parms, NULL );
//};
//
//// Function ProjectX.ITakeDamage_X.TakeDamage_X
//// [0x00020000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UDamageComponent_X*      Damage                         ( CPF_Parm | CPF_EditInline )
//
//bool UITakeDamage_X::TakeDamage_X ( class UDamageComponent_X* Damage )
//{
//	static UFunction* pFnTakeDamage_X = NULL;
//
//	if ( ! pFnTakeDamage_X )
//		pFnTakeDamage_X = (UFunction*) UObject::GObjObjects()->Data[ 48695 ];
//
//	UITakeDamage_X_execTakeDamage_X_Parms TakeDamage_X_Parms;
//	TakeDamage_X_Parms.Damage = Damage;
//
//	this->ProcessEvent ( pFnTakeDamage_X, &TakeDamage_X_Parms, NULL );
//
//	return TakeDamage_X_Parms.ReturnValue;
//};
//
//// Function ProjectX.DebugDrawer_X.DrawHeader
//// [0x00020002] 
//// Parameters infos:
//
//void UDebugDrawer_X::DrawHeader ( )
//{
//	static UFunction* pFnDrawHeader = NULL;
//
//	if ( ! pFnDrawHeader )
//		pFnDrawHeader = (UFunction*) UObject::GObjObjects()->Data[ 48746 ];
//
//	UDebugDrawer_X_execDrawHeader_Parms DrawHeader_Parms;
//
//	this->ProcessEvent ( pFnDrawHeader, &DrawHeader_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.DrawSpacer
//// [0x00024002] 
//// Parameters infos:
//// float                          Height                         ( CPF_OptionalParm | CPF_Parm )
//
//void UDebugDrawer_X::DrawSpacer ( float Height )
//{
//	static UFunction* pFnDrawSpacer = NULL;
//
//	if ( ! pFnDrawSpacer )
//		pFnDrawSpacer = (UFunction*) UObject::GObjObjects()->Data[ 48744 ];
//
//	UDebugDrawer_X_execDrawSpacer_Parms DrawSpacer_Parms;
//	DrawSpacer_Parms.Height = Height;
//
//	this->ProcessEvent ( pFnDrawSpacer, &DrawSpacer_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.DrawBackground
//// [0x00820002] 
//// Parameters infos:
//// float                          Width                          ( CPF_Parm )
//// float                          Height                         ( CPF_Parm )
//
//void UDebugDrawer_X::DrawBackground ( float Width, float Height )
//{
//	static UFunction* pFnDrawBackground = NULL;
//
//	if ( ! pFnDrawBackground )
//		pFnDrawBackground = (UFunction*) UObject::GObjObjects()->Data[ 48738 ];
//
//	UDebugDrawer_X_execDrawBackground_Parms DrawBackground_Parms;
//	DrawBackground_Parms.Width = Width;
//	DrawBackground_Parms.Height = Height;
//
//	this->ProcessEvent ( pFnDrawBackground, &DrawBackground_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.FinishDrawDebug
//// [0x00020002] 
//// Parameters infos:
//
//void UDebugDrawer_X::FinishDrawDebug ( )
//{
//	static UFunction* pFnFinishDrawDebug = NULL;
//
//	if ( ! pFnFinishDrawDebug )
//		pFnFinishDrawDebug = (UFunction*) UObject::GObjObjects()->Data[ 48737 ];
//
//	UDebugDrawer_X_execFinishDrawDebug_Parms FinishDrawDebug_Parms;
//
//	this->ProcessEvent ( pFnFinishDrawDebug, &FinishDrawDebug_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.StartDrawDebug
//// [0x00020002] 
//// Parameters infos:
//// class UCanvas*                 C                              ( CPF_Parm )
//
//void UDebugDrawer_X::StartDrawDebug ( class UCanvas* C )
//{
//	static UFunction* pFnStartDrawDebug = NULL;
//
//	if ( ! pFnStartDrawDebug )
//		pFnStartDrawDebug = (UFunction*) UObject::GObjObjects()->Data[ 48734 ];
//
//	UDebugDrawer_X_execStartDrawDebug_Parms StartDrawDebug_Parms;
//	StartDrawDebug_Parms.C = C;
//
//	this->ProcessEvent ( pFnStartDrawDebug, &StartDrawDebug_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.PrintText
//// [0x00024002] 
//// Parameters infos:
//// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// struct FColor                  InColor                        ( CPF_OptionalParm | CPF_Parm )
//
//void UDebugDrawer_X::PrintText ( struct FString Text, struct FColor InColor )
//{
//	static UFunction* pFnPrintText = NULL;
//
//	if ( ! pFnPrintText )
//		pFnPrintText = (UFunction*) UObject::GObjObjects()->Data[ 48729 ];
//
//	UDebugDrawer_X_execPrintText_Parms PrintText_Parms;
//	memcpy ( &PrintText_Parms.Text, &Text, 0xC );
//	memcpy ( &PrintText_Parms.InColor, &InColor, 0x4 );
//
//	this->ProcessEvent ( pFnPrintText, &PrintText_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.PrintProperty
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 PropertyName                   ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//// struct FString                 Value                          ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void UDebugDrawer_X::PrintProperty ( struct FString PropertyName, struct FString Value )
//{
//	static UFunction* pFnPrintProperty = NULL;
//
//	if ( ! pFnPrintProperty )
//		pFnPrintProperty = (UFunction*) UObject::GObjObjects()->Data[ 48723 ];
//
//	UDebugDrawer_X_execPrintProperty_Parms PrintProperty_Parms;
//	memcpy ( &PrintProperty_Parms.PropertyName, &PropertyName, 0xC );
//	memcpy ( &PrintProperty_Parms.Value, &Value, 0xC );
//
//	this->ProcessEvent ( pFnPrintProperty, &PrintProperty_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.PrintSeperater
//// [0x00020000] 
//// Parameters infos:
//
//void UDebugDrawer_X::PrintSeperater ( )
//{
//	static UFunction* pFnPrintSeperater = NULL;
//
//	if ( ! pFnPrintSeperater )
//		pFnPrintSeperater = (UFunction*) UObject::GObjObjects()->Data[ 48722 ];
//
//	UDebugDrawer_X_execPrintSeperater_Parms PrintSeperater_Parms;
//
//	this->ProcessEvent ( pFnPrintSeperater, &PrintSeperater_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.UpdateCanvasIndentation
//// [0x00080002] 
//// Parameters infos:
//
//void UDebugDrawer_X::UpdateCanvasIndentation ( )
//{
//	static UFunction* pFnUpdateCanvasIndentation = NULL;
//
//	if ( ! pFnUpdateCanvasIndentation )
//		pFnUpdateCanvasIndentation = (UFunction*) UObject::GObjObjects()->Data[ 48721 ];
//
//	UDebugDrawer_X_execUpdateCanvasIndentation_Parms UpdateCanvasIndentation_Parms;
//
//	this->ProcessEvent ( pFnUpdateCanvasIndentation, &UpdateCanvasIndentation_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.EndSection
//// [0x00020002] 
//// Parameters infos:
//
//void UDebugDrawer_X::EndSection ( )
//{
//	static UFunction* pFnEndSection = NULL;
//
//	if ( ! pFnEndSection )
//		pFnEndSection = (UFunction*) UObject::GObjObjects()->Data[ 48720 ];
//
//	UDebugDrawer_X_execEndSection_Parms EndSection_Parms;
//
//	this->ProcessEvent ( pFnEndSection, &EndSection_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.StartSection
//// [0x00020002] 
//// Parameters infos:
//
//void UDebugDrawer_X::StartSection ( )
//{
//	static UFunction* pFnStartSection = NULL;
//
//	if ( ! pFnStartSection )
//		pFnStartSection = (UFunction*) UObject::GObjObjects()->Data[ 48719 ];
//
//	UDebugDrawer_X_execStartSection_Parms StartSection_Parms;
//
//	this->ProcessEvent ( pFnStartSection, &StartSection_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.SetPos
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// float                          X                              ( CPF_Parm )
//// float                          Y                              ( CPF_Parm )
//
//void UDebugDrawer_X::SetPos ( float X, float Y )
//{
//	static UFunction* pFnSetPos = NULL;
//
//	if ( ! pFnSetPos )
//		pFnSetPos = (UFunction*) UObject::GObjObjects()->Data[ 48716 ];
//
//	UDebugDrawer_X_execSetPos_Parms SetPos_Parms;
//	SetPos_Parms.X = X;
//	SetPos_Parms.Y = Y;
//
//	this->ProcessEvent ( pFnSetPos, &SetPos_Parms, NULL );
//};
//
//// Function ProjectX.DebugDrawer_X.ShouldDisplayDebug
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Category                       ( CPF_Parm )
//
//bool UDebugDrawer_X::ShouldDisplayDebug ( struct FName Category )
//{
//	static UFunction* pFnShouldDisplayDebug = NULL;
//
//	if ( ! pFnShouldDisplayDebug )
//		pFnShouldDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 48713 ];
//
//	UDebugDrawer_X_execShouldDisplayDebug_Parms ShouldDisplayDebug_Parms;
//	memcpy ( &ShouldDisplayDebug_Parms.Category, &Category, 0x8 );
//
//	this->ProcessEvent ( pFnShouldDisplayDebug, &ShouldDisplayDebug_Parms, NULL );
//
//	return ShouldDisplayDebug_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanServer_X.StartReservationTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanServer_X::StartReservationTimeout ( )
//{
//	static UFunction* pFnStartReservationTimeout = NULL;
//
//	if ( ! pFnStartReservationTimeout )
//		pFnStartReservationTimeout = (UFunction*) UObject::GObjObjects()->Data[ 51923 ];
//
//	UOnlineGameLanServer_X_execStartReservationTimeout_Parms StartReservationTimeout_Parms;
//
//	this->ProcessEvent ( pFnStartReservationTimeout, &StartReservationTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.PlayerLoggedOut
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameLanServer_X::PlayerLoggedOut ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedOut = NULL;
//
//	if ( ! pFnPlayerLoggedOut )
//		pFnPlayerLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 51921 ];
//
//	UOnlineGameLanServer_X_execPlayerLoggedOut_Parms PlayerLoggedOut_Parms;
//	PlayerLoggedOut_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedOut, &PlayerLoggedOut_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.AllowSplitscreenJoin
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerReplicationInfo*  PrimaryPRI                     ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Error                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameLanServer_X::AllowSplitscreenJoin ( class APlayerReplicationInfo* PrimaryPRI, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString* Error )
//{
//	static UFunction* pFnAllowSplitscreenJoin = NULL;
//
//	if ( ! pFnAllowSplitscreenJoin )
//		pFnAllowSplitscreenJoin = (UFunction*) UObject::GObjObjects()->Data[ 51915 ];
//
//	UOnlineGameLanServer_X_execAllowSplitscreenJoin_Parms AllowSplitscreenJoin_Parms;
//	AllowSplitscreenJoin_Parms.PrimaryPRI = PrimaryPRI;
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerName, &PlayerName, 0xC );
//
//	this->ProcessEvent ( pFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Parms, NULL );
//
//	if ( Error )
//		memcpy ( Error, &AllowSplitscreenJoin_Parms.Error, 0xC );
//
//	return AllowSplitscreenJoin_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanServer_X.PlayerLoggedIn
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameLanServer_X::PlayerLoggedIn ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedIn = NULL;
//
//	if ( ! pFnPlayerLoggedIn )
//		pFnPlayerLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 51913 ];
//
//	UOnlineGameLanServer_X_execPlayerLoggedIn_Parms PlayerLoggedIn_Parms;
//	PlayerLoggedIn_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedIn, &PlayerLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.AllowPlayerLogin
//// [0x00420002] 
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameLanServer_X::AllowPlayerLogin ( struct FString Options, struct FUniqueNetId PlayerID, struct FString* ErrorMessage )
//{
//	static UFunction* pFnAllowPlayerLogin = NULL;
//
//	if ( ! pFnAllowPlayerLogin )
//		pFnAllowPlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 51909 ];
//
//	UOnlineGameLanServer_X_execAllowPlayerLogin_Parms AllowPlayerLogin_Parms;
//	memcpy ( &AllowPlayerLogin_Parms.Options, &Options, 0xC );
//	memcpy ( &AllowPlayerLogin_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnAllowPlayerLogin, &AllowPlayerLogin_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &AllowPlayerLogin_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.TravelToMap
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ServerCommand                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLanServer_X::TravelToMap ( struct FString ServerCommand )
//{
//	static UFunction* pFnTravelToMap = NULL;
//
//	if ( ! pFnTravelToMap )
//		pFnTravelToMap = (UFunction*) UObject::GObjObjects()->Data[ 51907 ];
//
//	UOnlineGameLanServer_X_execTravelToMap_Parms TravelToMap_Parms;
//	memcpy ( &TravelToMap_Parms.ServerCommand, &ServerCommand, 0xC );
//
//	this->ProcessEvent ( pFnTravelToMap, &TravelToMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.OnNewGameInfoCreated
//// [0x00020002] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGameLanServer_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 51905 ];
//
//	UOnlineGameLanServer_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.GoToNextMap
//// [0x00020000] 
//// Parameters infos:
//
//void UOnlineGameLanServer_X::GoToNextMap ( )
//{
//	static UFunction* pFnGoToNextMap = NULL;
//
//	if ( ! pFnGoToNextMap )
//		pFnGoToNextMap = (UFunction*) UObject::GObjObjects()->Data[ 51904 ];
//
//	UOnlineGameLanServer_X_execGoToNextMap_Parms GoToNextMap_Parms;
//
//	this->ProcessEvent ( pFnGoToNextMap, &GoToNextMap_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.ClearSettings
//// [0x00880002] 
//// Parameters infos:
//
//void UOnlineGameLanServer_X::ClearSettings ( )
//{
//	static UFunction* pFnClearSettings = NULL;
//
//	if ( ! pFnClearSettings )
//		pFnClearSettings = (UFunction*) UObject::GObjObjects()->Data[ 51901 ];
//
//	UOnlineGameLanServer_X_execClearSettings_Parms ClearSettings_Parms;
//
//	this->ProcessEvent ( pFnClearSettings, &ClearSettings_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.HandleReservationsTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanServer_X::HandleReservationsTimeout ( )
//{
//	static UFunction* pFnHandleReservationsTimeout = NULL;
//
//	if ( ! pFnHandleReservationsTimeout )
//		pFnHandleReservationsTimeout = (UFunction*) UObject::GObjObjects()->Data[ 51900 ];
//
//	UOnlineGameLanServer_X_execHandleReservationsTimeout_Parms HandleReservationsTimeout_Parms;
//
//	this->ProcessEvent ( pFnHandleReservationsTimeout, &HandleReservationsTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.GetCustomMatchSettings
//// [0x00020002] 
//// Parameters infos:
//// struct FCustomMatchSettings    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FCustomMatchSettings UOnlineGameLanServer_X::GetCustomMatchSettings ( )
//{
//	static UFunction* pFnGetCustomMatchSettings = NULL;
//
//	if ( ! pFnGetCustomMatchSettings )
//		pFnGetCustomMatchSettings = (UFunction*) UObject::GObjObjects()->Data[ 51897 ];
//
//	UOnlineGameLanServer_X_execGetCustomMatchSettings_Parms GetCustomMatchSettings_Parms;
//
//	this->ProcessEvent ( pFnGetCustomMatchSettings, &GetCustomMatchSettings_Parms, NULL );
//
//	return GetCustomMatchSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanServer_X.GetCustomMatchOwner
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FUniqueNetId UOnlineGameLanServer_X::GetCustomMatchOwner ( )
//{
//	static UFunction* pFnGetCustomMatchOwner = NULL;
//
//	if ( ! pFnGetCustomMatchOwner )
//		pFnGetCustomMatchOwner = (UFunction*) UObject::GObjObjects()->Data[ 51898 ];
//
//	UOnlineGameLanServer_X_execGetCustomMatchOwner_Parms GetCustomMatchOwner_Parms;
//
//	this->ProcessEvent ( pFnGetCustomMatchOwner, &GetCustomMatchOwner_Parms, NULL );
//
//	return GetCustomMatchOwner_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanServer_X.UpdateCustomMatchOwner
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            NewOwner                       ( CPF_Parm )
//
//void UOnlineGameLanServer_X::UpdateCustomMatchOwner ( struct FUniqueNetId NewOwner )
//{
//	static UFunction* pFnUpdateCustomMatchOwner = NULL;
//
//	if ( ! pFnUpdateCustomMatchOwner )
//		pFnUpdateCustomMatchOwner = (UFunction*) UObject::GObjObjects()->Data[ 51895 ];
//
//	UOnlineGameLanServer_X_execUpdateCustomMatchOwner_Parms UpdateCustomMatchOwner_Parms;
//	memcpy ( &UpdateCustomMatchOwner_Parms.NewOwner, &NewOwner, 0x48 );
//
//	this->ProcessEvent ( pFnUpdateCustomMatchOwner, &UpdateCustomMatchOwner_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.SetupPrivateMatch
//// [0x00020002] 
//// Parameters infos:
//// struct FCustomMatchSettings    Settings                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            Creator                        ( CPF_Parm )
//
//void UOnlineGameLanServer_X::SetupPrivateMatch ( struct FCustomMatchSettings Settings, struct FUniqueNetId Creator )
//{
//	static UFunction* pFnSetupPrivateMatch = NULL;
//
//	if ( ! pFnSetupPrivateMatch )
//		pFnSetupPrivateMatch = (UFunction*) UObject::GObjObjects()->Data[ 51891 ];
//
//	UOnlineGameLanServer_X_execSetupPrivateMatch_Parms SetupPrivateMatch_Parms;
//	memcpy ( &SetupPrivateMatch_Parms.Settings, &Settings, 0x60 );
//	memcpy ( &SetupPrivateMatch_Parms.Creator, &Creator, 0x48 );
//
//	this->ProcessEvent ( pFnSetupPrivateMatch, &SetupPrivateMatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanServer_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanServer_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 51889 ];
//
//	UOnlineGameLanServer_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.IOnlineGameHost_X.GetCustomMatchOwner
//// [0x00020000] 
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//struct FUniqueNetId UIOnlineGameHost_X::GetCustomMatchOwner ( )
//{
//	static UFunction* pFnGetCustomMatchOwner = NULL;
//
//	if ( ! pFnGetCustomMatchOwner )
//		pFnGetCustomMatchOwner = (UFunction*) UObject::GObjObjects()->Data[ 50244 ];
//
//	UIOnlineGameHost_X_execGetCustomMatchOwner_Parms GetCustomMatchOwner_Parms;
//
//	this->ProcessEvent ( pFnGetCustomMatchOwner, &GetCustomMatchOwner_Parms, NULL );
//
//	return GetCustomMatchOwner_Parms.ReturnValue;
//};
//
//// Function ProjectX.IOnlineGameHost_X.GetCustomMatchSettings
//// [0x00020000] 
//// Parameters infos:
//// struct FCustomMatchSettings    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FCustomMatchSettings UIOnlineGameHost_X::GetCustomMatchSettings ( )
//{
//	static UFunction* pFnGetCustomMatchSettings = NULL;
//
//	if ( ! pFnGetCustomMatchSettings )
//		pFnGetCustomMatchSettings = (UFunction*) UObject::GObjObjects()->Data[ 50242 ];
//
//	UIOnlineGameHost_X_execGetCustomMatchSettings_Parms GetCustomMatchSettings_Parms;
//
//	this->ProcessEvent ( pFnGetCustomMatchSettings, &GetCustomMatchSettings_Parms, NULL );
//
//	return GetCustomMatchSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.IOnlineGameHost_X.AllowSplitscreenJoin
//// [0x00420000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerReplicationInfo*  PrimaryPRI                     ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Error                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UIOnlineGameHost_X::AllowSplitscreenJoin ( class APlayerReplicationInfo* PrimaryPRI, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString* Error )
//{
//	static UFunction* pFnAllowSplitscreenJoin = NULL;
//
//	if ( ! pFnAllowSplitscreenJoin )
//		pFnAllowSplitscreenJoin = (UFunction*) UObject::GObjObjects()->Data[ 50236 ];
//
//	UIOnlineGameHost_X_execAllowSplitscreenJoin_Parms AllowSplitscreenJoin_Parms;
//	AllowSplitscreenJoin_Parms.PrimaryPRI = PrimaryPRI;
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AllowSplitscreenJoin_Parms.PlayerName, &PlayerName, 0xC );
//
//	this->ProcessEvent ( pFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Parms, NULL );
//
//	if ( Error )
//		memcpy ( Error, &AllowSplitscreenJoin_Parms.Error, 0xC );
//
//	return AllowSplitscreenJoin_Parms.ReturnValue;
//};
//
//// Function ProjectX.IOnlineGameHost_X.PlayerLoggedOut
//// [0x00020000] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UIOnlineGameHost_X::PlayerLoggedOut ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedOut = NULL;
//
//	if ( ! pFnPlayerLoggedOut )
//		pFnPlayerLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 50234 ];
//
//	UIOnlineGameHost_X_execPlayerLoggedOut_Parms PlayerLoggedOut_Parms;
//	PlayerLoggedOut_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedOut, &PlayerLoggedOut_Parms, NULL );
//};
//
//// Function ProjectX.IOnlineGameHost_X.PlayerLoggedIn
//// [0x00020000] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UIOnlineGameHost_X::PlayerLoggedIn ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedIn = NULL;
//
//	if ( ! pFnPlayerLoggedIn )
//		pFnPlayerLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 50232 ];
//
//	UIOnlineGameHost_X_execPlayerLoggedIn_Parms PlayerLoggedIn_Parms;
//	PlayerLoggedIn_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedIn, &PlayerLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.IOnlineGameHost_X.AllowPlayerLogin
//// [0x00420000] 
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UIOnlineGameHost_X::AllowPlayerLogin ( struct FString Options, struct FUniqueNetId PlayerID, struct FString* ErrorMessage )
//{
//	static UFunction* pFnAllowPlayerLogin = NULL;
//
//	if ( ! pFnAllowPlayerLogin )
//		pFnAllowPlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 50228 ];
//
//	UIOnlineGameHost_X_execAllowPlayerLogin_Parms AllowPlayerLogin_Parms;
//	memcpy ( &AllowPlayerLogin_Parms.Options, &Options, 0xC );
//	memcpy ( &AllowPlayerLogin_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnAllowPlayerLogin, &AllowPlayerLogin_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &AllowPlayerLogin_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.Explosion_X.Destroyed
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void AExplosion_X::eventDestroyed ( )
//{
//	static UFunction* pFnDestroyed = NULL;
//
//	if ( ! pFnDestroyed )
//		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 49198 ];
//
//	AExplosion_X_eventDestroyed_Parms Destroyed_Parms;
//
//	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
//};
//
//// Function ProjectX.Explosion_X.ForceNetRelevant
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void AExplosion_X::eventForceNetRelevant ( )
//{
//	static UFunction* pFnForceNetRelevant = NULL;
//
//	if ( ! pFnForceNetRelevant )
//		pFnForceNetRelevant = (UFunction*) UObject::GObjObjects()->Data[ 49197 ];
//
//	AExplosion_X_eventForceNetRelevant_Parms ForceNetRelevant_Parms;
//
//	this->ProcessEvent ( pFnForceNetRelevant, &ForceNetRelevant_Parms, NULL );
//};
//
//// Function ProjectX.Explosion_X.SetFXActorArchetype
//// [0x00020102] 
//// Parameters infos:
//// class AFXActor_X*              A                              ( CPF_Parm )
//
//void AExplosion_X::SetFXActorArchetype ( class AFXActor_X* A )
//{
//	static UFunction* pFnSetFXActorArchetype = NULL;
//
//	if ( ! pFnSetFXActorArchetype )
//		pFnSetFXActorArchetype = (UFunction*) UObject::GObjObjects()->Data[ 49195 ];
//
//	AExplosion_X_execSetFXActorArchetype_Parms SetFXActorArchetype_Parms;
//	SetFXActorArchetype_Parms.A = A;
//
//	this->ProcessEvent ( pFnSetFXActorArchetype, &SetFXActorArchetype_Parms, NULL );
//};
//
//// Function ProjectX.Explosion_X.SpawnFX
//// [0x04080102] 
//// Parameters infos:
//
//void AExplosion_X::SpawnFX ( )
//{
//	static UFunction* pFnSpawnFX = NULL;
//
//	if ( ! pFnSpawnFX )
//		pFnSpawnFX = (UFunction*) UObject::GObjObjects()->Data[ 49194 ];
//
//	AExplosion_X_execSpawnFX_Parms SpawnFX_Parms;
//
//	this->ProcessEvent ( pFnSpawnFX, &SpawnFX_Parms, NULL );
//};
//
//// Function ProjectX.Explosion_X.PostBeginPlay
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void AExplosion_X::eventPostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49193 ];
//
//	AExplosion_X_eventPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.Explosion_X.ReplicatedEvent
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// struct FName                   VarName                        ( CPF_Parm )
//
//void AExplosion_X::eventReplicatedEvent ( struct FName VarName )
//{
//	static UFunction* pFnReplicatedEvent = NULL;
//
//	if ( ! pFnReplicatedEvent )
//		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 49191 ];
//
//	AExplosion_X_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
//	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );
//
//	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_MapProfiler_X.GenericPlayerInitialization
//// [0x00020002] 
//// Parameters infos:
//// class AController*             C                              ( CPF_Parm )
//
//void AGameInfo_MapProfiler_X::GenericPlayerInitialization ( class AController* C )
//{
//	static UFunction* pFnGenericPlayerInitialization = NULL;
//
//	if ( ! pFnGenericPlayerInitialization )
//		pFnGenericPlayerInitialization = (UFunction*) UObject::GObjObjects()->Data[ 49505 ];
//
//	AGameInfo_MapProfiler_X_execGenericPlayerInitialization_Parms GenericPlayerInitialization_Parms;
//	GenericPlayerInitialization_Parms.C = C;
//
//	this->ProcessEvent ( pFnGenericPlayerInitialization, &GenericPlayerInitialization_Parms, NULL );
//};
//
//// Function ProjectX.GameInfo_MapProfiler_X.SpawnPlayerController
//// [0x00020002] 
//// Parameters infos:
//// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FVector                 SpawnLocation                  ( CPF_Parm )
//// struct FRotator                SpawnRotation                  ( CPF_Parm )
//
//class APlayerController* AGameInfo_MapProfiler_X::SpawnPlayerController ( struct FVector SpawnLocation, struct FRotator SpawnRotation )
//{
//	static UFunction* pFnSpawnPlayerController = NULL;
//
//	if ( ! pFnSpawnPlayerController )
//		pFnSpawnPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 49501 ];
//
//	AGameInfo_MapProfiler_X_execSpawnPlayerController_Parms SpawnPlayerController_Parms;
//	memcpy ( &SpawnPlayerController_Parms.SpawnLocation, &SpawnLocation, 0xC );
//	memcpy ( &SpawnPlayerController_Parms.SpawnRotation, &SpawnRotation, 0xC );
//
//	this->ProcessEvent ( pFnSpawnPlayerController, &SpawnPlayerController_Parms, NULL );
//
//	return SpawnPlayerController_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 51562 ];
//
//	UOnlineGameJoinGame_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.IsInTransition
//// [0x00020000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameJoinGame_X::IsInTransition ( )
//{
//	static UFunction* pFnIsInTransition = NULL;
//
//	if ( ! pFnIsInTransition )
//		pFnIsInTransition = (UFunction*) UObject::GObjObjects()->Data[ 51560 ];
//
//	UOnlineGameJoinGame_X_execIsInTransition_Parms IsInTransition_Parms;
//
//	this->ProcessEvent ( pFnIsInTransition, &IsInTransition_Parms, NULL );
//
//	return IsInTransition_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.SendPing
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::SendPing ( )
//{
//	static UFunction* pFnSendPing = NULL;
//
//	if ( ! pFnSendPing )
//		pFnSendPing = (UFunction*) UObject::GObjObjects()->Data[ 51558 ];
//
//	UOnlineGameJoinGame_X_execSendPing_Parms SendPing_Parms;
//
//	this->ProcessEvent ( pFnSendPing, &SendPing_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.GotoJoinGameState
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   NewStateName                   ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::GotoJoinGameState ( struct FName NewStateName )
//{
//	static UFunction* pFnGotoJoinGameState = NULL;
//
//	if ( ! pFnGotoJoinGameState )
//		pFnGotoJoinGameState = (UFunction*) UObject::GObjObjects()->Data[ 51535 ];
//
//	UOnlineGameJoinGame_X_execGotoJoinGameState_Parms GotoJoinGameState_Parms;
//	memcpy ( &GotoJoinGameState_Parms.NewStateName, &NewStateName, 0x8 );
//
//	this->ProcessEvent ( pFnGotoJoinGameState, &GotoJoinGameState_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.HandleConnectionResponse
//// [0x00080000] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::HandleConnectionResponse ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnHandleConnectionResponse = NULL;
//
//	if ( ! pFnHandleConnectionResponse )
//		pFnHandleConnectionResponse = (UFunction*) UObject::GObjObjects()->Data[ 51555 ];
//
//	UOnlineGameJoinGame_X_execHandleConnectionResponse_Parms HandleConnectionResponse_Parms;
//	HandleConnectionResponse_Parms.Connection = Connection;
//	HandleConnectionResponse_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleConnectionResponse, &HandleConnectionResponse_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.HandleReservationResponse
//// [0x00080000] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::HandleReservationResponse ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnHandleReservationResponse = NULL;
//
//	if ( ! pFnHandleReservationResponse )
//		pFnHandleReservationResponse = (UFunction*) UObject::GObjObjects()->Data[ 51552 ];
//
//	UOnlineGameJoinGame_X_execHandleReservationResponse_Parms HandleReservationResponse_Parms;
//	HandleReservationResponse_Parms.Connection = Connection;
//	HandleReservationResponse_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleReservationResponse, &HandleReservationResponse_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.NotifyConnectionFailed
//// [0x00020000] 
//// Parameters infos:
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameJoinGame_X::NotifyConnectionFailed ( struct FString Message )
//{
//	static UFunction* pFnNotifyConnectionFailed = NULL;
//
//	if ( ! pFnNotifyConnectionFailed )
//		pFnNotifyConnectionFailed = (UFunction*) UObject::GObjObjects()->Data[ 51550 ];
//
//	UOnlineGameJoinGame_X_execNotifyConnectionFailed_Parms NotifyConnectionFailed_Parms;
//	memcpy ( &NotifyConnectionFailed_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnNotifyConnectionFailed, &NotifyConnectionFailed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.OnJoinGameComplete
//// [0x00084002] 
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 FailReason                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 BugItReason                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameJoinGame_X::OnJoinGameComplete ( unsigned long bSuccess, struct FString FailReason, struct FString BugItReason )
//{
//	static UFunction* pFnOnJoinGameComplete = NULL;
//
//	if ( ! pFnOnJoinGameComplete )
//		pFnOnJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 51546 ];
//
//	UOnlineGameJoinGame_X_execOnJoinGameComplete_Parms OnJoinGameComplete_Parms;
//	OnJoinGameComplete_Parms.bSuccess = bSuccess;
//	memcpy ( &OnJoinGameComplete_Parms.FailReason, &FailReason, 0xC );
//	memcpy ( &OnJoinGameComplete_Parms.BugItReason, &BugItReason, 0xC );
//
//	this->ProcessEvent ( pFnOnJoinGameComplete, &OnJoinGameComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.SetServerBeaconAddress
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 NewValue                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameJoinGame_X::SetServerBeaconAddress ( struct FString NewValue )
//{
//	static UFunction* pFnSetServerBeaconAddress = NULL;
//
//	if ( ! pFnSetServerBeaconAddress )
//		pFnSetServerBeaconAddress = (UFunction*) UObject::GObjObjects()->Data[ 51544 ];
//
//	UOnlineGameJoinGame_X_execSetServerBeaconAddress_Parms SetServerBeaconAddress_Parms;
//	memcpy ( &SetServerBeaconAddress_Parms.NewValue, &NewValue, 0xC );
//
//	this->ProcessEvent ( pFnSetServerBeaconAddress, &SetServerBeaconAddress_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.ClearServerData
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::ClearServerData ( )
//{
//	static UFunction* pFnClearServerData = NULL;
//
//	if ( ! pFnClearServerData )
//		pFnClearServerData = (UFunction*) UObject::GObjObjects()->Data[ 51542 ];
//
//	UOnlineGameJoinGame_X_execClearServerData_Parms ClearServerData_Parms;
//
//	this->ProcessEvent ( pFnClearServerData, &ClearServerData_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.HandleGameInfoSpawned
//// [0x00080002] 
//// Parameters infos:
//// class AGameInfo_X*             InGameInfo                     ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::HandleGameInfoSpawned ( class AGameInfo_X* InGameInfo )
//{
//	static UFunction* pFnHandleGameInfoSpawned = NULL;
//
//	if ( ! pFnHandleGameInfoSpawned )
//		pFnHandleGameInfoSpawned = (UFunction*) UObject::GObjObjects()->Data[ 51543 ];
//
//	UOnlineGameJoinGame_X_execHandleGameInfoSpawned_Parms HandleGameInfoSpawned_Parms;
//	HandleGameInfoSpawned_Parms.InGameInfo = InGameInfo;
//
//	this->ProcessEvent ( pFnHandleGameInfoSpawned, &HandleGameInfoSpawned_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.IsJoiningGame
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameJoinGame_X::IsJoiningGame ( )
//{
//	static UFunction* pFnIsJoiningGame = NULL;
//
//	if ( ! pFnIsJoiningGame )
//		pFnIsJoiningGame = (UFunction*) UObject::GObjObjects()->Data[ 49654 ];
//
//	UOnlineGameJoinGame_X_execIsJoiningGame_Parms IsJoiningGame_Parms;
//
//	this->ProcessEvent ( pFnIsJoiningGame, &IsJoiningGame_Parms, NULL );
//
//	return IsJoiningGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.CancelJoin
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::CancelJoin ( )
//{
//	static UFunction* pFnCancelJoin = NULL;
//
//	if ( ! pFnCancelJoin )
//		pFnCancelJoin = (UFunction*) UObject::GObjObjects()->Data[ 51541 ];
//
//	UOnlineGameJoinGame_X_execCancelJoin_Parms CancelJoin_Parms;
//
//	this->ProcessEvent ( pFnCancelJoin, &CancelJoin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.StartJoinPrivateMatch
//// [0x00424002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 BeaconAddress                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FJoinMatchSettings      JoinSettings                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FCustomMatchSettings    InSettings                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameJoinGame_X::StartJoinPrivateMatch ( struct FString BeaconAddress, struct FJoinMatchSettings JoinSettings, struct FCustomMatchSettings* InSettings )
//{
//	static UFunction* pFnStartJoinPrivateMatch = NULL;
//
//	if ( ! pFnStartJoinPrivateMatch )
//		pFnStartJoinPrivateMatch = (UFunction*) UObject::GObjObjects()->Data[ 51536 ];
//
//	UOnlineGameJoinGame_X_execStartJoinPrivateMatch_Parms StartJoinPrivateMatch_Parms;
//	memcpy ( &StartJoinPrivateMatch_Parms.BeaconAddress, &BeaconAddress, 0xC );
//	memcpy ( &StartJoinPrivateMatch_Parms.JoinSettings, &JoinSettings, 0x18 );
//
//	this->ProcessEvent ( pFnStartJoinPrivateMatch, &StartJoinPrivateMatch_Parms, NULL );
//
//	if ( InSettings )
//		memcpy ( InSettings, &StartJoinPrivateMatch_Parms.InSettings, 0x60 );
//
//	return StartJoinPrivateMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.StartJoin
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 BeaconAddress                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FJoinMatchSettings      JoinSettings                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameJoinGame_X::StartJoin ( struct FString BeaconAddress, struct FJoinMatchSettings JoinSettings )
//{
//	static UFunction* pFnStartJoin = NULL;
//
//	if ( ! pFnStartJoin )
//		pFnStartJoin = (UFunction*) UObject::GObjObjects()->Data[ 51392 ];
//
//	UOnlineGameJoinGame_X_execStartJoin_Parms StartJoin_Parms;
//	memcpy ( &StartJoin_Parms.BeaconAddress, &BeaconAddress, 0xC );
//	memcpy ( &StartJoin_Parms.JoinSettings, &JoinSettings, 0x18 );
//
//	this->ProcessEvent ( pFnStartJoin, &StartJoin_Parms, NULL );
//
//	return StartJoin_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 51520 ];
//
//	UOnlineGameJoinGame_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventMaxPlayersChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameJoinGame_X*   OnlineGameJoinGame             ( CPF_Parm )
//// int                            MaxPlayers                     ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::EventMaxPlayersChanged ( class UOnlineGameJoinGame_X* OnlineGameJoinGame, int MaxPlayers )
//{
//	static UFunction* pFnEventMaxPlayersChanged = NULL;
//
//	if ( ! pFnEventMaxPlayersChanged )
//		pFnEventMaxPlayersChanged = (UFunction*) UObject::GObjObjects()->Data[ 51521 ];
//
//	UOnlineGameJoinGame_X_execEventMaxPlayersChanged_Parms EventMaxPlayersChanged_Parms;
//	EventMaxPlayersChanged_Parms.OnlineGameJoinGame = OnlineGameJoinGame;
//	EventMaxPlayersChanged_Parms.MaxPlayers = MaxPlayers;
//
//	this->ProcessEvent ( pFnEventMaxPlayersChanged, &EventMaxPlayersChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventJoiningGame
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameJoinGame_X*   OnlineGameJoinGame             ( CPF_Parm )
//
//void UOnlineGameJoinGame_X::EventJoiningGame ( class UOnlineGameJoinGame_X* OnlineGameJoinGame )
//{
//	static UFunction* pFnEventJoiningGame = NULL;
//
//	if ( ! pFnEventJoiningGame )
//		pFnEventJoiningGame = (UFunction*) UObject::GObjObjects()->Data[ 51699 ];
//
//	UOnlineGameJoinGame_X_execEventJoiningGame_Parms EventJoiningGame_Parms;
//	EventJoiningGame_Parms.OnlineGameJoinGame = OnlineGameJoinGame;
//
//	this->ProcessEvent ( pFnEventJoiningGame, &EventJoiningGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventPasswordRequired
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::EventPasswordRequired ( )
//{
//	static UFunction* pFnEventPasswordRequired = NULL;
//
//	if ( ! pFnEventPasswordRequired )
//		pFnEventPasswordRequired = (UFunction*) UObject::GObjObjects()->Data[ 51481 ];
//
//	UOnlineGameJoinGame_X_execEventPasswordRequired_Parms EventPasswordRequired_Parms;
//
//	this->ProcessEvent ( pFnEventPasswordRequired, &EventPasswordRequired_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventServerReserved
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::EventServerReserved ( )
//{
//	static UFunction* pFnEventServerReserved = NULL;
//
//	if ( ! pFnEventServerReserved )
//		pFnEventServerReserved = (UFunction*) UObject::GObjObjects()->Data[ 51483 ];
//
//	UOnlineGameJoinGame_X_execEventServerReserved_Parms EventServerReserved_Parms;
//
//	this->ProcessEvent ( pFnEventServerReserved, &EventServerReserved_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventServerBeaconAddressChanged
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::EventServerBeaconAddressChanged ( )
//{
//	static UFunction* pFnEventServerBeaconAddressChanged = NULL;
//
//	if ( ! pFnEventServerBeaconAddressChanged )
//		pFnEventServerBeaconAddressChanged = (UFunction*) UObject::GObjObjects()->Data[ 51484 ];
//
//	UOnlineGameJoinGame_X_execEventServerBeaconAddressChanged_Parms EventServerBeaconAddressChanged_Parms;
//
//	this->ProcessEvent ( pFnEventServerBeaconAddressChanged, &EventServerBeaconAddressChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventCountdownEnded
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::EventCountdownEnded ( )
//{
//	static UFunction* pFnEventCountdownEnded = NULL;
//
//	if ( ! pFnEventCountdownEnded )
//		pFnEventCountdownEnded = (UFunction*) UObject::GObjObjects()->Data[ 51486 ];
//
//	UOnlineGameJoinGame_X_execEventCountdownEnded_Parms EventCountdownEnded_Parms;
//
//	this->ProcessEvent ( pFnEventCountdownEnded, &EventCountdownEnded_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventCountdownStarted
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameJoinGame_X::EventCountdownStarted ( )
//{
//	static UFunction* pFnEventCountdownStarted = NULL;
//
//	if ( ! pFnEventCountdownStarted )
//		pFnEventCountdownStarted = (UFunction*) UObject::GObjObjects()->Data[ 51488 ];
//
//	UOnlineGameJoinGame_X_execEventCountdownStarted_Parms EventCountdownStarted_Parms;
//
//	this->ProcessEvent ( pFnEventCountdownStarted, &EventCountdownStarted_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventStatusUpdate
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewStatus                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameJoinGame_X::EventStatusUpdate ( struct FString NewStatus )
//{
//	static UFunction* pFnEventStatusUpdate = NULL;
//
//	if ( ! pFnEventStatusUpdate )
//		pFnEventStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 51490 ];
//
//	UOnlineGameJoinGame_X_execEventStatusUpdate_Parms EventStatusUpdate_Parms;
//	memcpy ( &EventStatusUpdate_Parms.NewStatus, &NewStatus, 0xC );
//
//	this->ProcessEvent ( pFnEventStatusUpdate, &EventStatusUpdate_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameJoinGame_X.EventJoinGameComplete
//// [0x00120000] 
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 FailReason                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameJoinGame_X::EventJoinGameComplete ( unsigned long bSuccess, struct FString FailReason )
//{
//	static UFunction* pFnEventJoinGameComplete = NULL;
//
//	if ( ! pFnEventJoinGameComplete )
//		pFnEventJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 51491 ];
//
//	UOnlineGameJoinGame_X_execEventJoinGameComplete_Parms EventJoinGameComplete_Parms;
//	EventJoinGameComplete_Parms.bSuccess = bSuccess;
//	memcpy ( &EventJoinGameComplete_Parms.FailReason, &FailReason, 0xC );
//
//	this->ProcessEvent ( pFnEventJoinGameComplete, &EventJoinGameComplete_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.Close
//// [0x00020002] 
//// Parameters infos:
//
//void UGFxModal_X::Close ( )
//{
//	static UFunction* pFnClose = NULL;
//
//	if ( ! pFnClose )
//		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 49919 ];
//
//	UGFxModal_X_execClose_Parms Close_Parms;
//
//	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.FlashAddButton
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxModal_X::FlashAddButton ( struct FString Label )
//{
//	static UFunction* pFnFlashAddButton = NULL;
//
//	if ( ! pFnFlashAddButton )
//		pFnFlashAddButton = (UFunction*) UObject::GObjObjects()->Data[ 49916 ];
//
//	UGFxModal_X_execFlashAddButton_Parms FlashAddButton_Parms;
//	memcpy ( &FlashAddButton_Parms.Label, &Label, 0xC );
//
//	this->ProcessEvent ( pFnFlashAddButton, &FlashAddButton_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.FlashAddCancelButton
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 LocalizedText                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UGFxModal_X::FlashAddCancelButton ( struct FString LocalizedText )
//{
//	static UFunction* pFnFlashAddCancelButton = NULL;
//
//	if ( ! pFnFlashAddCancelButton )
//		pFnFlashAddCancelButton = (UFunction*) UObject::GObjObjects()->Data[ 49918 ];
//
//	UGFxModal_X_execFlashAddCancelButton_Parms FlashAddCancelButton_Parms;
//	memcpy ( &FlashAddCancelButton_Parms.LocalizedText, &LocalizedText, 0xC );
//
//	this->ProcessEvent ( pFnFlashAddCancelButton, &FlashAddCancelButton_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.HandleButtonClicked
//// [0x00080002] 
//// Parameters infos:
//// int                            Index                          ( CPF_Parm )
//
//void UGFxModal_X::HandleButtonClicked ( int Index )
//{
//	static UFunction* pFnHandleButtonClicked = NULL;
//
//	if ( ! pFnHandleButtonClicked )
//		pFnHandleButtonClicked = (UFunction*) UObject::GObjObjects()->Data[ 49913 ];
//
//	UGFxModal_X_execHandleButtonClicked_Parms HandleButtonClicked_Parms;
//	HandleButtonClicked_Parms.Index = Index;
//
//	this->ProcessEvent ( pFnHandleButtonClicked, &HandleButtonClicked_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.AddButton
//// [0x00024002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Label                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         OnClick                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UGFxModal_X* UGFxModal_X::AddButton ( struct FString Label, struct FScriptDelegate OnClick )
//{
//	static UFunction* pFnAddButton = NULL;
//
//	if ( ! pFnAddButton )
//		pFnAddButton = (UFunction*) UObject::GObjObjects()->Data[ 49908 ];
//
//	UGFxModal_X_execAddButton_Parms AddButton_Parms;
//	memcpy ( &AddButton_Parms.Label, &Label, 0xC );
//	memcpy ( &AddButton_Parms.OnClick, &OnClick, 0x10 );
//
//	this->ProcessEvent ( pFnAddButton, &AddButton_Parms, NULL );
//
//	return AddButton_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.AddCancelButton
//// [0x00024002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 LocalizedText                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         OnClick                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UGFxModal_X* UGFxModal_X::AddCancelButton ( struct FString LocalizedText, struct FScriptDelegate OnClick )
//{
//	static UFunction* pFnAddCancelButton = NULL;
//
//	if ( ! pFnAddCancelButton )
//		pFnAddCancelButton = (UFunction*) UObject::GObjObjects()->Data[ 49912 ];
//
//	UGFxModal_X_execAddCancelButton_Parms AddCancelButton_Parms;
//	memcpy ( &AddCancelButton_Parms.LocalizedText, &LocalizedText, 0xC );
//	memcpy ( &AddCancelButton_Parms.OnClick, &OnClick, 0x10 );
//
//	this->ProcessEvent ( pFnAddCancelButton, &AddCancelButton_Parms, NULL );
//
//	return AddCancelButton_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.SetCancellable
//// [0x00020002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bCancellable                   ( CPF_Parm )
//
//class UGFxModal_X* UGFxModal_X::SetCancellable ( unsigned long bCancellable )
//{
//	static UFunction* pFnSetCancellable = NULL;
//
//	if ( ! pFnSetCancellable )
//		pFnSetCancellable = (UFunction*) UObject::GObjObjects()->Data[ 49921 ];
//
//	UGFxModal_X_execSetCancellable_Parms SetCancellable_Parms;
//	SetCancellable_Parms.bCancellable = bCancellable;
//
//	this->ProcessEvent ( pFnSetCancellable, &SetCancellable_Parms, NULL );
//
//	return SetCancellable_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.SetDefaultSelectedButtonIndex
//// [0x00020002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            buttonIndex                    ( CPF_Parm )
//
//class UGFxModal_X* UGFxModal_X::SetDefaultSelectedButtonIndex ( int buttonIndex )
//{
//	static UFunction* pFnSetDefaultSelectedButtonIndex = NULL;
//
//	if ( ! pFnSetDefaultSelectedButtonIndex )
//		pFnSetDefaultSelectedButtonIndex = (UFunction*) UObject::GObjObjects()->Data[ 49925 ];
//
//	UGFxModal_X_execSetDefaultSelectedButtonIndex_Parms SetDefaultSelectedButtonIndex_Parms;
//	SetDefaultSelectedButtonIndex_Parms.buttonIndex = buttonIndex;
//
//	this->ProcessEvent ( pFnSetDefaultSelectedButtonIndex, &SetDefaultSelectedButtonIndex_Parms, NULL );
//
//	return SetDefaultSelectedButtonIndex_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.SetIcon
//// [0x00020002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 IconName                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UGFxModal_X* UGFxModal_X::SetIcon ( struct FString IconName )
//{
//	static UFunction* pFnSetIcon = NULL;
//
//	if ( ! pFnSetIcon )
//		pFnSetIcon = (UFunction*) UObject::GObjObjects()->Data[ 49928 ];
//
//	UGFxModal_X_execSetIcon_Parms SetIcon_Parms;
//	memcpy ( &SetIcon_Parms.IconName, &IconName, 0xC );
//
//	this->ProcessEvent ( pFnSetIcon, &SetIcon_Parms, NULL );
//
//	return SetIcon_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.SetBody
//// [0x00020002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 LocalizedText                  ( CPF_Parm | CPF_NeedCtorLink )
//
//class UGFxModal_X* UGFxModal_X::SetBody ( struct FString LocalizedText )
//{
//	static UFunction* pFnSetBody = NULL;
//
//	if ( ! pFnSetBody )
//		pFnSetBody = (UFunction*) UObject::GObjObjects()->Data[ 49905 ];
//
//	UGFxModal_X_execSetBody_Parms SetBody_Parms;
//	memcpy ( &SetBody_Parms.LocalizedText, &LocalizedText, 0xC );
//
//	this->ProcessEvent ( pFnSetBody, &SetBody_Parms, NULL );
//
//	return SetBody_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.SetTitle
//// [0x00020002] 
//// Parameters infos:
//// class UGFxModal_X*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 LocalizedText                  ( CPF_Parm | CPF_NeedCtorLink )
//
//class UGFxModal_X* UGFxModal_X::SetTitle ( struct FString LocalizedText )
//{
//	static UFunction* pFnSetTitle = NULL;
//
//	if ( ! pFnSetTitle )
//		pFnSetTitle = (UFunction*) UObject::GObjObjects()->Data[ 49902 ];
//
//	UGFxModal_X_execSetTitle_Parms SetTitle_Parms;
//	memcpy ( &SetTitle_Parms.LocalizedText, &LocalizedText, 0xC );
//
//	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
//
//	return SetTitle_Parms.ReturnValue;
//};
//
//// Function ProjectX.GFxModal_X.SetGFxObject
//// [0x00020002] 
//// Parameters infos:
//// class UGFxObject*              Obj                            ( CPF_Parm )
//
//void UGFxModal_X::SetGFxObject ( class UGFxObject* Obj )
//{
//	static UFunction* pFnSetGFxObject = NULL;
//
//	if ( ! pFnSetGFxObject )
//		pFnSetGFxObject = (UFunction*) UObject::GObjObjects()->Data[ 49900 ];
//
//	UGFxModal_X_execSetGFxObject_Parms SetGFxObject_Parms;
//	SetGFxObject_Parms.Obj = Obj;
//
//	this->ProcessEvent ( pFnSetGFxObject, &SetGFxObject_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.EventClosed
//// [0x00120000] 
//// Parameters infos:
//// class UGFxModal_X*             Modal                          ( CPF_Parm )
//
//void UGFxModal_X::EventClosed ( class UGFxModal_X* Modal )
//{
//	static UFunction* pFnEventClosed = NULL;
//
//	if ( ! pFnEventClosed )
//		pFnEventClosed = (UFunction*) UObject::GObjObjects()->Data[ 49893 ];
//
//	UGFxModal_X_execEventClosed_Parms EventClosed_Parms;
//	EventClosed_Parms.Modal = Modal;
//
//	this->ProcessEvent ( pFnEventClosed, &EventClosed_Parms, NULL );
//};
//
//// Function ProjectX.GFxModal_X.ClickDelegate
//// [0x00180000] 
//// Parameters infos:
//// class UGFxModal_X*             Modal                          ( CPF_Parm )
//
//void UGFxModal_X::ClickDelegate ( class UGFxModal_X* Modal )
//{
//	static UFunction* pFnClickDelegate = NULL;
//
//	if ( ! pFnClickDelegate )
//		pFnClickDelegate = (UFunction*) UObject::GObjObjects()->Data[ 49891 ];
//
//	UGFxModal_X_execClickDelegate_Parms ClickDelegate_Parms;
//	ClickDelegate_Parms.Modal = Modal;
//
//	this->ProcessEvent ( pFnClickDelegate, &ClickDelegate_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void AGRI_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 50168 ];
//
//	AGRI_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.SetMatchGUID
//// [0x00080102] 
//// Parameters infos:
//// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
//
//void AGRI_X::SetMatchGUID ( struct FString Id )
//{
//	static UFunction* pFnSetMatchGUID = NULL;
//
//	if ( ! pFnSetMatchGUID )
//		pFnSetMatchGUID = (UFunction*) UObject::GObjObjects()->Data[ 50171 ];
//
//	AGRI_X_execSetMatchGUID_Parms SetMatchGUID_Parms;
//	memcpy ( &SetMatchGUID_Parms.Id, &Id, 0xC );
//
//	this->ProcessEvent ( pFnSetMatchGUID, &SetMatchGUID_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.HandleMatchGUIDChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* OnlineGameDS                   ( CPF_Parm )
//
//void AGRI_X::HandleMatchGUIDChanged ( class UOnlineGameDedicatedServer_X* OnlineGameDS )
//{
//	static UFunction* pFnHandleMatchGUIDChanged = NULL;
//
//	if ( ! pFnHandleMatchGUIDChanged )
//		pFnHandleMatchGUIDChanged = (UFunction*) UObject::GObjObjects()->Data[ 50172 ];
//
//	AGRI_X_execHandleMatchGUIDChanged_Parms HandleMatchGUIDChanged_Parms;
//	HandleMatchGUIDChanged_Parms.OnlineGameDS = OnlineGameDS;
//
//	this->ProcessEvent ( pFnHandleMatchGUIDChanged, &HandleMatchGUIDChanged_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.IsPlaylistRanked
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool AGRI_X::IsPlaylistRanked ( )
//{
//	static UFunction* pFnIsPlaylistRanked = NULL;
//
//	if ( ! pFnIsPlaylistRanked )
//		pFnIsPlaylistRanked = (UFunction*) UObject::GObjObjects()->Data[ 50165 ];
//
//	AGRI_X_execIsPlaylistRanked_Parms IsPlaylistRanked_Parms;
//
//	this->ProcessEvent ( pFnIsPlaylistRanked, &IsPlaylistRanked_Parms, NULL );
//
//	return IsPlaylistRanked_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.GetPlaylist
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//// class UGameSettingPlaylist_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UGameSettingPlaylist_X* AGRI_X::GetPlaylist ( )
//{
//	static UFunction* pFnGetPlaylist = NULL;
//
//	if ( ! pFnGetPlaylist )
//		pFnGetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 50163 ];
//
//	AGRI_X_execGetPlaylist_Parms GetPlaylist_Parms;
//
//	this->ProcessEvent ( pFnGetPlaylist, &GetPlaylist_Parms, NULL );
//
//	return GetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.PlayerIsInCurrentGame
//// [0x00020103] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//bool AGRI_X::PlayerIsInCurrentGame ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnPlayerIsInCurrentGame = NULL;
//
//	if ( ! pFnPlayerIsInCurrentGame )
//		pFnPlayerIsInCurrentGame = (UFunction*) UObject::GObjObjects()->Data[ 50159 ];
//
//	AGRI_X_execPlayerIsInCurrentGame_Parms PlayerIsInCurrentGame_Parms;
//	memcpy ( &PlayerIsInCurrentGame_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnPlayerIsInCurrentGame, &PlayerIsInCurrentGame_Parms, NULL );
//
//	return PlayerIsInCurrentGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.GetReservationDebugString
//// [0x00040103] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FReplicatedReservationData Data                           ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString AGRI_X::GetReservationDebugString ( struct FReplicatedReservationData Data )
//{
//	static UFunction* pFnGetReservationDebugString = NULL;
//
//	if ( ! pFnGetReservationDebugString )
//		pFnGetReservationDebugString = (UFunction*) UObject::GObjObjects()->Data[ 50156 ];
//
//	AGRI_X_execGetReservationDebugString_Parms GetReservationDebugString_Parms;
//	memcpy ( &GetReservationDebugString_Parms.Data, &Data, 0x58 );
//
//	this->ProcessEvent ( pFnGetReservationDebugString, &GetReservationDebugString_Parms, NULL );
//
//	return GetReservationDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.GetOnlineGameDedicated
//// [0x00020102] 
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGameDedicatedServer_X* AGRI_X::GetOnlineGameDedicated ( )
//{
//	static UFunction* pFnGetOnlineGameDedicated = NULL;
//
//	if ( ! pFnGetOnlineGameDedicated )
//		pFnGetOnlineGameDedicated = (UFunction*) UObject::GObjObjects()->Data[ 50154 ];
//
//	AGRI_X_execGetOnlineGameDedicated_Parms GetOnlineGameDedicated_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameDedicated, &GetOnlineGameDedicated_Parms, NULL );
//
//	return GetOnlineGameDedicated_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.GetOnlineGameBase
//// [0x00020102] 
//// Parameters infos:
//// class UOnlineGame_Base_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGame_Base_X* AGRI_X::GetOnlineGameBase ( )
//{
//	static UFunction* pFnGetOnlineGameBase = NULL;
//
//	if ( ! pFnGetOnlineGameBase )
//		pFnGetOnlineGameBase = (UFunction*) UObject::GObjObjects()->Data[ 50152 ];
//
//	AGRI_X_execGetOnlineGameBase_Parms GetOnlineGameBase_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGameBase, &GetOnlineGameBase_Parms, NULL );
//
//	return GetOnlineGameBase_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.GetOnlineGame
//// [0x00020102] 
//// Parameters infos:
//// class UOnlineGame_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlineGame_X* AGRI_X::GetOnlineGame ( )
//{
//	static UFunction* pFnGetOnlineGame = NULL;
//
//	if ( ! pFnGetOnlineGame )
//		pFnGetOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 50150 ];
//
//	AGRI_X_execGetOnlineGame_Parms GetOnlineGame_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineGame, &GetOnlineGame_Parms, NULL );
//
//	return GetOnlineGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.HasSelectedGameData
//// [0x00020102] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool AGRI_X::HasSelectedGameData ( )
//{
//	static UFunction* pFnHasSelectedGameData = NULL;
//
//	if ( ! pFnHasSelectedGameData )
//		pFnHasSelectedGameData = (UFunction*) UObject::GObjObjects()->Data[ 50148 ];
//
//	AGRI_X_execHasSelectedGameData_Parms HasSelectedGameData_Parms;
//
//	this->ProcessEvent ( pFnHasSelectedGameData, &HasSelectedGameData_Parms, NULL );
//
//	return HasSelectedGameData_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.SetGameStarted
//// [0x00020102] 
//// Parameters infos:
//
//void AGRI_X::SetGameStarted ( )
//{
//	static UFunction* pFnSetGameStarted = NULL;
//
//	if ( ! pFnSetGameStarted )
//		pFnSetGameStarted = (UFunction*) UObject::GObjObjects()->Data[ 50147 ];
//
//	AGRI_X_execSetGameStarted_Parms SetGameStarted_Parms;
//
//	this->ProcessEvent ( pFnSetGameStarted, &SetGameStarted_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.SetOfflineGameData
//// [0x00020102] 
//// Parameters infos:
//// struct FName                   PlaylistName                   ( CPF_Parm )
//
//void AGRI_X::SetOfflineGameData ( struct FName PlaylistName )
//{
//	static UFunction* pFnSetOfflineGameData = NULL;
//
//	if ( ! pFnSetOfflineGameData )
//		pFnSetOfflineGameData = (UFunction*) UObject::GObjObjects()->Data[ 50144 ];
//
//	AGRI_X_execSetOfflineGameData_Parms SetOfflineGameData_Parms;
//	memcpy ( &SetOfflineGameData_Parms.PlaylistName, &PlaylistName, 0x8 );
//
//	this->ProcessEvent ( pFnSetOfflineGameData, &SetOfflineGameData_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.NotifyOnGameDataSelected
//// [0x00020102] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void AGRI_X::NotifyOnGameDataSelected ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnGameDataSelected = NULL;
//
//	if ( ! pFnNotifyOnGameDataSelected )
//		pFnNotifyOnGameDataSelected = (UFunction*) UObject::GObjObjects()->Data[ 50146 ];
//
//	AGRI_X_execNotifyOnGameDataSelected_Parms NotifyOnGameDataSelected_Parms;
//	memcpy ( &NotifyOnGameDataSelected_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnGameDataSelected, &NotifyOnGameDataSelected_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.SetGameData
//// [0x00020102] 
//// Parameters infos:
//// int                            NewPlaylistID                  ( CPF_Parm )
//// int                            MutatorIndex                   ( CPF_Parm )
//
//void AGRI_X::SetGameData ( int NewPlaylistID, int MutatorIndex )
//{
//	static UFunction* pFnSetGameData = NULL;
//
//	if ( ! pFnSetGameData )
//		pFnSetGameData = (UFunction*) UObject::GObjObjects()->Data[ 50140 ];
//
//	AGRI_X_execSetGameData_Parms SetGameData_Parms;
//	SetGameData_Parms.NewPlaylistID = NewPlaylistID;
//	SetGameData_Parms.MutatorIndex = MutatorIndex;
//
//	this->ProcessEvent ( pFnSetGameData, &SetGameData_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.HandleGamePlaylistSet
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* DedicatedServer                ( CPF_Parm )
//
//void AGRI_X::HandleGamePlaylistSet ( class UOnlineGameDedicatedServer_X* DedicatedServer )
//{
//	static UFunction* pFnHandleGamePlaylistSet = NULL;
//
//	if ( ! pFnHandleGamePlaylistSet )
//		pFnHandleGamePlaylistSet = (UFunction*) UObject::GObjObjects()->Data[ 50143 ];
//
//	AGRI_X_execHandleGamePlaylistSet_Parms HandleGamePlaylistSet_Parms;
//	HandleGamePlaylistSet_Parms.DedicatedServer = DedicatedServer;
//
//	this->ProcessEvent ( pFnHandleGamePlaylistSet, &HandleGamePlaylistSet_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.OnReservationsUpdated
//// [0x00080102] 
//// Parameters infos:
//
//void AGRI_X::OnReservationsUpdated ( )
//{
//	static UFunction* pFnOnReservationsUpdated = NULL;
//
//	if ( ! pFnOnReservationsUpdated )
//		pFnOnReservationsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 50139 ];
//
//	AGRI_X_execOnReservationsUpdated_Parms OnReservationsUpdated_Parms;
//
//	this->ProcessEvent ( pFnOnReservationsUpdated, &OnReservationsUpdated_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.SetReservations
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FReplicatedReservationData > InReservations                 ( CPF_Parm | CPF_NeedCtorLink )
//// struct FReplicatedReservationData StructInitializer_696813BE4D9ED57B95A60BA1A5AE29D0 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void AGRI_X::SetReservations ( TArray< struct FReplicatedReservationData > InReservations, struct FReplicatedReservationData* StructInitializer_696813BE4D9ED57B95A60BA1A5AE29D0 )
//{
//	static UFunction* pFnSetReservations = NULL;
//
//	if ( ! pFnSetReservations )
//		pFnSetReservations = (UFunction*) UObject::GObjObjects()->Data[ 50136 ];
//
//	AGRI_X_execSetReservations_Parms SetReservations_Parms;
//	memcpy ( &SetReservations_Parms.InReservations, &InReservations, 0xC );
//
//	this->ProcessEvent ( pFnSetReservations, &SetReservations_Parms, NULL );
//
//	if ( StructInitializer_696813BE4D9ED57B95A60BA1A5AE29D0 )
//		memcpy ( StructInitializer_696813BE4D9ED57B95A60BA1A5AE29D0, &SetReservations_Parms.StructInitializer_696813BE4D9ED57B95A60BA1A5AE29D0, 0x58 );
//};
//
//// Function ProjectX.GRI_X.ConvertReservation
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FReplicatedReservationData ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FReservationData        Data                           ( CPF_Parm | CPF_NeedCtorLink )
//// struct FReplicatedReservationData StructInitializer_486DFEB94C5AB94536757BAC3AE09B1F ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//struct FReplicatedReservationData AGRI_X::ConvertReservation ( struct FReservationData Data, struct FReplicatedReservationData* StructInitializer_486DFEB94C5AB94536757BAC3AE09B1F )
//{
//	static UFunction* pFnConvertReservation = NULL;
//
//	if ( ! pFnConvertReservation )
//		pFnConvertReservation = (UFunction*) UObject::GObjObjects()->Data[ 50179 ];
//
//	AGRI_X_execConvertReservation_Parms ConvertReservation_Parms;
//	memcpy ( &ConvertReservation_Parms.Data, &Data, 0xD4 );
//
//	this->ProcessEvent ( pFnConvertReservation, &ConvertReservation_Parms, NULL );
//
//	if ( StructInitializer_486DFEB94C5AB94536757BAC3AE09B1F )
//		memcpy ( StructInitializer_486DFEB94C5AB94536757BAC3AE09B1F, &ConvertReservation_Parms.StructInitializer_486DFEB94C5AB94536757BAC3AE09B1F, 0x58 );
//
//	return ConvertReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.GRI_X.UpdateReservations
//// [0x00080002] 
//// Parameters infos:
//// TArray< struct FReplicatedReservationData > MapLocal_E8CA046A4E7449D53641C4B1782469C2 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void AGRI_X::UpdateReservations ( TArray< struct FReplicatedReservationData >* MapLocal_E8CA046A4E7449D53641C4B1782469C2 )
//{
//	static UFunction* pFnUpdateReservations = NULL;
//
//	if ( ! pFnUpdateReservations )
//		pFnUpdateReservations = (UFunction*) UObject::GObjObjects()->Data[ 50132 ];
//
//	AGRI_X_execUpdateReservations_Parms UpdateReservations_Parms;
//
//	this->ProcessEvent ( pFnUpdateReservations, &UpdateReservations_Parms, NULL );
//
//	if ( MapLocal_E8CA046A4E7449D53641C4B1782469C2 )
//		memcpy ( MapLocal_E8CA046A4E7449D53641C4B1782469C2, &UpdateReservations_Parms.MapLocal_E8CA046A4E7449D53641C4B1782469C2, 0xC );
//};
//
//// Function ProjectX.GRI_X.ReplicatedEvent
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// struct FName                   VarName                        ( CPF_Parm )
//
//void AGRI_X::eventReplicatedEvent ( struct FName VarName )
//{
//	static UFunction* pFnReplicatedEvent = NULL;
//
//	if ( ! pFnReplicatedEvent )
//		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 50130 ];
//
//	AGRI_X_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
//	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );
//
//	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.PostBeginPlay
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void AGRI_X::eventPostBeginPlay ( )
//{
//	static UFunction* pFnPostBeginPlay = NULL;
//
//	if ( ! pFnPostBeginPlay )
//		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50122 ];
//
//	AGRI_X_eventPostBeginPlay_Parms PostBeginPlay_Parms;
//
//	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.EventMatchGUIDChanged
//// [0x00120000] 
//// Parameters infos:
//// class AGRI_X*                  GRI                            ( CPF_Parm )
//
//void AGRI_X::EventMatchGUIDChanged ( class AGRI_X* GRI )
//{
//	static UFunction* pFnEventMatchGUIDChanged = NULL;
//
//	if ( ! pFnEventMatchGUIDChanged )
//		pFnEventMatchGUIDChanged = (UFunction*) UObject::GObjObjects()->Data[ 50123 ];
//
//	AGRI_X_execEventMatchGUIDChanged_Parms EventMatchGUIDChanged_Parms;
//	EventMatchGUIDChanged_Parms.GRI = GRI;
//
//	this->ProcessEvent ( pFnEventMatchGUIDChanged, &EventMatchGUIDChanged_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.EventGameStarted
//// [0x00120000] 
//// Parameters infos:
//// class AGRI_X*                  GRI                            ( CPF_Parm )
//
//void AGRI_X::EventGameStarted ( class AGRI_X* GRI )
//{
//	static UFunction* pFnEventGameStarted = NULL;
//
//	if ( ! pFnEventGameStarted )
//		pFnEventGameStarted = (UFunction*) UObject::GObjObjects()->Data[ 50100 ];
//
//	AGRI_X_execEventGameStarted_Parms EventGameStarted_Parms;
//	EventGameStarted_Parms.GRI = GRI;
//
//	this->ProcessEvent ( pFnEventGameStarted, &EventGameStarted_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.EventServerNameChanged
//// [0x00120000] 
//// Parameters infos:
//// class AGRI_X*                  GRI                            ( CPF_Parm )
//
//void AGRI_X::EventServerNameChanged ( class AGRI_X* GRI )
//{
//	static UFunction* pFnEventServerNameChanged = NULL;
//
//	if ( ! pFnEventServerNameChanged )
//		pFnEventServerNameChanged = (UFunction*) UObject::GObjObjects()->Data[ 50102 ];
//
//	AGRI_X_execEventServerNameChanged_Parms EventServerNameChanged_Parms;
//	EventServerNameChanged_Parms.GRI = GRI;
//
//	this->ProcessEvent ( pFnEventServerNameChanged, &EventServerNameChanged_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.EventReservationsUpdated
//// [0x00120000] 
//// Parameters infos:
//// class AGRI_X*                  GRI                            ( CPF_Parm )
//
//void AGRI_X::EventReservationsUpdated ( class AGRI_X* GRI )
//{
//	static UFunction* pFnEventReservationsUpdated = NULL;
//
//	if ( ! pFnEventReservationsUpdated )
//		pFnEventReservationsUpdated = (UFunction*) UObject::GObjObjects()->Data[ 50104 ];
//
//	AGRI_X_execEventReservationsUpdated_Parms EventReservationsUpdated_Parms;
//	EventReservationsUpdated_Parms.GRI = GRI;
//
//	this->ProcessEvent ( pFnEventReservationsUpdated, &EventReservationsUpdated_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.EventGameDataSelected
//// [0x00120000] 
//// Parameters infos:
//// int                            PlaylistId                     ( CPF_Parm )
//// int                            MutatorIndex                   ( CPF_Parm )
//
//void AGRI_X::EventGameDataSelected ( int PlaylistId, int MutatorIndex )
//{
//	static UFunction* pFnEventGameDataSelected = NULL;
//
//	if ( ! pFnEventGameDataSelected )
//		pFnEventGameDataSelected = (UFunction*) UObject::GObjObjects()->Data[ 50106 ];
//
//	AGRI_X_execEventGameDataSelected_Parms EventGameDataSelected_Parms;
//	EventGameDataSelected_Parms.PlaylistId = PlaylistId;
//	EventGameDataSelected_Parms.MutatorIndex = MutatorIndex;
//
//	this->ProcessEvent ( pFnEventGameDataSelected, &EventGameDataSelected_Parms, NULL );
//};
//
//// Function ProjectX.GRI_X.EventSpawned
//// [0x00120000] 
//// Parameters infos:
//// class AGRI_X*                  GRI                            ( CPF_Parm )
//
//void AGRI_X::EventSpawned ( class AGRI_X* GRI )
//{
//	static UFunction* pFnEventSpawned = NULL;
//
//	if ( ! pFnEventSpawned )
//		pFnEventSpawned = (UFunction*) UObject::GObjObjects()->Data[ 50108 ];
//
//	AGRI_X_execEventSpawned_Parms EventSpawned_Parms;
//	EventSpawned_Parms.GRI = GRI;
//
//	this->ProcessEvent ( pFnEventSpawned, &EventSpawned_Parms, NULL );
//};
//
//// Function ProjectX.LanMessage_X.Broadcast
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool ULanMessage_X::Broadcast ( )
//{
//	static UFunction* pFnBroadcast = NULL;
//
//	if ( ! pFnBroadcast )
//		pFnBroadcast = (UFunction*) UObject::GObjObjects()->Data[ 50345 ];
//
//	ULanMessage_X_execBroadcast_Parms Broadcast_Parms;
//
//	this->ProcessEvent ( pFnBroadcast, &Broadcast_Parms, NULL );
//
//	return Broadcast_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_X.SetNonce
//// [0x00020002] 
//// Parameters infos:
//// class ULanMessage_X*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class ULanMessage_X* ULanMessage_X::SetNonce ( )
//{
//	static UFunction* pFnSetNonce = NULL;
//
//	if ( ! pFnSetNonce )
//		pFnSetNonce = (UFunction*) UObject::GObjObjects()->Data[ 50342 ];
//
//	ULanMessage_X_execSetNonce_Parms SetNonce_Parms;
//
//	this->ProcessEvent ( pFnSetNonce, &SetNonce_Parms, NULL );
//
//	return SetNonce_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostQuery_X.SetHost
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanMessage_HostQuery_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bValue                         ( CPF_Parm )
//
//class ULanMessage_HostQuery_X* ULanMessage_HostQuery_X::SetHost ( unsigned long bValue )
//{
//	static UFunction* pFnSetHost = NULL;
//
//	if ( ! pFnSetHost )
//		pFnSetHost = (UFunction*) UObject::GObjObjects()->Data[ 50358 ];
//
//	ULanMessage_HostQuery_X_execSetHost_Parms SetHost_Parms;
//	SetHost_Parms.bValue = bValue;
//
//	this->ProcessEvent ( pFnSetHost, &SetHost_Parms, NULL );
//
//	return SetHost_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostQuery_X.SetBuildID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanMessage_HostQuery_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InBuildID                      ( CPF_Parm )
//
//class ULanMessage_HostQuery_X* ULanMessage_HostQuery_X::SetBuildID ( int InBuildID )
//{
//	static UFunction* pFnSetBuildID = NULL;
//
//	if ( ! pFnSetBuildID )
//		pFnSetBuildID = (UFunction*) UObject::GObjObjects()->Data[ 50355 ];
//
//	ULanMessage_HostQuery_X_execSetBuildID_Parms SetBuildID_Parms;
//	SetBuildID_Parms.InBuildID = InBuildID;
//
//	this->ProcessEvent ( pFnSetBuildID, &SetBuildID_Parms, NULL );
//
//	return SetBuildID_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostQuery_X.SetFilter
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanMessage_HostQuery_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FCustomMatchSettings    InFilter                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanMessage_HostQuery_X* ULanMessage_HostQuery_X::SetFilter ( struct FCustomMatchSettings InFilter )
//{
//	static UFunction* pFnSetFilter = NULL;
//
//	if ( ! pFnSetFilter )
//		pFnSetFilter = (UFunction*) UObject::GObjObjects()->Data[ 50352 ];
//
//	ULanMessage_HostQuery_X_execSetFilter_Parms SetFilter_Parms;
//	memcpy ( &SetFilter_Parms.InFilter, &InFilter, 0x60 );
//
//	this->ProcessEvent ( pFnSetFilter, &SetFilter_Parms, NULL );
//
//	return SetFilter_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostResponse_X.GetDebugString
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString ULanMessage_HostResponse_X::GetDebugString ( )
//{
//	static UFunction* pFnGetDebugString = NULL;
//
//	if ( ! pFnGetDebugString )
//		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 50368 ];
//
//	ULanMessage_HostResponse_X_execGetDebugString_Parms GetDebugString_Parms;
//
//	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );
//
//	return GetDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostResponse_X.SetMetaData
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanMessage_HostResponse_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InMetaData                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanMessage_HostResponse_X* ULanMessage_HostResponse_X::SetMetaData ( struct FString InMetaData )
//{
//	static UFunction* pFnSetMetaData = NULL;
//
//	if ( ! pFnSetMetaData )
//		pFnSetMetaData = (UFunction*) UObject::GObjObjects()->Data[ 50370 ];
//
//	ULanMessage_HostResponse_X_execSetMetaData_Parms SetMetaData_Parms;
//	memcpy ( &SetMetaData_Parms.InMetaData, &InMetaData, 0xC );
//
//	this->ProcessEvent ( pFnSetMetaData, &SetMetaData_Parms, NULL );
//
//	return SetMetaData_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostResponse_X.SetServerID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanMessage_HostResponse_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerID                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanMessage_HostResponse_X* ULanMessage_HostResponse_X::SetServerID ( struct FString InServerID )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 50372 ];
//
//	ULanMessage_HostResponse_X_execSetServerID_Parms SetServerID_Parms;
//	memcpy ( &SetServerID_Parms.InServerID, &InServerID, 0xC );
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanMessage_HostResponse_X.SetResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanMessage_HostResponse_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FServerResult           InResult                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanMessage_HostResponse_X* ULanMessage_HostResponse_X::SetResult ( struct FServerResult InResult )
//{
//	static UFunction* pFnSetResult = NULL;
//
//	if ( ! pFnSetResult )
//		pFnSetResult = (UFunction*) UObject::GObjObjects()->Data[ 50365 ];
//
//	ULanMessage_HostResponse_X_execSetResult_Parms SetResult_Parms;
//	memcpy ( &SetResult_Parms.InResult, &InResult, 0x78 );
//
//	this->ProcessEvent ( pFnSetResult, &SetResult_Parms, NULL );
//
//	return SetResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.MaterialEffect_X.GetActiveEffects
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UMaterialEffect_X::GetActiveEffects ( )
//{
//	static UFunction* pFnGetActiveEffects = NULL;
//
//	if ( ! pFnGetActiveEffects )
//		pFnGetActiveEffects = (UFunction*) UObject::GObjObjects()->Data[ 50466 ];
//
//	UMaterialEffect_X_execGetActiveEffects_Parms GetActiveEffects_Parms;
//
//	this->ProcessEvent ( pFnGetActiveEffects, &GetActiveEffects_Parms, NULL );
//
//	return GetActiveEffects_Parms.ReturnValue;
//};
//
//// Function ProjectX.MaterialEffect_X.HasAnyEffectsActive
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UMaterialEffect_X::HasAnyEffectsActive ( )
//{
//	static UFunction* pFnHasAnyEffectsActive = NULL;
//
//	if ( ! pFnHasAnyEffectsActive )
//		pFnHasAnyEffectsActive = (UFunction*) UObject::GObjObjects()->Data[ 50463 ];
//
//	UMaterialEffect_X_execHasAnyEffectsActive_Parms HasAnyEffectsActive_Parms;
//
//	this->ProcessEvent ( pFnHasAnyEffectsActive, &HasAnyEffectsActive_Parms, NULL );
//
//	return HasAnyEffectsActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.MaterialEffect_X.GetMaterialParameterValue
//// [0x00020002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   MaterialParamName              ( CPF_Parm )
//
//float UMaterialEffect_X::GetMaterialParameterValue ( struct FName MaterialParamName )
//{
//	static UFunction* pFnGetMaterialParameterValue = NULL;
//
//	if ( ! pFnGetMaterialParameterValue )
//		pFnGetMaterialParameterValue = (UFunction*) UObject::GObjObjects()->Data[ 50458 ];
//
//	UMaterialEffect_X_execGetMaterialParameterValue_Parms GetMaterialParameterValue_Parms;
//	memcpy ( &GetMaterialParameterValue_Parms.MaterialParamName, &MaterialParamName, 0x8 );
//
//	this->ProcessEvent ( pFnGetMaterialParameterValue, &GetMaterialParameterValue_Parms, NULL );
//
//	return GetMaterialParameterValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.MaterialEffect_X.SetMaterialParameterLinearColorValue
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   MaterialParamName              ( CPF_Parm )
//// struct FLinearColor            NewValue                       ( CPF_Parm )
//
//void UMaterialEffect_X::SetMaterialParameterLinearColorValue ( struct FName MaterialParamName, struct FLinearColor NewValue )
//{
//	static UFunction* pFnSetMaterialParameterLinearColorValue = NULL;
//
//	if ( ! pFnSetMaterialParameterLinearColorValue )
//		pFnSetMaterialParameterLinearColorValue = (UFunction*) UObject::GObjObjects()->Data[ 50462 ];
//
//	UMaterialEffect_X_execSetMaterialParameterLinearColorValue_Parms SetMaterialParameterLinearColorValue_Parms;
//	memcpy ( &SetMaterialParameterLinearColorValue_Parms.MaterialParamName, &MaterialParamName, 0x8 );
//	memcpy ( &SetMaterialParameterLinearColorValue_Parms.NewValue, &NewValue, 0x10 );
//
//	this->ProcessEvent ( pFnSetMaterialParameterLinearColorValue, &SetMaterialParameterLinearColorValue_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.SetMaterialParameterValue
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   MaterialParamName              ( CPF_Parm )
//// float                          NewValue                       ( CPF_Parm )
//
//void UMaterialEffect_X::SetMaterialParameterValue ( struct FName MaterialParamName, float NewValue )
//{
//	static UFunction* pFnSetMaterialParameterValue = NULL;
//
//	if ( ! pFnSetMaterialParameterValue )
//		pFnSetMaterialParameterValue = (UFunction*) UObject::GObjObjects()->Data[ 50455 ];
//
//	UMaterialEffect_X_execSetMaterialParameterValue_Parms SetMaterialParameterValue_Parms;
//	memcpy ( &SetMaterialParameterValue_Parms.MaterialParamName, &MaterialParamName, 0x8 );
//	SetMaterialParameterValue_Parms.NewValue = NewValue;
//
//	this->ProcessEvent ( pFnSetMaterialParameterValue, &SetMaterialParameterValue_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.HandleParametersChanged
//// [0x00080002] 
//// Parameters infos:
//
//void UMaterialEffect_X::HandleParametersChanged ( )
//{
//	static UFunction* pFnHandleParametersChanged = NULL;
//
//	if ( ! pFnHandleParametersChanged )
//		pFnHandleParametersChanged = (UFunction*) UObject::GObjObjects()->Data[ 50454 ];
//
//	UMaterialEffect_X_execHandleParametersChanged_Parms HandleParametersChanged_Parms;
//
//	this->ProcessEvent ( pFnHandleParametersChanged, &HandleParametersChanged_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.UpdateFade
//// [0x00080002] 
//// Parameters infos:
//// float                          Alpha                          ( CPF_Parm )
//
//void UMaterialEffect_X::UpdateFade ( float Alpha )
//{
//	static UFunction* pFnUpdateFade = NULL;
//
//	if ( ! pFnUpdateFade )
//		pFnUpdateFade = (UFunction*) UObject::GObjObjects()->Data[ 50452 ];
//
//	UMaterialEffect_X_execUpdateFade_Parms UpdateFade_Parms;
//	UpdateFade_Parms.Alpha = Alpha;
//
//	this->ProcessEvent ( pFnUpdateFade, &UpdateFade_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.SetStage
//// [0x00080002] 
//// Parameters infos:
//// unsigned char                  NewStage                       ( CPF_Parm )
//
//void UMaterialEffect_X::SetStage ( unsigned char NewStage )
//{
//	static UFunction* pFnSetStage = NULL;
//
//	if ( ! pFnSetStage )
//		pFnSetStage = (UFunction*) UObject::GObjObjects()->Data[ 50450 ];
//
//	UMaterialEffect_X_execSetStage_Parms SetStage_Parms;
//	SetStage_Parms.NewStage = NewStage;
//
//	this->ProcessEvent ( pFnSetStage, &SetStage_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.Tick
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          dt                             ( CPF_Parm )
//
//bool UMaterialEffect_X::Tick ( float dt )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50447 ];
//
//	UMaterialEffect_X_execTick_Parms Tick_Parms;
//	Tick_Parms.dt = dt;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//
//	return Tick_Parms.ReturnValue;
//};
//
//// Function ProjectX.MaterialEffect_X.End
//// [0x00020002] 
//// Parameters infos:
//
//void UMaterialEffect_X::End ( )
//{
//	static UFunction* pFnEnd = NULL;
//
//	if ( ! pFnEnd )
//		pFnEnd = (UFunction*) UObject::GObjObjects()->Data[ 50446 ];
//
//	UMaterialEffect_X_execEnd_Parms End_Parms;
//
//	this->ProcessEvent ( pFnEnd, &End_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.Start
//// [0x00020002] 
//// Parameters infos:
//
//void UMaterialEffect_X::Start ( )
//{
//	static UFunction* pFnStart = NULL;
//
//	if ( ! pFnStart )
//		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 50445 ];
//
//	UMaterialEffect_X_execStart_Parms Start_Parms;
//
//	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.Init
//// [0x00020002] 
//// Parameters infos:
//
//void UMaterialEffect_X::Init ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50444 ];
//
//	UMaterialEffect_X_execInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.MaterialEffect_X.IsInitialized
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UMaterialEffect_X::IsInitialized ( )
//{
//	static UFunction* pFnIsInitialized = NULL;
//
//	if ( ! pFnIsInitialized )
//		pFnIsInitialized = (UFunction*) UObject::GObjObjects()->Data[ 50442 ];
//
//	UMaterialEffect_X_execIsInitialized_Parms IsInitialized_Parms;
//
//	this->ProcessEvent ( pFnIsInitialized, &IsInitialized_Parms, NULL );
//
//	return IsInitialized_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.HandlePlayerTitlesSynced
//// [0x00080002] 
//// Parameters infos:
//// class UOnlineGamePlayerTitles_X* TitlesObj                      ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::HandlePlayerTitlesSynced ( class UOnlineGamePlayerTitles_X* TitlesObj, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnHandlePlayerTitlesSynced = NULL;
//
//	if ( ! pFnHandlePlayerTitlesSynced )
//		pFnHandlePlayerTitlesSynced = (UFunction*) UObject::GObjObjects()->Data[ 53131 ];
//
//	UOnlineGamePlayerTitles_X_execHandlePlayerTitlesSynced_Parms HandlePlayerTitlesSynced_Parms;
//	HandlePlayerTitlesSynced_Parms.TitlesObj = TitlesObj;
//	memcpy ( &HandlePlayerTitlesSynced_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnHandlePlayerTitlesSynced, &HandlePlayerTitlesSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.SyncPlayerTitlesAndData
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::SyncPlayerTitlesAndData ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnSyncPlayerTitlesAndData = NULL;
//
//	if ( ! pFnSyncPlayerTitlesAndData )
//		pFnSyncPlayerTitlesAndData = (UFunction*) UObject::GObjObjects()->Data[ 53129 ];
//
//	UOnlineGamePlayerTitles_X_execSyncPlayerTitlesAndData_Parms SyncPlayerTitlesAndData_Parms;
//	memcpy ( &SyncPlayerTitlesAndData_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnSyncPlayerTitlesAndData, &SyncPlayerTitlesAndData_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.GetTitleData
//// [0x00820002] 
//// Parameters infos:
//// struct FPlayerTitleData        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FName                   TitleId                        ( CPF_Parm )
//
//struct FPlayerTitleData UOnlineGamePlayerTitles_X::GetTitleData ( struct FName TitleId )
//{
//	static UFunction* pFnGetTitleData = NULL;
//
//	if ( ! pFnGetTitleData )
//		pFnGetTitleData = (UFunction*) UObject::GObjObjects()->Data[ 53124 ];
//
//	UOnlineGamePlayerTitles_X_execGetTitleData_Parms GetTitleData_Parms;
//	memcpy ( &GetTitleData_Parms.TitleId, &TitleId, 0x8 );
//
//	this->ProcessEvent ( pFnGetTitleData, &GetTitleData_Parms, NULL );
//
//	return GetTitleData_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.GetContent
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UOnlineGamePlayerTitles_X::GetContent ( struct FString Text, struct FString Key )
//{
//	static UFunction* pFnGetContent = NULL;
//
//	if ( ! pFnGetContent )
//		pFnGetContent = (UFunction*) UObject::GObjObjects()->Data[ 53118 ];
//
//	UOnlineGamePlayerTitles_X_execGetContent_Parms GetContent_Parms;
//	memcpy ( &GetContent_Parms.Text, &Text, 0xC );
//	memcpy ( &GetContent_Parms.Key, &Key, 0xC );
//
//	this->ProcessEvent ( pFnGetContent, &GetContent_Parms, NULL );
//
//	return GetContent_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.HandleTitleText
//// [0x00080002] 
//// Parameters infos:
//// class UWebRequest_X*           WebRequest                     ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::HandleTitleText ( class UWebRequest_X* WebRequest )
//{
//	static UFunction* pFnHandleTitleText = NULL;
//
//	if ( ! pFnHandleTitleText )
//		pFnHandleTitleText = (UFunction*) UObject::GObjObjects()->Data[ 53107 ];
//
//	UOnlineGamePlayerTitles_X_execHandleTitleText_Parms HandleTitleText_Parms;
//	HandleTitleText_Parms.WebRequest = WebRequest;
//
//	this->ProcessEvent ( pFnHandleTitleText, &HandleTitleText_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.SyncTitleData
//// [0x00024002] 
//// Parameters infos:
//// struct FName                   TitleId                        ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePlayerTitles_X::SyncTitleData ( struct FName TitleId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSyncTitleData = NULL;
//
//	if ( ! pFnSyncTitleData )
//		pFnSyncTitleData = (UFunction*) UObject::GObjObjects()->Data[ 53102 ];
//
//	UOnlineGamePlayerTitles_X_execSyncTitleData_Parms SyncTitleData_Parms;
//	memcpy ( &SyncTitleData_Parms.TitleId, &TitleId, 0x8 );
//	memcpy ( &SyncTitleData_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSyncTitleData, &SyncTitleData_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.GetPlayerTitles
//// [0x00020002] 
//// Parameters infos:
//// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//TArray< struct FName > UOnlineGamePlayerTitles_X::GetPlayerTitles ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetPlayerTitles = NULL;
//
//	if ( ! pFnGetPlayerTitles )
//		pFnGetPlayerTitles = (UFunction*) UObject::GObjObjects()->Data[ 53094 ];
//
//	UOnlineGamePlayerTitles_X_execGetPlayerTitles_Parms GetPlayerTitles_Parms;
//	memcpy ( &GetPlayerTitles_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPlayerTitles, &GetPlayerTitles_Parms, NULL );
//
//	return GetPlayerTitles_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.HandlePlayerTitlesRPC
//// [0x20080002] 
//// Parameters infos:
//// class URPC_GetPlayerTitles_X*  RPC                            ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::HandlePlayerTitlesRPC ( class URPC_GetPlayerTitles_X* RPC )
//{
//	static UFunction* pFnHandlePlayerTitlesRPC = NULL;
//
//	if ( ! pFnHandlePlayerTitlesRPC )
//		pFnHandlePlayerTitlesRPC = (UFunction*) UObject::GObjObjects()->Data[ 53101 ];
//
//	UOnlineGamePlayerTitles_X_execHandlePlayerTitlesRPC_Parms HandlePlayerTitlesRPC_Parms;
//	HandlePlayerTitlesRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandlePlayerTitlesRPC, &HandlePlayerTitlesRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.SyncPlayerTitles
//// [0x00024002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePlayerTitles_X::SyncPlayerTitles ( struct FUniqueNetId PlayerID, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSyncPlayerTitles = NULL;
//
//	if ( ! pFnSyncPlayerTitles )
//		pFnSyncPlayerTitles = (UFunction*) UObject::GObjObjects()->Data[ 53087 ];
//
//	UOnlineGamePlayerTitles_X_execSyncPlayerTitles_Parms SyncPlayerTitles_Parms;
//	memcpy ( &SyncPlayerTitles_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &SyncPlayerTitles_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSyncPlayerTitles, &SyncPlayerTitles_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.HandlePlayerPsyNetLogin
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::HandlePlayerPsyNetLogin ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnHandlePlayerPsyNetLogin = NULL;
//
//	if ( ! pFnHandlePlayerPsyNetLogin )
//		pFnHandlePlayerPsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 53085 ];
//
//	UOnlineGamePlayerTitles_X_execHandlePlayerPsyNetLogin_Parms HandlePlayerPsyNetLogin_Parms;
//	HandlePlayerPsyNetLogin_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandlePlayerPsyNetLogin, &HandlePlayerPsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.OnInit
//// [0x00880002] 
//// Parameters infos:
//
//void UOnlineGamePlayerTitles_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 53082 ];
//
//	UOnlineGamePlayerTitles_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.EventReceivedPlayerTitles
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePlayerTitles_X* Titles                         ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::EventReceivedPlayerTitles ( class UOnlineGamePlayerTitles_X* Titles )
//{
//	static UFunction* pFnEventReceivedPlayerTitles = NULL;
//
//	if ( ! pFnEventReceivedPlayerTitles )
//		pFnEventReceivedPlayerTitles = (UFunction*) UObject::GObjObjects()->Data[ 53084 ];
//
//	UOnlineGamePlayerTitles_X_execEventReceivedPlayerTitles_Parms EventReceivedPlayerTitles_Parms;
//	EventReceivedPlayerTitles_Parms.Titles = Titles;
//
//	this->ProcessEvent ( pFnEventReceivedPlayerTitles, &EventReceivedPlayerTitles_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.EventTitleDataUpdated
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePlayerTitles_X* Titles                         ( CPF_Parm )
//// struct FName                   TitleId                        ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::EventTitleDataUpdated ( class UOnlineGamePlayerTitles_X* Titles, struct FName TitleId )
//{
//	static UFunction* pFnEventTitleDataUpdated = NULL;
//
//	if ( ! pFnEventTitleDataUpdated )
//		pFnEventTitleDataUpdated = (UFunction*) UObject::GObjObjects()->Data[ 53061 ];
//
//	UOnlineGamePlayerTitles_X_execEventTitleDataUpdated_Parms EventTitleDataUpdated_Parms;
//	EventTitleDataUpdated_Parms.Titles = Titles;
//	memcpy ( &EventTitleDataUpdated_Parms.TitleId, &TitleId, 0x8 );
//
//	this->ProcessEvent ( pFnEventTitleDataUpdated, &EventTitleDataUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePlayerTitles_X.EventPlayerTitledUpdated
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePlayerTitles_X* Titles                         ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlineGamePlayerTitles_X::EventPlayerTitledUpdated ( class UOnlineGamePlayerTitles_X* Titles, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnEventPlayerTitledUpdated = NULL;
//
//	if ( ! pFnEventPlayerTitledUpdated )
//		pFnEventPlayerTitledUpdated = (UFunction*) UObject::GObjObjects()->Data[ 53069 ];
//
//	UOnlineGamePlayerTitles_X_execEventPlayerTitledUpdated_Parms EventPlayerTitledUpdated_Parms;
//	EventPlayerTitledUpdated_Parms.Titles = Titles;
//	memcpy ( &EventPlayerTitledUpdated_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnEventPlayerTitledUpdated, &EventPlayerTitledUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfigDispatcher_X.GetDebugString
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// class UOnlineConfig_X*         Config                         ( CPF_Parm )
//
//struct FString UOnlineConfigDispatcher_X::GetDebugString ( class UOnlineConfig_X* Config )
//{
//	static UFunction* pFnGetDebugString = NULL;
//
//	if ( ! pFnGetDebugString )
//		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 56457 ];
//
//	UOnlineConfigDispatcher_X_execGetDebugString_Parms GetDebugString_Parms;
//	GetDebugString_Parms.Config = Config;
//
//	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );
//
//	return GetDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineConfigDispatcher_X.UndoConfigObject
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineConfig_X*         Config                         ( CPF_Parm )
//
//void UOnlineConfigDispatcher_X::UndoConfigObject ( class UOnlineConfig_X* Config )
//{
//	static UFunction* pFnUndoConfigObject = NULL;
//
//	if ( ! pFnUndoConfigObject )
//		pFnUndoConfigObject = (UFunction*) UObject::GObjObjects()->Data[ 56458 ];
//
//	UOnlineConfigDispatcher_X_execUndoConfigObject_Parms UndoConfigObject_Parms;
//	UndoConfigObject_Parms.Config = Config;
//
//	this->ProcessEvent ( pFnUndoConfigObject, &UndoConfigObject_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfigDispatcher_X.ApplyConfigObject
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineConfig_X*         Config                         ( CPF_Parm )
//
//void UOnlineConfigDispatcher_X::ApplyConfigObject ( class UOnlineConfig_X* Config )
//{
//	static UFunction* pFnApplyConfigObject = NULL;
//
//	if ( ! pFnApplyConfigObject )
//		pFnApplyConfigObject = (UFunction*) UObject::GObjObjects()->Data[ 56455 ];
//
//	UOnlineConfigDispatcher_X_execApplyConfigObject_Parms ApplyConfigObject_Parms;
//	ApplyConfigObject_Parms.Config = Config;
//
//	this->ProcessEvent ( pFnApplyConfigObject, &ApplyConfigObject_Parms, NULL );
//};
//
//// Function ProjectX.OnlineConfigDispatcher_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UOnlineConfigDispatcher_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 56454 ];
//
//	UOnlineConfigDispatcher_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.WebCache_X.GetRequestDebugString
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FCachedDataRequest      Request                        ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UWebCache_X::GetRequestDebugString ( struct FCachedDataRequest Request )
//{
//	static UFunction* pFnGetRequestDebugString = NULL;
//
//	if ( ! pFnGetRequestDebugString )
//		pFnGetRequestDebugString = (UFunction*) UObject::GObjObjects()->Data[ 56145 ];
//
//	UWebCache_X_execGetRequestDebugString_Parms GetRequestDebugString_Parms;
//	memcpy ( &GetRequestDebugString_Parms.Request, &Request, 0x2C );
//
//	this->ProcessEvent ( pFnGetRequestDebugString, &GetRequestDebugString_Parms, NULL );
//
//	return GetRequestDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebCache_X.HandleWebRequest
//// [0x00080002] 
//// Parameters infos:
//// class UWebRequest_X*           WebRequest                     ( CPF_Parm )
//
//void UWebCache_X::HandleWebRequest ( class UWebRequest_X* WebRequest )
//{
//	static UFunction* pFnHandleWebRequest = NULL;
//
//	if ( ! pFnHandleWebRequest )
//		pFnHandleWebRequest = (UFunction*) UObject::GObjObjects()->Data[ 56155 ];
//
//	UWebCache_X_execHandleWebRequest_Parms HandleWebRequest_Parms;
//	HandleWebRequest_Parms.WebRequest = WebRequest;
//
//	this->ProcessEvent ( pFnHandleWebRequest, &HandleWebRequest_Parms, NULL );
//};
//
//// Function ProjectX.WebCache_X.DownloadData
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 ETag                           ( CPF_Parm | CPF_NeedCtorLink )
//
//void UWebCache_X::DownloadData ( struct FString URL, struct FString ETag )
//{
//	static UFunction* pFnDownloadData = NULL;
//
//	if ( ! pFnDownloadData )
//		pFnDownloadData = (UFunction*) UObject::GObjObjects()->Data[ 56151 ];
//
//	UWebCache_X_execDownloadData_Parms DownloadData_Parms;
//	memcpy ( &DownloadData_Parms.URL, &URL, 0xC );
//	memcpy ( &DownloadData_Parms.ETag, &ETag, 0xC );
//
//	this->ProcessEvent ( pFnDownloadData, &DownloadData_Parms, NULL );
//};
//
//// Function ProjectX.WebCache_X.HandleLoadFromCache
//// [0x20080002] 
//// Parameters infos:
//// class ULocalCache_X*           Cache                          ( CPF_Parm )
//// class UCachedWebData_X*        CacheObject                    ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UWebCache_X::HandleLoadFromCache ( class ULocalCache_X* Cache, class UCachedWebData_X* CacheObject, class UError* Error )
//{
//	static UFunction* pFnHandleLoadFromCache = NULL;
//
//	if ( ! pFnHandleLoadFromCache )
//		pFnHandleLoadFromCache = (UFunction*) UObject::GObjObjects()->Data[ 56146 ];
//
//	UWebCache_X_execHandleLoadFromCache_Parms HandleLoadFromCache_Parms;
//	HandleLoadFromCache_Parms.Cache = Cache;
//	HandleLoadFromCache_Parms.CacheObject = CacheObject;
//	HandleLoadFromCache_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleLoadFromCache, &HandleLoadFromCache_Parms, NULL );
//};
//
//// Function ProjectX.WebCache_X.GetData
//// [0x00820002] 
//// Parameters infos:
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UWebCache_X::GetData ( struct FString URL, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnGetData = NULL;
//
//	if ( ! pFnGetData )
//		pFnGetData = (UFunction*) UObject::GObjObjects()->Data[ 56141 ];
//
//	UWebCache_X_execGetData_Parms GetData_Parms;
//	memcpy ( &GetData_Parms.URL, &URL, 0xC );
//	memcpy ( &GetData_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnGetData, &GetData_Parms, NULL );
//};
//
//// Function ProjectX.WebCache_X.GetCachedPath
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UWebCache_X::GetCachedPath ( struct FString URL )
//{
//	static UFunction* pFnGetCachedPath = NULL;
//
//	if ( ! pFnGetCachedPath )
//		pFnGetCachedPath = (UFunction*) UObject::GObjObjects()->Data[ 56136 ];
//
//	UWebCache_X_execGetCachedPath_Parms GetCachedPath_Parms;
//	memcpy ( &GetCachedPath_Parms.URL, &URL, 0xC );
//
//	this->ProcessEvent ( pFnGetCachedPath, &GetCachedPath_Parms, NULL );
//
//	return GetCachedPath_Parms.ReturnValue;
//};
//
//// Function ProjectX.WebCache_X.CachedTextCallback
//// [0x00120000] 
//// Parameters infos:
//// class UCachedWebData_X*        CachedData                     ( CPF_Parm )
//
//void UWebCache_X::CachedTextCallback ( class UCachedWebData_X* CachedData )
//{
//	static UFunction* pFnCachedTextCallback = NULL;
//
//	if ( ! pFnCachedTextCallback )
//		pFnCachedTextCallback = (UFunction*) UObject::GObjObjects()->Data[ 56129 ];
//
//	UWebCache_X_execCachedTextCallback_Parms CachedTextCallback_Parms;
//	CachedTextCallback_Parms.CachedData = CachedData;
//
//	this->ProcessEvent ( pFnCachedTextCallback, &CachedTextCallback_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.SanitizePhraseAndNotify
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Comment                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameWordFilter_X::SanitizePhraseAndNotify ( struct FString Comment, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSanitizePhraseAndNotify = NULL;
//
//	if ( ! pFnSanitizePhraseAndNotify )
//		pFnSanitizePhraseAndNotify = (UFunction*) UObject::GObjObjects()->Data[ 54188 ];
//
//	UOnlineGameWordFilter_X_execSanitizePhraseAndNotify_Parms SanitizePhraseAndNotify_Parms;
//	memcpy ( &SanitizePhraseAndNotify_Parms.Comment, &Comment, 0xC );
//	memcpy ( &SanitizePhraseAndNotify_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSanitizePhraseAndNotify, &SanitizePhraseAndNotify_Parms, NULL );
//
//	return SanitizePhraseAndNotify_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.SanitizePhrase
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Comment                        ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameWordFilter_X::SanitizePhrase ( struct FString Comment )
//{
//	static UFunction* pFnSanitizePhrase = NULL;
//
//	if ( ! pFnSanitizePhrase )
//		pFnSanitizePhrase = (UFunction*) UObject::GObjObjects()->Data[ 54191 ];
//
//	UOnlineGameWordFilter_X_execSanitizePhrase_Parms SanitizePhrase_Parms;
//	memcpy ( &SanitizePhrase_Parms.Comment, &Comment, 0xC );
//
//	this->ProcessEvent ( pFnSanitizePhrase, &SanitizePhrase_Parms, NULL );
//
//	return SanitizePhrase_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.CreateError
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Usage                          ( CPF_Parm )
//// struct FWordFilterResult       Result                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UError* UOnlineGameWordFilter_X::CreateError ( unsigned char Usage, struct FWordFilterResult* Result )
//{
//	static UFunction* pFnCreateError = NULL;
//
//	if ( ! pFnCreateError )
//		pFnCreateError = (UFunction*) UObject::GObjObjects()->Data[ 54199 ];
//
//	UOnlineGameWordFilter_X_execCreateError_Parms CreateError_Parms;
//	CreateError_Parms.Usage = Usage;
//
//	this->ProcessEvent ( pFnCreateError, &CreateError_Parms, NULL );
//
//	if ( Result )
//		memcpy ( Result, &CreateError_Parms.Result, 0x28 );
//
//	return CreateError_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.HandleCommentSanitized
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// struct FWordFilterResult       Result                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameWordFilter_X::HandleCommentSanitized ( struct FWordFilterResult* Result )
//{
//	static UFunction* pFnHandleCommentSanitized = NULL;
//
//	if ( ! pFnHandleCommentSanitized )
//		pFnHandleCommentSanitized = (UFunction*) UObject::GObjObjects()->Data[ 54194 ];
//
//	UOnlineGameWordFilter_X_execHandleCommentSanitized_Parms HandleCommentSanitized_Parms;
//
//	this->ProcessEvent ( pFnHandleCommentSanitized, &HandleCommentSanitized_Parms, NULL );
//
//	if ( Result )
//		memcpy ( Result, &HandleCommentSanitized_Parms.Result, 0x28 );
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.UpdateUsage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  OldUsage                       ( CPF_Parm )
//// unsigned char                  NewUsage                       ( CPF_Parm )
//
//unsigned char UOnlineGameWordFilter_X::UpdateUsage ( unsigned char OldUsage, unsigned char NewUsage )
//{
//	static UFunction* pFnUpdateUsage = NULL;
//
//	if ( ! pFnUpdateUsage )
//		pFnUpdateUsage = (UFunction*) UObject::GObjObjects()->Data[ 54192 ];
//
//	UOnlineGameWordFilter_X_execUpdateUsage_Parms UpdateUsage_Parms;
//	UpdateUsage_Parms.OldUsage = OldUsage;
//	UpdateUsage_Parms.NewUsage = NewUsage;
//
//	this->ProcessEvent ( pFnUpdateUsage, &UpdateUsage_Parms, NULL );
//
//	return UpdateUsage_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.InternalSanitize
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Comment                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         ErrorCallback                  ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned char                  Usage                          ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//struct FString UOnlineGameWordFilter_X::InternalSanitize ( struct FString Comment, struct FScriptDelegate Callback, struct FScriptDelegate ErrorCallback, unsigned char Usage, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnInternalSanitize = NULL;
//
//	if ( ! pFnInternalSanitize )
//		pFnInternalSanitize = (UFunction*) UObject::GObjObjects()->Data[ 54178 ];
//
//	UOnlineGameWordFilter_X_execInternalSanitize_Parms InternalSanitize_Parms;
//	memcpy ( &InternalSanitize_Parms.Comment, &Comment, 0xC );
//	memcpy ( &InternalSanitize_Parms.Callback, &Callback, 0x10 );
//	memcpy ( &InternalSanitize_Parms.ErrorCallback, &ErrorCallback, 0x10 );
//	InternalSanitize_Parms.Usage = Usage;
//	memcpy ( &InternalSanitize_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnInternalSanitize, &InternalSanitize_Parms, NULL );
//
//	return InternalSanitize_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.IsPending
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Comment                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameWordFilter_X::IsPending ( struct FString Comment )
//{
//	static UFunction* pFnIsPending = NULL;
//
//	if ( ! pFnIsPending )
//		pFnIsPending = (UFunction*) UObject::GObjObjects()->Data[ 54185 ];
//
//	UOnlineGameWordFilter_X_execIsPending_Parms IsPending_Parms;
//	memcpy ( &IsPending_Parms.Comment, &Comment, 0xC );
//
//	this->ProcessEvent ( pFnIsPending, &IsPending_Parms, NULL );
//
//	return IsPending_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.SanitizeChat
//// [0x00024002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Comment                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         ErrorCallback                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_OptionalParm | CPF_Parm )
//
//struct FString UOnlineGameWordFilter_X::SanitizeChat ( struct FString Comment, struct FScriptDelegate Callback, struct FScriptDelegate ErrorCallback, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnSanitizeChat = NULL;
//
//	if ( ! pFnSanitizeChat )
//		pFnSanitizeChat = (UFunction*) UObject::GObjObjects()->Data[ 54215 ];
//
//	UOnlineGameWordFilter_X_execSanitizeChat_Parms SanitizeChat_Parms;
//	memcpy ( &SanitizeChat_Parms.Comment, &Comment, 0xC );
//	memcpy ( &SanitizeChat_Parms.Callback, &Callback, 0x10 );
//	memcpy ( &SanitizeChat_Parms.ErrorCallback, &ErrorCallback, 0x10 );
//	memcpy ( &SanitizeChat_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnSanitizeChat, &SanitizeChat_Parms, NULL );
//
//	return SanitizeChat_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.Sanitize
//// [0x00024002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FString                 Comment                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         ErrorCallback                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_OptionalParm | CPF_Parm )
//
//struct FString UOnlineGameWordFilter_X::Sanitize ( struct FString Comment, struct FScriptDelegate Callback, struct FScriptDelegate ErrorCallback, struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnSanitize = NULL;
//
//	if ( ! pFnSanitize )
//		pFnSanitize = (UFunction*) UObject::GObjObjects()->Data[ 54174 ];
//
//	UOnlineGameWordFilter_X_execSanitize_Parms Sanitize_Parms;
//	memcpy ( &Sanitize_Parms.Comment, &Comment, 0xC );
//	memcpy ( &Sanitize_Parms.Callback, &Callback, 0x10 );
//	memcpy ( &Sanitize_Parms.ErrorCallback, &ErrorCallback, 0x10 );
//	memcpy ( &Sanitize_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnSanitize, &Sanitize_Parms, NULL );
//
//	return Sanitize_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.OnMainMenuOpened
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameWordFilter_X::OnMainMenuOpened ( )
//{
//	static UFunction* pFnOnMainMenuOpened = NULL;
//
//	if ( ! pFnOnMainMenuOpened )
//		pFnOnMainMenuOpened = (UFunction*) UObject::GObjObjects()->Data[ 54173 ];
//
//	UOnlineGameWordFilter_X_execOnMainMenuOpened_Parms OnMainMenuOpened_Parms;
//
//	this->ProcessEvent ( pFnOnMainMenuOpened, &OnMainMenuOpened_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.EventCommentError
//// [0x00140001] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 OriginalPhrase                 ( CPF_Parm | CPF_NeedCtorLink )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameWordFilter_X::EventCommentError ( struct FString OriginalPhrase, class UError* Error )
//{
//	static UFunction* pFnEventCommentError = NULL;
//
//	if ( ! pFnEventCommentError )
//		pFnEventCommentError = (UFunction*) UObject::GObjObjects()->Data[ 54167 ];
//
//	UOnlineGameWordFilter_X_execEventCommentError_Parms EventCommentError_Parms;
//	memcpy ( &EventCommentError_Parms.OriginalPhrase, &OriginalPhrase, 0xC );
//	EventCommentError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventCommentError, &EventCommentError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilter_X.EventCommentSanitized
//// [0x00140001] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Original                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Sanitized                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameWordFilter_X::EventCommentSanitized ( struct FString Original, struct FString Sanitized )
//{
//	static UFunction* pFnEventCommentSanitized = NULL;
//
//	if ( ! pFnEventCommentSanitized )
//		pFnEventCommentSanitized = (UFunction*) UObject::GObjObjects()->Data[ 54166 ];
//
//	UOnlineGameWordFilter_X_execEventCommentSanitized_Parms EventCommentSanitized_Parms;
//	memcpy ( &EventCommentSanitized_Parms.Original, &Original, 0xC );
//	memcpy ( &EventCommentSanitized_Parms.Sanitized, &Sanitized, 0xC );
//
//	this->ProcessEvent ( pFnEventCommentSanitized, &EventCommentSanitized_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilterProcessor_X.TriggerCallbacks
//// [0x00080002] 
//// Parameters infos:
//// int                            Index                          ( CPF_Parm )
//
//void UOnlineGameWordFilterProcessor_X::TriggerCallbacks ( int Index )
//{
//	static UFunction* pFnTriggerCallbacks = NULL;
//
//	if ( ! pFnTriggerCallbacks )
//		pFnTriggerCallbacks = (UFunction*) UObject::GObjObjects()->Data[ 54250 ];
//
//	UOnlineGameWordFilterProcessor_X_execTriggerCallbacks_Parms TriggerCallbacks_Parms;
//	TriggerCallbacks_Parms.Index = Index;
//
//	this->ProcessEvent ( pFnTriggerCallbacks, &TriggerCallbacks_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilterProcessor_X.ProcessSanitizedDelayed
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameWordFilterProcessor_X::ProcessSanitizedDelayed ( )
//{
//	static UFunction* pFnProcessSanitizedDelayed = NULL;
//
//	if ( ! pFnProcessSanitizedDelayed )
//		pFnProcessSanitizedDelayed = (UFunction*) UObject::GObjObjects()->Data[ 54248 ];
//
//	UOnlineGameWordFilterProcessor_X_execProcessSanitizedDelayed_Parms ProcessSanitizedDelayed_Parms;
//
//	this->ProcessEvent ( pFnProcessSanitizedDelayed, &ProcessSanitizedDelayed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilterProcessor_X.HandleWordSanitized
//// [0x00080002] 
//// Parameters infos:
//// class UWebRequest_X*           Request                        ( CPF_Parm )
//
//void UOnlineGameWordFilterProcessor_X::HandleWordSanitized ( class UWebRequest_X* Request )
//{
//	static UFunction* pFnHandleWordSanitized = NULL;
//
//	if ( ! pFnHandleWordSanitized )
//		pFnHandleWordSanitized = (UFunction*) UObject::GObjObjects()->Data[ 54244 ];
//
//	UOnlineGameWordFilterProcessor_X_execHandleWordSanitized_Parms HandleWordSanitized_Parms;
//	HandleWordSanitized_Parms.Request = Request;
//
//	this->ProcessEvent ( pFnHandleWordSanitized, &HandleWordSanitized_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameWordFilterProcessor_X.SanitizeString
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Comment                        ( CPF_Const | CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         SanitizeDelegate               ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameWordFilterProcessor_X::SanitizeString ( struct FString Comment, struct FScriptDelegate SanitizeDelegate )
//{
//	static UFunction* pFnSanitizeString = NULL;
//
//	if ( ! pFnSanitizeString )
//		pFnSanitizeString = (UFunction*) UObject::GObjObjects()->Data[ 54239 ];
//
//	UOnlineGameWordFilterProcessor_X_execSanitizeString_Parms SanitizeString_Parms;
//	memcpy ( &SanitizeString_Parms.Comment, &Comment, 0xC );
//	memcpy ( &SanitizeString_Parms.SanitizeDelegate, &SanitizeDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnSanitizeString, &SanitizeString_Parms, NULL );
//
//	return SanitizeString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameWordFilterProcessor_X.OnSanitizeStringComplete
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 Original                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Sanitized                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameWordFilterProcessor_X::OnSanitizeStringComplete ( struct FString Original, struct FString Sanitized )
//{
//	static UFunction* pFnOnSanitizeStringComplete = NULL;
//
//	if ( ! pFnOnSanitizeStringComplete )
//		pFnOnSanitizeStringComplete = (UFunction*) UObject::GObjObjects()->Data[ 54231 ];
//
//	UOnlineGameWordFilterProcessor_X_execOnSanitizeStringComplete_Parms OnSanitizeStringComplete_Parms;
//	memcpy ( &OnSanitizeStringComplete_Parms.Original, &Original, 0xC );
//	memcpy ( &OnSanitizeStringComplete_Parms.Sanitized, &Sanitized, 0xC );
//
//	this->ProcessEvent ( pFnOnSanitizeStringComplete, &OnSanitizeStringComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.IsCheckingPrivileges
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGamePrivileges_X::IsCheckingPrivileges ( )
//{
//	static UFunction* pFnIsCheckingPrivileges = NULL;
//
//	if ( ! pFnIsCheckingPrivileges )
//		pFnIsCheckingPrivileges = (UFunction*) UObject::GObjObjects()->Data[ 53312 ];
//
//	UOnlineGamePrivileges_X_execIsCheckingPrivileges_Parms IsCheckingPrivileges_Parms;
//
//	this->ProcessEvent ( pFnIsCheckingPrivileges, &IsCheckingPrivileges_Parms, NULL );
//
//	return IsCheckingPrivileges_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.RemoveCallback
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivileges_X::RemoveCallback ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnRemoveCallback = NULL;
//
//	if ( ! pFnRemoveCallback )
//		pFnRemoveCallback = (UFunction*) UObject::GObjObjects()->Data[ 53307 ];
//
//	UOnlineGamePrivileges_X_execRemoveCallback_Parms RemoveCallback_Parms;
//	memcpy ( &RemoveCallback_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnRemoveCallback, &RemoveCallback_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.HandlePrivilegeCheckFinished
//// [0x00080002] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       PrivilegeCheck                 ( CPF_Parm )
//
//void UOnlineGamePrivileges_X::HandlePrivilegeCheckFinished ( class UPrivilegeCheck_X* PrivilegeCheck )
//{
//	static UFunction* pFnHandlePrivilegeCheckFinished = NULL;
//
//	if ( ! pFnHandlePrivilegeCheckFinished )
//		pFnHandlePrivilegeCheckFinished = (UFunction*) UObject::GObjObjects()->Data[ 53310 ];
//
//	UOnlineGamePrivileges_X_execHandlePrivilegeCheckFinished_Parms HandlePrivilegeCheckFinished_Parms;
//	HandlePrivilegeCheckFinished_Parms.PrivilegeCheck = PrivilegeCheck;
//
//	this->ProcessEvent ( pFnHandlePrivilegeCheckFinished, &HandlePrivilegeCheckFinished_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.CreatePrivilegeCheck
//// [0x00080002] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            ControllerId                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UPrivilegeCheck_X* UOnlineGamePrivileges_X::CreatePrivilegeCheck ( int ControllerId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnCreatePrivilegeCheck = NULL;
//
//	if ( ! pFnCreatePrivilegeCheck )
//		pFnCreatePrivilegeCheck = (UFunction*) UObject::GObjObjects()->Data[ 53314 ];
//
//	UOnlineGamePrivileges_X_execCreatePrivilegeCheck_Parms CreatePrivilegeCheck_Parms;
//	CreatePrivilegeCheck_Parms.ControllerId = ControllerId;
//	memcpy ( &CreatePrivilegeCheck_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnCreatePrivilegeCheck, &CreatePrivilegeCheck_Parms, NULL );
//
//	return CreatePrivilegeCheck_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.TryToUseUGC
//// [0x00020002] 
//// Parameters infos:
//// int                            ControllerId                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivileges_X::TryToUseUGC ( int ControllerId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnTryToUseUGC = NULL;
//
//	if ( ! pFnTryToUseUGC )
//		pFnTryToUseUGC = (UFunction*) UObject::GObjObjects()->Data[ 53316 ];
//
//	UOnlineGamePrivileges_X_execTryToUseUGC_Parms TryToUseUGC_Parms;
//	TryToUseUGC_Parms.ControllerId = ControllerId;
//	memcpy ( &TryToUseUGC_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnTryToUseUGC, &TryToUseUGC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.TryToPlayOnline
//// [0x00020002] 
//// Parameters infos:
//// int                            ControllerId                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivileges_X::TryToPlayOnline ( int ControllerId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnTryToPlayOnline = NULL;
//
//	if ( ! pFnTryToPlayOnline )
//		pFnTryToPlayOnline = (UFunction*) UObject::GObjObjects()->Data[ 53301 ];
//
//	UOnlineGamePrivileges_X_execTryToPlayOnline_Parms TryToPlayOnline_Parms;
//	TryToPlayOnline_Parms.ControllerId = ControllerId;
//	memcpy ( &TryToPlayOnline_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnTryToPlayOnline, &TryToPlayOnline_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.TryToUsePsyNet
//// [0x00020002] 
//// Parameters infos:
//// int                            ControllerId                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivileges_X::TryToUsePsyNet ( int ControllerId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnTryToUsePsyNet = NULL;
//
//	if ( ! pFnTryToUsePsyNet )
//		pFnTryToUsePsyNet = (UFunction*) UObject::GObjObjects()->Data[ 53304 ];
//
//	UOnlineGamePrivileges_X_execTryToUsePsyNet_Parms TryToUsePsyNet_Parms;
//	TryToUsePsyNet_Parms.ControllerId = ControllerId;
//	memcpy ( &TryToUsePsyNet_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnTryToUsePsyNet, &TryToUsePsyNet_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.TryToViewLeaderboards
//// [0x00020002] 
//// Parameters infos:
//// int                            ControllerId                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivileges_X::TryToViewLeaderboards ( int ControllerId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnTryToViewLeaderboards = NULL;
//
//	if ( ! pFnTryToViewLeaderboards )
//		pFnTryToViewLeaderboards = (UFunction*) UObject::GObjObjects()->Data[ 53294 ];
//
//	UOnlineGamePrivileges_X_execTryToViewLeaderboards_Parms TryToViewLeaderboards_Parms;
//	TryToViewLeaderboards_Parms.ControllerId = ControllerId;
//	memcpy ( &TryToViewLeaderboards_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnTryToViewLeaderboards, &TryToViewLeaderboards_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.TryToBrowseInternet
//// [0x00020002] 
//// Parameters infos:
//// int                            ControllerId                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivileges_X::TryToBrowseInternet ( int ControllerId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnTryToBrowseInternet = NULL;
//
//	if ( ! pFnTryToBrowseInternet )
//		pFnTryToBrowseInternet = (UFunction*) UObject::GObjObjects()->Data[ 53289 ];
//
//	UOnlineGamePrivileges_X_execTryToBrowseInternet_Parms TryToBrowseInternet_Parms;
//	TryToBrowseInternet_Parms.ControllerId = ControllerId;
//	memcpy ( &TryToBrowseInternet_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnTryToBrowseInternet, &TryToBrowseInternet_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.EventPrivilegeCheckRestriction
//// [0x00120000] 
//// Parameters infos:
//// class UPrivilegeCheck_X*       Check                          ( CPF_Parm )
//
//void UOnlineGamePrivileges_X::EventPrivilegeCheckRestriction ( class UPrivilegeCheck_X* Check )
//{
//	static UFunction* pFnEventPrivilegeCheckRestriction = NULL;
//
//	if ( ! pFnEventPrivilegeCheckRestriction )
//		pFnEventPrivilegeCheckRestriction = (UFunction*) UObject::GObjObjects()->Data[ 53283 ];
//
//	UOnlineGamePrivileges_X_execEventPrivilegeCheckRestriction_Parms EventPrivilegeCheckRestriction_Parms;
//	EventPrivilegeCheckRestriction_Parms.Check = Check;
//
//	this->ProcessEvent ( pFnEventPrivilegeCheckRestriction, &EventPrivilegeCheckRestriction_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivileges_X.EventCheckingPrivilegesChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePrivileges_X* PrivilegesObject               ( CPF_Parm )
//
//void UOnlineGamePrivileges_X::EventCheckingPrivilegesChanged ( class UOnlineGamePrivileges_X* PrivilegesObject )
//{
//	static UFunction* pFnEventCheckingPrivilegesChanged = NULL;
//
//	if ( ! pFnEventCheckingPrivilegesChanged )
//		pFnEventCheckingPrivilegesChanged = (UFunction*) UObject::GObjObjects()->Data[ 53285 ];
//
//	UOnlineGamePrivileges_X_execEventCheckingPrivilegesChanged_Parms EventCheckingPrivilegesChanged_Parms;
//	EventCheckingPrivilegesChanged_Parms.PrivilegesObject = PrivilegesObject;
//
//	this->ProcessEvent ( pFnEventCheckingPrivilegesChanged, &EventCheckingPrivilegesChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.Exists
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 RegionName                     ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameRegions_X::Exists ( struct FString RegionName )
//{
//	static UFunction* pFnExists = NULL;
//
//	if ( ! pFnExists )
//		pFnExists = (UFunction*) UObject::GObjObjects()->Data[ 53269 ];
//
//	UOnlineGameRegions_X_execExists_Parms Exists_Parms;
//	memcpy ( &Exists_Parms.RegionName, &RegionName, 0xC );
//
//	this->ProcessEvent ( pFnExists, &Exists_Parms, NULL );
//
//	return Exists_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameRegions_X.SetCachedRegionPings
//// [0x00420002] 
//// Parameters infos:
//// TArray< struct FCachedRegionPing > InCachedRegionPings            ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameRegions_X::SetCachedRegionPings ( TArray< struct FCachedRegionPing >* InCachedRegionPings )
//{
//	static UFunction* pFnSetCachedRegionPings = NULL;
//
//	if ( ! pFnSetCachedRegionPings )
//		pFnSetCachedRegionPings = (UFunction*) UObject::GObjObjects()->Data[ 53389 ];
//
//	UOnlineGameRegions_X_execSetCachedRegionPings_Parms SetCachedRegionPings_Parms;
//
//	this->ProcessEvent ( pFnSetCachedRegionPings, &SetCachedRegionPings_Parms, NULL );
//
//	if ( InCachedRegionPings )
//		memcpy ( InCachedRegionPings, &SetCachedRegionPings_Parms.InCachedRegionPings, 0xC );
//};
//
//// Function ProjectX.OnlineGameRegions_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameRegions_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 53386 ];
//
//	UOnlineGameRegions_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.NotifyWhenSynced
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameRegions_X::NotifyWhenSynced ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyWhenSynced = NULL;
//
//	if ( ! pFnNotifyWhenSynced )
//		pFnNotifyWhenSynced = (UFunction*) UObject::GObjObjects()->Data[ 53388 ];
//
//	UOnlineGameRegions_X_execNotifyWhenSynced_Parms NotifyWhenSynced_Parms;
//	memcpy ( &NotifyWhenSynced_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyWhenSynced, &NotifyWhenSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.GetRegionsDebugString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameRegions_X::GetRegionsDebugString ( )
//{
//	static UFunction* pFnGetRegionsDebugString = NULL;
//
//	if ( ! pFnGetRegionsDebugString )
//		pFnGetRegionsDebugString = (UFunction*) UObject::GObjObjects()->Data[ 53366 ];
//
//	UOnlineGameRegions_X_execGetRegionsDebugString_Parms GetRegionsDebugString_Parms;
//
//	this->ProcessEvent ( pFnGetRegionsDebugString, &GetRegionsDebugString_Parms, NULL );
//
//	return GetRegionsDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameRegions_X.GetFriendlyRegionsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameRegions_X::GetFriendlyRegionsString ( )
//{
//	static UFunction* pFnGetFriendlyRegionsString = NULL;
//
//	if ( ! pFnGetFriendlyRegionsString )
//		pFnGetFriendlyRegionsString = (UFunction*) UObject::GObjObjects()->Data[ 53379 ];
//
//	UOnlineGameRegions_X_execGetFriendlyRegionsString_Parms GetFriendlyRegionsString_Parms;
//
//	this->ProcessEvent ( pFnGetFriendlyRegionsString, &GetFriendlyRegionsString_Parms, NULL );
//
//	return GetFriendlyRegionsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameRegions_X.GetFriendlySortedRegionsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameRegions_X::GetFriendlySortedRegionsString ( )
//{
//	static UFunction* pFnGetFriendlySortedRegionsString = NULL;
//
//	if ( ! pFnGetFriendlySortedRegionsString )
//		pFnGetFriendlySortedRegionsString = (UFunction*) UObject::GObjObjects()->Data[ 53375 ];
//
//	UOnlineGameRegions_X_execGetFriendlySortedRegionsString_Parms GetFriendlySortedRegionsString_Parms;
//
//	this->ProcessEvent ( pFnGetFriendlySortedRegionsString, &GetFriendlySortedRegionsString_Parms, NULL );
//
//	return GetFriendlySortedRegionsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameRegions_X.GetSortedRegionsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameRegions_X::GetSortedRegionsString ( )
//{
//	static UFunction* pFnGetSortedRegionsString = NULL;
//
//	if ( ! pFnGetSortedRegionsString )
//		pFnGetSortedRegionsString = (UFunction*) UObject::GObjObjects()->Data[ 53371 ];
//
//	UOnlineGameRegions_X_execGetSortedRegionsString_Parms GetSortedRegionsString_Parms;
//
//	this->ProcessEvent ( pFnGetSortedRegionsString, &GetSortedRegionsString_Parms, NULL );
//
//	return GetSortedRegionsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameRegions_X.SortRegionDelegate
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            A                              ( CPF_Parm )
//// int                            B                              ( CPF_Parm )
//
//int UOnlineGameRegions_X::SortRegionDelegate ( int A, int B )
//{
//	static UFunction* pFnSortRegionDelegate = NULL;
//
//	if ( ! pFnSortRegionDelegate )
//		pFnSortRegionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53367 ];
//
//	UOnlineGameRegions_X_execSortRegionDelegate_Parms SortRegionDelegate_Parms;
//	SortRegionDelegate_Parms.A = A;
//	SortRegionDelegate_Parms.B = B;
//
//	this->ProcessEvent ( pFnSortRegionDelegate, &SortRegionDelegate_Parms, NULL );
//
//	return SortRegionDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameRegions_X.OnAllRegionsPinged
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameRegions_X::OnAllRegionsPinged ( )
//{
//	static UFunction* pFnOnAllRegionsPinged = NULL;
//
//	if ( ! pFnOnAllRegionsPinged )
//		pFnOnAllRegionsPinged = (UFunction*) UObject::GObjObjects()->Data[ 53363 ];
//
//	UOnlineGameRegions_X_execOnAllRegionsPinged_Parms OnAllRegionsPinged_Parms;
//
//	this->ProcessEvent ( pFnOnAllRegionsPinged, &OnAllRegionsPinged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.HandlePingMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 PingMessage                    ( CPF_Parm )
//
//void UOnlineGameRegions_X::HandlePingMessage ( class UTcpConnection* Connection, class UObject* PingMessage )
//{
//	static UFunction* pFnHandlePingMessage = NULL;
//
//	if ( ! pFnHandlePingMessage )
//		pFnHandlePingMessage = (UFunction*) UObject::GObjObjects()->Data[ 53358 ];
//
//	UOnlineGameRegions_X_execHandlePingMessage_Parms HandlePingMessage_Parms;
//	HandlePingMessage_Parms.Connection = Connection;
//	HandlePingMessage_Parms.PingMessage = PingMessage;
//
//	this->ProcessEvent ( pFnHandlePingMessage, &HandlePingMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.PingRegionsPieceWise
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            PingCount                      ( CPF_Parm )
//
//void UOnlineGameRegions_X::PingRegionsPieceWise ( int PingCount )
//{
//	static UFunction* pFnPingRegionsPieceWise = NULL;
//
//	if ( ! pFnPingRegionsPieceWise )
//		pFnPingRegionsPieceWise = (UFunction*) UObject::GObjObjects()->Data[ 53362 ];
//
//	UOnlineGameRegions_X_execPingRegionsPieceWise_Parms PingRegionsPieceWise_Parms;
//	PingRegionsPieceWise_Parms.PingCount = PingCount;
//
//	this->ProcessEvent ( pFnPingRegionsPieceWise, &PingRegionsPieceWise_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.HandleGetPingRegionListRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetGameServerPingList_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameRegions_X::HandleGetPingRegionListRPC ( class URPC_GetGameServerPingList_X* RPC )
//{
//	static UFunction* pFnHandleGetPingRegionListRPC = NULL;
//
//	if ( ! pFnHandleGetPingRegionListRPC )
//		pFnHandleGetPingRegionListRPC = (UFunction*) UObject::GObjObjects()->Data[ 53394 ];
//
//	UOnlineGameRegions_X_execHandleGetPingRegionListRPC_Parms HandleGetPingRegionListRPC_Parms;
//	HandleGetPingRegionListRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetPingRegionListRPC, &HandleGetPingRegionListRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.PingRegions
//// [0x00024002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameRegions_X::PingRegions ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnPingRegions = NULL;
//
//	if ( ! pFnPingRegions )
//		pFnPingRegions = (UFunction*) UObject::GObjObjects()->Data[ 53354 ];
//
//	UOnlineGameRegions_X_execPingRegions_Parms PingRegions_Parms;
//	memcpy ( &PingRegions_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnPingRegions, &PingRegions_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.HandleRegionsChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UObjectProvider*         Op                             ( CPF_Parm )
//
//void UOnlineGameRegions_X::HandleRegionsChanged ( class UObjectProvider* Op )
//{
//	static UFunction* pFnHandleRegionsChanged = NULL;
//
//	if ( ! pFnHandleRegionsChanged )
//		pFnHandleRegionsChanged = (UFunction*) UObject::GObjObjects()->Data[ 53356 ];
//
//	UOnlineGameRegions_X_execHandleRegionsChanged_Parms HandleRegionsChanged_Parms;
//	HandleRegionsChanged_Parms.Op = Op;
//
//	this->ProcessEvent ( pFnHandleRegionsChanged, &HandleRegionsChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.OnInit
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UOnlineGameRegions_X::eventOnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 53351 ];
//
//	UOnlineGameRegions_X_eventOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.EventRegionsError
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameRegions_X*    RegionsObj                     ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameRegions_X::EventRegionsError ( class UOnlineGameRegions_X* RegionsObj, class UError* Error )
//{
//	static UFunction* pFnEventRegionsError = NULL;
//
//	if ( ! pFnEventRegionsError )
//		pFnEventRegionsError = (UFunction*) UObject::GObjObjects()->Data[ 53352 ];
//
//	UOnlineGameRegions_X_execEventRegionsError_Parms EventRegionsError_Parms;
//	EventRegionsError_Parms.RegionsObj = RegionsObj;
//	EventRegionsError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventRegionsError, &EventRegionsError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.EventRegionsPinged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameRegions_X*    RegionsObj                     ( CPF_Parm )
//
//void UOnlineGameRegions_X::EventRegionsPinged ( class UOnlineGameRegions_X* RegionsObj )
//{
//	static UFunction* pFnEventRegionsPinged = NULL;
//
//	if ( ! pFnEventRegionsPinged )
//		pFnEventRegionsPinged = (UFunction*) UObject::GObjObjects()->Data[ 53339 ];
//
//	UOnlineGameRegions_X_execEventRegionsPinged_Parms EventRegionsPinged_Parms;
//	EventRegionsPinged_Parms.RegionsObj = RegionsObj;
//
//	this->ProcessEvent ( pFnEventRegionsPinged, &EventRegionsPinged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameRegions_X.EventRegionsSynced
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameRegions_X*    RegionsObj                     ( CPF_Parm )
//
//void UOnlineGameRegions_X::EventRegionsSynced ( class UOnlineGameRegions_X* RegionsObj )
//{
//	static UFunction* pFnEventRegionsSynced = NULL;
//
//	if ( ! pFnEventRegionsSynced )
//		pFnEventRegionsSynced = (UFunction*) UObject::GObjObjects()->Data[ 53341 ];
//
//	UOnlineGameRegions_X_execEventRegionsSynced_Parms EventRegionsSynced_Parms;
//	EventRegionsSynced_Parms.RegionsObj = RegionsObj;
//
//	this->ProcessEvent ( pFnEventRegionsSynced, &EventRegionsSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.OnGameInviteComplete
//// [0x00084002] 
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 FailReason                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameInvite_X::OnGameInviteComplete ( unsigned long bSuccess, struct FString FailReason )
//{
//	static UFunction* pFnOnGameInviteComplete = NULL;
//
//	if ( ! pFnOnGameInviteComplete )
//		pFnOnGameInviteComplete = (UFunction*) UObject::GObjObjects()->Data[ 51394 ];
//
//	UOnlineGameInvite_X_execOnGameInviteComplete_Parms OnGameInviteComplete_Parms;
//	OnGameInviteComplete_Parms.bSuccess = bSuccess;
//	memcpy ( &OnGameInviteComplete_Parms.FailReason, &FailReason, 0xC );
//
//	this->ProcessEvent ( pFnOnGameInviteComplete, &OnGameInviteComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.JoinGameInviteGame
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FJoinMatchSettings      Settings                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameInvite_X::JoinGameInviteGame ( struct FJoinMatchSettings Settings )
//{
//	static UFunction* pFnJoinGameInviteGame = NULL;
//
//	if ( ! pFnJoinGameInviteGame )
//		pFnJoinGameInviteGame = (UFunction*) UObject::GObjObjects()->Data[ 51388 ];
//
//	UOnlineGameInvite_X_execJoinGameInviteGame_Parms JoinGameInviteGame_Parms;
//	memcpy ( &JoinGameInviteGame_Parms.Settings, &Settings, 0x18 );
//
//	this->ProcessEvent ( pFnJoinGameInviteGame, &JoinGameInviteGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.OnGameInviteAccepted
//// [0x00480002] 
//// Parameters infos:
//// struct FString                 ErrorString                    ( CPF_Parm | CPF_NeedCtorLink )
//// struct FOnlineGameSearchResult InviteResult                   ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlineGameInvite_X::OnGameInviteAccepted ( struct FString ErrorString, struct FOnlineGameSearchResult* InviteResult )
//{
//	static UFunction* pFnOnGameInviteAccepted = NULL;
//
//	if ( ! pFnOnGameInviteAccepted )
//		pFnOnGameInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 51374 ];
//
//	UOnlineGameInvite_X_execOnGameInviteAccepted_Parms OnGameInviteAccepted_Parms;
//	memcpy ( &OnGameInviteAccepted_Parms.ErrorString, &ErrorString, 0xC );
//
//	this->ProcessEvent ( pFnOnGameInviteAccepted, &OnGameInviteAccepted_Parms, NULL );
//
//	if ( InviteResult )
//		memcpy ( InviteResult, &OnGameInviteAccepted_Parms.InviteResult, 0x8 );
//};
//
//// Function ProjectX.OnlineGameInvite_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameInvite_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 51372 ];
//
//	UOnlineGameInvite_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.EventPsyNetPartyInviteAccepted
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 PartyID                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameInvite_X::EventPsyNetPartyInviteAccepted ( struct FString PartyID )
//{
//	static UFunction* pFnEventPsyNetPartyInviteAccepted = NULL;
//
//	if ( ! pFnEventPsyNetPartyInviteAccepted )
//		pFnEventPsyNetPartyInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 51373 ];
//
//	UOnlineGameInvite_X_execEventPsyNetPartyInviteAccepted_Parms EventPsyNetPartyInviteAccepted_Parms;
//	memcpy ( &EventPsyNetPartyInviteAccepted_Parms.PartyID, &PartyID, 0xC );
//
//	this->ProcessEvent ( pFnEventPsyNetPartyInviteAccepted, &EventPsyNetPartyInviteAccepted_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.EventPasswordRequired
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameInvite_X::EventPasswordRequired ( )
//{
//	static UFunction* pFnEventPasswordRequired = NULL;
//
//	if ( ! pFnEventPasswordRequired )
//		pFnEventPasswordRequired = (UFunction*) UObject::GObjObjects()->Data[ 51355 ];
//
//	UOnlineGameInvite_X_execEventPasswordRequired_Parms EventPasswordRequired_Parms;
//
//	this->ProcessEvent ( pFnEventPasswordRequired, &EventPasswordRequired_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.EventConfirmationRequired
//// [0x00120000] 
//// Parameters infos:
//// struct FName                   ConfirmationReason             ( CPF_Parm )
//
//void UOnlineGameInvite_X::EventConfirmationRequired ( struct FName ConfirmationReason )
//{
//	static UFunction* pFnEventConfirmationRequired = NULL;
//
//	if ( ! pFnEventConfirmationRequired )
//		pFnEventConfirmationRequired = (UFunction*) UObject::GObjObjects()->Data[ 51357 ];
//
//	UOnlineGameInvite_X_execEventConfirmationRequired_Parms EventConfirmationRequired_Parms;
//	memcpy ( &EventConfirmationRequired_Parms.ConfirmationReason, &ConfirmationReason, 0x8 );
//
//	this->ProcessEvent ( pFnEventConfirmationRequired, &EventConfirmationRequired_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.EventGameInviteComplete
//// [0x00120000] 
//// Parameters infos:
//// unsigned long                  bSuccess                       ( CPF_Parm )
//// struct FString                 FailReason                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameInvite_X::EventGameInviteComplete ( unsigned long bSuccess, struct FString FailReason )
//{
//	static UFunction* pFnEventGameInviteComplete = NULL;
//
//	if ( ! pFnEventGameInviteComplete )
//		pFnEventGameInviteComplete = (UFunction*) UObject::GObjObjects()->Data[ 51359 ];
//
//	UOnlineGameInvite_X_execEventGameInviteComplete_Parms EventGameInviteComplete_Parms;
//	EventGameInviteComplete_Parms.bSuccess = bSuccess;
//	memcpy ( &EventGameInviteComplete_Parms.FailReason, &FailReason, 0xC );
//
//	this->ProcessEvent ( pFnEventGameInviteComplete, &EventGameInviteComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameInvite_X.EventGameInviteAccepted
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameInvite_X::EventGameInviteAccepted ( )
//{
//	static UFunction* pFnEventGameInviteAccepted = NULL;
//
//	if ( ! pFnEventGameInviteAccepted )
//		pFnEventGameInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 51361 ];
//
//	UOnlineGameInvite_X_execEventGameInviteAccepted_Parms EventGameInviteAccepted_Parms;
//
//	this->ProcessEvent ( pFnEventGameInviteAccepted, &EventGameInviteAccepted_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVoice_X.GetControllerId
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//unsigned char UOnlineGameVoice_X::GetControllerId ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnGetControllerId = NULL;
//
//	if ( ! pFnGetControllerId )
//		pFnGetControllerId = (UFunction*) UObject::GObjObjects()->Data[ 54149 ];
//
//	UOnlineGameVoice_X_execGetControllerId_Parms GetControllerId_Parms;
//	GetControllerId_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnGetControllerId, &GetControllerId_Parms, NULL );
//
//	return GetControllerId_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameVoice_X.GetNumTalkers
//// [0x00020002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameVoice_X::GetNumTalkers ( )
//{
//	static UFunction* pFnGetNumTalkers = NULL;
//
//	if ( ! pFnGetNumTalkers )
//		pFnGetNumTalkers = (UFunction*) UObject::GObjObjects()->Data[ 54143 ];
//
//	UOnlineGameVoice_X_execGetNumTalkers_Parms GetNumTalkers_Parms;
//
//	this->ProcessEvent ( pFnGetNumTalkers, &GetNumTalkers_Parms, NULL );
//
//	return GetNumTalkers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameVoice_X.IsRemotePlayerTalking
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//bool UOnlineGameVoice_X::IsRemotePlayerTalking ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnIsRemotePlayerTalking = NULL;
//
//	if ( ! pFnIsRemotePlayerTalking )
//		pFnIsRemotePlayerTalking = (UFunction*) UObject::GObjObjects()->Data[ 54140 ];
//
//	UOnlineGameVoice_X_execIsRemotePlayerTalking_Parms IsRemotePlayerTalking_Parms;
//	IsRemotePlayerTalking_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnIsRemotePlayerTalking, &IsRemotePlayerTalking_Parms, NULL );
//
//	return IsRemotePlayerTalking_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameVoice_X.HandlePlayerTalkingStateChange
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// unsigned long                  bTalking                       ( CPF_Parm )
//
//void UOnlineGameVoice_X::HandlePlayerTalkingStateChange ( struct FUniqueNetId PlayerID, unsigned long bTalking )
//{
//	static UFunction* pFnHandlePlayerTalkingStateChange = NULL;
//
//	if ( ! pFnHandlePlayerTalkingStateChange )
//		pFnHandlePlayerTalkingStateChange = (UFunction*) UObject::GObjObjects()->Data[ 54137 ];
//
//	UOnlineGameVoice_X_execHandlePlayerTalkingStateChange_Parms HandlePlayerTalkingStateChange_Parms;
//	memcpy ( &HandlePlayerTalkingStateChange_Parms.PlayerID, &PlayerID, 0x48 );
//	HandlePlayerTalkingStateChange_Parms.bTalking = bTalking;
//
//	this->ProcessEvent ( pFnHandlePlayerTalkingStateChange, &HandlePlayerTalkingStateChange_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVoice_X.UnregisterTalker
//// [0x00020002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGameVoice_X::UnregisterTalker ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnUnregisterTalker = NULL;
//
//	if ( ! pFnUnregisterTalker )
//		pFnUnregisterTalker = (UFunction*) UObject::GObjObjects()->Data[ 54135 ];
//
//	UOnlineGameVoice_X_execUnregisterTalker_Parms UnregisterTalker_Parms;
//	UnregisterTalker_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnUnregisterTalker, &UnregisterTalker_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVoice_X.RegisterTalker
//// [0x00020002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlineGameVoice_X::RegisterTalker ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnRegisterTalker = NULL;
//
//	if ( ! pFnRegisterTalker )
//		pFnRegisterTalker = (UFunction*) UObject::GObjObjects()->Data[ 54131 ];
//
//	UOnlineGameVoice_X_execRegisterTalker_Parms RegisterTalker_Parms;
//	RegisterTalker_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnRegisterTalker, &RegisterTalker_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVoice_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameVoice_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 54130 ];
//
//	UOnlineGameVoice_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVoice_X.EventPlayerTalking
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameVoice_X*      SelfRef                        ( CPF_Parm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// unsigned long                  bTalking                       ( CPF_Parm )
//
//void UOnlineGameVoice_X::EventPlayerTalking ( class UOnlineGameVoice_X* SelfRef, struct FUniqueNetId PlayerID, unsigned long bTalking )
//{
//	static UFunction* pFnEventPlayerTalking = NULL;
//
//	if ( ! pFnEventPlayerTalking )
//		pFnEventPlayerTalking = (UFunction*) UObject::GObjObjects()->Data[ 54125 ];
//
//	UOnlineGameVoice_X_execEventPlayerTalking_Parms EventPlayerTalking_Parms;
//	EventPlayerTalking_Parms.SelfRef = SelfRef;
//	memcpy ( &EventPlayerTalking_Parms.PlayerID, &PlayerID, 0x48 );
//	EventPlayerTalking_Parms.bTalking = bTalking;
//
//	this->ProcessEvent ( pFnEventPlayerTalking, &EventPlayerTalking_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameCommunity_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameCommunity_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 50938 ];
//
//	UOnlineGameCommunity_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePopulation_X.HandleGotAllPopulationPlaylistsRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetPopulation_X*    RPC                            ( CPF_Parm )
//
//void UOnlineGamePopulation_X::HandleGotAllPopulationPlaylistsRPC ( class URPC_GetPopulation_X* RPC )
//{
//	static UFunction* pFnHandleGotAllPopulationPlaylistsRPC = NULL;
//
//	if ( ! pFnHandleGotAllPopulationPlaylistsRPC )
//		pFnHandleGotAllPopulationPlaylistsRPC = (UFunction*) UObject::GObjObjects()->Data[ 53219 ];
//
//	UOnlineGamePopulation_X_execHandleGotAllPopulationPlaylistsRPC_Parms HandleGotAllPopulationPlaylistsRPC_Parms;
//	HandleGotAllPopulationPlaylistsRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGotAllPopulationPlaylistsRPC, &HandleGotAllPopulationPlaylistsRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePopulation_X.GetPlaylistPopulations
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         NewDelegate                    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePopulation_X::GetPlaylistPopulations ( struct FScriptDelegate NewDelegate )
//{
//	static UFunction* pFnGetPlaylistPopulations = NULL;
//
//	if ( ! pFnGetPlaylistPopulations )
//		pFnGetPlaylistPopulations = (UFunction*) UObject::GObjObjects()->Data[ 53216 ];
//
//	UOnlineGamePopulation_X_execGetPlaylistPopulations_Parms GetPlaylistPopulations_Parms;
//	memcpy ( &GetPlaylistPopulations_Parms.NewDelegate, &NewDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnGetPlaylistPopulations, &GetPlaylistPopulations_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePopulation_X.EventGetPlaylistPopulations
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePopulation_X* PopulationsObject              ( CPF_Parm )
//
//void UOnlineGamePopulation_X::EventGetPlaylistPopulations ( class UOnlineGamePopulation_X* PopulationsObject )
//{
//	static UFunction* pFnEventGetPlaylistPopulations = NULL;
//
//	if ( ! pFnEventGetPlaylistPopulations )
//		pFnEventGetPlaylistPopulations = (UFunction*) UObject::GObjObjects()->Data[ 53210 ];
//
//	UOnlineGamePopulation_X_execEventGetPlaylistPopulations_Parms EventGetPlaylistPopulations_Parms;
//	EventGetPlaylistPopulations_Parms.PopulationsObject = PopulationsObject;
//
//	this->ProcessEvent ( pFnEventGetPlaylistPopulations, &EventGetPlaylistPopulations_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.CreateLanGame
//// [0x00C20002] 
//// Parameters infos:
//// struct FCustomMatchSettings    MatchSettings                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FServerResult           HostResponse                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameLanBrowser_X::CreateLanGame ( struct FCustomMatchSettings MatchSettings, struct FServerResult* HostResponse )
//{
//	static UFunction* pFnCreateLanGame = NULL;
//
//	if ( ! pFnCreateLanGame )
//		pFnCreateLanGame = (UFunction*) UObject::GObjObjects()->Data[ 51773 ];
//
//	UOnlineGameLanBrowser_X_execCreateLanGame_Parms CreateLanGame_Parms;
//	memcpy ( &CreateLanGame_Parms.MatchSettings, &MatchSettings, 0x60 );
//
//	this->ProcessEvent ( pFnCreateLanGame, &CreateLanGame_Parms, NULL );
//
//	if ( HostResponse )
//		memcpy ( HostResponse, &CreateLanGame_Parms.HostResponse, 0x78 );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.HandleHostResponse
//// [0x00080000] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameLanBrowser_X::HandleHostResponse ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleHostResponse = NULL;
//
//	if ( ! pFnHandleHostResponse )
//		pFnHandleHostResponse = (UFunction*) UObject::GObjObjects()->Data[ 51770 ];
//
//	UOnlineGameLanBrowser_X_execHandleHostResponse_Parms HandleHostResponse_Parms;
//	HandleHostResponse_Parms.Component = Component;
//	HandleHostResponse_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleHostResponse, &HandleHostResponse_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.OnSearchComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bCancelled                     ( CPF_Parm )
//
//void UOnlineGameLanBrowser_X::OnSearchComplete ( unsigned long bCancelled )
//{
//	static UFunction* pFnOnSearchComplete = NULL;
//
//	if ( ! pFnOnSearchComplete )
//		pFnOnSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 51765 ];
//
//	UOnlineGameLanBrowser_X_execOnSearchComplete_Parms OnSearchComplete_Parms;
//	OnSearchComplete_Parms.bCancelled = bCancelled;
//
//	this->ProcessEvent ( pFnOnSearchComplete, &OnSearchComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.OnSearchError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLanBrowser_X::OnSearchError ( struct FString Message )
//{
//	static UFunction* pFnOnSearchError = NULL;
//
//	if ( ! pFnOnSearchError )
//		pFnOnSearchError = (UFunction*) UObject::GObjObjects()->Data[ 51763 ];
//
//	UOnlineGameLanBrowser_X_execOnSearchError_Parms OnSearchError_Parms;
//	memcpy ( &OnSearchError_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnOnSearchError, &OnSearchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.IsSearching
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameLanBrowser_X::IsSearching ( )
//{
//	static UFunction* pFnIsSearching = NULL;
//
//	if ( ! pFnIsSearching )
//		pFnIsSearching = (UFunction*) UObject::GObjObjects()->Data[ 51766 ];
//
//	UOnlineGameLanBrowser_X_execIsSearching_Parms IsSearching_Parms;
//
//	this->ProcessEvent ( pFnIsSearching, &IsSearching_Parms, NULL );
//
//	return IsSearching_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.Cancel
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameLanBrowser_X::Cancel ( )
//{
//	static UFunction* pFnCancel = NULL;
//
//	if ( ! pFnCancel )
//		pFnCancel = (UFunction*) UObject::GObjObjects()->Data[ 51764 ];
//
//	UOnlineGameLanBrowser_X_execCancel_Parms Cancel_Parms;
//
//	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.StartSearch
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FCustomMatchSettings    InFilter                       ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bHostQuery                     ( CPF_OptionalParm | CPF_Parm )
//
//bool UOnlineGameLanBrowser_X::StartSearch ( struct FCustomMatchSettings InFilter, unsigned long bHostQuery )
//{
//	static UFunction* pFnStartSearch = NULL;
//
//	if ( ! pFnStartSearch )
//		pFnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 51759 ];
//
//	UOnlineGameLanBrowser_X_execStartSearch_Parms StartSearch_Parms;
//	memcpy ( &StartSearch_Parms.InFilter, &InFilter, 0x60 );
//	StartSearch_Parms.bHostQuery = bHostQuery;
//
//	this->ProcessEvent ( pFnStartSearch, &StartSearch_Parms, NULL );
//
//	return StartSearch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.ClearCompleteDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::ClearCompleteDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearCompleteDelegate = NULL;
//
//	if ( ! pFnClearCompleteDelegate )
//		pFnClearCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51756 ];
//
//	UOnlineGameLanBrowser_X_execClearCompleteDelegate_Parms ClearCompleteDelegate_Parms;
//	memcpy ( &ClearCompleteDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnClearCompleteDelegate, &ClearCompleteDelegate_Parms, NULL );
//
//	return ClearCompleteDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.ClearNewResponseDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::ClearNewResponseDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearNewResponseDelegate = NULL;
//
//	if ( ! pFnClearNewResponseDelegate )
//		pFnClearNewResponseDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51753 ];
//
//	UOnlineGameLanBrowser_X_execClearNewResponseDelegate_Parms ClearNewResponseDelegate_Parms;
//	memcpy ( &ClearNewResponseDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnClearNewResponseDelegate, &ClearNewResponseDelegate_Parms, NULL );
//
//	return ClearNewResponseDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.ClearStateChangedDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::ClearStateChangedDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearStateChangedDelegate = NULL;
//
//	if ( ! pFnClearStateChangedDelegate )
//		pFnClearStateChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51750 ];
//
//	UOnlineGameLanBrowser_X_execClearStateChangedDelegate_Parms ClearStateChangedDelegate_Parms;
//	memcpy ( &ClearStateChangedDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnClearStateChangedDelegate, &ClearStateChangedDelegate_Parms, NULL );
//
//	return ClearStateChangedDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.ClearStatusDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::ClearStatusDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearStatusDelegate = NULL;
//
//	if ( ! pFnClearStatusDelegate )
//		pFnClearStatusDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51747 ];
//
//	UOnlineGameLanBrowser_X_execClearStatusDelegate_Parms ClearStatusDelegate_Parms;
//	memcpy ( &ClearStatusDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnClearStatusDelegate, &ClearStatusDelegate_Parms, NULL );
//
//	return ClearStatusDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.ClearErrorDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::ClearErrorDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnClearErrorDelegate = NULL;
//
//	if ( ! pFnClearErrorDelegate )
//		pFnClearErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51744 ];
//
//	UOnlineGameLanBrowser_X_execClearErrorDelegate_Parms ClearErrorDelegate_Parms;
//	memcpy ( &ClearErrorDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnClearErrorDelegate, &ClearErrorDelegate_Parms, NULL );
//
//	return ClearErrorDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.SetCompleteDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::SetCompleteDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetCompleteDelegate = NULL;
//
//	if ( ! pFnSetCompleteDelegate )
//		pFnSetCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51741 ];
//
//	UOnlineGameLanBrowser_X_execSetCompleteDelegate_Parms SetCompleteDelegate_Parms;
//	memcpy ( &SetCompleteDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetCompleteDelegate, &SetCompleteDelegate_Parms, NULL );
//
//	return SetCompleteDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.SetNewResponseDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::SetNewResponseDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetNewResponseDelegate = NULL;
//
//	if ( ! pFnSetNewResponseDelegate )
//		pFnSetNewResponseDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51738 ];
//
//	UOnlineGameLanBrowser_X_execSetNewResponseDelegate_Parms SetNewResponseDelegate_Parms;
//	memcpy ( &SetNewResponseDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetNewResponseDelegate, &SetNewResponseDelegate_Parms, NULL );
//
//	return SetNewResponseDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.SetStateChangedDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::SetStateChangedDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetStateChangedDelegate = NULL;
//
//	if ( ! pFnSetStateChangedDelegate )
//		pFnSetStateChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51735 ];
//
//	UOnlineGameLanBrowser_X_execSetStateChangedDelegate_Parms SetStateChangedDelegate_Parms;
//	memcpy ( &SetStateChangedDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetStateChangedDelegate, &SetStateChangedDelegate_Parms, NULL );
//
//	return SetStateChangedDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.SetStatusDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::SetStatusDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetStatusDelegate = NULL;
//
//	if ( ! pFnSetStatusDelegate )
//		pFnSetStatusDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51732 ];
//
//	UOnlineGameLanBrowser_X_execSetStatusDelegate_Parms SetStatusDelegate_Parms;
//	memcpy ( &SetStatusDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetStatusDelegate, &SetStatusDelegate_Parms, NULL );
//
//	return SetStatusDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.SetErrorDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameLanBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameLanBrowser_X* UOnlineGameLanBrowser_X::SetErrorDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetErrorDelegate = NULL;
//
//	if ( ! pFnSetErrorDelegate )
//		pFnSetErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 51729 ];
//
//	UOnlineGameLanBrowser_X_execSetErrorDelegate_Parms SetErrorDelegate_Parms;
//	memcpy ( &SetErrorDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetErrorDelegate, &SetErrorDelegate_Parms, NULL );
//
//	return SetErrorDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanBrowser_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 51728 ];
//
//	UOnlineGameLanBrowser_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.EventSearchError
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewStatus                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLanBrowser_X::EventSearchError ( struct FString NewStatus )
//{
//	static UFunction* pFnEventSearchError = NULL;
//
//	if ( ! pFnEventSearchError )
//		pFnEventSearchError = (UFunction*) UObject::GObjObjects()->Data[ 51707 ];
//
//	UOnlineGameLanBrowser_X_execEventSearchError_Parms EventSearchError_Parms;
//	memcpy ( &EventSearchError_Parms.NewStatus, &NewStatus, 0xC );
//
//	this->ProcessEvent ( pFnEventSearchError, &EventSearchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.EventSearchComplete
//// [0x00120000] 
//// Parameters infos:
//// unsigned long                  bCancelled                     ( CPF_Parm )
//
//void UOnlineGameLanBrowser_X::EventSearchComplete ( unsigned long bCancelled )
//{
//	static UFunction* pFnEventSearchComplete = NULL;
//
//	if ( ! pFnEventSearchComplete )
//		pFnEventSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 51709 ];
//
//	UOnlineGameLanBrowser_X_execEventSearchComplete_Parms EventSearchComplete_Parms;
//	EventSearchComplete_Parms.bCancelled = bCancelled;
//
//	this->ProcessEvent ( pFnEventSearchComplete, &EventSearchComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.EventSearchStateChanged
//// [0x00120000] 
//// Parameters infos:
//// struct FName                   SearchState                    ( CPF_Parm )
//
//void UOnlineGameLanBrowser_X::EventSearchStateChanged ( struct FName SearchState )
//{
//	static UFunction* pFnEventSearchStateChanged = NULL;
//
//	if ( ! pFnEventSearchStateChanged )
//		pFnEventSearchStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 51711 ];
//
//	UOnlineGameLanBrowser_X_execEventSearchStateChanged_Parms EventSearchStateChanged_Parms;
//	memcpy ( &EventSearchStateChanged_Parms.SearchState, &SearchState, 0x8 );
//
//	this->ProcessEvent ( pFnEventSearchStateChanged, &EventSearchStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.EventSearchStatus
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewStatus                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameLanBrowser_X::EventSearchStatus ( struct FString NewStatus )
//{
//	static UFunction* pFnEventSearchStatus = NULL;
//
//	if ( ! pFnEventSearchStatus )
//		pFnEventSearchStatus = (UFunction*) UObject::GObjObjects()->Data[ 51713 ];
//
//	UOnlineGameLanBrowser_X_execEventSearchStatus_Parms EventSearchStatus_Parms;
//	memcpy ( &EventSearchStatus_Parms.NewStatus, &NewStatus, 0xC );
//
//	this->ProcessEvent ( pFnEventSearchStatus, &EventSearchStatus_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanBrowser_X.EventSearchNewResponse
//// [0x00520000] 
//// Parameters infos:
//// struct FServerResult           Result                         ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameLanBrowser_X::EventSearchNewResponse ( struct FServerResult* Result )
//{
//	static UFunction* pFnEventSearchNewResponse = NULL;
//
//	if ( ! pFnEventSearchNewResponse )
//		pFnEventSearchNewResponse = (UFunction*) UObject::GObjObjects()->Data[ 51715 ];
//
//	UOnlineGameLanBrowser_X_execEventSearchNewResponse_Parms EventSearchNewResponse_Parms;
//
//	this->ProcessEvent ( pFnEventSearchNewResponse, &EventSearchNewResponse_Parms, NULL );
//
//	if ( Result )
//		memcpy ( Result, &EventSearchNewResponse_Parms.Result, 0x78 );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.HandleGameServerList
//// [0x20080000] 
//// Parameters infos:
//// class URPC_CustomGameServerGet_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameServerBrowser_X::HandleGameServerList ( class URPC_CustomGameServerGet_X* RPC )
//{
//	static UFunction* pFnHandleGameServerList = NULL;
//
//	if ( ! pFnHandleGameServerList )
//		pFnHandleGameServerList = (UFunction*) UObject::GObjObjects()->Data[ 53923 ];
//
//	UOnlineGameServerBrowser_X_execHandleGameServerList_Parms HandleGameServerList_Parms;
//	HandleGameServerList_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGameServerList, &HandleGameServerList_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.GetFriendlyRegionString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameServerBrowser_X::GetFriendlyRegionString ( )
//{
//	static UFunction* pFnGetFriendlyRegionString = NULL;
//
//	if ( ! pFnGetFriendlyRegionString )
//		pFnGetFriendlyRegionString = (UFunction*) UObject::GObjObjects()->Data[ 53903 ];
//
//	UOnlineGameServerBrowser_X_execGetFriendlyRegionString_Parms GetFriendlyRegionString_Parms;
//
//	this->ProcessEvent ( pFnGetFriendlyRegionString, &GetFriendlyRegionString_Parms, NULL );
//
//	return GetFriendlyRegionString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.GetRegionsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameServerBrowser_X::GetRegionsString ( )
//{
//	static UFunction* pFnGetRegionsString = NULL;
//
//	if ( ! pFnGetRegionsString )
//		pFnGetRegionsString = (UFunction*) UObject::GObjObjects()->Data[ 53901 ];
//
//	UOnlineGameServerBrowser_X_execGetRegionsString_Parms GetRegionsString_Parms;
//
//	this->ProcessEvent ( pFnGetRegionsString, &GetRegionsString_Parms, NULL );
//
//	return GetRegionsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.OnSearchComplete
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FServerResult > Results                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameServerBrowser_X::OnSearchComplete ( TArray< struct FServerResult >* Results )
//{
//	static UFunction* pFnOnSearchComplete = NULL;
//
//	if ( ! pFnOnSearchComplete )
//		pFnOnSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 53895 ];
//
//	UOnlineGameServerBrowser_X_execOnSearchComplete_Parms OnSearchComplete_Parms;
//
//	this->ProcessEvent ( pFnOnSearchComplete, &OnSearchComplete_Parms, NULL );
//
//	if ( Results )
//		memcpy ( Results, &OnSearchComplete_Parms.Results, 0xC );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.OnSearchError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameServerBrowser_X::OnSearchError ( struct FString Message )
//{
//	static UFunction* pFnOnSearchError = NULL;
//
//	if ( ! pFnOnSearchError )
//		pFnOnSearchError = (UFunction*) UObject::GObjObjects()->Data[ 53891 ];
//
//	UOnlineGameServerBrowser_X_execOnSearchError_Parms OnSearchError_Parms;
//	memcpy ( &OnSearchError_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnOnSearchError, &OnSearchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.IsSearching
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameServerBrowser_X::IsSearching ( )
//{
//	static UFunction* pFnIsSearching = NULL;
//
//	if ( ! pFnIsSearching )
//		pFnIsSearching = (UFunction*) UObject::GObjObjects()->Data[ 53896 ];
//
//	UOnlineGameServerBrowser_X_execIsSearching_Parms IsSearching_Parms;
//
//	this->ProcessEvent ( pFnIsSearching, &IsSearching_Parms, NULL );
//
//	return IsSearching_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.Cancel
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameServerBrowser_X::Cancel ( )
//{
//	static UFunction* pFnCancel = NULL;
//
//	if ( ! pFnCancel )
//		pFnCancel = (UFunction*) UObject::GObjObjects()->Data[ 53892 ];
//
//	UOnlineGameServerBrowser_X_execCancel_Parms Cancel_Parms;
//
//	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.StartSearch
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FCustomMatchSettings    InFilter                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 InPreferredRegion              ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGameServerBrowser_X::StartSearch ( struct FCustomMatchSettings InFilter, struct FString InPreferredRegion )
//{
//	static UFunction* pFnStartSearch = NULL;
//
//	if ( ! pFnStartSearch )
//		pFnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 53887 ];
//
//	UOnlineGameServerBrowser_X_execStartSearch_Parms StartSearch_Parms;
//	memcpy ( &StartSearch_Parms.InFilter, &InFilter, 0x60 );
//	memcpy ( &StartSearch_Parms.InPreferredRegion, &InPreferredRegion, 0xC );
//
//	this->ProcessEvent ( pFnStartSearch, &StartSearch_Parms, NULL );
//
//	return StartSearch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.SetCompleteDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameServerBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameServerBrowser_X* UOnlineGameServerBrowser_X::SetCompleteDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetCompleteDelegate = NULL;
//
//	if ( ! pFnSetCompleteDelegate )
//		pFnSetCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53884 ];
//
//	UOnlineGameServerBrowser_X_execSetCompleteDelegate_Parms SetCompleteDelegate_Parms;
//	memcpy ( &SetCompleteDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetCompleteDelegate, &SetCompleteDelegate_Parms, NULL );
//
//	return SetCompleteDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.SetErrorDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameServerBrowser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameServerBrowser_X* UOnlineGameServerBrowser_X::SetErrorDelegate ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSetErrorDelegate = NULL;
//
//	if ( ! pFnSetErrorDelegate )
//		pFnSetErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53880 ];
//
//	UOnlineGameServerBrowser_X_execSetErrorDelegate_Parms SetErrorDelegate_Parms;
//	memcpy ( &SetErrorDelegate_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSetErrorDelegate, &SetErrorDelegate_Parms, NULL );
//
//	return SetErrorDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.EventBrowserError
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameServerBrowser_X* Browser                        ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameServerBrowser_X::EventBrowserError ( class UOnlineGameServerBrowser_X* Browser, class UError* Error )
//{
//	static UFunction* pFnEventBrowserError = NULL;
//
//	if ( ! pFnEventBrowserError )
//		pFnEventBrowserError = (UFunction*) UObject::GObjObjects()->Data[ 53883 ];
//
//	UOnlineGameServerBrowser_X_execEventBrowserError_Parms EventBrowserError_Parms;
//	EventBrowserError_Parms.Browser = Browser;
//	EventBrowserError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventBrowserError, &EventBrowserError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.EventSearchError
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewStatus                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameServerBrowser_X::EventSearchError ( struct FString NewStatus )
//{
//	static UFunction* pFnEventSearchError = NULL;
//
//	if ( ! pFnEventSearchError )
//		pFnEventSearchError = (UFunction*) UObject::GObjObjects()->Data[ 53868 ];
//
//	UOnlineGameServerBrowser_X_execEventSearchError_Parms EventSearchError_Parms;
//	memcpy ( &EventSearchError_Parms.NewStatus, &NewStatus, 0xC );
//
//	this->ProcessEvent ( pFnEventSearchError, &EventSearchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameServerBrowser_X.EventSearchComplete
//// [0x00520000] 
//// Parameters infos:
//// TArray< struct FServerResult > Results                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameServerBrowser_X::EventSearchComplete ( TArray< struct FServerResult >* Results )
//{
//	static UFunction* pFnEventSearchComplete = NULL;
//
//	if ( ! pFnEventSearchComplete )
//		pFnEventSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 53870 ];
//
//	UOnlineGameServerBrowser_X_execEventSearchComplete_Parms EventSearchComplete_Parms;
//
//	this->ProcessEvent ( pFnEventSearchComplete, &EventSearchComplete_Parms, NULL );
//
//	if ( Results )
//		memcpy ( Results, &EventSearchComplete_Parms.Results, 0xC );
//};
//
//// Function ProjectX.OnlineGamePrivateMatch_X.GetFriendlyRegionString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGamePrivateMatch_X::GetFriendlyRegionString ( )
//{
//	static UFunction* pFnGetFriendlyRegionString = NULL;
//
//	if ( ! pFnGetFriendlyRegionString )
//		pFnGetFriendlyRegionString = (UFunction*) UObject::GObjObjects()->Data[ 53246 ];
//
//	UOnlineGamePrivateMatch_X_execGetFriendlyRegionString_Parms GetFriendlyRegionString_Parms;
//
//	this->ProcessEvent ( pFnGetFriendlyRegionString, &GetFriendlyRegionString_Parms, NULL );
//
//	return GetFriendlyRegionString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePrivateMatch_X.OnPrivateMatchError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGamePrivateMatch_X::OnPrivateMatchError ( struct FString Message )
//{
//	static UFunction* pFnOnPrivateMatchError = NULL;
//
//	if ( ! pFnOnPrivateMatchError )
//		pFnOnPrivateMatchError = (UFunction*) UObject::GObjObjects()->Data[ 53244 ];
//
//	UOnlineGamePrivateMatch_X_execOnPrivateMatchError_Parms OnPrivateMatchError_Parms;
//	memcpy ( &OnPrivateMatchError_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnOnPrivateMatchError, &OnPrivateMatchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGamePrivateMatch_X.StartSearch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InPreferredRegion              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FCustomMatchSettings    InSettings                     ( CPF_Parm | CPF_NeedCtorLink )
//
//bool UOnlineGamePrivateMatch_X::StartSearch ( struct FString InPreferredRegion, struct FCustomMatchSettings InSettings )
//{
//	static UFunction* pFnStartSearch = NULL;
//
//	if ( ! pFnStartSearch )
//		pFnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 53239 ];
//
//	UOnlineGamePrivateMatch_X_execStartSearch_Parms StartSearch_Parms;
//	memcpy ( &StartSearch_Parms.InPreferredRegion, &InPreferredRegion, 0xC );
//	memcpy ( &StartSearch_Parms.InSettings, &InSettings, 0x60 );
//
//	this->ProcessEvent ( pFnStartSearch, &StartSearch_Parms, NULL );
//
//	return StartSearch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGamePrivateMatch_X.EventPrivateMatchError
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGamePrivateMatch_X* InPrivateMatch                 ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGamePrivateMatch_X::EventPrivateMatchError ( class UOnlineGamePrivateMatch_X* InPrivateMatch, class UError* Error )
//{
//	static UFunction* pFnEventPrivateMatchError = NULL;
//
//	if ( ! pFnEventPrivateMatchError )
//		pFnEventPrivateMatchError = (UFunction*) UObject::GObjObjects()->Data[ 53243 ];
//
//	UOnlineGamePrivateMatch_X_execEventPrivateMatchError_Parms EventPrivateMatchError_Parms;
//	EventPrivateMatchError_Parms.InPrivateMatch = InPrivateMatch;
//	EventPrivateMatchError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventPrivateMatchError, &EventPrivateMatchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.CreateCheckReservation
//// [0x00080002] 
//// Parameters infos:
//// class UCheckReservation_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UCheckReservation_X* UOnlineGameMatchmakingBase_X::CreateCheckReservation ( )
//{
//	static UFunction* pFnCreateCheckReservation = NULL;
//
//	if ( ! pFnCreateCheckReservation )
//		pFnCreateCheckReservation = (UFunction*) UObject::GObjObjects()->Data[ 52152 ];
//
//	UOnlineGameMatchmakingBase_X_execCreateCheckReservation_Parms CreateCheckReservation_Parms;
//
//	this->ProcessEvent ( pFnCreateCheckReservation, &CreateCheckReservation_Parms, NULL );
//
//	return CreateCheckReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.GotoMatchmakingState
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   StateName                      ( CPF_Parm )
//
//void UOnlineGameMatchmakingBase_X::GotoMatchmakingState ( struct FName StateName )
//{
//	static UFunction* pFnGotoMatchmakingState = NULL;
//
//	if ( ! pFnGotoMatchmakingState )
//		pFnGotoMatchmakingState = (UFunction*) UObject::GObjObjects()->Data[ 52173 ];
//
//	UOnlineGameMatchmakingBase_X_execGotoMatchmakingState_Parms GotoMatchmakingState_Parms;
//	memcpy ( &GotoMatchmakingState_Parms.StateName, &StateName, 0x8 );
//
//	this->ProcessEvent ( pFnGotoMatchmakingState, &GotoMatchmakingState_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.ClearStartMatchmakingRPC
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameMatchmakingBase_X::ClearStartMatchmakingRPC ( )
//{
//	static UFunction* pFnClearStartMatchmakingRPC = NULL;
//
//	if ( ! pFnClearStartMatchmakingRPC )
//		pFnClearStartMatchmakingRPC = (UFunction*) UObject::GObjObjects()->Data[ 52146 ];
//
//	UOnlineGameMatchmakingBase_X_execClearStartMatchmakingRPC_Parms ClearStartMatchmakingRPC_Parms;
//
//	this->ProcessEvent ( pFnClearStartMatchmakingRPC, &ClearStartMatchmakingRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.ClearCheckReservation
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameMatchmakingBase_X::ClearCheckReservation ( )
//{
//	static UFunction* pFnClearCheckReservation = NULL;
//
//	if ( ! pFnClearCheckReservation )
//		pFnClearCheckReservation = (UFunction*) UObject::GObjObjects()->Data[ 52145 ];
//
//	UOnlineGameMatchmakingBase_X_execClearCheckReservation_Parms ClearCheckReservation_Parms;
//
//	this->ProcessEvent ( pFnClearCheckReservation, &ClearCheckReservation_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.OnSearchComplete
//// [0x00084003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bCanceled                      ( CPF_OptionalParm | CPF_Parm )
//
//void UOnlineGameMatchmakingBase_X::OnSearchComplete ( unsigned long bCanceled )
//{
//	static UFunction* pFnOnSearchComplete = NULL;
//
//	if ( ! pFnOnSearchComplete )
//		pFnOnSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 52139 ];
//
//	UOnlineGameMatchmakingBase_X_execOnSearchComplete_Parms OnSearchComplete_Parms;
//	OnSearchComplete_Parms.bCanceled = bCanceled;
//
//	this->ProcessEvent ( pFnOnSearchComplete, &OnSearchComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.Cancel
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameMatchmakingBase_X::Cancel ( )
//{
//	static UFunction* pFnCancel = NULL;
//
//	if ( ! pFnCancel )
//		pFnCancel = (UFunction*) UObject::GObjObjects()->Data[ 52138 ];
//
//	UOnlineGameMatchmakingBase_X_execCancel_Parms Cancel_Parms;
//
//	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.IsSearching
//// [0x00020000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameMatchmakingBase_X::IsSearching ( )
//{
//	static UFunction* pFnIsSearching = NULL;
//
//	if ( ! pFnIsSearching )
//		pFnIsSearching = (UFunction*) UObject::GObjObjects()->Data[ 52135 ];
//
//	UOnlineGameMatchmakingBase_X_execIsSearching_Parms IsSearching_Parms;
//
//	this->ProcessEvent ( pFnIsSearching, &IsSearching_Parms, NULL );
//
//	return IsSearching_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameStateChangedDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameMatchmakingBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         NewDelegate                    ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameStateChangedDelegate ( struct FScriptDelegate NewDelegate )
//{
//	static UFunction* pFnAddFindGameStateChangedDelegate = NULL;
//
//	if ( ! pFnAddFindGameStateChangedDelegate )
//		pFnAddFindGameStateChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 52137 ];
//
//	UOnlineGameMatchmakingBase_X_execAddFindGameStateChangedDelegate_Parms AddFindGameStateChangedDelegate_Parms;
//	memcpy ( &AddFindGameStateChangedDelegate_Parms.NewDelegate, &NewDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddFindGameStateChangedDelegate, &AddFindGameStateChangedDelegate_Parms, NULL );
//
//	return AddFindGameStateChangedDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameCompleteDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameMatchmakingBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         HandleFindGameComplete         ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameCompleteDelegate ( struct FScriptDelegate HandleFindGameComplete )
//{
//	static UFunction* pFnAddFindGameCompleteDelegate = NULL;
//
//	if ( ! pFnAddFindGameCompleteDelegate )
//		pFnAddFindGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 52183 ];
//
//	UOnlineGameMatchmakingBase_X_execAddFindGameCompleteDelegate_Parms AddFindGameCompleteDelegate_Parms;
//	memcpy ( &AddFindGameCompleteDelegate_Parms.HandleFindGameComplete, &HandleFindGameComplete, 0x10 );
//
//	this->ProcessEvent ( pFnAddFindGameCompleteDelegate, &AddFindGameCompleteDelegate_Parms, NULL );
//
//	return AddFindGameCompleteDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameErrorDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameMatchmakingBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         HandleFindGameError            ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameErrorDelegate ( struct FScriptDelegate HandleFindGameError )
//{
//	static UFunction* pFnAddFindGameErrorDelegate = NULL;
//
//	if ( ! pFnAddFindGameErrorDelegate )
//		pFnAddFindGameErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 52187 ];
//
//	UOnlineGameMatchmakingBase_X_execAddFindGameErrorDelegate_Parms AddFindGameErrorDelegate_Parms;
//	memcpy ( &AddFindGameErrorDelegate_Parms.HandleFindGameError, &HandleFindGameError, 0x10 );
//
//	this->ProcessEvent ( pFnAddFindGameErrorDelegate, &AddFindGameErrorDelegate_Parms, NULL );
//
//	return AddFindGameErrorDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameStatusChangedDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameMatchmakingBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         HandleFindGameStatusChanged    ( CPF_Parm | CPF_NeedCtorLink )
//
//class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameStatusChangedDelegate ( struct FScriptDelegate HandleFindGameStatusChanged )
//{
//	static UFunction* pFnAddFindGameStatusChangedDelegate = NULL;
//
//	if ( ! pFnAddFindGameStatusChangedDelegate )
//		pFnAddFindGameStatusChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 52191 ];
//
//	UOnlineGameMatchmakingBase_X_execAddFindGameStatusChangedDelegate_Parms AddFindGameStatusChangedDelegate_Parms;
//	memcpy ( &AddFindGameStatusChangedDelegate_Parms.HandleFindGameStatusChanged, &HandleFindGameStatusChanged, 0x10 );
//
//	this->ProcessEvent ( pFnAddFindGameStatusChangedDelegate, &AddFindGameStatusChangedDelegate_Parms, NULL );
//
//	return AddFindGameStatusChangedDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameStateChanged
//// [0x00120000] 
//// Parameters infos:
//// struct FName                   NewState                       ( CPF_Parm )
//
//void UOnlineGameMatchmakingBase_X::EventFindGameStateChanged ( struct FName NewState )
//{
//	static UFunction* pFnEventFindGameStateChanged = NULL;
//
//	if ( ! pFnEventFindGameStateChanged )
//		pFnEventFindGameStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 52186 ];
//
//	UOnlineGameMatchmakingBase_X_execEventFindGameStateChanged_Parms EventFindGameStateChanged_Parms;
//	memcpy ( &EventFindGameStateChanged_Parms.NewState, &NewState, 0x8 );
//
//	this->ProcessEvent ( pFnEventFindGameStateChanged, &EventFindGameStateChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameError
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewStatus                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameMatchmakingBase_X::EventFindGameError ( struct FString NewStatus )
//{
//	static UFunction* pFnEventFindGameError = NULL;
//
//	if ( ! pFnEventFindGameError )
//		pFnEventFindGameError = (UFunction*) UObject::GObjObjects()->Data[ 52195 ];
//
//	UOnlineGameMatchmakingBase_X_execEventFindGameError_Parms EventFindGameError_Parms;
//	memcpy ( &EventFindGameError_Parms.NewStatus, &NewStatus, 0xC );
//
//	this->ProcessEvent ( pFnEventFindGameError, &EventFindGameError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameStatus
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 NewStatus                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameMatchmakingBase_X::EventFindGameStatus ( struct FString NewStatus )
//{
//	static UFunction* pFnEventFindGameStatus = NULL;
//
//	if ( ! pFnEventFindGameStatus )
//		pFnEventFindGameStatus = (UFunction*) UObject::GObjObjects()->Data[ 52198 ];
//
//	UOnlineGameMatchmakingBase_X_execEventFindGameStatus_Parms EventFindGameStatus_Parms;
//	memcpy ( &EventFindGameStatus_Parms.NewStatus, &NewStatus, 0xC );
//
//	this->ProcessEvent ( pFnEventFindGameStatus, &EventFindGameStatus_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameComplete
//// [0x00120000] 
//// Parameters infos:
//// unsigned long                  bCancelled                     ( CPF_Parm )
//
//void UOnlineGameMatchmakingBase_X::EventFindGameComplete ( unsigned long bCancelled )
//{
//	static UFunction* pFnEventFindGameComplete = NULL;
//
//	if ( ! pFnEventFindGameComplete )
//		pFnEventFindGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 52190 ];
//
//	UOnlineGameMatchmakingBase_X_execEventFindGameComplete_Parms EventFindGameComplete_Parms;
//	EventFindGameComplete_Parms.bCancelled = bCancelled;
//
//	this->ProcessEvent ( pFnEventFindGameComplete, &EventFindGameComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 52255 ];
//
//	UOnlineGameMatchmaking_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.IsMatchmakingDisabled
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameMatchmaking_X::IsMatchmakingDisabled ( )
//{
//	static UFunction* pFnIsMatchmakingDisabled = NULL;
//
//	if ( ! pFnIsMatchmakingDisabled )
//		pFnIsMatchmakingDisabled = (UFunction*) UObject::GObjObjects()->Data[ 52257 ];
//
//	UOnlineGameMatchmaking_X_execIsMatchmakingDisabled_Parms IsMatchmakingDisabled_Parms;
//
//	this->ProcessEvent ( pFnIsMatchmakingDisabled, &IsMatchmakingDisabled_Parms, NULL );
//
//	return IsMatchmakingDisabled_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetMetrics
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UMatchmakingMetrics_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
//
//class UMatchmakingMetrics_X* UOnlineGameMatchmaking_X::GetMetrics ( )
//{
//	static UFunction* pFnGetMetrics = NULL;
//
//	if ( ! pFnGetMetrics )
//		pFnGetMetrics = (UFunction*) UObject::GObjObjects()->Data[ 52243 ];
//
//	UOnlineGameMatchmaking_X_execGetMetrics_Parms GetMetrics_Parms;
//
//	this->ProcessEvent ( pFnGetMetrics, &GetMetrics_Parms, NULL );
//
//	return GetMetrics_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.SetSkillIgnored
//// [0x00020002] 
//// Parameters infos:
//// unsigned long                  bIgnore                        ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::SetSkillIgnored ( unsigned long bIgnore )
//{
//	static UFunction* pFnSetSkillIgnored = NULL;
//
//	if ( ! pFnSetSkillIgnored )
//		pFnSetSkillIgnored = (UFunction*) UObject::GObjObjects()->Data[ 52348 ];
//
//	UOnlineGameMatchmaking_X_execSetSkillIgnored_Parms SetSkillIgnored_Parms;
//	SetSkillIgnored_Parms.bIgnore = bIgnore;
//
//	this->ProcessEvent ( pFnSetSkillIgnored, &SetSkillIgnored_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.ToggleSkill
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameMatchmaking_X::ToggleSkill ( )
//{
//	static UFunction* pFnToggleSkill = NULL;
//
//	if ( ! pFnToggleSkill )
//		pFnToggleSkill = (UFunction*) UObject::GObjObjects()->Data[ 52350 ];
//
//	UOnlineGameMatchmaking_X_execToggleSkill_Parms ToggleSkill_Parms;
//
//	this->ProcessEvent ( pFnToggleSkill, &ToggleSkill_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.ClearMatchmakingBanTime
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameMatchmaking_X::ClearMatchmakingBanTime ( )
//{
//	static UFunction* pFnClearMatchmakingBanTime = NULL;
//
//	if ( ! pFnClearMatchmakingBanTime )
//		pFnClearMatchmakingBanTime = (UFunction*) UObject::GObjObjects()->Data[ 52253 ];
//
//	UOnlineGameMatchmaking_X_execClearMatchmakingBanTime_Parms ClearMatchmakingBanTime_Parms;
//
//	this->ProcessEvent ( pFnClearMatchmakingBanTime, &ClearMatchmakingBanTime_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.SetMatchmakingBanTime
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            Duration                       ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::SetMatchmakingBanTime ( int Duration )
//{
//	static UFunction* pFnSetMatchmakingBanTime = NULL;
//
//	if ( ! pFnSetMatchmakingBanTime )
//		pFnSetMatchmakingBanTime = (UFunction*) UObject::GObjObjects()->Data[ 52254 ];
//
//	UOnlineGameMatchmaking_X_execSetMatchmakingBanTime_Parms SetMatchmakingBanTime_Parms;
//	SetMatchmakingBanTime_Parms.Duration = Duration;
//
//	this->ProcessEvent ( pFnSetMatchmakingBanTime, &SetMatchmakingBanTime_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.HandlePartySizeChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//// int                            NewSize                        ( CPF_Parm )
//// int                            OldSize                        ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::HandlePartySizeChanged ( class UOnlineGameParty_X* PartyObject, int NewSize, int OldSize )
//{
//	static UFunction* pFnHandlePartySizeChanged = NULL;
//
//	if ( ! pFnHandlePartySizeChanged )
//		pFnHandlePartySizeChanged = (UFunction*) UObject::GObjObjects()->Data[ 52248 ];
//
//	UOnlineGameMatchmaking_X_execHandlePartySizeChanged_Parms HandlePartySizeChanged_Parms;
//	HandlePartySizeChanged_Parms.PartyObject = PartyObject;
//	HandlePartySizeChanged_Parms.NewSize = NewSize;
//	HandlePartySizeChanged_Parms.OldSize = OldSize;
//
//	this->ProcessEvent ( pFnHandlePartySizeChanged, &HandlePartySizeChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.HandlePartyDestroyed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameParty_X*      PartyObject                    ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::HandlePartyDestroyed ( class UOnlineGameParty_X* PartyObject )
//{
//	static UFunction* pFnHandlePartyDestroyed = NULL;
//
//	if ( ! pFnHandlePartyDestroyed )
//		pFnHandlePartyDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52246 ];
//
//	UOnlineGameMatchmaking_X_execHandlePartyDestroyed_Parms HandlePartyDestroyed_Parms;
//	HandlePartyDestroyed_Parms.PartyObject = PartyObject;
//
//	this->ProcessEvent ( pFnHandlePartyDestroyed, &HandlePartyDestroyed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.OnFindGameWarning
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 FailReason                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineGameMatchmaking_X::OnFindGameWarning ( struct FString FailReason )
//{
//	static UFunction* pFnOnFindGameWarning = NULL;
//
//	if ( ! pFnOnFindGameWarning )
//		pFnOnFindGameWarning = (UFunction*) UObject::GObjObjects()->Data[ 52241 ];
//
//	UOnlineGameMatchmaking_X_execOnFindGameWarning_Parms OnFindGameWarning_Parms;
//	memcpy ( &OnFindGameWarning_Parms.FailReason, &FailReason, 0xC );
//
//	this->ProcessEvent ( pFnOnFindGameWarning, &OnFindGameWarning_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetGameServerID
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameMatchmaking_X::GetGameServerID ( )
//{
//	static UFunction* pFnGetGameServerID = NULL;
//
//	if ( ! pFnGetGameServerID )
//		pFnGetGameServerID = (UFunction*) UObject::GObjObjects()->Data[ 52239 ];
//
//	UOnlineGameMatchmaking_X_execGetGameServerID_Parms GetGameServerID_Parms;
//
//	this->ProcessEvent ( pFnGetGameServerID, &GetGameServerID_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.SortPlaylists
//// [0x00080002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            A                              ( CPF_Parm )
//// int                            B                              ( CPF_Parm )
//
//int UOnlineGameMatchmaking_X::SortPlaylists ( int A, int B )
//{
//	static UFunction* pFnSortPlaylists = NULL;
//
//	if ( ! pFnSortPlaylists )
//		pFnSortPlaylists = (UFunction*) UObject::GObjObjects()->Data[ 52234 ];
//
//	UOnlineGameMatchmaking_X_execSortPlaylists_Parms SortPlaylists_Parms;
//	SortPlaylists_Parms.A = A;
//	SortPlaylists_Parms.B = B;
//
//	this->ProcessEvent ( pFnSortPlaylists, &SortPlaylists_Parms, NULL );
//
//	return SortPlaylists_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetPartyMembersString
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameMatchmaking_X::GetPartyMembersString ( )
//{
//	static UFunction* pFnGetPartyMembersString = NULL;
//
//	if ( ! pFnGetPartyMembersString )
//		pFnGetPartyMembersString = (UFunction*) UObject::GObjObjects()->Data[ 52238 ];
//
//	UOnlineGameMatchmaking_X_execGetPartyMembersString_Parms GetPartyMembersString_Parms;
//
//	this->ProcessEvent ( pFnGetPartyMembersString, &GetPartyMembersString_Parms, NULL );
//
//	return GetPartyMembersString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetLocalizedRegionsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameMatchmaking_X::GetLocalizedRegionsString ( )
//{
//	static UFunction* pFnGetLocalizedRegionsString = NULL;
//
//	if ( ! pFnGetLocalizedRegionsString )
//		pFnGetLocalizedRegionsString = (UFunction*) UObject::GObjObjects()->Data[ 52278 ];
//
//	UOnlineGameMatchmaking_X_execGetLocalizedRegionsString_Parms GetLocalizedRegionsString_Parms;
//
//	this->ProcessEvent ( pFnGetLocalizedRegionsString, &GetLocalizedRegionsString_Parms, NULL );
//
//	return GetLocalizedRegionsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetRegionsString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameMatchmaking_X::GetRegionsString ( )
//{
//	static UFunction* pFnGetRegionsString = NULL;
//
//	if ( ! pFnGetRegionsString )
//		pFnGetRegionsString = (UFunction*) UObject::GObjObjects()->Data[ 52231 ];
//
//	UOnlineGameMatchmaking_X_execGetRegionsString_Parms GetRegionsString_Parms;
//
//	this->ProcessEvent ( pFnGetRegionsString, &GetRegionsString_Parms, NULL );
//
//	return GetRegionsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetLocalizedPlaylistsString
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameMatchmaking_X::GetLocalizedPlaylistsString ( )
//{
//	static UFunction* pFnGetLocalizedPlaylistsString = NULL;
//
//	if ( ! pFnGetLocalizedPlaylistsString )
//		pFnGetLocalizedPlaylistsString = (UFunction*) UObject::GObjObjects()->Data[ 52233 ];
//
//	UOnlineGameMatchmaking_X_execGetLocalizedPlaylistsString_Parms GetLocalizedPlaylistsString_Parms;
//
//	this->ProcessEvent ( pFnGetLocalizedPlaylistsString, &GetLocalizedPlaylistsString_Parms, NULL );
//
//	return GetLocalizedPlaylistsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.GetPlaylistsString
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameMatchmaking_X::GetPlaylistsString ( )
//{
//	static UFunction* pFnGetPlaylistsString = NULL;
//
//	if ( ! pFnGetPlaylistsString )
//		pFnGetPlaylistsString = (UFunction*) UObject::GObjObjects()->Data[ 52229 ];
//
//	UOnlineGameMatchmaking_X_execGetPlaylistsString_Parms GetPlaylistsString_Parms;
//
//	this->ProcessEvent ( pFnGetPlaylistsString, &GetPlaylistsString_Parms, NULL );
//
//	return GetPlaylistsString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.OnExit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameMatchmaking_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 52228 ];
//
//	UOnlineGameMatchmaking_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.StartSearch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< int >                  InPreferredPlaylists           ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FString >       InPreferredRegions             ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< int >                  SortLocal_8CF2D37840C10F0023FFBD8C1293E6F2 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UOnlineGameMatchmaking_X::StartSearch ( TArray< int > InPreferredPlaylists, TArray< struct FString > InPreferredRegions, TArray< int >* SortLocal_8CF2D37840C10F0023FFBD8C1293E6F2 )
//{
//	static UFunction* pFnStartSearch = NULL;
//
//	if ( ! pFnStartSearch )
//		pFnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 52220 ];
//
//	UOnlineGameMatchmaking_X_execStartSearch_Parms StartSearch_Parms;
//	memcpy ( &StartSearch_Parms.InPreferredPlaylists, &InPreferredPlaylists, 0xC );
//	memcpy ( &StartSearch_Parms.InPreferredRegions, &InPreferredRegions, 0xC );
//
//	this->ProcessEvent ( pFnStartSearch, &StartSearch_Parms, NULL );
//
//	if ( SortLocal_8CF2D37840C10F0023FFBD8C1293E6F2 )
//		memcpy ( SortLocal_8CF2D37840C10F0023FFBD8C1293E6F2, &StartSearch_Parms.SortLocal_8CF2D37840C10F0023FFBD8C1293E6F2, 0xC );
//
//	return StartSearch_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameMatchmaking_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 52216 ];
//
//	UOnlineGameMatchmaking_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.EventMatchmakingCanceledOnPartySizeChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameMatchmaking_X* InMatchMaking                  ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::EventMatchmakingCanceledOnPartySizeChanged ( class UOnlineGameMatchmaking_X* InMatchMaking )
//{
//	static UFunction* pFnEventMatchmakingCanceledOnPartySizeChanged = NULL;
//
//	if ( ! pFnEventMatchmakingCanceledOnPartySizeChanged )
//		pFnEventMatchmakingCanceledOnPartySizeChanged = (UFunction*) UObject::GObjObjects()->Data[ 52217 ];
//
//	UOnlineGameMatchmaking_X_execEventMatchmakingCanceledOnPartySizeChanged_Parms EventMatchmakingCanceledOnPartySizeChanged_Parms;
//	EventMatchmakingCanceledOnPartySizeChanged_Parms.InMatchMaking = InMatchMaking;
//
//	this->ProcessEvent ( pFnEventMatchmakingCanceledOnPartySizeChanged, &EventMatchmakingCanceledOnPartySizeChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.EventMatchmakingError
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameMatchmaking_X* InMatchMaking                  ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::EventMatchmakingError ( class UOnlineGameMatchmaking_X* InMatchMaking, class UError* Error )
//{
//	static UFunction* pFnEventMatchmakingError = NULL;
//
//	if ( ! pFnEventMatchmakingError )
//		pFnEventMatchmakingError = (UFunction*) UObject::GObjObjects()->Data[ 52366 ];
//
//	UOnlineGameMatchmaking_X_execEventMatchmakingError_Parms EventMatchmakingError_Parms;
//	EventMatchmakingError_Parms.InMatchMaking = InMatchMaking;
//	EventMatchmakingError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventMatchmakingError, &EventMatchmakingError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameMatchmaking_X.EventStartSearch
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameMatchmakingBase_X* InMatchMaking                  ( CPF_Parm )
//
//void UOnlineGameMatchmaking_X::EventStartSearch ( class UOnlineGameMatchmakingBase_X* InMatchMaking )
//{
//	static UFunction* pFnEventStartSearch = NULL;
//
//	if ( ! pFnEventStartSearch )
//		pFnEventStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 52368 ];
//
//	UOnlineGameMatchmaking_X_execEventStartSearch_Parms EventStartSearch_Parms;
//	EventStartSearch_Parms.InMatchMaking = InMatchMaking;
//
//	this->ProcessEvent ( pFnEventStartSearch, &EventStartSearch_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.OnChanged
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameTrial_X::OnChanged ( )
//{
//	static UFunction* pFnOnChanged = NULL;
//
//	if ( ! pFnOnChanged )
//		pFnOnChanged = (UFunction*) UObject::GObjObjects()->Data[ 56504 ];
//
//	UOnlineGameTrial_X_execOnChanged_Parms OnChanged_Parms;
//
//	this->ProcessEvent ( pFnOnChanged, &OnChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.HandleMapChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameTrial_X::HandleMapChanged ( )
//{
//	static UFunction* pFnHandleMapChanged = NULL;
//
//	if ( ! pFnHandleMapChanged )
//		pFnHandleMapChanged = (UFunction*) UObject::GObjObjects()->Data[ 56503 ];
//
//	UOnlineGameTrial_X_execHandleMapChanged_Parms HandleMapChanged_Parms;
//
//	this->ProcessEvent ( pFnHandleMapChanged, &HandleMapChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.OverrideTrialMode
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bTrial                         ( CPF_Parm )
//
//void UOnlineGameTrial_X::OverrideTrialMode ( unsigned long bTrial )
//{
//	static UFunction* pFnOverrideTrialMode = NULL;
//
//	if ( ! pFnOverrideTrialMode )
//		pFnOverrideTrialMode = (UFunction*) UObject::GObjObjects()->Data[ 56501 ];
//
//	UOnlineGameTrial_X_execOverrideTrialMode_Parms OverrideTrialMode_Parms;
//	OverrideTrialMode_Parms.bTrial = bTrial;
//
//	this->ProcessEvent ( pFnOverrideTrialMode, &OverrideTrialMode_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.SetUpdateTimer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameTrial_X::SetUpdateTimer ( )
//{
//	static UFunction* pFnSetUpdateTimer = NULL;
//
//	if ( ! pFnSetUpdateTimer )
//		pFnSetUpdateTimer = (UFunction*) UObject::GObjObjects()->Data[ 56483 ];
//
//	UOnlineGameTrial_X_execSetUpdateTimer_Parms SetUpdateTimer_Parms;
//
//	this->ProcessEvent ( pFnSetUpdateTimer, &SetUpdateTimer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.SetTime
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            InMinutesRemaining             ( CPF_Parm )
//
//void UOnlineGameTrial_X::SetTime ( int InMinutesRemaining )
//{
//	static UFunction* pFnSetTime = NULL;
//
//	if ( ! pFnSetTime )
//		pFnSetTime = (UFunction*) UObject::GObjObjects()->Data[ 56495 ];
//
//	UOnlineGameTrial_X_execSetTime_Parms SetTime_Parms;
//	SetTime_Parms.InMinutesRemaining = InMinutesRemaining;
//
//	this->ProcessEvent ( pFnSetTime, &SetTime_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.CommitTimePlayed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameTrial_X::CommitTimePlayed ( )
//{
//	static UFunction* pFnCommitTimePlayed = NULL;
//
//	if ( ! pFnCommitTimePlayed )
//		pFnCommitTimePlayed = (UFunction*) UObject::GObjObjects()->Data[ 56488 ];
//
//	UOnlineGameTrial_X_execCommitTimePlayed_Parms CommitTimePlayed_Parms;
//
//	this->ProcessEvent ( pFnCommitTimePlayed, &CommitTimePlayed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.AccummulateTimePlayed
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            InSecondsPlayed                ( CPF_Parm )
//
//void UOnlineGameTrial_X::AccummulateTimePlayed ( int InSecondsPlayed )
//{
//	static UFunction* pFnAccummulateTimePlayed = NULL;
//
//	if ( ! pFnAccummulateTimePlayed )
//		pFnAccummulateTimePlayed = (UFunction*) UObject::GObjObjects()->Data[ 56486 ];
//
//	UOnlineGameTrial_X_execAccummulateTimePlayed_Parms AccummulateTimePlayed_Parms;
//	AccummulateTimePlayed_Parms.InSecondsPlayed = InSecondsPlayed;
//
//	this->ProcessEvent ( pFnAccummulateTimePlayed, &AccummulateTimePlayed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.GetSecondsSinceLastPlayTime
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UOnlineGameTrial_X::GetSecondsSinceLastPlayTime ( )
//{
//	static UFunction* pFnGetSecondsSinceLastPlayTime = NULL;
//
//	if ( ! pFnGetSecondsSinceLastPlayTime )
//		pFnGetSecondsSinceLastPlayTime = (UFunction*) UObject::GObjObjects()->Data[ 56484 ];
//
//	UOnlineGameTrial_X_execGetSecondsSinceLastPlayTime_Parms GetSecondsSinceLastPlayTime_Parms;
//
//	this->ProcessEvent ( pFnGetSecondsSinceLastPlayTime, &GetSecondsSinceLastPlayTime_Parms, NULL );
//
//	return GetSecondsSinceLastPlayTime_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameTrial_X.HandleGetTrialDataRPC
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetTrialData_X*     RPC                            ( CPF_Parm )
//
//void UOnlineGameTrial_X::HandleGetTrialDataRPC ( class URPC_GetTrialData_X* RPC )
//{
//	static UFunction* pFnHandleGetTrialDataRPC = NULL;
//
//	if ( ! pFnHandleGetTrialDataRPC )
//		pFnHandleGetTrialDataRPC = (UFunction*) UObject::GObjObjects()->Data[ 56478 ];
//
//	UOnlineGameTrial_X_execHandleGetTrialDataRPC_Parms HandleGetTrialDataRPC_Parms;
//	HandleGetTrialDataRPC_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleGetTrialDataRPC, &HandleGetTrialDataRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.SyncTrialData
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameTrial_X::SyncTrialData ( )
//{
//	static UFunction* pFnSyncTrialData = NULL;
//
//	if ( ! pFnSyncTrialData )
//		pFnSyncTrialData = (UFunction*) UObject::GObjObjects()->Data[ 56476 ];
//
//	UOnlineGameTrial_X_execSyncTrialData_Parms SyncTrialData_Parms;
//
//	this->ProcessEvent ( pFnSyncTrialData, &SyncTrialData_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.HandlePsyNetLogin
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameTrial_X::HandlePsyNetLogin ( )
//{
//	static UFunction* pFnHandlePsyNetLogin = NULL;
//
//	if ( ! pFnHandlePsyNetLogin )
//		pFnHandlePsyNetLogin = (UFunction*) UObject::GObjObjects()->Data[ 56475 ];
//
//	UOnlineGameTrial_X_execHandlePsyNetLogin_Parms HandlePsyNetLogin_Parms;
//
//	this->ProcessEvent ( pFnHandlePsyNetLogin, &HandlePsyNetLogin_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.UpdateTrialStatus
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameTrial_X::UpdateTrialStatus ( )
//{
//	static UFunction* pFnUpdateTrialStatus = NULL;
//
//	if ( ! pFnUpdateTrialStatus )
//		pFnUpdateTrialStatus = (UFunction*) UObject::GObjObjects()->Data[ 56473 ];
//
//	UOnlineGameTrial_X_execUpdateTrialStatus_Parms UpdateTrialStatus_Parms;
//
//	this->ProcessEvent ( pFnUpdateTrialStatus, &UpdateTrialStatus_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.IsTrialExpired
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameTrial_X::IsTrialExpired ( )
//{
//	static UFunction* pFnIsTrialExpired = NULL;
//
//	if ( ! pFnIsTrialExpired )
//		pFnIsTrialExpired = (UFunction*) UObject::GObjObjects()->Data[ 51378 ];
//
//	UOnlineGameTrial_X_execIsTrialExpired_Parms IsTrialExpired_Parms;
//
//	this->ProcessEvent ( pFnIsTrialExpired, &IsTrialExpired_Parms, NULL );
//
//	return IsTrialExpired_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameTrial_X.IsFullVersion
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameTrial_X::IsFullVersion ( )
//{
//	static UFunction* pFnIsFullVersion = NULL;
//
//	if ( ! pFnIsFullVersion )
//		pFnIsFullVersion = (UFunction*) UObject::GObjObjects()->Data[ 54511 ];
//
//	UOnlineGameTrial_X_execIsFullVersion_Parms IsFullVersion_Parms;
//
//	this->ProcessEvent ( pFnIsFullVersion, &IsFullVersion_Parms, NULL );
//
//	return IsFullVersion_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameTrial_X.IsTrialVersion
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameTrial_X::IsTrialVersion ( )
//{
//	static UFunction* pFnIsTrialVersion = NULL;
//
//	if ( ! pFnIsTrialVersion )
//		pFnIsTrialVersion = (UFunction*) UObject::GObjObjects()->Data[ 54569 ];
//
//	UOnlineGameTrial_X_execIsTrialVersion_Parms IsTrialVersion_Parms;
//
//	this->ProcessEvent ( pFnIsTrialVersion, &IsTrialVersion_Parms, NULL );
//
//	return IsTrialVersion_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameTrial_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameTrial_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 56472 ];
//
//	UOnlineGameTrial_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameTrial_X.EventUpdated
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineGameTrial_X*      Trial                          ( CPF_Parm )
//
//void UOnlineGameTrial_X::EventUpdated ( class UOnlineGameTrial_X* Trial )
//{
//	static UFunction* pFnEventUpdated = NULL;
//
//	if ( ! pFnEventUpdated )
//		pFnEventUpdated = (UFunction*) UObject::GObjObjects()->Data[ 56464 ];
//
//	UOnlineGameTrial_X_execEventUpdated_Parms EventUpdated_Parms;
//	EventUpdated_Parms.Trial = Trial;
//
//	this->ProcessEvent ( pFnEventUpdated, &EventUpdated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVersion_X.HandleError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameVersion_X::HandleError ( class UError* Error )
//{
//	static UFunction* pFnHandleError = NULL;
//
//	if ( ! pFnHandleError )
//		pFnHandleError = (UFunction*) UObject::GObjObjects()->Data[ 56905 ];
//
//	UOnlineGameVersion_X_execHandleError_Parms HandleError_Parms;
//	HandleError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleError, &HandleError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVersion_X.HandleServerBrowserError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameServerBrowser_X* Browser                        ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameVersion_X::HandleServerBrowserError ( class UOnlineGameServerBrowser_X* Browser, class UError* Error )
//{
//	static UFunction* pFnHandleServerBrowserError = NULL;
//
//	if ( ! pFnHandleServerBrowserError )
//		pFnHandleServerBrowserError = (UFunction*) UObject::GObjObjects()->Data[ 56912 ];
//
//	UOnlineGameVersion_X_execHandleServerBrowserError_Parms HandleServerBrowserError_Parms;
//	HandleServerBrowserError_Parms.Browser = Browser;
//	HandleServerBrowserError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleServerBrowserError, &HandleServerBrowserError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVersion_X.HandlePrivateMatchError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGamePrivateMatch_X* InPrivateMatch                 ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameVersion_X::HandlePrivateMatchError ( class UOnlineGamePrivateMatch_X* InPrivateMatch, class UError* Error )
//{
//	static UFunction* pFnHandlePrivateMatchError = NULL;
//
//	if ( ! pFnHandlePrivateMatchError )
//		pFnHandlePrivateMatchError = (UFunction*) UObject::GObjObjects()->Data[ 56909 ];
//
//	UOnlineGameVersion_X_execHandlePrivateMatchError_Parms HandlePrivateMatchError_Parms;
//	HandlePrivateMatchError_Parms.InPrivateMatch = InPrivateMatch;
//	HandlePrivateMatchError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandlePrivateMatchError, &HandlePrivateMatchError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVersion_X.HandleRegionsError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameRegions_X*    InRegions                      ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameVersion_X::HandleRegionsError ( class UOnlineGameRegions_X* InRegions, class UError* Error )
//{
//	static UFunction* pFnHandleRegionsError = NULL;
//
//	if ( ! pFnHandleRegionsError )
//		pFnHandleRegionsError = (UFunction*) UObject::GObjObjects()->Data[ 56906 ];
//
//	UOnlineGameVersion_X_execHandleRegionsError_Parms HandleRegionsError_Parms;
//	HandleRegionsError_Parms.InRegions = InRegions;
//	HandleRegionsError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleRegionsError, &HandleRegionsError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVersion_X.HandleMatchmakingError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameMatchmaking_X* InMatchMaking                  ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlineGameVersion_X::HandleMatchmakingError ( class UOnlineGameMatchmaking_X* InMatchMaking, class UError* Error )
//{
//	static UFunction* pFnHandleMatchmakingError = NULL;
//
//	if ( ! pFnHandleMatchmakingError )
//		pFnHandleMatchmakingError = (UFunction*) UObject::GObjObjects()->Data[ 56902 ];
//
//	UOnlineGameVersion_X_execHandleMatchmakingError_Parms HandleMatchmakingError_Parms;
//	HandleMatchmakingError_Parms.InMatchMaking = InMatchMaking;
//	HandleMatchmakingError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleMatchmakingError, &HandleMatchmakingError_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameVersion_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameVersion_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 56901 ];
//
//	UOnlineGameVersion_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.LanBrowser_X.JoinServer
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ServerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* ULanBrowser_X::JoinServer ( struct FString ServerID, struct FString Options )
//{
//	static UFunction* pFnJoinServer = NULL;
//
//	if ( ! pFnJoinServer )
//		pFnJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 57300 ];
//
//	ULanBrowser_X_execJoinServer_Parms JoinServer_Parms;
//	memcpy ( &JoinServer_Parms.ServerID, &ServerID, 0xC );
//	memcpy ( &JoinServer_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnJoinServer, &JoinServer_Parms, NULL );
//
//	return JoinServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanBrowser_X.GetServerList
//// [0x00020002] 
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class ULanSearchTask* ULanBrowser_X::GetServerList ( )
//{
//	static UFunction* pFnGetServerList = NULL;
//
//	if ( ! pFnGetServerList )
//		pFnGetServerList = (UFunction*) UObject::GObjObjects()->Data[ 57296 ];
//
//	ULanBrowser_X_execGetServerList_Parms GetServerList_Parms;
//
//	this->ProcessEvent ( pFnGetServerList, &GetServerList_Parms, NULL );
//
//	return GetServerList_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanBrowser_X.DestroyServer
//// [0x00020000] 
//// Parameters infos:
//
//void ULanBrowser_X::DestroyServer ( )
//{
//	static UFunction* pFnDestroyServer = NULL;
//
//	if ( ! pFnDestroyServer )
//		pFnDestroyServer = (UFunction*) UObject::GObjObjects()->Data[ 57295 ];
//
//	ULanBrowser_X_execDestroyServer_Parms DestroyServer_Parms;
//
//	this->ProcessEvent ( pFnDestroyServer, &DestroyServer_Parms, NULL );
//};
//
//// Function ProjectX.LanBrowser_X.SetServerMetaData
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MetaData                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* ULanBrowser_X::SetServerMetaData ( struct FString MetaData )
//{
//	static UFunction* pFnSetServerMetaData = NULL;
//
//	if ( ! pFnSetServerMetaData )
//		pFnSetServerMetaData = (UFunction*) UObject::GObjObjects()->Data[ 57067 ];
//
//	ULanBrowser_X_execSetServerMetaData_Parms SetServerMetaData_Parms;
//	memcpy ( &SetServerMetaData_Parms.MetaData, &MetaData, 0xC );
//
//	this->ProcessEvent ( pFnSetServerMetaData, &SetServerMetaData_Parms, NULL );
//
//	return SetServerMetaData_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanBrowser_X.CreateServer
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MetaData                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* ULanBrowser_X::CreateServer ( struct FString MetaData )
//{
//	static UFunction* pFnCreateServer = NULL;
//
//	if ( ! pFnCreateServer )
//		pFnCreateServer = (UFunction*) UObject::GObjObjects()->Data[ 57290 ];
//
//	ULanBrowser_X_execCreateServer_Parms CreateServer_Parms;
//	memcpy ( &CreateServer_Parms.MetaData, &MetaData, 0xC );
//
//	this->ProcessEvent ( pFnCreateServer, &CreateServer_Parms, NULL );
//
//	return CreateServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanBrowser_X.HandleGameInfoSpawned
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class AGameInfo_X*             G                              ( CPF_Parm )
//
//void ULanBrowser_X::HandleGameInfoSpawned ( class AGameInfo_X* G )
//{
//	static UFunction* pFnHandleGameInfoSpawned = NULL;
//
//	if ( ! pFnHandleGameInfoSpawned )
//		pFnHandleGameInfoSpawned = (UFunction*) UObject::GObjObjects()->Data[ 57288 ];
//
//	ULanBrowser_X_execHandleGameInfoSpawned_Parms HandleGameInfoSpawned_Parms;
//	HandleGameInfoSpawned_Parms.G = G;
//
//	this->ProcessEvent ( pFnHandleGameInfoSpawned, &HandleGameInfoSpawned_Parms, NULL );
//};
//
//// Function ProjectX.LanBrowser_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void ULanBrowser_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 57287 ];
//
//	ULanBrowser_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanBrowser_X.JoinServer
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ServerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UUdpLanBrowser_X::JoinServer ( struct FString ServerID, struct FString Options )
//{
//	static UFunction* pFnJoinServer = NULL;
//
//	if ( ! pFnJoinServer )
//		pFnJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 58696 ];
//
//	UUdpLanBrowser_X_execJoinServer_Parms JoinServer_Parms;
//	memcpy ( &JoinServer_Parms.ServerID, &ServerID, 0xC );
//	memcpy ( &JoinServer_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnJoinServer, &JoinServer_Parms, NULL );
//
//	return JoinServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.UdpLanBrowser_X.HandleSearchTimeout
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UUdpLanBrowser_X::HandleSearchTimeout ( )
//{
//	static UFunction* pFnHandleSearchTimeout = NULL;
//
//	if ( ! pFnHandleSearchTimeout )
//		pFnHandleSearchTimeout = (UFunction*) UObject::GObjObjects()->Data[ 58695 ];
//
//	UUdpLanBrowser_X_execHandleSearchTimeout_Parms HandleSearchTimeout_Parms;
//
//	this->ProcessEvent ( pFnHandleSearchTimeout, &HandleSearchTimeout_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanBrowser_X.HandleHostResponse
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class ULanMessage_HostResponse_X* Response                       ( CPF_Parm )
//
//void UUdpLanBrowser_X::HandleHostResponse ( class UOnlineMessageComponent_X* Component, class ULanMessage_HostResponse_X* Response )
//{
//	static UFunction* pFnHandleHostResponse = NULL;
//
//	if ( ! pFnHandleHostResponse )
//		pFnHandleHostResponse = (UFunction*) UObject::GObjObjects()->Data[ 58691 ];
//
//	UUdpLanBrowser_X_execHandleHostResponse_Parms HandleHostResponse_Parms;
//	HandleHostResponse_Parms.Component = Component;
//	HandleHostResponse_Parms.Response = Response;
//
//	this->ProcessEvent ( pFnHandleHostResponse, &HandleHostResponse_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanBrowser_X.SearchTaskDisposed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UUdpLanBrowser_X::SearchTaskDisposed ( )
//{
//	static UFunction* pFnSearchTaskDisposed = NULL;
//
//	if ( ! pFnSearchTaskDisposed )
//		pFnSearchTaskDisposed = (UFunction*) UObject::GObjObjects()->Data[ 58690 ];
//
//	UUdpLanBrowser_X_execSearchTaskDisposed_Parms SearchTaskDisposed_Parms;
//
//	this->ProcessEvent ( pFnSearchTaskDisposed, &SearchTaskDisposed_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanBrowser_X.GetServerList
//// [0x00020002] 
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class ULanSearchTask* UUdpLanBrowser_X::GetServerList ( )
//{
//	static UFunction* pFnGetServerList = NULL;
//
//	if ( ! pFnGetServerList )
//		pFnGetServerList = (UFunction*) UObject::GObjObjects()->Data[ 58688 ];
//
//	UUdpLanBrowser_X_execGetServerList_Parms GetServerList_Parms;
//
//	this->ProcessEvent ( pFnGetServerList, &GetServerList_Parms, NULL );
//
//	return GetServerList_Parms.ReturnValue;
//};
//
//// Function ProjectX.UdpLanBrowser_X.DestroyServer
//// [0x00020002] 
//// Parameters infos:
//
//void UUdpLanBrowser_X::DestroyServer ( )
//{
//	static UFunction* pFnDestroyServer = NULL;
//
//	if ( ! pFnDestroyServer )
//		pFnDestroyServer = (UFunction*) UObject::GObjObjects()->Data[ 58687 ];
//
//	UUdpLanBrowser_X_execDestroyServer_Parms DestroyServer_Parms;
//
//	this->ProcessEvent ( pFnDestroyServer, &DestroyServer_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanBrowser_X.SetServerMetaData
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MetaData                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UUdpLanBrowser_X::SetServerMetaData ( struct FString MetaData )
//{
//	static UFunction* pFnSetServerMetaData = NULL;
//
//	if ( ! pFnSetServerMetaData )
//		pFnSetServerMetaData = (UFunction*) UObject::GObjObjects()->Data[ 58682 ];
//
//	UUdpLanBrowser_X_execSetServerMetaData_Parms SetServerMetaData_Parms;
//	memcpy ( &SetServerMetaData_Parms.MetaData, &MetaData, 0xC );
//
//	this->ProcessEvent ( pFnSetServerMetaData, &SetServerMetaData_Parms, NULL );
//
//	return SetServerMetaData_Parms.ReturnValue;
//};
//
//// Function ProjectX.UdpLanBrowser_X.CreateServer
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MetaData                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UUdpLanBrowser_X::CreateServer ( struct FString MetaData )
//{
//	static UFunction* pFnCreateServer = NULL;
//
//	if ( ! pFnCreateServer )
//		pFnCreateServer = (UFunction*) UObject::GObjObjects()->Data[ 58678 ];
//
//	UUdpLanBrowser_X_execCreateServer_Parms CreateServer_Parms;
//	memcpy ( &CreateServer_Parms.MetaData, &MetaData, 0xC );
//
//	this->ProcessEvent ( pFnCreateServer, &CreateServer_Parms, NULL );
//
//	return CreateServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.SystemMetrics_X.Specs
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FOSMetrics              OS                             ( CPF_Parm | CPF_NeedCtorLink )
//// struct FCpuMetrics             CPU                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FMemoryMetrics          Memory                         ( CPF_Parm )
//// struct FVideoCardMetrics       Video                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FNetworkAdapterMetrics  Network                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void USystemMetrics_X::Specs ( struct FOSMetrics OS, struct FCpuMetrics CPU, struct FMemoryMetrics Memory, struct FVideoCardMetrics Video, struct FNetworkAdapterMetrics Network )
//{
//	static UFunction* pFnSpecs = NULL;
//
//	if ( ! pFnSpecs )
//		pFnSpecs = (UFunction*) UObject::GObjObjects()->Data[ 58755 ];
//
//	USystemMetrics_X_execSpecs_Parms Specs_Parms;
//	memcpy ( &Specs_Parms.OS, &OS, 0x18 );
//	memcpy ( &Specs_Parms.CPU, &CPU, 0x30 );
//	memcpy ( &Specs_Parms.Memory, &Memory, 0x4 );
//	memcpy ( &Specs_Parms.Video, &Video, 0x10 );
//	memcpy ( &Specs_Parms.Network, &Network, 0xC );
//
//	this->ProcessEvent ( pFnSpecs, &Specs_Parms, NULL );
//};
//
//// Function ProjectX.SystemMetrics_X.RecordSpecs
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//
//void USystemMetrics_X::RecordSpecs ( )
//{
//	static UFunction* pFnRecordSpecs = NULL;
//
//	if ( ! pFnRecordSpecs )
//		pFnRecordSpecs = (UFunction*) UObject::GObjObjects()->Data[ 50698 ];
//
//	USystemMetrics_X_execRecordSpecs_Parms RecordSpecs_Parms;
//
//	this->ProcessEvent ( pFnRecordSpecs, &RecordSpecs_Parms, NULL );
//};
//
//// Function ProjectX.RPC_UpdatePlayerPlaylist_X.SetNumLocalPlayers
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdatePlayerPlaylist_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InNumLocalPlayers              ( CPF_Parm )
//
//class URPC_UpdatePlayerPlaylist_X* URPC_UpdatePlayerPlaylist_X::SetNumLocalPlayers ( int InNumLocalPlayers )
//{
//	static UFunction* pFnSetNumLocalPlayers = NULL;
//
//	if ( ! pFnSetNumLocalPlayers )
//		pFnSetNumLocalPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50865 ];
//
//	URPC_UpdatePlayerPlaylist_X_execSetNumLocalPlayers_Parms SetNumLocalPlayers_Parms;
//	SetNumLocalPlayers_Parms.InNumLocalPlayers = InNumLocalPlayers;
//
//	this->ProcessEvent ( pFnSetNumLocalPlayers, &SetNumLocalPlayers_Parms, NULL );
//
//	return SetNumLocalPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdatePlayerPlaylist_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdatePlayerPlaylist_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_UpdatePlayerPlaylist_X* URPC_UpdatePlayerPlaylist_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 50863 ];
//
//	URPC_UpdatePlayerPlaylist_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.SetText
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 NewText                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineStaticTextSync_X::SetText ( struct FString NewText )
//{
//	static UFunction* pFnSetText = NULL;
//
//	if ( ! pFnSetText )
//		pFnSetText = (UFunction*) UObject::GObjObjects()->Data[ 50897 ];
//
//	UOnlineStaticTextSync_X_execSetText_Parms SetText_Parms;
//	memcpy ( &SetText_Parms.NewText, &NewText, 0xC );
//
//	this->ProcessEvent ( pFnSetText, &SetText_Parms, NULL );
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.ParseBlogInfo
//// [0x00080000] 
//// Parameters infos:
//
//void UOnlineStaticTextSync_X::ParseBlogInfo ( )
//{
//	static UFunction* pFnParseBlogInfo = NULL;
//
//	if ( ! pFnParseBlogInfo )
//		pFnParseBlogInfo = (UFunction*) UObject::GObjObjects()->Data[ 50899 ];
//
//	UOnlineStaticTextSync_X_execParseBlogInfo_Parms ParseBlogInfo_Parms;
//
//	this->ProcessEvent ( pFnParseBlogInfo, &ParseBlogInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.HandleTextSync
//// [0x00080002] 
//// Parameters infos:
//// class UWebRequest_X*           Request                        ( CPF_Parm )
//
//void UOnlineStaticTextSync_X::HandleTextSync ( class UWebRequest_X* Request )
//{
//	static UFunction* pFnHandleTextSync = NULL;
//
//	if ( ! pFnHandleTextSync )
//		pFnHandleTextSync = (UFunction*) UObject::GObjObjects()->Data[ 50891 ];
//
//	UOnlineStaticTextSync_X_execHandleTextSync_Parms HandleTextSync_Parms;
//	HandleTextSync_Parms.Request = Request;
//
//	this->ProcessEvent ( pFnHandleTextSync, &HandleTextSync_Parms, NULL );
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.GetText
//// [0x00024002] 
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlineStaticTextSync_X::GetText ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnGetText = NULL;
//
//	if ( ! pFnGetText )
//		pFnGetText = (UFunction*) UObject::GObjObjects()->Data[ 50885 ];
//
//	UOnlineStaticTextSync_X_execGetText_Parms GetText_Parms;
//	memcpy ( &GetText_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnGetText, &GetText_Parms, NULL );
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.GetDBEnvironment
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineStaticTextSync_X::GetDBEnvironment ( )
//{
//	static UFunction* pFnGetDBEnvironment = NULL;
//
//	if ( ! pFnGetDBEnvironment )
//		pFnGetDBEnvironment = (UFunction*) UObject::GObjObjects()->Data[ 50882 ];
//
//	UOnlineStaticTextSync_X_execGetDBEnvironment_Parms GetDBEnvironment_Parms;
//
//	this->ProcessEvent ( pFnGetDBEnvironment, &GetDBEnvironment_Parms, NULL );
//
//	return GetDBEnvironment_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.EventTextSynced
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineStaticTextSync_X* TextSync                       ( CPF_Parm | CPF_EditInline )
//
//void UOnlineStaticTextSync_X::EventTextSynced ( class UOnlineStaticTextSync_X* TextSync )
//{
//	static UFunction* pFnEventTextSynced = NULL;
//
//	if ( ! pFnEventTextSynced )
//		pFnEventTextSynced = (UFunction*) UObject::GObjObjects()->Data[ 50872 ];
//
//	UOnlineStaticTextSync_X_execEventTextSynced_Parms EventTextSynced_Parms;
//	EventTextSynced_Parms.TextSync = TextSync;
//
//	this->ProcessEvent ( pFnEventTextSynced, &EventTextSynced_Parms, NULL );
//};
//
//// Function ProjectX.OnlineStaticTextSync_X.EventTextChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineStaticTextSync_X* TextSync                       ( CPF_Parm | CPF_EditInline )
//
//void UOnlineStaticTextSync_X::EventTextChanged ( class UOnlineStaticTextSync_X* TextSync )
//{
//	static UFunction* pFnEventTextChanged = NULL;
//
//	if ( ! pFnEventTextChanged )
//		pFnEventTextChanged = (UFunction*) UObject::GObjObjects()->Data[ 50874 ];
//
//	UOnlineStaticTextSync_X_execEventTextChanged_Parms EventTextChanged_Parms;
//	EventTextChanged_Parms.TextSync = TextSync;
//
//	this->ProcessEvent ( pFnEventTextChanged, &EventTextChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameBlog_X.__OnlineGameBlog_X__GetMotD
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FMotDMessage            M                              ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameBlog_X::__OnlineGameBlog_X__GetMotD ( struct FMotDMessage M )
//{
//	static UFunction* pFn__OnlineGameBlog_X__GetMotD = NULL;
//
//	if ( ! pFn__OnlineGameBlog_X__GetMotD )
//		pFn__OnlineGameBlog_X__GetMotD = (UFunction*) UObject::GObjObjects()->Data[ 50906 ];
//
//	UOnlineGameBlog_X_exec__OnlineGameBlog_X__GetMotD_Parms __OnlineGameBlog_X__GetMotD_Parms;
//	memcpy ( &__OnlineGameBlog_X__GetMotD_Parms.M, &M, 0x14 );
//
//	this->ProcessEvent ( pFn__OnlineGameBlog_X__GetMotD, &__OnlineGameBlog_X__GetMotD_Parms, NULL );
//
//	return __OnlineGameBlog_X__GetMotD_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameBlog_X.AddUniqueMotDMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 NewMessage                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FName                   NewMessageTag                  ( CPF_Parm )
//
//void UOnlineGameBlog_X::AddUniqueMotDMessage ( struct FString NewMessage, struct FName NewMessageTag )
//{
//	static UFunction* pFnAddUniqueMotDMessage = NULL;
//
//	if ( ! pFnAddUniqueMotDMessage )
//		pFnAddUniqueMotDMessage = (UFunction*) UObject::GObjObjects()->Data[ 50907 ];
//
//	UOnlineGameBlog_X_execAddUniqueMotDMessage_Parms AddUniqueMotDMessage_Parms;
//	memcpy ( &AddUniqueMotDMessage_Parms.NewMessage, &NewMessage, 0xC );
//	memcpy ( &AddUniqueMotDMessage_Parms.NewMessageTag, &NewMessageTag, 0x8 );
//
//	this->ProcessEvent ( pFnAddUniqueMotDMessage, &AddUniqueMotDMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameBlog_X.AddAdditionalMotDMessage
//// [0x00824003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 NewMessage                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FName                   NewMessageTag                  ( CPF_OptionalParm | CPF_Parm )
//// struct FMotDMessage            StructInitializer_69BFD2EB428217AC9E59FB8919D90A23 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameBlog_X::AddAdditionalMotDMessage ( struct FString NewMessage, struct FName NewMessageTag, struct FMotDMessage* StructInitializer_69BFD2EB428217AC9E59FB8919D90A23 )
//{
//	static UFunction* pFnAddAdditionalMotDMessage = NULL;
//
//	if ( ! pFnAddAdditionalMotDMessage )
//		pFnAddAdditionalMotDMessage = (UFunction*) UObject::GObjObjects()->Data[ 50913 ];
//
//	UOnlineGameBlog_X_execAddAdditionalMotDMessage_Parms AddAdditionalMotDMessage_Parms;
//	memcpy ( &AddAdditionalMotDMessage_Parms.NewMessage, &NewMessage, 0xC );
//	memcpy ( &AddAdditionalMotDMessage_Parms.NewMessageTag, &NewMessageTag, 0x8 );
//
//	this->ProcessEvent ( pFnAddAdditionalMotDMessage, &AddAdditionalMotDMessage_Parms, NULL );
//
//	if ( StructInitializer_69BFD2EB428217AC9E59FB8919D90A23 )
//		memcpy ( StructInitializer_69BFD2EB428217AC9E59FB8919D90A23, &AddAdditionalMotDMessage_Parms.StructInitializer_69BFD2EB428217AC9E59FB8919D90A23, 0x14 );
//};
//
//// Function ProjectX.OnlineGameBlog_X.RemoveAdditionalMessagesByTag
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   MessageTag                     ( CPF_Parm )
//// TArray< struct FMotDMessage >  FilterLocal_A4978CA04506E5A2C8E9F1B70DD1C739 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameBlog_X::RemoveAdditionalMessagesByTag ( struct FName MessageTag, TArray< struct FMotDMessage >* FilterLocal_A4978CA04506E5A2C8E9F1B70DD1C739 )
//{
//	static UFunction* pFnRemoveAdditionalMessagesByTag = NULL;
//
//	if ( ! pFnRemoveAdditionalMessagesByTag )
//		pFnRemoveAdditionalMessagesByTag = (UFunction*) UObject::GObjObjects()->Data[ 50915 ];
//
//	UOnlineGameBlog_X_execRemoveAdditionalMessagesByTag_Parms RemoveAdditionalMessagesByTag_Parms;
//	memcpy ( &RemoveAdditionalMessagesByTag_Parms.MessageTag, &MessageTag, 0x8 );
//
//	this->ProcessEvent ( pFnRemoveAdditionalMessagesByTag, &RemoveAdditionalMessagesByTag_Parms, NULL );
//
//	if ( FilterLocal_A4978CA04506E5A2C8E9F1B70DD1C739 )
//		memcpy ( FilterLocal_A4978CA04506E5A2C8E9F1B70DD1C739, &RemoveAdditionalMessagesByTag_Parms.FilterLocal_A4978CA04506E5A2C8E9F1B70DD1C739, 0xC );
//};
//
//// Function ProjectX.OnlineGameBlog_X.GetMotD
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FString >       MapLocal_FD964BB94FFAB060CFCE83A355E93A49 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameBlog_X::GetMotD ( TArray< struct FString >* MapLocal_FD964BB94FFAB060CFCE83A355E93A49 )
//{
//	static UFunction* pFnGetMotD = NULL;
//
//	if ( ! pFnGetMotD )
//		pFnGetMotD = (UFunction*) UObject::GObjObjects()->Data[ 50921 ];
//
//	UOnlineGameBlog_X_execGetMotD_Parms GetMotD_Parms;
//
//	this->ProcessEvent ( pFnGetMotD, &GetMotD_Parms, NULL );
//
//	if ( MapLocal_FD964BB94FFAB060CFCE83A355E93A49 )
//		memcpy ( MapLocal_FD964BB94FFAB060CFCE83A355E93A49, &GetMotD_Parms.MapLocal_FD964BB94FFAB060CFCE83A355E93A49, 0xC );
//
//	return GetMotD_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameBlog_X.ParseBlogInfo
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameBlog_X::ParseBlogInfo ( )
//{
//	static UFunction* pFnParseBlogInfo = NULL;
//
//	if ( ! pFnParseBlogInfo )
//		pFnParseBlogInfo = (UFunction*) UObject::GObjObjects()->Data[ 50928 ];
//
//	UOnlineGameBlog_X_execParseBlogInfo_Parms ParseBlogInfo_Parms;
//
//	this->ProcessEvent ( pFnParseBlogInfo, &ParseBlogInfo_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameBlog_X.Init
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameBlog_X::Init ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50902 ];
//
//	UOnlineGameBlog_X_execInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.__OnlineGameBlog_X__RemoveAdditionalMessagesByTag.__OnlineGameBlog_X__RemoveAdditionalMessagesByTag
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FMotDMessage            M                              ( CPF_Parm | CPF_NeedCtorLink )
//
//bool U__OnlineGameBlog_X__RemoveAdditionalMessagesByTag::__OnlineGameBlog_X__RemoveAdditionalMessagesByTag ( struct FMotDMessage M )
//{
//	static UFunction* pFn__OnlineGameBlog_X__RemoveAdditionalMessagesByTag = NULL;
//
//	if ( ! pFn__OnlineGameBlog_X__RemoveAdditionalMessagesByTag )
//		pFn__OnlineGameBlog_X__RemoveAdditionalMessagesByTag = (UFunction*) UObject::GObjObjects()->Data[ 58720 ];
//
//	U__OnlineGameBlog_X__RemoveAdditionalMessagesByTag_exec__OnlineGameBlog_X__RemoveAdditionalMessagesByTag_Parms __OnlineGameBlog_X__RemoveAdditionalMessagesByTag_Parms;
//	memcpy ( &__OnlineGameBlog_X__RemoveAdditionalMessagesByTag_Parms.M, &M, 0x14 );
//
//	this->ProcessEvent ( pFn__OnlineGameBlog_X__RemoveAdditionalMessagesByTag, &__OnlineGameBlog_X__RemoveAdditionalMessagesByTag_Parms, NULL );
//
//	return __OnlineGameBlog_X__RemoveAdditionalMessagesByTag_Parms.ReturnValue;
//};
//
//// Function ProjectX.BlogTiles_X.__BlogTiles_X__UTCtoEpochArray
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UBlogTile_X*             BlogTile                       ( CPF_Parm )
//
//void UBlogTiles_X::__BlogTiles_X__UTCtoEpochArray ( class UBlogTile_X* BlogTile )
//{
//	static UFunction* pFn__BlogTiles_X__UTCtoEpochArray = NULL;
//
//	if ( ! pFn__BlogTiles_X__UTCtoEpochArray )
//		pFn__BlogTiles_X__UTCtoEpochArray = (UFunction*) UObject::GObjObjects()->Data[ 57385 ];
//
//	UBlogTiles_X_exec__BlogTiles_X__UTCtoEpochArray_Parms __BlogTiles_X__UTCtoEpochArray_Parms;
//	__BlogTiles_X__UTCtoEpochArray_Parms.BlogTile = BlogTile;
//
//	this->ProcessEvent ( pFn__BlogTiles_X__UTCtoEpochArray, &__BlogTiles_X__UTCtoEpochArray_Parms, NULL );
//};
//
//// Function ProjectX.BlogTiles_X.UTCtoEpochArray
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// TArray< class UBlogTile_X* >   BlogTiles                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UBlogTiles_X::UTCtoEpochArray ( TArray< class UBlogTile_X* >* BlogTiles )
//{
//	static UFunction* pFnUTCtoEpochArray = NULL;
//
//	if ( ! pFnUTCtoEpochArray )
//		pFnUTCtoEpochArray = (UFunction*) UObject::GObjObjects()->Data[ 57382 ];
//
//	UBlogTiles_X_execUTCtoEpochArray_Parms UTCtoEpochArray_Parms;
//
//	this->ProcessEvent ( pFnUTCtoEpochArray, &UTCtoEpochArray_Parms, NULL );
//
//	if ( BlogTiles )
//		memcpy ( BlogTiles, &UTCtoEpochArray_Parms.BlogTiles, 0xC );
//};
//
//// Function ProjectX.BlogTiles_X.UTCtoEpoch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UBlogTiles_X::UTCtoEpoch ( )
//{
//	static UFunction* pFnUTCtoEpoch = NULL;
//
//	if ( ! pFnUTCtoEpoch )
//		pFnUTCtoEpoch = (UFunction*) UObject::GObjObjects()->Data[ 50934 ];
//
//	UBlogTiles_X_execUTCtoEpoch_Parms UTCtoEpoch_Parms;
//
//	this->ProcessEvent ( pFnUTCtoEpoch, &UTCtoEpoch_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UCacheTimer_X*           Timer                          ( CPF_Parm | CPF_EditInline )
//
//void UOnlineGameDedicatedServerRegistration_X::__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces ( class UCacheTimer_X* Timer )
//{
//	static UFunction* pFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces = NULL;
//
//	if ( ! pFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces )
//		pFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces = (UFunction*) UObject::GObjObjects()->Data[ 51191 ];
//
//	UOnlineGameDedicatedServerRegistration_X_exec__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_Parms __OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_Parms;
//	__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_Parms.Timer = Timer;
//
//	this->ProcessEvent ( pFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces, &__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateCustomGame
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::UpdateCustomGame ( )
//{
//	static UFunction* pFnUpdateCustomGame = NULL;
//
//	if ( ! pFnUpdateCustomGame )
//		pFnUpdateCustomGame = (UFunction*) UObject::GObjObjects()->Data[ 50981 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execUpdateCustomGame_Parms UpdateCustomGame_Parms;
//
//	this->ProcessEvent ( pFnUpdateCustomGame, &UpdateCustomGame_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetExclusivePlatformString
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// unsigned char                  Platform                       ( CPF_Parm )
//
//struct FString UOnlineGameDedicatedServerRegistration_X::GetExclusivePlatformString ( unsigned char Platform )
//{
//	static UFunction* pFnGetExclusivePlatformString = NULL;
//
//	if ( ! pFnGetExclusivePlatformString )
//		pFnGetExclusivePlatformString = (UFunction*) UObject::GObjObjects()->Data[ 51181 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execGetExclusivePlatformString_Parms GetExclusivePlatformString_Parms;
//	GetExclusivePlatformString_Parms.Platform = Platform;
//
//	this->ProcessEvent ( pFnGetExclusivePlatformString, &GetExclusivePlatformString_Parms, NULL );
//
//	return GetExclusivePlatformString_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateGameTime
//// [0x00020002] 
//// Parameters infos:
//// int                            TimeSeconds                    ( CPF_Parm )
//
//void UOnlineGameDedicatedServerRegistration_X::UpdateGameTime ( int TimeSeconds )
//{
//	static UFunction* pFnUpdateGameTime = NULL;
//
//	if ( ! pFnUpdateGameTime )
//		pFnUpdateGameTime = (UFunction*) UObject::GObjObjects()->Data[ 51173 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execUpdateGameTime_Parms UpdateGameTime_Parms;
//	UpdateGameTime_Parms.TimeSeconds = TimeSeconds;
//
//	this->ProcessEvent ( pFnUpdateGameTime, &UpdateGameTime_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.ShouldShutdownWhenEmpty
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UOnlineGameDedicatedServerRegistration_X::ShouldShutdownWhenEmpty ( )
//{
//	static UFunction* pFnShouldShutdownWhenEmpty = NULL;
//
//	if ( ! pFnShouldShutdownWhenEmpty )
//		pFnShouldShutdownWhenEmpty = (UFunction*) UObject::GObjObjects()->Data[ 51180 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execShouldShutdownWhenEmpty_Parms ShouldShutdownWhenEmpty_Parms;
//
//	this->ProcessEvent ( pFnShouldShutdownWhenEmpty, &ShouldShutdownWhenEmpty_Parms, NULL );
//
//	return ShouldShutdownWhenEmpty_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.TimerShutdownWhenEmpty
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::TimerShutdownWhenEmpty ( )
//{
//	static UFunction* pFnTimerShutdownWhenEmpty = NULL;
//
//	if ( ! pFnTimerShutdownWhenEmpty )
//		pFnTimerShutdownWhenEmpty = (UFunction*) UObject::GObjObjects()->Data[ 51193 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execTimerShutdownWhenEmpty_Parms TimerShutdownWhenEmpty_Parms;
//
//	this->ProcessEvent ( pFnTimerShutdownWhenEmpty, &TimerShutdownWhenEmpty_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleUpdateServerFailed
//// [0x20080002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameDedicatedServerRegistration_X::HandleUpdateServerFailed ( class URPC_UpdateGameServer_X* RPC )
//{
//	static UFunction* pFnHandleUpdateServerFailed = NULL;
//
//	if ( ! pFnHandleUpdateServerFailed )
//		pFnHandleUpdateServerFailed = (UFunction*) UObject::GObjObjects()->Data[ 51195 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execHandleUpdateServerFailed_Parms HandleUpdateServerFailed_Parms;
//	HandleUpdateServerFailed_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleUpdateServerFailed, &HandleUpdateServerFailed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleUpdateServerSucces
//// [0x20080002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameDedicatedServerRegistration_X::HandleUpdateServerSucces ( class URPC_UpdateGameServer_X* RPC )
//{
//	static UFunction* pFnHandleUpdateServerSucces = NULL;
//
//	if ( ! pFnHandleUpdateServerSucces )
//		pFnHandleUpdateServerSucces = (UFunction*) UObject::GObjObjects()->Data[ 51196 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execHandleUpdateServerSucces_Parms HandleUpdateServerSucces_Parms;
//	HandleUpdateServerSucces_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleUpdateServerSucces, &HandleUpdateServerSucces_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCreateServerFailed
//// [0x20080002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* RPC                            ( CPF_Parm )
//
//void UOnlineGameDedicatedServerRegistration_X::HandleCreateServerFailed ( class URPC_CreateGameServer_X* RPC )
//{
//	static UFunction* pFnHandleCreateServerFailed = NULL;
//
//	if ( ! pFnHandleCreateServerFailed )
//		pFnHandleCreateServerFailed = (UFunction*) UObject::GObjObjects()->Data[ 51199 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execHandleCreateServerFailed_Parms HandleCreateServerFailed_Parms;
//	HandleCreateServerFailed_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleCreateServerFailed, &HandleCreateServerFailed_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCreateServerSucces
//// [0x20880002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* RPC                            ( CPF_Parm )
//// struct FCustomMatchSettings    StructInitializer_2585F81E4D1E70CC7125C1B90516D6D5 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameDedicatedServerRegistration_X::HandleCreateServerSucces ( class URPC_CreateGameServer_X* RPC, struct FCustomMatchSettings* StructInitializer_2585F81E4D1E70CC7125C1B90516D6D5 )
//{
//	static UFunction* pFnHandleCreateServerSucces = NULL;
//
//	if ( ! pFnHandleCreateServerSucces )
//		pFnHandleCreateServerSucces = (UFunction*) UObject::GObjObjects()->Data[ 51201 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execHandleCreateServerSucces_Parms HandleCreateServerSucces_Parms;
//	HandleCreateServerSucces_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleCreateServerSucces, &HandleCreateServerSucces_Parms, NULL );
//
//	if ( StructInitializer_2585F81E4D1E70CC7125C1B90516D6D5 )
//		memcpy ( StructInitializer_2585F81E4D1E70CC7125C1B90516D6D5, &HandleCreateServerSucces_Parms.StructInitializer_2585F81E4D1E70CC7125C1B90516D6D5, 0x60 );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SetServerNotJoinable
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::SetServerNotJoinable ( )
//{
//	static UFunction* pFnSetServerNotJoinable = NULL;
//
//	if ( ! pFnSetServerNotJoinable )
//		pFnSetServerNotJoinable = (UFunction*) UObject::GObjObjects()->Data[ 51064 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execSetServerNotJoinable_Parms SetServerNotJoinable_Parms;
//
//	this->ProcessEvent ( pFnSetServerNotJoinable, &SetServerNotJoinable_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendUpdateServerRPC
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::SendUpdateServerRPC ( )
//{
//	static UFunction* pFnSendUpdateServerRPC = NULL;
//
//	if ( ! pFnSendUpdateServerRPC )
//		pFnSendUpdateServerRPC = (UFunction*) UObject::GObjObjects()->Data[ 51169 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execSendUpdateServerRPC_Parms SendUpdateServerRPC_Parms;
//
//	this->ProcessEvent ( pFnSendUpdateServerRPC, &SendUpdateServerRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetServerType
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UOnlineGameDedicatedServerRegistration_X::GetServerType ( )
//{
//	static UFunction* pFnGetServerType = NULL;
//
//	if ( ! pFnGetServerType )
//		pFnGetServerType = (UFunction*) UObject::GObjObjects()->Data[ 51212 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execGetServerType_Parms GetServerType_Parms;
//
//	this->ProcessEvent ( pFnGetServerType, &GetServerType_Parms, NULL );
//
//	return GetServerType_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendCreateServerRPC
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::SendCreateServerRPC ( )
//{
//	static UFunction* pFnSendCreateServerRPC = NULL;
//
//	if ( ! pFnSendCreateServerRPC )
//		pFnSendCreateServerRPC = (UFunction*) UObject::GObjObjects()->Data[ 51250 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execSendCreateServerRPC_Parms SendCreateServerRPC_Parms;
//
//	this->ProcessEvent ( pFnSendCreateServerRPC, &SendCreateServerRPC_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendUpdateRequest
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::SendUpdateRequest ( )
//{
//	static UFunction* pFnSendUpdateRequest = NULL;
//
//	if ( ! pFnSendUpdateRequest )
//		pFnSendUpdateRequest = (UFunction*) UObject::GObjObjects()->Data[ 51168 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execSendUpdateRequest_Parms SendUpdateRequest_Parms;
//
//	this->ProcessEvent ( pFnSendUpdateRequest, &SendUpdateRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateServer
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::UpdateServer ( )
//{
//	static UFunction* pFnUpdateServer = NULL;
//
//	if ( ! pFnUpdateServer )
//		pFnUpdateServer = (UFunction*) UObject::GObjObjects()->Data[ 51166 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execUpdateServer_Parms UpdateServer_Parms;
//
//	this->ProcessEvent ( pFnUpdateServer, &UpdateServer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleConfigUpdate
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::HandleConfigUpdate ( )
//{
//	static UFunction* pFnHandleConfigUpdate = NULL;
//
//	if ( ! pFnHandleConfigUpdate )
//		pFnHandleConfigUpdate = (UFunction*) UObject::GObjObjects()->Data[ 51159 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execHandleConfigUpdate_Parms HandleConfigUpdate_Parms;
//
//	this->ProcessEvent ( pFnHandleConfigUpdate, &HandleConfigUpdate_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UnregisterServer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::UnregisterServer ( )
//{
//	static UFunction* pFnUnregisterServer = NULL;
//
//	if ( ! pFnUnregisterServer )
//		pFnUnregisterServer = (UFunction*) UObject::GObjObjects()->Data[ 51075 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execUnregisterServer_Parms UnregisterServer_Parms;
//
//	this->ProcessEvent ( pFnUnregisterServer, &UnregisterServer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.RegisterServer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::RegisterServer ( )
//{
//	static UFunction* pFnRegisterServer = NULL;
//
//	if ( ! pFnRegisterServer )
//		pFnRegisterServer = (UFunction*) UObject::GObjObjects()->Data[ 51104 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execRegisterServer_Parms RegisterServer_Parms;
//
//	this->ProcessEvent ( pFnRegisterServer, &RegisterServer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameDedicatedServerRegistration_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameDedicatedServerRegistration_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 51157 ];
//
//	UOnlineGameDedicatedServerRegistration_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerPermissions_X.HasPermission
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// unsigned char                  Permission                     ( CPF_Parm )
//
//bool UOnlinePlayerPermissions_X::HasPermission ( struct FUniqueNetId PlayerID, unsigned char Permission )
//{
//	static UFunction* pFnHasPermission = NULL;
//
//	if ( ! pFnHasPermission )
//		pFnHasPermission = (UFunction*) UObject::GObjObjects()->Data[ 56939 ];
//
//	UOnlinePlayerPermissions_X_execHasPermission_Parms HasPermission_Parms;
//	memcpy ( &HasPermission_Parms.PlayerID, &PlayerID, 0x48 );
//	HasPermission_Parms.Permission = Permission;
//
//	this->ProcessEvent ( pFnHasPermission, &HasPermission_Parms, NULL );
//
//	return HasPermission_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerPermissions_X.HandlePlayerPermissions
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetPlayerPermissions_X* RPC                            ( CPF_Parm )
//
//void UOnlinePlayerPermissions_X::HandlePlayerPermissions ( class URPC_GetPlayerPermissions_X* RPC )
//{
//	static UFunction* pFnHandlePlayerPermissions = NULL;
//
//	if ( ! pFnHandlePlayerPermissions )
//		pFnHandlePlayerPermissions = (UFunction*) UObject::GObjObjects()->Data[ 56931 ];
//
//	UOnlinePlayerPermissions_X_execHandlePlayerPermissions_Parms HandlePlayerPermissions_Parms;
//	HandlePlayerPermissions_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandlePlayerPermissions, &HandlePlayerPermissions_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerPermissions_X.SendRequest
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerPermissions_X::SendRequest ( )
//{
//	static UFunction* pFnSendRequest = NULL;
//
//	if ( ! pFnSendRequest )
//		pFnSendRequest = (UFunction*) UObject::GObjObjects()->Data[ 56927 ];
//
//	UOnlinePlayerPermissions_X_execSendRequest_Parms SendRequest_Parms;
//
//	this->ProcessEvent ( pFnSendRequest, &SendRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerPermissions_X.SyncPermissions
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UOnlinePlayerPermissions_X::SyncPermissions ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnSyncPermissions = NULL;
//
//	if ( ! pFnSyncPermissions )
//		pFnSyncPermissions = (UFunction*) UObject::GObjObjects()->Data[ 56925 ];
//
//	UOnlinePlayerPermissions_X_execSyncPermissions_Parms SyncPermissions_Parms;
//	memcpy ( &SyncPermissions_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnSyncPermissions, &SyncPermissions_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerPermissions_X.EventUpdated
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerPermissions_X* Permissions                    ( CPF_Parm )
//
//void UOnlinePlayerPermissions_X::EventUpdated ( class UOnlinePlayerPermissions_X* Permissions )
//{
//	static UFunction* pFnEventUpdated = NULL;
//
//	if ( ! pFnEventUpdated )
//		pFnEventUpdated = (UFunction*) UObject::GObjObjects()->Data[ 56922 ];
//
//	UOnlinePlayerPermissions_X_execEventUpdated_Parms EventUpdated_Parms;
//	EventUpdated_Parms.Permissions = Permissions;
//
//	this->ProcessEvent ( pFnEventUpdated, &EventUpdated_Parms, NULL );
//};
//
//// Function ProjectX.RPC_CheckReplacementDedicatedServer_X.GetServerAddress
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString URPC_CheckReplacementDedicatedServer_X::GetServerAddress ( )
//{
//	static UFunction* pFnGetServerAddress = NULL;
//
//	if ( ! pFnGetServerAddress )
//		pFnGetServerAddress = (UFunction*) UObject::GObjObjects()->Data[ 51131 ];
//
//	URPC_CheckReplacementDedicatedServer_X_execGetServerAddress_Parms GetServerAddress_Parms;
//
//	this->ProcessEvent ( pFnGetServerAddress, &GetServerAddress_Parms, NULL );
//
//	return GetServerAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CheckReplacementDedicatedServer_X.SetServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CheckReplacementDedicatedServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_CheckReplacementDedicatedServer_X* URPC_CheckReplacementDedicatedServer_X::SetServerID ( )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 51068 ];
//
//	URPC_CheckReplacementDedicatedServer_X_execSetServerID_Parms SetServerID_Parms;
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_AddQuitter_X.SetReason
//// [0x00020002] 
//// Parameters infos:
//// class URPC_AddQuitter_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InReason                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_AddQuitter_X* URPC_AddQuitter_X::SetReason ( struct FString InReason )
//{
//	static UFunction* pFnSetReason = NULL;
//
//	if ( ! pFnSetReason )
//		pFnSetReason = (UFunction*) UObject::GObjObjects()->Data[ 51085 ];
//
//	URPC_AddQuitter_X_execSetReason_Parms SetReason_Parms;
//	memcpy ( &SetReason_Parms.InReason, &InReason, 0xC );
//
//	this->ProcessEvent ( pFnSetReason, &SetReason_Parms, NULL );
//
//	return SetReason_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_AddQuitter_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_AddQuitter_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_AddQuitter_X* URPC_AddQuitter_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 51083 ];
//
//	URPC_AddQuitter_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_RemoveQuitter_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_RemoveQuitter_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_RemoveQuitter_X* URPC_RemoveQuitter_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 51090 ];
//
//	URPC_RemoveQuitter_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.ClanforgeReservation_X.HandleRetry
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UClanforgeReservation_X::HandleRetry ( )
//{
//	static UFunction* pFnHandleRetry = NULL;
//
//	if ( ! pFnHandleRetry )
//		pFnHandleRetry = (UFunction*) UObject::GObjObjects()->Data[ 56836 ];
//
//	UClanforgeReservation_X_execHandleRetry_Parms HandleRetry_Parms;
//
//	this->ProcessEvent ( pFnHandleRetry, &HandleRetry_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.Retry
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UClanforgeReservation_X::Retry ( )
//{
//	static UFunction* pFnRetry = NULL;
//
//	if ( ! pFnRetry )
//		pFnRetry = (UFunction*) UObject::GObjObjects()->Data[ 56834 ];
//
//	UClanforgeReservation_X_execRetry_Parms Retry_Parms;
//
//	this->ProcessEvent ( pFnRetry, &Retry_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.HandleSendComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UWebRequest_X*           Request                        ( CPF_Parm )
//
//void UClanforgeReservation_X::HandleSendComplete ( class UWebRequest_X* Request )
//{
//	static UFunction* pFnHandleSendComplete = NULL;
//
//	if ( ! pFnHandleSendComplete )
//		pFnHandleSendComplete = (UFunction*) UObject::GObjObjects()->Data[ 56832 ];
//
//	UClanforgeReservation_X_execHandleSendComplete_Parms HandleSendComplete_Parms;
//	HandleSendComplete_Parms.Request = Request;
//
//	this->ProcessEvent ( pFnHandleSendComplete, &HandleSendComplete_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.ProcessNextRequest
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UClanforgeReservation_X::ProcessNextRequest ( )
//{
//	static UFunction* pFnProcessNextRequest = NULL;
//
//	if ( ! pFnProcessNextRequest )
//		pFnProcessNextRequest = (UFunction*) UObject::GObjObjects()->Data[ 56831 ];
//
//	UClanforgeReservation_X_execProcessNextRequest_Parms ProcessNextRequest_Parms;
//
//	this->ProcessEvent ( pFnProcessNextRequest, &ProcessNextRequest_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.Send
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
//
//void UClanforgeReservation_X::Send ( struct FString URL )
//{
//	static UFunction* pFnSend = NULL;
//
//	if ( ! pFnSend )
//		pFnSend = (UFunction*) UObject::GObjObjects()->Data[ 56828 ];
//
//	UClanforgeReservation_X_execSend_Parms Send_Parms;
//	memcpy ( &Send_Parms.URL, &URL, 0xC );
//
//	this->ProcessEvent ( pFnSend, &Send_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.SetReserveState
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  NewState                       ( CPF_Parm )
//
//void UClanforgeReservation_X::SetReserveState ( unsigned char NewState )
//{
//	static UFunction* pFnSetReserveState = NULL;
//
//	if ( ! pFnSetReserveState )
//		pFnSetReserveState = (UFunction*) UObject::GObjObjects()->Data[ 56822 ];
//
//	UClanforgeReservation_X_execSetReserveState_Parms SetReserveState_Parms;
//	SetReserveState_Parms.NewState = NewState;
//
//	this->ProcessEvent ( pFnSetReserveState, &SetReserveState_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.HandleActivate
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UClanforgeReservation_X::HandleActivate ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnHandleActivate = NULL;
//
//	if ( ! pFnHandleActivate )
//		pFnHandleActivate = (UFunction*) UObject::GObjObjects()->Data[ 56825 ];
//
//	UClanforgeReservation_X_execHandleActivate_Parms HandleActivate_Parms;
//	HandleActivate_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnHandleActivate, &HandleActivate_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.HandleInactive
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//
//void UClanforgeReservation_X::HandleInactive ( class UOnlineGameDedicatedServer_X* Server )
//{
//	static UFunction* pFnHandleInactive = NULL;
//
//	if ( ! pFnHandleInactive )
//		pFnHandleInactive = (UFunction*) UObject::GObjObjects()->Data[ 56823 ];
//
//	UClanforgeReservation_X_execHandleInactive_Parms HandleInactive_Parms;
//	HandleInactive_Parms.Server = Server;
//
//	this->ProcessEvent ( pFnHandleInactive, &HandleInactive_Parms, NULL );
//};
//
//// Function ProjectX.ClanforgeReservation_X.Init
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameDedicatedServer_X* Server                         ( CPF_Parm )
//// struct FString                 ReserveURL                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 UnreserveURL                   ( CPF_Parm | CPF_NeedCtorLink )
//
//void UClanforgeReservation_X::Init ( class UOnlineGameDedicatedServer_X* Server, struct FString ReserveURL, struct FString UnreserveURL )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 51142 ];
//
//	UClanforgeReservation_X_execInit_Parms Init_Parms;
//	Init_Parms.Server = Server;
//	memcpy ( &Init_Parms.ReserveURL, &ReserveURL, 0xC );
//	memcpy ( &Init_Parms.UnreserveURL, &UnreserveURL, 0xC );
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.RPC_DeactivateGameServer_X.SetServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_DeactivateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_DeactivateGameServer_X* URPC_DeactivateGameServer_X::SetServerID ( )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 51161 ];
//
//	URPC_DeactivateGameServer_X_execSetServerID_Parms SetServerID_Parms;
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.CacheTimer_X.GetRandomCacheTimeoutTime
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UCacheTimer_X::GetRandomCacheTimeoutTime ( )
//{
//	static UFunction* pFnGetRandomCacheTimeoutTime = NULL;
//
//	if ( ! pFnGetRandomCacheTimeoutTime )
//		pFnGetRandomCacheTimeoutTime = (UFunction*) UObject::GObjObjects()->Data[ 51269 ];
//
//	UCacheTimer_X_execGetRandomCacheTimeoutTime_Parms GetRandomCacheTimeoutTime_Parms;
//
//	this->ProcessEvent ( pFnGetRandomCacheTimeoutTime, &GetRandomCacheTimeoutTime_Parms, NULL );
//
//	return GetRandomCacheTimeoutTime_Parms.ReturnValue;
//};
//
//// Function ProjectX.CacheTimer_X.OnExpired
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UCacheTimer_X::OnExpired ( )
//{
//	static UFunction* pFnOnExpired = NULL;
//
//	if ( ! pFnOnExpired )
//		pFnOnExpired = (UFunction*) UObject::GObjObjects()->Data[ 51270 ];
//
//	UCacheTimer_X_execOnExpired_Parms OnExpired_Parms;
//
//	this->ProcessEvent ( pFnOnExpired, &OnExpired_Parms, NULL );
//};
//
//// Function ProjectX.CacheTimer_X.OnDisabled
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UCacheTimer_X::OnDisabled ( )
//{
//	static UFunction* pFnOnDisabled = NULL;
//
//	if ( ! pFnOnDisabled )
//		pFnOnDisabled = (UFunction*) UObject::GObjObjects()->Data[ 51272 ];
//
//	UCacheTimer_X_execOnDisabled_Parms OnDisabled_Parms;
//
//	this->ProcessEvent ( pFnOnDisabled, &OnDisabled_Parms, NULL );
//};
//
//// Function ProjectX.CacheTimer_X.OnEnabled
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UCacheTimer_X::OnEnabled ( )
//{
//	static UFunction* pFnOnEnabled = NULL;
//
//	if ( ! pFnOnEnabled )
//		pFnOnEnabled = (UFunction*) UObject::GObjObjects()->Data[ 51273 ];
//
//	UCacheTimer_X_execOnEnabled_Parms OnEnabled_Parms;
//
//	this->ProcessEvent ( pFnOnEnabled, &OnEnabled_Parms, NULL );
//};
//
//// Function ProjectX.CacheTimer_X.SetEnabled
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bEnableExpiration              ( CPF_Parm )
//
//void UCacheTimer_X::SetEnabled ( unsigned long bEnableExpiration )
//{
//	static UFunction* pFnSetEnabled = NULL;
//
//	if ( ! pFnSetEnabled )
//		pFnSetEnabled = (UFunction*) UObject::GObjObjects()->Data[ 51165 ];
//
//	UCacheTimer_X_execSetEnabled_Parms SetEnabled_Parms;
//	SetEnabled_Parms.bEnableExpiration = bEnableExpiration;
//
//	this->ProcessEvent ( pFnSetEnabled, &SetEnabled_Parms, NULL );
//};
//
//// Function ProjectX.CacheTimer_X.Reset
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UCacheTimer_X::Reset ( )
//{
//	static UFunction* pFnReset = NULL;
//
//	if ( ! pFnReset )
//		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 51167 ];
//
//	UCacheTimer_X_execReset_Parms Reset_Parms;
//
//	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
//};
//
//// Function ProjectX.CacheTimer_X.IsExpired
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UCacheTimer_X::IsExpired ( )
//{
//	static UFunction* pFnIsExpired = NULL;
//
//	if ( ! pFnIsExpired )
//		pFnIsExpired = (UFunction*) UObject::GObjObjects()->Data[ 51280 ];
//
//	UCacheTimer_X_execIsExpired_Parms IsExpired_Parms;
//
//	this->ProcessEvent ( pFnIsExpired, &IsExpired_Parms, NULL );
//
//	return IsExpired_Parms.ReturnValue;
//};
//
//// Function ProjectX.CacheTimer_X.EventExpired
//// [0x00120000] 
//// Parameters infos:
//// class UCacheTimer_X*           Timer                          ( CPF_Parm | CPF_EditInline )
//
//void UCacheTimer_X::EventExpired ( class UCacheTimer_X* Timer )
//{
//	static UFunction* pFnEventExpired = NULL;
//
//	if ( ! pFnEventExpired )
//		pFnEventExpired = (UFunction*) UObject::GObjObjects()->Data[ 51281 ];
//
//	UCacheTimer_X_execEventExpired_Parms EventExpired_Parms;
//	EventExpired_Parms.Timer = Timer;
//
//	this->ProcessEvent ( pFnEventExpired, &EventExpired_Parms, NULL );
//};
//
//// Function ProjectX.RPC_SetServerNotJoinable_X.SetServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetServerNotJoinable_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_SetServerNotJoinable_X* URPC_SetServerNotJoinable_X::SetServerID ( )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 51171 ];
//
//	URPC_SetServerNotJoinable_X_execSetServerID_Parms SetServerID_Parms;
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateCustomGameServer_X.SetPassword
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateCustomGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InPassword                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_UpdateCustomGameServer_X* URPC_UpdateCustomGameServer_X::SetPassword ( struct FString InPassword )
//{
//	static UFunction* pFnSetPassword = NULL;
//
//	if ( ! pFnSetPassword )
//		pFnSetPassword = (UFunction*) UObject::GObjObjects()->Data[ 51189 ];
//
//	URPC_UpdateCustomGameServer_X_execSetPassword_Parms SetPassword_Parms;
//	memcpy ( &SetPassword_Parms.InPassword, &InPassword, 0xC );
//
//	this->ProcessEvent ( pFnSetPassword, &SetPassword_Parms, NULL );
//
//	return SetPassword_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateCustomGameServer_X.SetServerName
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateCustomGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_UpdateCustomGameServer_X* URPC_UpdateCustomGameServer_X::SetServerName ( struct FString InServerName )
//{
//	static UFunction* pFnSetServerName = NULL;
//
//	if ( ! pFnSetServerName )
//		pFnSetServerName = (UFunction*) UObject::GObjObjects()->Data[ 51187 ];
//
//	URPC_UpdateCustomGameServer_X_execSetServerName_Parms SetServerName_Parms;
//	memcpy ( &SetServerName_Parms.InServerName, &InServerName, 0xC );
//
//	this->ProcessEvent ( pFnSetServerName, &SetServerName_Parms, NULL );
//
//	return SetServerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateCustomGameServer_X.SetServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateCustomGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_UpdateCustomGameServer_X* URPC_UpdateCustomGameServer_X::SetServerID ( )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 51185 ];
//
//	URPC_UpdateCustomGameServer_X_execSetServerID_Parms SetServerID_Parms;
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetPlayersPlatforms
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FString >       InPlayersPlatforms             ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetPlayersPlatforms ( TArray< struct FString > InPlayersPlatforms )
//{
//	static UFunction* pFnSetPlayersPlatforms = NULL;
//
//	if ( ! pFnSetPlayersPlatforms )
//		pFnSetPlayersPlatforms = (UFunction*) UObject::GObjObjects()->Data[ 51244 ];
//
//	URPC_UpdateGameServer_X_execSetPlayersPlatforms_Parms SetPlayersPlatforms_Parms;
//	memcpy ( &SetPlayersPlatforms_Parms.InPlayersPlatforms, &InPlayersPlatforms, 0xC );
//
//	this->ProcessEvent ( pFnSetPlayersPlatforms, &SetPlayersPlatforms_Parms, NULL );
//
//	return SetPlayersPlatforms_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetExclusivePlatform
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InExclusivePlatform            ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetExclusivePlatform ( struct FString InExclusivePlatform )
//{
//	static UFunction* pFnSetExclusivePlatform = NULL;
//
//	if ( ! pFnSetExclusivePlatform )
//		pFnSetExclusivePlatform = (UFunction*) UObject::GObjObjects()->Data[ 51240 ];
//
//	URPC_UpdateGameServer_X_execSetExclusivePlatform_Parms SetExclusivePlatform_Parms;
//	memcpy ( &SetExclusivePlatform_Parms.InExclusivePlatform, &InExclusivePlatform, 0xC );
//
//	this->ProcessEvent ( pFnSetExclusivePlatform, &SetExclusivePlatform_Parms, NULL );
//
//	return SetExclusivePlatform_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetTimeRemaining
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InTimeRemaining                ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetTimeRemaining ( int InTimeRemaining )
//{
//	static UFunction* pFnSetTimeRemaining = NULL;
//
//	if ( ! pFnSetTimeRemaining )
//		pFnSetTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 51238 ];
//
//	URPC_UpdateGameServer_X_execSetTimeRemaining_Parms SetTimeRemaining_Parms;
//	SetTimeRemaining_Parms.InTimeRemaining = InTimeRemaining;
//
//	this->ProcessEvent ( pFnSetTimeRemaining, &SetTimeRemaining_Parms, NULL );
//
//	return SetTimeRemaining_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetIsPostGame
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bInIsPostGame                  ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetIsPostGame ( unsigned long bInIsPostGame )
//{
//	static UFunction* pFnSetIsPostGame = NULL;
//
//	if ( ! pFnSetIsPostGame )
//		pFnSetIsPostGame = (UFunction*) UObject::GObjObjects()->Data[ 51236 ];
//
//	URPC_UpdateGameServer_X_execSetIsPostGame_Parms SetIsPostGame_Parms;
//	SetIsPostGame_Parms.bInIsPostGame = bInIsPostGame;
//
//	this->ProcessEvent ( pFnSetIsPostGame, &SetIsPostGame_Parms, NULL );
//
//	return SetIsPostGame_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetPlayerIDs
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FUniqueNetId >  InPlayerIDs                    ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetPlayerIDs ( TArray< struct FUniqueNetId > InPlayerIDs )
//{
//	static UFunction* pFnSetPlayerIDs = NULL;
//
//	if ( ! pFnSetPlayerIDs )
//		pFnSetPlayerIDs = (UFunction*) UObject::GObjObjects()->Data[ 51232 ];
//
//	URPC_UpdateGameServer_X_execSetPlayerIDs_Parms SetPlayerIDs_Parms;
//	memcpy ( &SetPlayerIDs_Parms.InPlayerIDs, &InPlayerIDs, 0xC );
//
//	this->ProcessEvent ( pFnSetPlayerIDs, &SetPlayerIDs_Parms, NULL );
//
//	return SetPlayerIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetReservationsTeam2
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InReservationsTeam2            ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetReservationsTeam2 ( int InReservationsTeam2 )
//{
//	static UFunction* pFnSetReservationsTeam2 = NULL;
//
//	if ( ! pFnSetReservationsTeam2 )
//		pFnSetReservationsTeam2 = (UFunction*) UObject::GObjObjects()->Data[ 51230 ];
//
//	URPC_UpdateGameServer_X_execSetReservationsTeam2_Parms SetReservationsTeam2_Parms;
//	SetReservationsTeam2_Parms.InReservationsTeam2 = InReservationsTeam2;
//
//	this->ProcessEvent ( pFnSetReservationsTeam2, &SetReservationsTeam2_Parms, NULL );
//
//	return SetReservationsTeam2_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetReservationsTeam1
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InReservationsTeam1            ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetReservationsTeam1 ( int InReservationsTeam1 )
//{
//	static UFunction* pFnSetReservationsTeam1 = NULL;
//
//	if ( ! pFnSetReservationsTeam1 )
//		pFnSetReservationsTeam1 = (UFunction*) UObject::GObjObjects()->Data[ 51228 ];
//
//	URPC_UpdateGameServer_X_execSetReservationsTeam1_Parms SetReservationsTeam1_Parms;
//	SetReservationsTeam1_Parms.InReservationsTeam1 = InReservationsTeam1;
//
//	this->ProcessEvent ( pFnSetReservationsTeam1, &SetReservationsTeam1_Parms, NULL );
//
//	return SetReservationsTeam1_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetNumPlayersTeam2
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InNumPlayersTeam2              ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetNumPlayersTeam2 ( int InNumPlayersTeam2 )
//{
//	static UFunction* pFnSetNumPlayersTeam2 = NULL;
//
//	if ( ! pFnSetNumPlayersTeam2 )
//		pFnSetNumPlayersTeam2 = (UFunction*) UObject::GObjObjects()->Data[ 51226 ];
//
//	URPC_UpdateGameServer_X_execSetNumPlayersTeam2_Parms SetNumPlayersTeam2_Parms;
//	SetNumPlayersTeam2_Parms.InNumPlayersTeam2 = InNumPlayersTeam2;
//
//	this->ProcessEvent ( pFnSetNumPlayersTeam2, &SetNumPlayersTeam2_Parms, NULL );
//
//	return SetNumPlayersTeam2_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetNumPlayersTeam1
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InNumPlayersTeam1              ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetNumPlayersTeam1 ( int InNumPlayersTeam1 )
//{
//	static UFunction* pFnSetNumPlayersTeam1 = NULL;
//
//	if ( ! pFnSetNumPlayersTeam1 )
//		pFnSetNumPlayersTeam1 = (UFunction*) UObject::GObjObjects()->Data[ 51224 ];
//
//	URPC_UpdateGameServer_X_execSetNumPlayersTeam1_Parms SetNumPlayersTeam1_Parms;
//	SetNumPlayersTeam1_Parms.InNumPlayersTeam1 = InNumPlayersTeam1;
//
//	this->ProcessEvent ( pFnSetNumPlayersTeam1, &SetNumPlayersTeam1_Parms, NULL );
//
//	return SetNumPlayersTeam1_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetMaxPlayers
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InMaxPlayers                   ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetMaxPlayers ( int InMaxPlayers )
//{
//	static UFunction* pFnSetMaxPlayers = NULL;
//
//	if ( ! pFnSetMaxPlayers )
//		pFnSetMaxPlayers = (UFunction*) UObject::GObjObjects()->Data[ 51222 ];
//
//	URPC_UpdateGameServer_X_execSetMaxPlayers_Parms SetMaxPlayers_Parms;
//	SetMaxPlayers_Parms.InMaxPlayers = InMaxPlayers;
//
//	this->ProcessEvent ( pFnSetMaxPlayers, &SetMaxPlayers_Parms, NULL );
//
//	return SetMaxPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 51220 ];
//
//	URPC_UpdateGameServer_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateGameServer_X.SetServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetServerID ( )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 51218 ];
//
//	URPC_UpdateGameServer_X_execSetServerID_Parms SetServerID_Parms;
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CreateGameServer_X.SetBuildID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InBuildID                      ( CPF_Parm )
//
//class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetBuildID ( int InBuildID )
//{
//	static UFunction* pFnSetBuildID = NULL;
//
//	if ( ! pFnSetBuildID )
//		pFnSetBuildID = (UFunction*) UObject::GObjObjects()->Data[ 51264 ];
//
//	URPC_CreateGameServer_X_execSetBuildID_Parms SetBuildID_Parms;
//	SetBuildID_Parms.InBuildID = InBuildID;
//
//	this->ProcessEvent ( pFnSetBuildID, &SetBuildID_Parms, NULL );
//
//	return SetBuildID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CreateGameServer_X.SetRegion
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InRegion                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetRegion ( struct FString InRegion )
//{
//	static UFunction* pFnSetRegion = NULL;
//
//	if ( ! pFnSetRegion )
//		pFnSetRegion = (UFunction*) UObject::GObjObjects()->Data[ 51262 ];
//
//	URPC_CreateGameServer_X_execSetRegion_Parms SetRegion_Parms;
//	memcpy ( &SetRegion_Parms.InRegion, &InRegion, 0xC );
//
//	this->ProcessEvent ( pFnSetRegion, &SetRegion_Parms, NULL );
//
//	return SetRegion_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CreateGameServer_X.SetIP
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InIP                           ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetIP ( struct FString InIP )
//{
//	static UFunction* pFnSetIP = NULL;
//
//	if ( ! pFnSetIP )
//		pFnSetIP = (UFunction*) UObject::GObjObjects()->Data[ 51260 ];
//
//	URPC_CreateGameServer_X_execSetIP_Parms SetIP_Parms;
//	memcpy ( &SetIP_Parms.InIP, &InIP, 0xC );
//
//	this->ProcessEvent ( pFnSetIP, &SetIP_Parms, NULL );
//
//	return SetIP_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CreateGameServer_X.SetMachineID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InMachineID                    ( CPF_Parm )
//
//class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetMachineID ( int InMachineID )
//{
//	static UFunction* pFnSetMachineID = NULL;
//
//	if ( ! pFnSetMachineID )
//		pFnSetMachineID = (UFunction*) UObject::GObjObjects()->Data[ 51258 ];
//
//	URPC_CreateGameServer_X_execSetMachineID_Parms SetMachineID_Parms;
//	SetMachineID_Parms.InMachineID = InMachineID;
//
//	this->ProcessEvent ( pFnSetMachineID, &SetMachineID_Parms, NULL );
//
//	return SetMachineID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CreateGameServer_X.SetServerType
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerType                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetServerType ( struct FString InServerType )
//{
//	static UFunction* pFnSetServerType = NULL;
//
//	if ( ! pFnSetServerType )
//		pFnSetServerType = (UFunction*) UObject::GObjObjects()->Data[ 51256 ];
//
//	URPC_CreateGameServer_X_execSetServerType_Parms SetServerType_Parms;
//	memcpy ( &SetServerType_Parms.InServerType, &InServerType, 0xC );
//
//	this->ProcessEvent ( pFnSetServerType, &SetServerType_Parms, NULL );
//
//	return SetServerType_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CreateGameServer_X.SetServerName
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CreateGameServer_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetServerName ( struct FString InServerName )
//{
//	static UFunction* pFnSetServerName = NULL;
//
//	if ( ! pFnSetServerName )
//		pFnSetServerName = (UFunction*) UObject::GObjObjects()->Data[ 51254 ];
//
//	URPC_CreateGameServer_X_execSetServerName_Parms SetServerName_Parms;
//	memcpy ( &SetServerName_Parms.InServerName, &InServerName, 0xC );
//
//	this->ProcessEvent ( pFnSetServerName, &SetServerName_Parms, NULL );
//
//	return SetServerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.ReservationsReadyMessage_X.SetProductIDs
//// [0x00020002] 
//// Parameters infos:
//// class UReservationsReadyMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< int >                  InProductIDs                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class UReservationsReadyMessage_X* UReservationsReadyMessage_X::SetProductIDs ( TArray< int > InProductIDs )
//{
//	static UFunction* pFnSetProductIDs = NULL;
//
//	if ( ! pFnSetProductIDs )
//		pFnSetProductIDs = (UFunction*) UObject::GObjObjects()->Data[ 55380 ];
//
//	UReservationsReadyMessage_X_execSetProductIDs_Parms SetProductIDs_Parms;
//	memcpy ( &SetProductIDs_Parms.InProductIDs, &InProductIDs, 0xC );
//
//	this->ProcessEvent ( pFnSetProductIDs, &SetProductIDs_Parms, NULL );
//
//	return SetProductIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.ReservationsReadyMessage_X.SetServerAddress
//// [0x00020002] 
//// Parameters infos:
//// class UReservationsReadyMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InAddress                      ( CPF_Parm | CPF_NeedCtorLink )
//
//class UReservationsReadyMessage_X* UReservationsReadyMessage_X::SetServerAddress ( struct FString InAddress )
//{
//	static UFunction* pFnSetServerAddress = NULL;
//
//	if ( ! pFnSetServerAddress )
//		pFnSetServerAddress = (UFunction*) UObject::GObjObjects()->Data[ 51861 ];
//
//	UReservationsReadyMessage_X_execSetServerAddress_Parms SetServerAddress_Parms;
//	memcpy ( &SetServerAddress_Parms.InAddress, &InAddress, 0xC );
//
//	this->ProcessEvent ( pFnSetServerAddress, &SetServerAddress_Parms, NULL );
//
//	return SetServerAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.ReservationsPasswordMessage_X.SetReason
//// [0x00020002] 
//// Parameters infos:
//// class UReservationsPasswordMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  InReason                       ( CPF_Parm )
//
//class UReservationsPasswordMessage_X* UReservationsPasswordMessage_X::SetReason ( unsigned char InReason )
//{
//	static UFunction* pFnSetReason = NULL;
//
//	if ( ! pFnSetReason )
//		pFnSetReason = (UFunction*) UObject::GObjObjects()->Data[ 51878 ];
//
//	UReservationsPasswordMessage_X_execSetReason_Parms SetReason_Parms;
//	SetReason_Parms.InReason = InReason;
//
//	this->ProcessEvent ( pFnSetReason, &SetReason_Parms, NULL );
//
//	return SetReason_Parms.ReturnValue;
//};
//
//// Function ProjectX.ReservationsMaxPlayersMessage_X.SetMaxPlayerCount
//// [0x00020002] 
//// Parameters infos:
//// class UReservationsMaxPlayersMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            inMaxPlayerCount               ( CPF_Parm )
//
//class UReservationsMaxPlayersMessage_X* UReservationsMaxPlayersMessage_X::SetMaxPlayerCount ( int inMaxPlayerCount )
//{
//	static UFunction* pFnSetMaxPlayerCount = NULL;
//
//	if ( ! pFnSetMaxPlayerCount )
//		pFnSetMaxPlayerCount = (UFunction*) UObject::GObjObjects()->Data[ 53722 ];
//
//	UReservationsMaxPlayersMessage_X_execSetMaxPlayerCount_Parms SetMaxPlayerCount_Parms;
//	SetMaxPlayerCount_Parms.inMaxPlayerCount = inMaxPlayerCount;
//
//	this->ProcessEvent ( pFnSetMaxPlayerCount, &SetMaxPlayerCount_Parms, NULL );
//
//	return SetMaxPlayerCount_Parms.ReturnValue;
//};
//
//// Function ProjectX.PingMessage_X.SetIsResponse
//// [0x00020002] 
//// Parameters infos:
//// class UPingMessage_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPingMessage_X* UPingMessage_X::SetIsResponse ( )
//{
//	static UFunction* pFnSetIsResponse = NULL;
//
//	if ( ! pFnSetIsResponse )
//		pFnSetIsResponse = (UFunction*) UObject::GObjObjects()->Data[ 51824 ];
//
//	UPingMessage_X_execSetIsResponse_Parms SetIsResponse_Parms;
//
//	this->ProcessEvent ( pFnSetIsResponse, &SetIsResponse_Parms, NULL );
//
//	return SetIsResponse_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_KeysBase_X.SetPrimaryPlayer
//// [0x00020002] 
//// Parameters infos:
//// class URPC_KeysBase_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_KeysBase_X* URPC_KeysBase_X::SetPrimaryPlayer ( )
//{
//	static UFunction* pFnSetPrimaryPlayer = NULL;
//
//	if ( ! pFnSetPrimaryPlayer )
//		pFnSetPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 51608 ];
//
//	URPC_KeysBase_X_execSetPrimaryPlayer_Parms SetPrimaryPlayer_Parms;
//
//	this->ProcessEvent ( pFnSetPrimaryPlayer, &SetPrimaryPlayer_Parms, NULL );
//
//	return SetPrimaryPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_KeysBase_X.SetServerAddress
//// [0x00020002] 
//// Parameters infos:
//// class URPC_KeysBase_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ServerAddress                  ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_KeysBase_X* URPC_KeysBase_X::SetServerAddress ( struct FString ServerAddress )
//{
//	static UFunction* pFnSetServerAddress = NULL;
//
//	if ( ! pFnSetServerAddress )
//		pFnSetServerAddress = (UFunction*) UObject::GObjObjects()->Data[ 51606 ];
//
//	URPC_KeysBase_X_execSetServerAddress_Parms SetServerAddress_Parms;
//	memcpy ( &SetServerAddress_Parms.ServerAddress, &ServerAddress, 0xC );
//
//	this->ProcessEvent ( pFnSetServerAddress, &SetServerAddress_Parms, NULL );
//
//	return SetServerAddress_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HackForceNotServerTravelling
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanReservations_X::HackForceNotServerTravelling ( )
//{
//	static UFunction* pFnHackForceNotServerTravelling = NULL;
//
//	if ( ! pFnHackForceNotServerTravelling )
//		pFnHackForceNotServerTravelling = (UFunction*) UObject::GObjObjects()->Data[ 51857 ];
//
//	UOnlineGameLanReservations_X_execHackForceNotServerTravelling_Parms HackForceNotServerTravelling_Parms;
//
//	this->ProcessEvent ( pFnHackForceNotServerTravelling, &HackForceNotServerTravelling_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.SetServerTraveling
//// [0x00020002] 
//// Parameters infos:
//// unsigned long                  bTraveling                     ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::SetServerTraveling ( unsigned long bTraveling )
//{
//	static UFunction* pFnSetServerTraveling = NULL;
//
//	if ( ! pFnSetServerTraveling )
//		pFnSetServerTraveling = (UFunction*) UObject::GObjObjects()->Data[ 51855 ];
//
//	UOnlineGameLanReservations_X_execSetServerTraveling_Parms SetServerTraveling_Parms;
//	SetServerTraveling_Parms.bTraveling = bTraveling;
//
//	this->ProcessEvent ( pFnSetServerTraveling, &SetServerTraveling_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.OnNewGameInfoCreated
//// [0x00020002] 
//// Parameters infos:
//// class AGameInfo_X*             Game                           ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::OnNewGameInfoCreated ( class AGameInfo_X* Game )
//{
//	static UFunction* pFnOnNewGameInfoCreated = NULL;
//
//	if ( ! pFnOnNewGameInfoCreated )
//		pFnOnNewGameInfoCreated = (UFunction*) UObject::GObjObjects()->Data[ 51853 ];
//
//	UOnlineGameLanReservations_X_execOnNewGameInfoCreated_Parms OnNewGameInfoCreated_Parms;
//	OnNewGameInfoCreated_Parms.Game = Game;
//
//	this->ProcessEvent ( pFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.GetNumPlayers
//// [0x00020002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UOnlineGameLanReservations_X::GetNumPlayers ( )
//{
//	static UFunction* pFnGetNumPlayers = NULL;
//
//	if ( ! pFnGetNumPlayers )
//		pFnGetNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 51851 ];
//
//	UOnlineGameLanReservations_X_execGetNumPlayers_Parms GetNumPlayers_Parms;
//
//	this->ProcessEvent ( pFnGetNumPlayers, &GetNumPlayers_Parms, NULL );
//
//	return GetNumPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.AllowPlayerLogin
//// [0x00420002] 
//// Parameters infos:
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameLanReservations_X::AllowPlayerLogin ( struct FString Options, struct FUniqueNetId PlayerID, struct FString* ErrorMessage )
//{
//	static UFunction* pFnAllowPlayerLogin = NULL;
//
//	if ( ! pFnAllowPlayerLogin )
//		pFnAllowPlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 51847 ];
//
//	UOnlineGameLanReservations_X_execAllowPlayerLogin_Parms AllowPlayerLogin_Parms;
//	memcpy ( &AllowPlayerLogin_Parms.Options, &Options, 0xC );
//	memcpy ( &AllowPlayerLogin_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnAllowPlayerLogin, &AllowPlayerLogin_Parms, NULL );
//
//	if ( ErrorMessage )
//		memcpy ( ErrorMessage, &AllowPlayerLogin_Parms.ErrorMessage, 0xC );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.PlayerLoggedOut
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::PlayerLoggedOut ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedOut = NULL;
//
//	if ( ! pFnPlayerLoggedOut )
//		pFnPlayerLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 51845 ];
//
//	UOnlineGameLanReservations_X_execPlayerLoggedOut_Parms PlayerLoggedOut_Parms;
//	PlayerLoggedOut_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedOut, &PlayerLoggedOut_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.PlayerLoggedIn
//// [0x00020002] 
//// Parameters infos:
//// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::PlayerLoggedIn ( class APlayerReplicationInfo* PRI )
//{
//	static UFunction* pFnPlayerLoggedIn = NULL;
//
//	if ( ! pFnPlayerLoggedIn )
//		pFnPlayerLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 51843 ];
//
//	UOnlineGameLanReservations_X_execPlayerLoggedIn_Parms PlayerLoggedIn_Parms;
//	PlayerLoggedIn_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnPlayerLoggedIn, &PlayerLoggedIn_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.Reset
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameLanReservations_X::Reset ( )
//{
//	static UFunction* pFnReset = NULL;
//
//	if ( ! pFnReset )
//		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 51842 ];
//
//	UOnlineGameLanReservations_X_execReset_Parms Reset_Parms;
//
//	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.CheckReservationTimeout
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanReservations_X::CheckReservationTimeout ( )
//{
//	static UFunction* pFnCheckReservationTimeout = NULL;
//
//	if ( ! pFnCheckReservationTimeout )
//		pFnCheckReservationTimeout = (UFunction*) UObject::GObjObjects()->Data[ 51841 ];
//
//	UOnlineGameLanReservations_X_execCheckReservationTimeout_Parms CheckReservationTimeout_Parms;
//
//	this->ProcessEvent ( pFnCheckReservationTimeout, &CheckReservationTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HandlePublicReservation
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessagePublic_X* Message                        ( CPF_Parm )
//
//bool UOnlineGameLanReservations_X::HandlePublicReservation ( class UTcpConnection* Connection, class UAddReservationMessagePublic_X* Message )
//{
//	static UFunction* pFnHandlePublicReservation = NULL;
//
//	if ( ! pFnHandlePublicReservation )
//		pFnHandlePublicReservation = (UFunction*) UObject::GObjObjects()->Data[ 51837 ];
//
//	UOnlineGameLanReservations_X_execHandlePublicReservation_Parms HandlePublicReservation_Parms;
//	HandlePublicReservation_Parms.Connection = Connection;
//	HandlePublicReservation_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePublicReservation, &HandlePublicReservation_Parms, NULL );
//
//	return HandlePublicReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HandlePublicReservationMessage
//// [0x00080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::HandlePublicReservationMessage ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnHandlePublicReservationMessage = NULL;
//
//	if ( ! pFnHandlePublicReservationMessage )
//		pFnHandlePublicReservationMessage = (UFunction*) UObject::GObjObjects()->Data[ 51834 ];
//
//	UOnlineGameLanReservations_X_execHandlePublicReservationMessage_Parms HandlePublicReservationMessage_Parms;
//	HandlePublicReservationMessage_Parms.Connection = Connection;
//	HandlePublicReservationMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePublicReservationMessage, &HandlePublicReservationMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.StartReservationTimeout
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlineGameLanReservations_X::StartReservationTimeout ( )
//{
//	static UFunction* pFnStartReservationTimeout = NULL;
//
//	if ( ! pFnStartReservationTimeout )
//		pFnStartReservationTimeout = (UFunction*) UObject::GObjObjects()->Data[ 51833 ];
//
//	UOnlineGameLanReservations_X_execStartReservationTimeout_Parms StartReservationTimeout_Parms;
//
//	this->ProcessEvent ( pFnStartReservationTimeout, &StartReservationTimeout_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HandlePrivateReservation
//// [0x00080002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UAddReservationMessagePrivate_X* Message                        ( CPF_Parm )
//
//bool UOnlineGameLanReservations_X::HandlePrivateReservation ( class UTcpConnection* Connection, class UAddReservationMessagePrivate_X* Message )
//{
//	static UFunction* pFnHandlePrivateReservation = NULL;
//
//	if ( ! pFnHandlePrivateReservation )
//		pFnHandlePrivateReservation = (UFunction*) UObject::GObjObjects()->Data[ 51829 ];
//
//	UOnlineGameLanReservations_X_execHandlePrivateReservation_Parms HandlePrivateReservation_Parms;
//	HandlePrivateReservation_Parms.Connection = Connection;
//	HandlePrivateReservation_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePrivateReservation, &HandlePrivateReservation_Parms, NULL );
//
//	return HandlePrivateReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HandlePrivateReservationMessage
//// [0x00080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::HandlePrivateReservationMessage ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnHandlePrivateReservationMessage = NULL;
//
//	if ( ! pFnHandlePrivateReservationMessage )
//		pFnHandlePrivateReservationMessage = (UFunction*) UObject::GObjObjects()->Data[ 51826 ];
//
//	UOnlineGameLanReservations_X_execHandlePrivateReservationMessage_Parms HandlePrivateReservationMessage_Parms;
//	HandlePrivateReservationMessage_Parms.Connection = Connection;
//	HandlePrivateReservationMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePrivateReservationMessage, &HandlePrivateReservationMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HandlePingMessage
//// [0x00080002] 
//// Parameters infos:
//// class UTcpConnection*          Connection                     ( CPF_Parm )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::HandlePingMessage ( class UTcpConnection* Connection, class UObject* Message )
//{
//	static UFunction* pFnHandlePingMessage = NULL;
//
//	if ( ! pFnHandlePingMessage )
//		pFnHandlePingMessage = (UFunction*) UObject::GObjObjects()->Data[ 51820 ];
//
//	UOnlineGameLanReservations_X_execHandlePingMessage_Parms HandlePingMessage_Parms;
//	HandlePingMessage_Parms.Connection = Connection;
//	HandlePingMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandlePingMessage, &HandlePingMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.HandleLanQueryMessage
//// [0x00880002] 
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class UObject*                 Message                        ( CPF_Parm )
//
//void UOnlineGameLanReservations_X::HandleLanQueryMessage ( class UOnlineMessageComponent_X* Component, class UObject* Message )
//{
//	static UFunction* pFnHandleLanQueryMessage = NULL;
//
//	if ( ! pFnHandleLanQueryMessage )
//		pFnHandleLanQueryMessage = (UFunction*) UObject::GObjObjects()->Data[ 51814 ];
//
//	UOnlineGameLanReservations_X_execHandleLanQueryMessage_Parms HandleLanQueryMessage_Parms;
//	HandleLanQueryMessage_Parms.Component = Component;
//	HandleLanQueryMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnHandleLanQueryMessage, &HandleLanQueryMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlineGameLanReservations_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 51813 ];
//
//	UOnlineGameLanReservations_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameLanReservations_X.EventReservationsTimeout
//// [0x00120000] 
//// Parameters infos:
//
//void UOnlineGameLanReservations_X::EventReservationsTimeout ( )
//{
//	static UFunction* pFnEventReservationsTimeout = NULL;
//
//	if ( ! pFnEventReservationsTimeout )
//		pFnEventReservationsTimeout = (UFunction*) UObject::GObjObjects()->Data[ 51808 ];
//
//	UOnlineGameLanReservations_X_execEventReservationsTimeout_Parms EventReservationsTimeout_Parms;
//
//	this->ProcessEvent ( pFnEventReservationsTimeout, &EventReservationsTimeout_Parms, NULL );
//};
//
//// Function ProjectX.RPC_GetSkillLeaderboardValueForUser_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetSkillLeaderboardValueForUser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_GetSkillLeaderboardValueForUser_X* URPC_GetSkillLeaderboardValueForUser_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 51984 ];
//
//	URPC_GetSkillLeaderboardValueForUser_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetLeaderboardValueForUserBase_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetLeaderboardValueForUserBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_GetLeaderboardValueForUserBase_X* URPC_GetLeaderboardValueForUserBase_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 51986 ];
//
//	URPC_GetLeaderboardValueForUserBase_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetLeaderboardValueForUser_X.SetStat
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetLeaderboardValueForUser_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InStat                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_GetLeaderboardValueForUser_X* URPC_GetLeaderboardValueForUser_X::SetStat ( struct FString InStat )
//{
//	static UFunction* pFnSetStat = NULL;
//
//	if ( ! pFnSetStat )
//		pFnSetStat = (UFunction*) UObject::GObjObjects()->Data[ 51989 ];
//
//	URPC_GetLeaderboardValueForUser_X_execSetStat_Parms SetStat_Parms;
//	memcpy ( &SetStat_Parms.InStat, &InStat, 0xC );
//
//	this->ProcessEvent ( pFnSetStat, &SetStat_Parms, NULL );
//
//	return SetStat_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetSkillLeaderboard_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetSkillLeaderboard_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_GetSkillLeaderboard_X* URPC_GetSkillLeaderboard_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 52021 ];
//
//	URPC_GetSkillLeaderboard_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetLeaderboardBase_X.SetDisableCrossPlay
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetLeaderboardBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  InDisableCrossPlay             ( CPF_Parm )
//
//class URPC_GetLeaderboardBase_X* URPC_GetLeaderboardBase_X::SetDisableCrossPlay ( unsigned long InDisableCrossPlay )
//{
//	static UFunction* pFnSetDisableCrossPlay = NULL;
//
//	if ( ! pFnSetDisableCrossPlay )
//		pFnSetDisableCrossPlay = (UFunction*) UObject::GObjObjects()->Data[ 52023 ];
//
//	URPC_GetLeaderboardBase_X_execSetDisableCrossPlay_Parms SetDisableCrossPlay_Parms;
//	SetDisableCrossPlay_Parms.InDisableCrossPlay = InDisableCrossPlay;
//
//	this->ProcessEvent ( pFnSetDisableCrossPlay, &SetDisableCrossPlay_Parms, NULL );
//
//	return SetDisableCrossPlay_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetLeaderboard_X.SetStat
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetLeaderboard_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InStat                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_GetLeaderboard_X* URPC_GetLeaderboard_X::SetStat ( struct FString InStat )
//{
//	static UFunction* pFnSetStat = NULL;
//
//	if ( ! pFnSetStat )
//		pFnSetStat = (UFunction*) UObject::GObjObjects()->Data[ 52026 ];
//
//	URPC_GetLeaderboard_X_execSetStat_Parms SetStat_Parms;
//	memcpy ( &SetStat_Parms.InStat, &InStat, 0xC );
//
//	this->ProcessEvent ( pFnSetStat, &SetStat_Parms, NULL );
//
//	return SetStat_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PlayerUnfriended_X* N                              ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit ( class UPsyNetService_PlayerUnfriended_X* N )
//{
//	static UFunction* pFn__OnlinePlayerFriends_X__OnInit = NULL;
//
//	if ( ! pFn__OnlinePlayerFriends_X__OnInit )
//		pFn__OnlinePlayerFriends_X__OnInit = (UFunction*) UObject::GObjObjects()->Data[ 54640 ];
//
//	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_Parms __OnlinePlayerFriends_X__OnInit_Parms;
//	__OnlinePlayerFriends_X__OnInit_Parms.N = N;
//
//	this->ProcessEvent ( pFn__OnlinePlayerFriends_X__OnInit, &__OnlinePlayerFriends_X__OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_IncomingFriendRequest_X* N                              ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit ( class UPsyNetService_IncomingFriendRequest_X* N )
//{
//	static UFunction* pFn__OnlinePlayerFriends_X__OnInit = NULL;
//
//	if ( ! pFn__OnlinePlayerFriends_X__OnInit )
//		pFn__OnlinePlayerFriends_X__OnInit = (UFunction*) UObject::GObjObjects()->Data[ 54641 ];
//
//	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_Parms1 __OnlinePlayerFriends_X__OnInit_Parms;
//	__OnlinePlayerFriends_X__OnInit_Parms.N = N;
//
//	this->ProcessEvent ( pFn__OnlinePlayerFriends_X__OnInit, &__OnlinePlayerFriends_X__OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_FriendStatusUpdate_X* N                              ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit ( class UPsyNetService_FriendStatusUpdate_X* N )
//{
//	static UFunction* pFn__OnlinePlayerFriends_X__OnInit = NULL;
//
//	if ( ! pFn__OnlinePlayerFriends_X__OnInit )
//		pFn__OnlinePlayerFriends_X__OnInit = (UFunction*) UObject::GObjObjects()->Data[ 54645 ];
//
//	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_Parms1 __OnlinePlayerFriends_X__OnInit_Parms;
//	__OnlinePlayerFriends_X__OnInit_Parms.N = N;
//
//	this->ProcessEvent ( pFn__OnlinePlayerFriends_X__OnInit, &__OnlinePlayerFriends_X__OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_FriendAcceptedRequest_X* N                              ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit ( class UPsyNetService_FriendAcceptedRequest_X* N )
//{
//	static UFunction* pFn__OnlinePlayerFriends_X__OnInit = NULL;
//
//	if ( ! pFn__OnlinePlayerFriends_X__OnInit )
//		pFn__OnlinePlayerFriends_X__OnInit = (UFunction*) UObject::GObjObjects()->Data[ 54650 ];
//
//	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_Parms1 __OnlinePlayerFriends_X__OnInit_Parms;
//	__OnlinePlayerFriends_X__OnInit_Parms.N = N;
//
//	this->ProcessEvent ( pFn__OnlinePlayerFriends_X__OnInit, &__OnlinePlayerFriends_X__OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_FriendChatReceived_X* N                              ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit ( class UPsyNetService_FriendChatReceived_X* N )
//{
//	static UFunction* pFn__OnlinePlayerFriends_X__OnInit = NULL;
//
//	if ( ! pFn__OnlinePlayerFriends_X__OnInit )
//		pFn__OnlinePlayerFriends_X__OnInit = (UFunction*) UObject::GObjObjects()->Data[ 54653 ];
//
//	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_Parms1 __OnlinePlayerFriends_X__OnInit_Parms;
//	__OnlinePlayerFriends_X__OnInit_Parms.N = N;
//
//	this->ProcessEvent ( pFn__OnlinePlayerFriends_X__OnInit, &__OnlinePlayerFriends_X__OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.SendChatMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 InMessage                      ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            Recipient                      ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::SendChatMessage ( struct FString InMessage, struct FUniqueNetId Recipient )
//{
//	static UFunction* pFnSendChatMessage = NULL;
//
//	if ( ! pFnSendChatMessage )
//		pFnSendChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 54656 ];
//
//	UOnlinePlayerFriends_X_execSendChatMessage_Parms SendChatMessage_Parms;
//	memcpy ( &SendChatMessage_Parms.InMessage, &InMessage, 0xC );
//	memcpy ( &SendChatMessage_Parms.Recipient, &Recipient, 0x48 );
//
//	this->ProcessEvent ( pFnSendChatMessage, &SendChatMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.ShowPlayerCard
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::ShowPlayerCard ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnShowPlayerCard = NULL;
//
//	if ( ! pFnShowPlayerCard )
//		pFnShowPlayerCard = (UFunction*) UObject::GObjObjects()->Data[ 54638 ];
//
//	UOnlinePlayerFriends_X_execShowPlayerCard_Parms ShowPlayerCard_Parms;
//	memcpy ( &ShowPlayerCard_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnShowPlayerCard, &ShowPlayerCard_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.SetRichPresence
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//// struct FString                 PresenceString                 ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 GameDataString                 ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::SetRichPresence ( unsigned char LocalUserNum, struct FString PresenceString, struct FString GameDataString )
//{
//	static UFunction* pFnSetRichPresence = NULL;
//
//	if ( ! pFnSetRichPresence )
//		pFnSetRichPresence = (UFunction*) UObject::GObjObjects()->Data[ 54634 ];
//
//	UOnlinePlayerFriends_X_execSetRichPresence_Parms SetRichPresence_Parms;
//	SetRichPresence_Parms.LocalUserNum = LocalUserNum;
//	memcpy ( &SetRichPresence_Parms.PresenceString, &PresenceString, 0xC );
//	memcpy ( &SetRichPresence_Parms.GameDataString, &GameDataString, 0xC );
//
//	this->ProcessEvent ( pFnSetRichPresence, &SetRichPresence_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.RemoveFriend
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::RemoveFriend ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnRemoveFriend = NULL;
//
//	if ( ! pFnRemoveFriend )
//		pFnRemoveFriend = (UFunction*) UObject::GObjObjects()->Data[ 54631 ];
//
//	UOnlinePlayerFriends_X_execRemoveFriend_Parms RemoveFriend_Parms;
//	memcpy ( &RemoveFriend_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnRemoveFriend, &RemoveFriend_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.DeclineFriendRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::DeclineFriendRequest ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnDeclineFriendRequest = NULL;
//
//	if ( ! pFnDeclineFriendRequest )
//		pFnDeclineFriendRequest = (UFunction*) UObject::GObjObjects()->Data[ 54633 ];
//
//	UOnlinePlayerFriends_X_execDeclineFriendRequest_Parms DeclineFriendRequest_Parms;
//	memcpy ( &DeclineFriendRequest_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnDeclineFriendRequest, &DeclineFriendRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.AcceptFriendRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::AcceptFriendRequest ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnAcceptFriendRequest = NULL;
//
//	if ( ! pFnAcceptFriendRequest )
//		pFnAcceptFriendRequest = (UFunction*) UObject::GObjObjects()->Data[ 54664 ];
//
//	UOnlinePlayerFriends_X_execAcceptFriendRequest_Parms AcceptFriendRequest_Parms;
//	memcpy ( &AcceptFriendRequest_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnAcceptFriendRequest, &AcceptFriendRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.AddFriend
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UOnlinePlayerFriends_X::AddFriend ( struct FUniqueNetId FriendId, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnAddFriend = NULL;
//
//	if ( ! pFnAddFriend )
//		pFnAddFriend = (UFunction*) UObject::GObjObjects()->Data[ 54626 ];
//
//	UOnlinePlayerFriends_X_execAddFriend_Parms AddFriend_Parms;
//	memcpy ( &AddFriend_Parms.FriendId, &FriendId, 0x48 );
//	memcpy ( &AddFriend_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnAddFriend, &AddFriend_Parms, NULL );
//
//	return AddFriend_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.GetFriendPresence
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FOnlineFriend           Friend                         ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FString UOnlinePlayerFriends_X::GetFriendPresence ( struct FOnlineFriend Friend )
//{
//	static UFunction* pFnGetFriendPresence = NULL;
//
//	if ( ! pFnGetFriendPresence )
//		pFnGetFriendPresence = (UFunction*) UObject::GObjObjects()->Data[ 54623 ];
//
//	UOnlinePlayerFriends_X_execGetFriendPresence_Parms GetFriendPresence_Parms;
//	memcpy ( &GetFriendPresence_Parms.Friend, &Friend, 0x78 );
//
//	this->ProcessEvent ( pFnGetFriendPresence, &GetFriendPresence_Parms, NULL );
//
//	return GetFriendPresence_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.IsFriendJoinable
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//bool UOnlinePlayerFriends_X::IsFriendJoinable ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnIsFriendJoinable = NULL;
//
//	if ( ! pFnIsFriendJoinable )
//		pFnIsFriendJoinable = (UFunction*) UObject::GObjObjects()->Data[ 54619 ];
//
//	UOnlinePlayerFriends_X_execIsFriendJoinable_Parms IsFriendJoinable_Parms;
//	memcpy ( &IsFriendJoinable_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnIsFriendJoinable, &IsFriendJoinable_Parms, NULL );
//
//	return IsFriendJoinable_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.GetFriendName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//struct FString UOnlinePlayerFriends_X::GetFriendName ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnGetFriendName = NULL;
//
//	if ( ! pFnGetFriendName )
//		pFnGetFriendName = (UFunction*) UObject::GObjObjects()->Data[ 54615 ];
//
//	UOnlinePlayerFriends_X_execGetFriendName_Parms GetFriendName_Parms;
//	memcpy ( &GetFriendName_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnGetFriendName, &GetFriendName_Parms, NULL );
//
//	return GetFriendName_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.IsFriend
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//bool UOnlinePlayerFriends_X::IsFriend ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnIsFriend = NULL;
//
//	if ( ! pFnIsFriend )
//		pFnIsFriend = (UFunction*) UObject::GObjObjects()->Data[ 54612 ];
//
//	UOnlinePlayerFriends_X_execIsFriend_Parms IsFriend_Parms;
//	memcpy ( &IsFriend_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnIsFriend, &IsFriend_Parms, NULL );
//
//	return IsFriend_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.HandleFriendsChange
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayerFriends_X::HandleFriendsChange ( )
//{
//	static UFunction* pFnHandleFriendsChange = NULL;
//
//	if ( ! pFnHandleFriendsChange )
//		pFnHandleFriendsChange = (UFunction*) UObject::GObjObjects()->Data[ 54610 ];
//
//	UOnlinePlayerFriends_X_execHandleFriendsChange_Parms HandleFriendsChange_Parms;
//
//	this->ProcessEvent ( pFnHandleFriendsChange, &HandleFriendsChange_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.HandleFriendPresenceChange
//// [0x00880002] 
//// Parameters infos:
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::HandleFriendPresenceChange ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnHandleFriendPresenceChange = NULL;
//
//	if ( ! pFnHandleFriendPresenceChange )
//		pFnHandleFriendPresenceChange = (UFunction*) UObject::GObjObjects()->Data[ 54611 ];
//
//	UOnlinePlayerFriends_X_execHandleFriendPresenceChange_Parms HandleFriendPresenceChange_Parms;
//	memcpy ( &HandleFriendPresenceChange_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnHandleFriendPresenceChange, &HandleFriendPresenceChange_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.MergeFriendLists
//// [0x00480002] 
//// Parameters infos:
//// TArray< struct FOnlineFriend > OtherList                      ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FOnlineFriend > MainList                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::MergeFriendLists ( TArray< struct FOnlineFriend > OtherList, TArray< struct FOnlineFriend >* MainList )
//{
//	static UFunction* pFnMergeFriendLists = NULL;
//
//	if ( ! pFnMergeFriendLists )
//		pFnMergeFriendLists = (UFunction*) UObject::GObjObjects()->Data[ 54667 ];
//
//	UOnlinePlayerFriends_X_execMergeFriendLists_Parms MergeFriendLists_Parms;
//	memcpy ( &MergeFriendLists_Parms.OtherList, &OtherList, 0xC );
//
//	this->ProcessEvent ( pFnMergeFriendLists, &MergeFriendLists_Parms, NULL );
//
//	if ( MainList )
//		memcpy ( MainList, &MergeFriendLists_Parms.MainList, 0xC );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.GetFriendsFromOnlineSub
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayerFriends_X::GetFriendsFromOnlineSub ( )
//{
//	static UFunction* pFnGetFriendsFromOnlineSub = NULL;
//
//	if ( ! pFnGetFriendsFromOnlineSub )
//		pFnGetFriendsFromOnlineSub = (UFunction*) UObject::GObjObjects()->Data[ 54608 ];
//
//	UOnlinePlayerFriends_X_execGetFriendsFromOnlineSub_Parms GetFriendsFromOnlineSub_Parms;
//
//	this->ProcessEvent ( pFnGetFriendsFromOnlineSub, &GetFriendsFromOnlineSub_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.UpdateFriendsList
//// [0x00024002] 
//// Parameters infos:
//// struct FScriptDelegate         HandleFriendsListChanged       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::UpdateFriendsList ( struct FScriptDelegate HandleFriendsListChanged )
//{
//	static UFunction* pFnUpdateFriendsList = NULL;
//
//	if ( ! pFnUpdateFriendsList )
//		pFnUpdateFriendsList = (UFunction*) UObject::GObjObjects()->Data[ 54605 ];
//
//	UOnlinePlayerFriends_X_execUpdateFriendsList_Parms UpdateFriendsList_Parms;
//	memcpy ( &UpdateFriendsList_Parms.HandleFriendsListChanged, &HandleFriendsListChanged, 0x10 );
//
//	this->ProcessEvent ( pFnUpdateFriendsList, &UpdateFriendsList_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.RemoveFriendsListChangedDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         HandleFriendsListChanged       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::RemoveFriendsListChangedDelegate ( struct FScriptDelegate HandleFriendsListChanged )
//{
//	static UFunction* pFnRemoveFriendsListChangedDelegate = NULL;
//
//	if ( ! pFnRemoveFriendsListChangedDelegate )
//		pFnRemoveFriendsListChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54607 ];
//
//	UOnlinePlayerFriends_X_execRemoveFriendsListChangedDelegate_Parms RemoveFriendsListChangedDelegate_Parms;
//	memcpy ( &RemoveFriendsListChangedDelegate_Parms.HandleFriendsListChanged, &HandleFriendsListChanged, 0x10 );
//
//	this->ProcessEvent ( pFnRemoveFriendsListChangedDelegate, &RemoveFriendsListChangedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.AddFriendsListChangedDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         HandleFriendsListChanged       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::AddFriendsListChangedDelegate ( struct FScriptDelegate HandleFriendsListChanged )
//{
//	static UFunction* pFnAddFriendsListChangedDelegate = NULL;
//
//	if ( ! pFnAddFriendsListChangedDelegate )
//		pFnAddFriendsListChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54678 ];
//
//	UOnlinePlayerFriends_X_execAddFriendsListChangedDelegate_Parms AddFriendsListChangedDelegate_Parms;
//	memcpy ( &AddFriendsListChangedDelegate_Parms.HandleFriendsListChanged, &HandleFriendsListChanged, 0x10 );
//
//	this->ProcessEvent ( pFnAddFriendsListChangedDelegate, &AddFriendsListChangedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.HandleDownloadFriendsComplete
//// [0x00080002] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::HandleDownloadFriendsComplete ( unsigned long bWasSuccessful )
//{
//	static UFunction* pFnHandleDownloadFriendsComplete = NULL;
//
//	if ( ! pFnHandleDownloadFriendsComplete )
//		pFnHandleDownloadFriendsComplete = (UFunction*) UObject::GObjObjects()->Data[ 54603 ];
//
//	UOnlinePlayerFriends_X_execHandleDownloadFriendsComplete_Parms HandleDownloadFriendsComplete_Parms;
//	HandleDownloadFriendsComplete_Parms.bWasSuccessful = bWasSuccessful;
//
//	this->ProcessEvent ( pFnHandleDownloadFriendsComplete, &HandleDownloadFriendsComplete_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.DownloadFriendsList
//// [0x00020002] 
//// Parameters infos:
//
//void UOnlinePlayerFriends_X::DownloadFriendsList ( )
//{
//	static UFunction* pFnDownloadFriendsList = NULL;
//
//	if ( ! pFnDownloadFriendsList )
//		pFnDownloadFriendsList = (UFunction*) UObject::GObjObjects()->Data[ 54602 ];
//
//	UOnlinePlayerFriends_X_execDownloadFriendsList_Parms DownloadFriendsList_Parms;
//
//	this->ProcessEvent ( pFnDownloadFriendsList, &DownloadFriendsList_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.HandleLoginStatusChanged
//// [0x00080002] 
//// Parameters infos:
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::HandleLoginStatusChanged ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnHandleLoginStatusChanged = NULL;
//
//	if ( ! pFnHandleLoginStatusChanged )
//		pFnHandleLoginStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 54600 ];
//
//	UOnlinePlayerFriends_X_execHandleLoginStatusChanged_Parms HandleLoginStatusChanged_Parms;
//	HandleLoginStatusChanged_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnHandleLoginStatusChanged, &HandleLoginStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayerFriends_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 54590 ];
//
//	UOnlinePlayerFriends_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPerConReceivedPlayerUnfriended
//// [0x00120000] 
//// Parameters infos:
//// struct FUniqueNetId            SenderId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::EventPerConReceivedPlayerUnfriended ( struct FUniqueNetId SenderId )
//{
//	static UFunction* pFnEventPerConReceivedPlayerUnfriended = NULL;
//
//	if ( ! pFnEventPerConReceivedPlayerUnfriended )
//		pFnEventPerConReceivedPlayerUnfriended = (UFunction*) UObject::GObjObjects()->Data[ 54591 ];
//
//	UOnlinePlayerFriends_X_execEventPerConReceivedPlayerUnfriended_Parms EventPerConReceivedPlayerUnfriended_Parms;
//	memcpy ( &EventPerConReceivedPlayerUnfriended_Parms.SenderId, &SenderId, 0x48 );
//
//	this->ProcessEvent ( pFnEventPerConReceivedPlayerUnfriended, &EventPerConReceivedPlayerUnfriended_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPerConReceivedIncomingFriendRequest
//// [0x00120000] 
//// Parameters infos:
//// struct FOnlineFriend           FriendData                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::EventPerConReceivedIncomingFriendRequest ( struct FOnlineFriend FriendData )
//{
//	static UFunction* pFnEventPerConReceivedIncomingFriendRequest = NULL;
//
//	if ( ! pFnEventPerConReceivedIncomingFriendRequest )
//		pFnEventPerConReceivedIncomingFriendRequest = (UFunction*) UObject::GObjObjects()->Data[ 54681 ];
//
//	UOnlinePlayerFriends_X_execEventPerConReceivedIncomingFriendRequest_Parms EventPerConReceivedIncomingFriendRequest_Parms;
//	memcpy ( &EventPerConReceivedIncomingFriendRequest_Parms.FriendData, &FriendData, 0x78 );
//
//	this->ProcessEvent ( pFnEventPerConReceivedIncomingFriendRequest, &EventPerConReceivedIncomingFriendRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPerConReceivedFriendFriendStatusUpdate
//// [0x00120000] 
//// Parameters infos:
//// struct FOnlineFriend           FriendData                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::EventPerConReceivedFriendFriendStatusUpdate ( struct FOnlineFriend FriendData )
//{
//	static UFunction* pFnEventPerConReceivedFriendFriendStatusUpdate = NULL;
//
//	if ( ! pFnEventPerConReceivedFriendFriendStatusUpdate )
//		pFnEventPerConReceivedFriendFriendStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 54683 ];
//
//	UOnlinePlayerFriends_X_execEventPerConReceivedFriendFriendStatusUpdate_Parms EventPerConReceivedFriendFriendStatusUpdate_Parms;
//	memcpy ( &EventPerConReceivedFriendFriendStatusUpdate_Parms.FriendData, &FriendData, 0x78 );
//
//	this->ProcessEvent ( pFnEventPerConReceivedFriendFriendStatusUpdate, &EventPerConReceivedFriendFriendStatusUpdate_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPerConReceivedFriendAcceptedRequest
//// [0x00120000] 
//// Parameters infos:
//// struct FOnlineFriend           FriendData                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::EventPerConReceivedFriendAcceptedRequest ( struct FOnlineFriend FriendData )
//{
//	static UFunction* pFnEventPerConReceivedFriendAcceptedRequest = NULL;
//
//	if ( ! pFnEventPerConReceivedFriendAcceptedRequest )
//		pFnEventPerConReceivedFriendAcceptedRequest = (UFunction*) UObject::GObjObjects()->Data[ 54685 ];
//
//	UOnlinePlayerFriends_X_execEventPerConReceivedFriendAcceptedRequest_Parms EventPerConReceivedFriendAcceptedRequest_Parms;
//	memcpy ( &EventPerConReceivedFriendAcceptedRequest_Parms.FriendData, &FriendData, 0x78 );
//
//	this->ProcessEvent ( pFnEventPerConReceivedFriendAcceptedRequest, &EventPerConReceivedFriendAcceptedRequest_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPerConReceivedFriendChatMessage
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 InMessage                      ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            SenderId                       ( CPF_Parm )
//// unsigned long                  bIsLocal                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::EventPerConReceivedFriendChatMessage ( struct FString InMessage, struct FUniqueNetId SenderId, unsigned long bIsLocal )
//{
//	static UFunction* pFnEventPerConReceivedFriendChatMessage = NULL;
//
//	if ( ! pFnEventPerConReceivedFriendChatMessage )
//		pFnEventPerConReceivedFriendChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 54687 ];
//
//	UOnlinePlayerFriends_X_execEventPerConReceivedFriendChatMessage_Parms EventPerConReceivedFriendChatMessage_Parms;
//	memcpy ( &EventPerConReceivedFriendChatMessage_Parms.InMessage, &InMessage, 0xC );
//	memcpy ( &EventPerConReceivedFriendChatMessage_Parms.SenderId, &SenderId, 0x48 );
//	EventPerConReceivedFriendChatMessage_Parms.bIsLocal = bIsLocal;
//
//	this->ProcessEvent ( pFnEventPerConReceivedFriendChatMessage, &EventPerConReceivedFriendChatMessage_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPsyNetPendingFriendRequests
//// [0x00120000] 
//// Parameters infos:
//// TArray< struct FOnlineFriend > FriendData                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::EventPsyNetPendingFriendRequests ( TArray< struct FOnlineFriend > FriendData )
//{
//	static UFunction* pFnEventPsyNetPendingFriendRequests = NULL;
//
//	if ( ! pFnEventPsyNetPendingFriendRequests )
//		pFnEventPsyNetPendingFriendRequests = (UFunction*) UObject::GObjObjects()->Data[ 54689 ];
//
//	UOnlinePlayerFriends_X_execEventPsyNetPendingFriendRequests_Parms EventPsyNetPendingFriendRequests_Parms;
//	memcpy ( &EventPsyNetPendingFriendRequests_Parms.FriendData, &FriendData, 0xC );
//
//	this->ProcessEvent ( pFnEventPsyNetPendingFriendRequests, &EventPsyNetPendingFriendRequests_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPsyNetPlayerSearch
//// [0x00120000] 
//// Parameters infos:
//// TArray< struct FOnlineFriend > FriendData                     ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 SearchString                   ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerFriends_X::EventPsyNetPlayerSearch ( TArray< struct FOnlineFriend > FriendData, struct FString SearchString )
//{
//	static UFunction* pFnEventPsyNetPlayerSearch = NULL;
//
//	if ( ! pFnEventPsyNetPlayerSearch )
//		pFnEventPsyNetPlayerSearch = (UFunction*) UObject::GObjObjects()->Data[ 54693 ];
//
//	UOnlinePlayerFriends_X_execEventPsyNetPlayerSearch_Parms EventPsyNetPlayerSearch_Parms;
//	memcpy ( &EventPsyNetPlayerSearch_Parms.FriendData, &FriendData, 0xC );
//	memcpy ( &EventPsyNetPlayerSearch_Parms.SearchString, &SearchString, 0xC );
//
//	this->ProcessEvent ( pFnEventPsyNetPlayerSearch, &EventPsyNetPlayerSearch_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventPsyNetFriendRequestSentSuccess
//// [0x00120000] 
//// Parameters infos:
//// struct FUniqueNetId            FriendId                       ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::EventPsyNetFriendRequestSentSuccess ( struct FUniqueNetId FriendId )
//{
//	static UFunction* pFnEventPsyNetFriendRequestSentSuccess = NULL;
//
//	if ( ! pFnEventPsyNetFriendRequestSentSuccess )
//		pFnEventPsyNetFriendRequestSentSuccess = (UFunction*) UObject::GObjObjects()->Data[ 54630 ];
//
//	UOnlinePlayerFriends_X_execEventPsyNetFriendRequestSentSuccess_Parms EventPsyNetFriendRequestSentSuccess_Parms;
//	memcpy ( &EventPsyNetFriendRequestSentSuccess_Parms.FriendId, &FriendId, 0x48 );
//
//	this->ProcessEvent ( pFnEventPsyNetFriendRequestSentSuccess, &EventPsyNetFriendRequestSentSuccess_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerFriends_X.EventFriendsListChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlinePlayerFriends_X*  FriendsRef                     ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlinePlayerFriends_X::EventFriendsListChanged ( class UOnlinePlayerFriends_X* FriendsRef, class UError* Error )
//{
//	static UFunction* pFnEventFriendsListChanged = NULL;
//
//	if ( ! pFnEventFriendsListChanged )
//		pFnEventFriendsListChanged = (UFunction*) UObject::GObjObjects()->Data[ 54587 ];
//
//	UOnlinePlayerFriends_X_execEventFriendsListChanged_Parms EventFriendsListChanged_Parms;
//	EventFriendsListChanged_Parms.FriendsRef = FriendsRef;
//	EventFriendsListChanged_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventFriendsListChanged, &EventFriendsListChanged_Parms, NULL );
//};
//
//// Function ProjectX.RPC_GetSkillLeaderboardRankForUsers_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetSkillLeaderboardRankForUsers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_GetSkillLeaderboardRankForUsers_X* URPC_GetSkillLeaderboardRankForUsers_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 52060 ];
//
//	URPC_GetSkillLeaderboardRankForUsers_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetLeaderboardRankForUsersBase_X.SetPlayerIDs
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetLeaderboardRankForUsersBase_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FUniqueNetId >  InPlayerIDs                    ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_GetLeaderboardRankForUsersBase_X* URPC_GetLeaderboardRankForUsersBase_X::SetPlayerIDs ( TArray< struct FUniqueNetId > InPlayerIDs )
//{
//	static UFunction* pFnSetPlayerIDs = NULL;
//
//	if ( ! pFnSetPlayerIDs )
//		pFnSetPlayerIDs = (UFunction*) UObject::GObjObjects()->Data[ 52062 ];
//
//	URPC_GetLeaderboardRankForUsersBase_X_execSetPlayerIDs_Parms SetPlayerIDs_Parms;
//	memcpy ( &SetPlayerIDs_Parms.InPlayerIDs, &InPlayerIDs, 0xC );
//
//	this->ProcessEvent ( pFnSetPlayerIDs, &SetPlayerIDs_Parms, NULL );
//
//	return SetPlayerIDs_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetLeaderboardRankForUsers_X.SetStat
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetLeaderboardRankForUsers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InStat                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_GetLeaderboardRankForUsers_X* URPC_GetLeaderboardRankForUsers_X::SetStat ( struct FString InStat )
//{
//	static UFunction* pFnSetStat = NULL;
//
//	if ( ! pFnSetStat )
//		pFnSetStat = (UFunction*) UObject::GObjObjects()->Data[ 52065 ];
//
//	URPC_GetLeaderboardRankForUsers_X_execSetStat_Parms SetStat_Parms;
//	memcpy ( &SetStat_Parms.InStat, &InStat, 0xC );
//
//	this->ProcessEvent ( pFnSetStat, &SetStat_Parms, NULL );
//
//	return SetStat_Parms.ReturnValue;
//};
//
//// Function ProjectX.CheckReservation_X.HandleReservationNotFound
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UCheckReservation_X::HandleReservationNotFound ( )
//{
//	static UFunction* pFnHandleReservationNotFound = NULL;
//
//	if ( ! pFnHandleReservationNotFound )
//		pFnHandleReservationNotFound = (UFunction*) UObject::GObjObjects()->Data[ 56383 ];
//
//	UCheckReservation_X_execHandleReservationNotFound_Parms HandleReservationNotFound_Parms;
//
//	this->ProcessEvent ( pFnHandleReservationNotFound, &HandleReservationNotFound_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservation_X.HandleFoundReservation
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FCheckReservationData   Reservation                    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCheckReservation_X::HandleFoundReservation ( struct FCheckReservationData Reservation )
//{
//	static UFunction* pFnHandleFoundReservation = NULL;
//
//	if ( ! pFnHandleFoundReservation )
//		pFnHandleFoundReservation = (UFunction*) UObject::GObjObjects()->Data[ 56384 ];
//
//	UCheckReservation_X_execHandleFoundReservation_Parms HandleFoundReservation_Parms;
//	memcpy ( &HandleFoundReservation_Parms.Reservation, &Reservation, 0x1C );
//
//	this->ProcessEvent ( pFnHandleFoundReservation, &HandleFoundReservation_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservation_X.SendRequest
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UCheckReservation_X::SendRequest ( )
//{
//	static UFunction* pFnSendRequest = NULL;
//
//	if ( ! pFnSendRequest )
//		pFnSendRequest = (UFunction*) UObject::GObjObjects()->Data[ 56381 ];
//
//	UCheckReservation_X_execSendRequest_Parms SendRequest_Parms;
//
//	this->ProcessEvent ( pFnSendRequest, &SendRequest_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservation_X.Cancel
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UCheckReservation_X::Cancel ( )
//{
//	static UFunction* pFnCancel = NULL;
//
//	if ( ! pFnCancel )
//		pFnCancel = (UFunction*) UObject::GObjObjects()->Data[ 52180 ];
//
//	UCheckReservation_X_execCancel_Parms Cancel_Parms;
//
//	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservation_X.IsSearching
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UCheckReservation_X::IsSearching ( )
//{
//	static UFunction* pFnIsSearching = NULL;
//
//	if ( ! pFnIsSearching )
//		pFnIsSearching = (UFunction*) UObject::GObjObjects()->Data[ 56373 ];
//
//	UCheckReservation_X_execIsSearching_Parms IsSearching_Parms;
//
//	this->ProcessEvent ( pFnIsSearching, &IsSearching_Parms, NULL );
//
//	return IsSearching_Parms.ReturnValue;
//};
//
//// Function ProjectX.CheckReservation_X.StartSearch
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         ReservationDelegate            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UCheckReservation_X::StartSearch ( struct FScriptDelegate Callback, struct FScriptDelegate ReservationDelegate )
//{
//	static UFunction* pFnStartSearch = NULL;
//
//	if ( ! pFnStartSearch )
//		pFnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 52326 ];
//
//	UCheckReservation_X_execStartSearch_Parms StartSearch_Parms;
//	memcpy ( &StartSearch_Parms.Callback, &Callback, 0x10 );
//	memcpy ( &StartSearch_Parms.ReservationDelegate, &ReservationDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnStartSearch, &StartSearch_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservation_X.NotifyOnStartSearch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UCheckReservation_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UCheckReservation_X* UCheckReservation_X::NotifyOnStartSearch ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnStartSearch = NULL;
//
//	if ( ! pFnNotifyOnStartSearch )
//		pFnNotifyOnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 52324 ];
//
//	UCheckReservation_X_execNotifyOnStartSearch_Parms NotifyOnStartSearch_Parms;
//	memcpy ( &NotifyOnStartSearch_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnStartSearch, &NotifyOnStartSearch_Parms, NULL );
//
//	return NotifyOnStartSearch_Parms.ReturnValue;
//};
//
//// Function ProjectX.CheckReservation_X.OnStartSearch
//// [0x00120000] 
//// Parameters infos:
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UCheckReservation_X::OnStartSearch ( class UAsyncTask* Task )
//{
//	static UFunction* pFnOnStartSearch = NULL;
//
//	if ( ! pFnOnStartSearch )
//		pFnOnStartSearch = (UFunction*) UObject::GObjObjects()->Data[ 56386 ];
//
//	UCheckReservation_X_execOnStartSearch_Parms OnStartSearch_Parms;
//	OnStartSearch_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnOnStartSearch, &OnStartSearch_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.RankedReconnect
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UMatchmakingMetrics_X::RankedReconnect ( struct FString Address )
//{
//	static UFunction* pFnRankedReconnect = NULL;
//
//	if ( ! pFnRankedReconnect )
//		pFnRankedReconnect = (UFunction*) UObject::GObjObjects()->Data[ 56010 ];
//
//	UMatchmakingMetrics_X_execRankedReconnect_Parms RankedReconnect_Parms;
//	memcpy ( &RankedReconnect_Parms.Address, &Address, 0xC );
//
//	this->ProcessEvent ( pFnRankedReconnect, &RankedReconnect_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.End
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UMatchmakingMetrics_X::End ( )
//{
//	static UFunction* pFnEnd = NULL;
//
//	if ( ! pFnEnd )
//		pFnEnd = (UFunction*) UObject::GObjObjects()->Data[ 52262 ];
//
//	UMatchmakingMetrics_X_execEnd_Parms End_Parms;
//
//	this->ProcessEvent ( pFnEnd, &End_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.FoundServer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 ServerName                     ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Playlist                       ( CPF_Parm )
//
//void UMatchmakingMetrics_X::FoundServer ( struct FString Address, struct FString ServerName, int Playlist )
//{
//	static UFunction* pFnFoundServer = NULL;
//
//	if ( ! pFnFoundServer )
//		pFnFoundServer = (UFunction*) UObject::GObjObjects()->Data[ 56012 ];
//
//	UMatchmakingMetrics_X_execFoundServer_Parms FoundServer_Parms;
//	memcpy ( &FoundServer_Parms.Address, &Address, 0xC );
//	memcpy ( &FoundServer_Parms.ServerName, &ServerName, 0xC );
//	FoundServer_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnFoundServer, &FoundServer_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.RecordFoundServer
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// struct FCheckReservationData   Reservation                    ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UMatchmakingMetrics_X::RecordFoundServer ( struct FCheckReservationData* Reservation )
//{
//	static UFunction* pFnRecordFoundServer = NULL;
//
//	if ( ! pFnRecordFoundServer )
//		pFnRecordFoundServer = (UFunction*) UObject::GObjObjects()->Data[ 52315 ];
//
//	UMatchmakingMetrics_X_execRecordFoundServer_Parms RecordFoundServer_Parms;
//
//	this->ProcessEvent ( pFnRecordFoundServer, &RecordFoundServer_Parms, NULL );
//
//	if ( Reservation )
//		memcpy ( Reservation, &RecordFoundServer_Parms.Reservation, 0x1C );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.Cancel
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UMatchmakingMetrics_X::Cancel ( )
//{
//	static UFunction* pFnCancel = NULL;
//
//	if ( ! pFnCancel )
//		pFnCancel = (UFunction*) UObject::GObjObjects()->Data[ 56016 ];
//
//	UMatchmakingMetrics_X_execCancel_Parms Cancel_Parms;
//
//	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.ErrorID
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            Error                          ( CPF_Parm )
//
//void UMatchmakingMetrics_X::ErrorID ( int Error )
//{
//	static UFunction* pFnErrorID = NULL;
//
//	if ( ! pFnErrorID )
//		pFnErrorID = (UFunction*) UObject::GObjObjects()->Data[ 56009 ];
//
//	UMatchmakingMetrics_X_execErrorID_Parms ErrorID_Parms;
//	ErrorID_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnErrorID, &ErrorID_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.ErrorUnknown
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UMatchmakingMetrics_X::ErrorUnknown ( struct FString Message )
//{
//	static UFunction* pFnErrorUnknown = NULL;
//
//	if ( ! pFnErrorUnknown )
//		pFnErrorUnknown = (UFunction*) UObject::GObjObjects()->Data[ 56008 ];
//
//	UMatchmakingMetrics_X_execErrorUnknown_Parms ErrorUnknown_Parms;
//	memcpy ( &ErrorUnknown_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnErrorUnknown, &ErrorUnknown_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.RecordError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UMatchmakingMetrics_X::RecordError ( struct FString Error )
//{
//	static UFunction* pFnRecordError = NULL;
//
//	if ( ! pFnRecordError )
//		pFnRecordError = (UFunction*) UObject::GObjObjects()->Data[ 52245 ];
//
//	UMatchmakingMetrics_X_execRecordError_Parms RecordError_Parms;
//	memcpy ( &RecordError_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnRecordError, &RecordError_Parms, NULL );
//};
//
//// Function ProjectX.MatchmakingMetrics_X.Start
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FString >       Regions                        ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< int >                  Playlists                      ( CPF_Parm | CPF_NeedCtorLink )
//// unsigned long                  bDisableCrossPlay              ( CPF_Parm )
//
//void UMatchmakingMetrics_X::Start ( TArray< struct FString > Regions, TArray< int > Playlists, unsigned long bDisableCrossPlay )
//{
//	static UFunction* pFnStart = NULL;
//
//	if ( ! pFnStart )
//		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 52332 ];
//
//	UMatchmakingMetrics_X_execStart_Parms Start_Parms;
//	memcpy ( &Start_Parms.Regions, &Regions, 0xC );
//	memcpy ( &Start_Parms.Playlists, &Playlists, 0xC );
//	Start_Parms.bDisableCrossPlay = bDisableCrossPlay;
//
//	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetIgnoreSkill
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bInIgnoreSkill                 ( CPF_Parm )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetIgnoreSkill ( unsigned long bInIgnoreSkill )
//{
//	static UFunction* pFnSetIgnoreSkill = NULL;
//
//	if ( ! pFnSetIgnoreSkill )
//		pFnSetIgnoreSkill = (UFunction*) UObject::GObjObjects()->Data[ 52302 ];
//
//	URPC_StartMatchmaking_X_execSetIgnoreSkill_Parms SetIgnoreSkill_Parms;
//	SetIgnoreSkill_Parms.bInIgnoreSkill = bInIgnoreSkill;
//
//	this->ProcessEvent ( pFnSetIgnoreSkill, &SetIgnoreSkill_Parms, NULL );
//
//	return SetIgnoreSkill_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetPartyId
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InPartyId                      ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetPartyId ( struct FString InPartyId )
//{
//	static UFunction* pFnSetPartyId = NULL;
//
//	if ( ! pFnSetPartyId )
//		pFnSetPartyId = (UFunction*) UObject::GObjObjects()->Data[ 52286 ];
//
//	URPC_StartMatchmaking_X_execSetPartyId_Parms SetPartyId_Parms;
//	memcpy ( &SetPartyId_Parms.InPartyId, &InPartyId, 0xC );
//
//	this->ProcessEvent ( pFnSetPartyId, &SetPartyId_Parms, NULL );
//
//	return SetPartyId_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetPartyMembers
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FUniqueNetId >  InPartyMembers                 ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetPartyMembers ( TArray< struct FUniqueNetId > InPartyMembers )
//{
//	static UFunction* pFnSetPartyMembers = NULL;
//
//	if ( ! pFnSetPartyMembers )
//		pFnSetPartyMembers = (UFunction*) UObject::GObjObjects()->Data[ 52304 ];
//
//	URPC_StartMatchmaking_X_execSetPartyMembers_Parms SetPartyMembers_Parms;
//	memcpy ( &SetPartyMembers_Parms.InPartyMembers, &InPartyMembers, 0xC );
//
//	this->ProcessEvent ( pFnSetPartyMembers, &SetPartyMembers_Parms, NULL );
//
//	return SetPartyMembers_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetDisableCrossPlay
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bInDisableCrossplay            ( CPF_Parm )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetDisableCrossPlay ( unsigned long bInDisableCrossplay )
//{
//	static UFunction* pFnSetDisableCrossPlay = NULL;
//
//	if ( ! pFnSetDisableCrossPlay )
//		pFnSetDisableCrossPlay = (UFunction*) UObject::GObjObjects()->Data[ 52300 ];
//
//	URPC_StartMatchmaking_X_execSetDisableCrossPlay_Parms SetDisableCrossPlay_Parms;
//	SetDisableCrossPlay_Parms.bInDisableCrossplay = bInDisableCrossplay;
//
//	this->ProcessEvent ( pFnSetDisableCrossPlay, &SetDisableCrossPlay_Parms, NULL );
//
//	return SetDisableCrossPlay_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetCurrentServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetCurrentServerID ( )
//{
//	static UFunction* pFnSetCurrentServerID = NULL;
//
//	if ( ! pFnSetCurrentServerID )
//		pFnSetCurrentServerID = (UFunction*) UObject::GObjObjects()->Data[ 52298 ];
//
//	URPC_StartMatchmaking_X_execSetCurrentServerID_Parms SetCurrentServerID_Parms;
//
//	this->ProcessEvent ( pFnSetCurrentServerID, &SetCurrentServerID_Parms, NULL );
//
//	return SetCurrentServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetSecondsSearching
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InSecondsSearching             ( CPF_Parm )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetSecondsSearching ( int InSecondsSearching )
//{
//	static UFunction* pFnSetSecondsSearching = NULL;
//
//	if ( ! pFnSetSecondsSearching )
//		pFnSetSecondsSearching = (UFunction*) UObject::GObjObjects()->Data[ 52296 ];
//
//	URPC_StartMatchmaking_X_execSetSecondsSearching_Parms SetSecondsSearching_Parms;
//	SetSecondsSearching_Parms.InSecondsSearching = InSecondsSearching;
//
//	this->ProcessEvent ( pFnSetSecondsSearching, &SetSecondsSearching_Parms, NULL );
//
//	return SetSecondsSearching_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetPlaylists
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< int >                  InPlaylists                    ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetPlaylists ( TArray< int > InPlaylists )
//{
//	static UFunction* pFnSetPlaylists = NULL;
//
//	if ( ! pFnSetPlaylists )
//		pFnSetPlaylists = (UFunction*) UObject::GObjObjects()->Data[ 52294 ];
//
//	URPC_StartMatchmaking_X_execSetPlaylists_Parms SetPlaylists_Parms;
//	memcpy ( &SetPlaylists_Parms.InPlaylists, &InPlaylists, 0xC );
//
//	this->ProcessEvent ( pFnSetPlaylists, &SetPlaylists_Parms, NULL );
//
//	return SetPlaylists_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_StartMatchmaking_X.SetRegions
//// [0x00020002] 
//// Parameters infos:
//// class URPC_StartMatchmaking_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FString >       InRegions                      ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetRegions ( TArray< struct FString > InRegions )
//{
//	static UFunction* pFnSetRegions = NULL;
//
//	if ( ! pFnSetRegions )
//		pFnSetRegions = (UFunction*) UObject::GObjObjects()->Data[ 52292 ];
//
//	URPC_StartMatchmaking_X_execSetRegions_Parms SetRegions_Parms;
//	memcpy ( &SetRegions_Parms.InRegions, &InRegions, 0xC );
//
//	this->ProcessEvent ( pFnSetRegions, &SetRegions_Parms, NULL );
//
//	return SetRegions_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.HandlePsyNetPartyInviteAccepted
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PartyID                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueNetId            StructInitializer_C7FBA39E4B65CA0D1666E7B68267790B ( CPF_Const | CPF_OutParm )
//
//void UParties_X::HandlePsyNetPartyInviteAccepted ( struct FString PartyID, struct FUniqueNetId* StructInitializer_C7FBA39E4B65CA0D1666E7B68267790B )
//{
//	static UFunction* pFnHandlePsyNetPartyInviteAccepted = NULL;
//
//	if ( ! pFnHandlePsyNetPartyInviteAccepted )
//		pFnHandlePsyNetPartyInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 57937 ];
//
//	UParties_X_execHandlePsyNetPartyInviteAccepted_Parms HandlePsyNetPartyInviteAccepted_Parms;
//	memcpy ( &HandlePsyNetPartyInviteAccepted_Parms.PartyID, &PartyID, 0xC );
//
//	this->ProcessEvent ( pFnHandlePsyNetPartyInviteAccepted, &HandlePsyNetPartyInviteAccepted_Parms, NULL );
//
//	if ( StructInitializer_C7FBA39E4B65CA0D1666E7B68267790B )
//		memcpy ( StructInitializer_C7FBA39E4B65CA0D1666E7B68267790B, &HandlePsyNetPartyInviteAccepted_Parms.StructInitializer_C7FBA39E4B65CA0D1666E7B68267790B, 0x48 );
//};
//
//// Function ProjectX.Parties_X.GetPsyNetPartyID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UParties_X::GetPsyNetPartyID ( )
//{
//	static UFunction* pFnGetPsyNetPartyID = NULL;
//
//	if ( ! pFnGetPsyNetPartyID )
//		pFnGetPsyNetPartyID = (UFunction*) UObject::GObjObjects()->Data[ 52290 ];
//
//	UParties_X_execGetPsyNetPartyID_Parms GetPsyNetPartyID_Parms;
//
//	this->ProcessEvent ( pFnGetPsyNetPartyID, &GetPsyNetPartyID_Parms, NULL );
//
//	return GetPsyNetPartyID_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.FindPartyLeaderID
//// [0x00C40003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FPsyNetPartyMember > Members                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            StructInitializer_337C55374A19027CFBC723ABDC696A39 ( CPF_Const | CPF_OutParm )
//
//struct FUniqueNetId UParties_X::FindPartyLeaderID ( TArray< struct FPsyNetPartyMember >* Members, struct FUniqueNetId* StructInitializer_337C55374A19027CFBC723ABDC696A39 )
//{
//	static UFunction* pFnFindPartyLeaderID = NULL;
//
//	if ( ! pFnFindPartyLeaderID )
//		pFnFindPartyLeaderID = (UFunction*) UObject::GObjObjects()->Data[ 57681 ];
//
//	UParties_X_execFindPartyLeaderID_Parms FindPartyLeaderID_Parms;
//
//	this->ProcessEvent ( pFnFindPartyLeaderID, &FindPartyLeaderID_Parms, NULL );
//
//	if ( Members )
//		memcpy ( Members, &FindPartyLeaderID_Parms.Members, 0xC );
//
//	if ( StructInitializer_337C55374A19027CFBC723ABDC696A39 )
//		memcpy ( StructInitializer_337C55374A19027CFBC723ABDC696A39, &FindPartyLeaderID_Parms.StructInitializer_337C55374A19027CFBC723ABDC696A39, 0x48 );
//
//	return FindPartyLeaderID_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.HandleOwnerChanged
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyOwnerChanged_X* Notification                   ( CPF_Parm )
//
//void UParties_X::HandleOwnerChanged ( class UPsyNetService_PartyOwnerChanged_X* Notification )
//{
//	static UFunction* pFnHandleOwnerChanged = NULL;
//
//	if ( ! pFnHandleOwnerChanged )
//		pFnHandleOwnerChanged = (UFunction*) UObject::GObjObjects()->Data[ 57932 ];
//
//	UParties_X_execHandleOwnerChanged_Parms HandleOwnerChanged_Parms;
//	HandleOwnerChanged_Parms.Notification = Notification;
//
//	this->ProcessEvent ( pFnHandleOwnerChanged, &HandleOwnerChanged_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleChatNotification
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyChat_X* Notifications                  ( CPF_Parm )
//
//void UParties_X::HandleChatNotification ( class UPsyNetService_PartyChat_X* Notifications )
//{
//	static UFunction* pFnHandleChatNotification = NULL;
//
//	if ( ! pFnHandleChatNotification )
//		pFnHandleChatNotification = (UFunction*) UObject::GObjObjects()->Data[ 57934 ];
//
//	UParties_X_execHandleChatNotification_Parms HandleChatNotification_Parms;
//	HandleChatNotification_Parms.Notifications = Notifications;
//
//	this->ProcessEvent ( pFnHandleChatNotification, &HandleChatNotification_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleSystemNotification
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartySystem_X* Notifications                  ( CPF_Parm )
//
//void UParties_X::HandleSystemNotification ( class UPsyNetService_PartySystem_X* Notifications )
//{
//	static UFunction* pFnHandleSystemNotification = NULL;
//
//	if ( ! pFnHandleSystemNotification )
//		pFnHandleSystemNotification = (UFunction*) UObject::GObjObjects()->Data[ 57926 ];
//
//	UParties_X_execHandleSystemNotification_Parms HandleSystemNotification_Parms;
//	HandleSystemNotification_Parms.Notifications = Notifications;
//
//	this->ProcessEvent ( pFnHandleSystemNotification, &HandleSystemNotification_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleUserKicked
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyUserKicked_X* Notification                   ( CPF_Parm )
//
//void UParties_X::HandleUserKicked ( class UPsyNetService_PartyUserKicked_X* Notification )
//{
//	static UFunction* pFnHandleUserKicked = NULL;
//
//	if ( ! pFnHandleUserKicked )
//		pFnHandleUserKicked = (UFunction*) UObject::GObjObjects()->Data[ 57920 ];
//
//	UParties_X_execHandleUserKicked_Parms HandleUserKicked_Parms;
//	HandleUserKicked_Parms.Notification = Notification;
//
//	this->ProcessEvent ( pFnHandleUserKicked, &HandleUserKicked_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleUserDisconnected
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyUserDisconnected_X* Notification                   ( CPF_Parm )
//
//void UParties_X::HandleUserDisconnected ( class UPsyNetService_PartyUserDisconnected_X* Notification )
//{
//	static UFunction* pFnHandleUserDisconnected = NULL;
//
//	if ( ! pFnHandleUserDisconnected )
//		pFnHandleUserDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 57917 ];
//
//	UParties_X_execHandleUserDisconnected_Parms HandleUserDisconnected_Parms;
//	HandleUserDisconnected_Parms.Notification = Notification;
//
//	this->ProcessEvent ( pFnHandleUserDisconnected, &HandleUserDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleUserLeft
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyUserLeft_X* Notification                   ( CPF_Parm )
//
//void UParties_X::HandleUserLeft ( class UPsyNetService_PartyUserLeft_X* Notification )
//{
//	static UFunction* pFnHandleUserLeft = NULL;
//
//	if ( ! pFnHandleUserLeft )
//		pFnHandleUserLeft = (UFunction*) UObject::GObjObjects()->Data[ 57914 ];
//
//	UParties_X_execHandleUserLeft_Parms HandleUserLeft_Parms;
//	HandleUserLeft_Parms.Notification = Notification;
//
//	this->ProcessEvent ( pFnHandleUserLeft, &HandleUserLeft_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleUserJoined
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyUserJoined_X* Notification                   ( CPF_Parm )
//
//void UParties_X::HandleUserJoined ( class UPsyNetService_PartyUserJoined_X* Notification )
//{
//	static UFunction* pFnHandleUserJoined = NULL;
//
//	if ( ! pFnHandleUserJoined )
//		pFnHandleUserJoined = (UFunction*) UObject::GObjObjects()->Data[ 57911 ];
//
//	UParties_X_execHandleUserJoined_Parms HandleUserJoined_Parms;
//	HandleUserJoined_Parms.Notification = Notification;
//
//	this->ProcessEvent ( pFnHandleUserJoined, &HandleUserJoined_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleMemberStatusUpdate
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            MemberUID                      ( CPF_Parm )
//// struct FString                 Status                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::HandleMemberStatusUpdate ( struct FUniqueNetId MemberUID, struct FString Status )
//{
//	static UFunction* pFnHandleMemberStatusUpdate = NULL;
//
//	if ( ! pFnHandleMemberStatusUpdate )
//		pFnHandleMemberStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57907 ];
//
//	UParties_X_execHandleMemberStatusUpdate_Parms HandleMemberStatusUpdate_Parms;
//	memcpy ( &HandleMemberStatusUpdate_Parms.MemberUID, &MemberUID, 0x48 );
//	memcpy ( &HandleMemberStatusUpdate_Parms.Status, &Status, 0xC );
//
//	this->ProcessEvent ( pFnHandleMemberStatusUpdate, &HandleMemberStatusUpdate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleUserInvitedResponse
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Parm )
//// struct FUniqueNetId            ForUserId                      ( CPF_Parm )
//// unsigned long                  bAccepted                      ( CPF_Parm )
//
//void UParties_X::HandleUserInvitedResponse ( struct FUniqueLobbyId LobbyId, struct FUniqueNetId ForUserId, unsigned long bAccepted )
//{
//	static UFunction* pFnHandleUserInvitedResponse = NULL;
//
//	if ( ! pFnHandleUserInvitedResponse )
//		pFnHandleUserInvitedResponse = (UFunction*) UObject::GObjObjects()->Data[ 57903 ];
//
//	UParties_X_execHandleUserInvitedResponse_Parms HandleUserInvitedResponse_Parms;
//	memcpy ( &HandleUserInvitedResponse_Parms.LobbyId, &LobbyId, 0xC );
//	memcpy ( &HandleUserInvitedResponse_Parms.ForUserId, &ForUserId, 0x48 );
//	HandleUserInvitedResponse_Parms.bAccepted = bAccepted;
//
//	this->ProcessEvent ( pFnHandleUserInvitedResponse, &HandleUserInvitedResponse_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleUserInvited
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetService_PartyUserInvited_X* Notifications                  ( CPF_Parm )
//
//void UParties_X::HandleUserInvited ( class UPsyNetService_PartyUserInvited_X* Notifications )
//{
//	static UFunction* pFnHandleUserInvited = NULL;
//
//	if ( ! pFnHandleUserInvited )
//		pFnHandleUserInvited = (UFunction*) UObject::GObjObjects()->Data[ 57897 ];
//
//	UParties_X_execHandleUserInvited_Parms HandleUserInvited_Parms;
//	HandleUserInvited_Parms.Notifications = Notifications;
//
//	this->ProcessEvent ( pFnHandleUserInvited, &HandleUserInvited_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.SetRejoiningParty
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bRejoining                     ( CPF_Parm )
//
//void UParties_X::SetRejoiningParty ( unsigned long bRejoining )
//{
//	static UFunction* pFnSetRejoiningParty = NULL;
//
//	if ( ! pFnSetRejoiningParty )
//		pFnSetRejoiningParty = (UFunction*) UObject::GObjObjects()->Data[ 57716 ];
//
//	UParties_X_execSetRejoiningParty_Parms SetRejoiningParty_Parms;
//	SetRejoiningParty_Parms.bRejoining = bRejoining;
//
//	this->ProcessEvent ( pFnSetRejoiningParty, &SetRejoiningParty_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleChannelClosed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetChannel_X*        InChannel                      ( CPF_Parm )
//
//void UParties_X::HandleChannelClosed ( class UPsyNetChannel_X* InChannel )
//{
//	static UFunction* pFnHandleChannelClosed = NULL;
//
//	if ( ! pFnHandleChannelClosed )
//		pFnHandleChannelClosed = (UFunction*) UObject::GObjObjects()->Data[ 57894 ];
//
//	UParties_X_execHandleChannelClosed_Parms HandleChannelClosed_Parms;
//	HandleChannelClosed_Parms.InChannel = InChannel;
//
//	this->ProcessEvent ( pFnHandleChannelClosed, &HandleChannelClosed_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.CreatePsyNetChannel
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetChannel_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 PartyID                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UPsyNetChannel_X* UParties_X::CreatePsyNetChannel ( struct FString PartyID )
//{
//	static UFunction* pFnCreatePsyNetChannel = NULL;
//
//	if ( ! pFnCreatePsyNetChannel )
//		pFnCreatePsyNetChannel = (UFunction*) UObject::GObjObjects()->Data[ 57717 ];
//
//	UParties_X_execCreatePsyNetChannel_Parms CreatePsyNetChannel_Parms;
//	memcpy ( &CreatePsyNetChannel_Parms.PartyID, &PartyID, 0xC );
//
//	this->ProcessEvent ( pFnCreatePsyNetChannel, &CreatePsyNetChannel_Parms, NULL );
//
//	return CreatePsyNetChannel_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SetPsyNetSubscriptions
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetServiceSubscriptions_X* InSubscriptions                ( CPF_Parm | CPF_EditInline )
//
//void UParties_X::SetPsyNetSubscriptions ( class UPsyNetServiceSubscriptions_X* InSubscriptions )
//{
//	static UFunction* pFnSetPsyNetSubscriptions = NULL;
//
//	if ( ! pFnSetPsyNetSubscriptions )
//		pFnSetPsyNetSubscriptions = (UFunction*) UObject::GObjObjects()->Data[ 57866 ];
//
//	UParties_X_execSetPsyNetSubscriptions_Parms SetPsyNetSubscriptions_Parms;
//	SetPsyNetSubscriptions_Parms.InSubscriptions = InSubscriptions;
//
//	this->ProcessEvent ( pFnSetPsyNetSubscriptions, &SetPsyNetSubscriptions_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.SetPsyNetChannel
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetChannel_X*        InChannel                      ( CPF_Parm )
//
//void UParties_X::SetPsyNetChannel ( class UPsyNetChannel_X* InChannel )
//{
//	static UFunction* pFnSetPsyNetChannel = NULL;
//
//	if ( ! pFnSetPsyNetChannel )
//		pFnSetPsyNetChannel = (UFunction*) UObject::GObjObjects()->Data[ 57867 ];
//
//	UParties_X_execSetPsyNetChannel_Parms SetPsyNetChannel_Parms;
//	SetPsyNetChannel_Parms.InChannel = InChannel;
//
//	this->ProcessEvent ( pFnSetPsyNetChannel, &SetPsyNetChannel_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.TimeoutPerconReconnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UParties_X::TimeoutPerconReconnect ( )
//{
//	static UFunction* pFnTimeoutPerconReconnect = NULL;
//
//	if ( ! pFnTimeoutPerconReconnect )
//		pFnTimeoutPerconReconnect = (UFunction*) UObject::GObjObjects()->Data[ 57876 ];
//
//	UParties_X_execTimeoutPerconReconnect_Parms TimeoutPerconReconnect_Parms;
//
//	this->ProcessEvent ( pFnTimeoutPerconReconnect, &TimeoutPerconReconnect_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.SetPsyNetConnection
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     InConnection                   ( CPF_Parm )
//
//void UParties_X::SetPsyNetConnection ( class UPsyNetConnection_X* InConnection )
//{
//	static UFunction* pFnSetPsyNetConnection = NULL;
//
//	if ( ! pFnSetPsyNetConnection )
//		pFnSetPsyNetConnection = (UFunction*) UObject::GObjObjects()->Data[ 57861 ];
//
//	UParties_X_execSetPsyNetConnection_Parms SetPsyNetConnection_Parms;
//	SetPsyNetConnection_Parms.InConnection = InConnection;
//
//	this->ProcessEvent ( pFnSetPsyNetConnection, &SetPsyNetConnection_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyData
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FActiveLobbyInfo        StructInitializer_6ABA7DB5455F97752BC566B4DA28CEF9 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyData ( struct FActiveLobbyInfo* StructInitializer_6ABA7DB5455F97752BC566B4DA28CEF9 )
//{
//	static UFunction* pFnClearLobbyData = NULL;
//
//	if ( ! pFnClearLobbyData )
//		pFnClearLobbyData = (UFunction*) UObject::GObjObjects()->Data[ 57724 ];
//
//	UParties_X_execClearLobbyData_Parms ClearLobbyData_Parms;
//
//	this->ProcessEvent ( pFnClearLobbyData, &ClearLobbyData_Parms, NULL );
//
//	if ( StructInitializer_6ABA7DB5455F97752BC566B4DA28CEF9 )
//		memcpy ( StructInitializer_6ABA7DB5455F97752BC566B4DA28CEF9, &ClearLobbyData_Parms.StructInitializer_6ABA7DB5455F97752BC566B4DA28CEF9, 0x24 );
//};
//
//// Function ProjectX.Parties_X.DestroyLobby
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  Reason                         ( CPF_Parm )
//
//void UParties_X::DestroyLobby ( unsigned char Reason )
//{
//	static UFunction* pFnDestroyLobby = NULL;
//
//	if ( ! pFnDestroyLobby )
//		pFnDestroyLobby = (UFunction*) UObject::GObjObjects()->Data[ 57857 ];
//
//	UParties_X_execDestroyLobby_Parms DestroyLobby_Parms;
//	DestroyLobby_Parms.Reason = Reason;
//
//	this->ProcessEvent ( pFnDestroyLobby, &DestroyLobby_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandlePerConDisconnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UParties_X::HandlePerConDisconnected ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnHandlePerConDisconnected = NULL;
//
//	if ( ! pFnHandlePerConDisconnected )
//		pFnHandlePerConDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 57862 ];
//
//	UParties_X_execHandlePerConDisconnected_Parms HandlePerConDisconnected_Parms;
//	HandlePerConDisconnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnHandlePerConDisconnected, &HandlePerConDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandlePerConConnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//
//void UParties_X::HandlePerConConnected ( class UPsyNetConnection_X* Connection )
//{
//	static UFunction* pFnHandlePerConConnected = NULL;
//
//	if ( ! pFnHandlePerConConnected )
//		pFnHandlePerConConnected = (UFunction*) UObject::GObjObjects()->Data[ 57858 ];
//
//	UParties_X_execHandlePerConConnected_Parms HandlePerConConnected_Parms;
//	HandlePerConConnected_Parms.Connection = Connection;
//
//	this->ProcessEvent ( pFnHandlePerConConnected, &HandlePerConConnected_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandlePartyInfoFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
//void UParties_X::HandlePartyInfoFail ( class URPC_X* RPC )
//{
//	static UFunction* pFnHandlePartyInfoFail = NULL;
//
//	if ( ! pFnHandlePartyInfoFail )
//		pFnHandlePartyInfoFail = (UFunction*) UObject::GObjObjects()->Data[ 57860 ];
//
//	UParties_X_execHandlePartyInfoFail_Parms HandlePartyInfoFail_Parms;
//	HandlePartyInfoFail_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandlePartyInfoFail, &HandlePartyInfoFail_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandlePartyInfoSuccess
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyInfo_X*        RPC_PartyInfo                  ( CPF_Parm )
//
//void UParties_X::HandlePartyInfoSuccess ( class URPC_PartyInfo_X* RPC_PartyInfo )
//{
//	static UFunction* pFnHandlePartyInfoSuccess = NULL;
//
//	if ( ! pFnHandlePartyInfoSuccess )
//		pFnHandlePartyInfoSuccess = (UFunction*) UObject::GObjObjects()->Data[ 57848 ];
//
//	UParties_X_execHandlePartyInfoSuccess_Parms HandlePartyInfoSuccess_Parms;
//	HandlePartyInfoSuccess_Parms.RPC_PartyInfo = RPC_PartyInfo;
//
//	this->ProcessEvent ( pFnHandlePartyInfoSuccess, &HandlePartyInfoSuccess_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.GetPartyInfo
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UParties_X::GetPartyInfo ( )
//{
//	static UFunction* pFnGetPartyInfo = NULL;
//
//	if ( ! pFnGetPartyInfo )
//		pFnGetPartyInfo = (UFunction*) UObject::GObjObjects()->Data[ 57846 ];
//
//	UParties_X_execGetPartyInfo_Parms GetPartyInfo_Parms;
//
//	this->ProcessEvent ( pFnGetPartyInfo, &GetPartyInfo_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.GetPrimaryPlayer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlinePlayer_X*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UOnlinePlayer_X* UParties_X::GetPrimaryPlayer ( )
//{
//	static UFunction* pFnGetPrimaryPlayer = NULL;
//
//	if ( ! pFnGetPrimaryPlayer )
//		pFnGetPrimaryPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57844 ];
//
//	UParties_X_execGetPrimaryPlayer_Parms GetPrimaryPlayer_Parms;
//
//	this->ProcessEvent ( pFnGetPrimaryPlayer, &GetPrimaryPlayer_Parms, NULL );
//
//	return GetPrimaryPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.OnExit
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UParties_X::OnExit ( )
//{
//	static UFunction* pFnOnExit = NULL;
//
//	if ( ! pFnOnExit )
//		pFnOnExit = (UFunction*) UObject::GObjObjects()->Data[ 57842 ];
//
//	UParties_X_execOnExit_Parms OnExit_Parms;
//
//	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.IsInLobby
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UParties_X::IsInLobby ( )
//{
//	static UFunction* pFnIsInLobby = NULL;
//
//	if ( ! pFnIsInLobby )
//		pFnIsInLobby = (UFunction*) UObject::GObjObjects()->Data[ 57843 ];
//
//	UParties_X_execIsInLobby_Parms IsInLobby_Parms;
//
//	this->ProcessEvent ( pFnIsInLobby, &IsInLobby_Parms, NULL );
//
//	return IsInLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UParties_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 57839 ];
//
//	UParties_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.CreatePartyID
//// [0x00822003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )
//
//struct FUniqueLobbyId UParties_X::CreatePartyID ( struct FString S )
//{
//	static UFunction* pFnCreatePartyID = NULL;
//
//	if ( ! pFnCreatePartyID )
//		pFnCreatePartyID = (UFunction*) UObject::GObjObjects()->Data[ 57679 ];
//
//	UParties_X_execCreatePartyID_Parms CreatePartyID_Parms;
//	memcpy ( &CreatePartyID_Parms.S, &S, 0xC );
//
//	this->ProcessEvent ( pFnCreatePartyID, &CreatePartyID_Parms, NULL );
//
//	return CreatePartyID_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.ClearHostStartPlayTogetherDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearHostStartPlayTogetherDelegate ( struct FScriptDelegate InDelegate )
//{
//	static UFunction* pFnClearHostStartPlayTogetherDelegate = NULL;
//
//	if ( ! pFnClearHostStartPlayTogetherDelegate )
//		pFnClearHostStartPlayTogetherDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57834 ];
//
//	UParties_X_execClearHostStartPlayTogetherDelegate_Parms ClearHostStartPlayTogetherDelegate_Parms;
//	memcpy ( &ClearHostStartPlayTogetherDelegate_Parms.InDelegate, &InDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearHostStartPlayTogetherDelegate, &ClearHostStartPlayTogetherDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddHostStartPlayTogetherDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddHostStartPlayTogetherDelegate ( struct FScriptDelegate InDelegate )
//{
//	static UFunction* pFnAddHostStartPlayTogetherDelegate = NULL;
//
//	if ( ! pFnAddHostStartPlayTogetherDelegate )
//		pFnAddHostStartPlayTogetherDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57832 ];
//
//	UParties_X_execAddHostStartPlayTogetherDelegate_Parms AddHostStartPlayTogetherDelegate_Parms;
//	memcpy ( &AddHostStartPlayTogetherDelegate_Parms.InDelegate, &InDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddHostStartPlayTogetherDelegate, &AddHostStartPlayTogetherDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnHostStartPlayTogether
//// [0x00120000] 
//// Parameters infos:
//// unsigned char                  LocalUserNum                   ( CPF_Parm )
//
//void UParties_X::OnHostStartPlayTogether ( unsigned char LocalUserNum )
//{
//	static UFunction* pFnOnHostStartPlayTogether = NULL;
//
//	if ( ! pFnOnHostStartPlayTogether )
//		pFnOnHostStartPlayTogether = (UFunction*) UObject::GObjObjects()->Data[ 57518 ];
//
//	UParties_X_execOnHostStartPlayTogether_Parms OnHostStartPlayTogether_Parms;
//	OnHostStartPlayTogether_Parms.LocalUserNum = LocalUserNum;
//
//	this->ProcessEvent ( pFnOnHostStartPlayTogether, &OnHostStartPlayTogether_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.FindMemberId
//// [0x00420000] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FLobbyMember            MemberData                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//int UParties_X::FindMemberId ( struct FLobbyMember* MemberData )
//{
//	static UFunction* pFnFindMemberId = NULL;
//
//	if ( ! pFnFindMemberId )
//		pFnFindMemberId = (UFunction*) UObject::GObjObjects()->Data[ 57828 ];
//
//	UParties_X_execFindMemberId_Parms FindMemberId_Parms;
//
//	this->ProcessEvent ( pFnFindMemberId, &FindMemberId_Parms, NULL );
//
//	if ( MemberData )
//		memcpy ( MemberData, &FindMemberId_Parms.MemberData, 0x60 );
//
//	return FindMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.PlayerIdToMemberId
//// [0x00424000] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//// int                            MemberIndex                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//int UParties_X::PlayerIdToMemberId ( struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* PlayerID, int* MemberIndex )
//{
//	static UFunction* pFnPlayerIdToMemberId = NULL;
//
//	if ( ! pFnPlayerIdToMemberId )
//		pFnPlayerIdToMemberId = (UFunction*) UObject::GObjObjects()->Data[ 57823 ];
//
//	UParties_X_execPlayerIdToMemberId_Parms PlayerIdToMemberId_Parms;
//
//	this->ProcessEvent ( pFnPlayerIdToMemberId, &PlayerIdToMemberId_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &PlayerIdToMemberId_Parms.LobbyId, 0xC );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &PlayerIdToMemberId_Parms.PlayerID, 0x48 );
//
//	if ( MemberIndex )
//		*MemberIndex = PlayerIdToMemberId_Parms.MemberIndex;
//
//	return PlayerIdToMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.MemberIdToPlayerId
//// [0x00424000] 
//// Parameters infos:
//// struct FUniqueNetId            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            MemberId                       ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// int                            MemberIndex                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
//
//struct FUniqueNetId UParties_X::MemberIdToPlayerId ( int MemberId, struct FUniqueLobbyId* LobbyId, int* MemberIndex )
//{
//	static UFunction* pFnMemberIdToPlayerId = NULL;
//
//	if ( ! pFnMemberIdToPlayerId )
//		pFnMemberIdToPlayerId = (UFunction*) UObject::GObjObjects()->Data[ 57818 ];
//
//	UParties_X_execMemberIdToPlayerId_Parms MemberIdToPlayerId_Parms;
//	MemberIdToPlayerId_Parms.MemberId = MemberId;
//
//	this->ProcessEvent ( pFnMemberIdToPlayerId, &MemberIdToPlayerId_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &MemberIdToPlayerId_Parms.LobbyId, 0xC );
//
//	if ( MemberIndex )
//		*MemberIndex = MemberIdToPlayerId_Parms.MemberIndex;
//
//	return MemberIdToPlayerId_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.KickPlayer
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Reason                         ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::KickPlayer ( unsigned char Reason, struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnKickPlayer = NULL;
//
//	if ( ! pFnKickPlayer )
//		pFnKickPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57809 ];
//
//	UParties_X_execKickPlayer_Parms KickPlayer_Parms;
//	KickPlayer_Parms.Reason = Reason;
//
//	this->ProcessEvent ( pFnKickPlayer, &KickPlayer_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &KickPlayer_Parms.LobbyId, 0xC );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &KickPlayer_Parms.PlayerID, 0x48 );
//
//	return KickPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.ShowInviteUI
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  LocalUserNum                   ( CPF_Const | CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::ShowInviteUI ( unsigned char LocalUserNum, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnShowInviteUI = NULL;
//
//	if ( ! pFnShowInviteUI )
//		pFnShowInviteUI = (UFunction*) UObject::GObjObjects()->Data[ 57805 ];
//
//	UParties_X_execShowInviteUI_Parms ShowInviteUI_Parms;
//	ShowInviteUI_Parms.LocalUserNum = LocalUserNum;
//
//	this->ProcessEvent ( pFnShowInviteUI, &ShowInviteUI_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &ShowInviteUI_Parms.LobbyId, 0xC );
//
//	return ShowInviteUI_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.InviteToLobby
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::InviteToLobby ( struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnInviteToLobby = NULL;
//
//	if ( ! pFnInviteToLobby )
//		pFnInviteToLobby = (UFunction*) UObject::GObjObjects()->Data[ 57797 ];
//
//	UParties_X_execInviteToLobby_Parms InviteToLobby_Parms;
//
//	this->ProcessEvent ( pFnInviteToLobby, &InviteToLobby_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &InviteToLobby_Parms.LobbyId, 0xC );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &InviteToLobby_Parms.PlayerID, 0x48 );
//
//	return InviteToLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.InviteToActiveLobby
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::InviteToActiveLobby ( struct FUniqueNetId* PlayerID )
//{
//	static UFunction* pFnInviteToActiveLobby = NULL;
//
//	if ( ! pFnInviteToActiveLobby )
//		pFnInviteToActiveLobby = (UFunction*) UObject::GObjObjects()->Data[ 57794 ];
//
//	UParties_X_execInviteToActiveLobby_Parms InviteToActiveLobby_Parms;
//
//	this->ProcessEvent ( pFnInviteToActiveLobby, &InviteToActiveLobby_Parms, NULL );
//
//	if ( PlayerID )
//		memcpy ( PlayerID, &InviteToActiveLobby_Parms.PlayerID, 0x48 );
//
//	return InviteToActiveLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.HandleLobbyOwnerChangeFailed
//// [0x20040001] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyChangeOwner_X* RPC_PartyChangeOwner           ( CPF_Parm )
//
//void UParties_X::HandleLobbyOwnerChangeFailed ( class URPC_PartyChangeOwner_X* RPC_PartyChangeOwner )
//{
//	static UFunction* pFnHandleLobbyOwnerChangeFailed = NULL;
//
//	if ( ! pFnHandleLobbyOwnerChangeFailed )
//		pFnHandleLobbyOwnerChangeFailed = (UFunction*) UObject::GObjObjects()->Data[ 57792 ];
//
//	UParties_X_execHandleLobbyOwnerChangeFailed_Parms HandleLobbyOwnerChangeFailed_Parms;
//	HandleLobbyOwnerChangeFailed_Parms.RPC_PartyChangeOwner = RPC_PartyChangeOwner;
//
//	this->ProcessEvent ( pFnHandleLobbyOwnerChangeFailed, &HandleLobbyOwnerChangeFailed_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleLobbyOwnerChangeSuccess
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyChangeOwner_X* RpcPartyChangeOwner            ( CPF_Parm )
//
//void UParties_X::HandleLobbyOwnerChangeSuccess ( class URPC_PartyChangeOwner_X* RpcPartyChangeOwner )
//{
//	static UFunction* pFnHandleLobbyOwnerChangeSuccess = NULL;
//
//	if ( ! pFnHandleLobbyOwnerChangeSuccess )
//		pFnHandleLobbyOwnerChangeSuccess = (UFunction*) UObject::GObjObjects()->Data[ 57789 ];
//
//	UParties_X_execHandleLobbyOwnerChangeSuccess_Parms HandleLobbyOwnerChangeSuccess_Parms;
//	HandleLobbyOwnerChangeSuccess_Parms.RpcPartyChangeOwner = RpcPartyChangeOwner;
//
//	this->ProcessEvent ( pFnHandleLobbyOwnerChangeSuccess, &HandleLobbyOwnerChangeSuccess_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.SetLobbyOwner
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            NewOwnerId                     ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SetLobbyOwner ( struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* NewOwnerId )
//{
//	static UFunction* pFnSetLobbyOwner = NULL;
//
//	if ( ! pFnSetLobbyOwner )
//		pFnSetLobbyOwner = (UFunction*) UObject::GObjObjects()->Data[ 57782 ];
//
//	UParties_X_execSetLobbyOwner_Parms SetLobbyOwner_Parms;
//
//	this->ProcessEvent ( pFnSetLobbyOwner, &SetLobbyOwner_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SetLobbyOwner_Parms.LobbyId, 0xC );
//
//	if ( NewOwnerId )
//		memcpy ( NewOwnerId, &SetLobbyOwner_Parms.NewOwnerId, 0x48 );
//
//	return SetLobbyOwner_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SetLobbyLock
//// [0x00420000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bLocked                        ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SetLobbyLock ( unsigned long bLocked, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnSetLobbyLock = NULL;
//
//	if ( ! pFnSetLobbyLock )
//		pFnSetLobbyLock = (UFunction*) UObject::GObjObjects()->Data[ 57778 ];
//
//	UParties_X_execSetLobbyLock_Parms SetLobbyLock_Parms;
//	SetLobbyLock_Parms.bLocked = bLocked;
//
//	this->ProcessEvent ( pFnSetLobbyLock, &SetLobbyLock_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SetLobbyLock_Parms.LobbyId, 0xC );
//
//	return SetLobbyLock_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SetLobbyType
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Type                           ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SetLobbyType ( unsigned char Type, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnSetLobbyType = NULL;
//
//	if ( ! pFnSetLobbyType )
//		pFnSetLobbyType = (UFunction*) UObject::GObjObjects()->Data[ 57774 ];
//
//	UParties_X_execSetLobbyType_Parms SetLobbyType_Parms;
//	SetLobbyType_Parms.Type = Type;
//
//	this->ProcessEvent ( pFnSetLobbyType, &SetLobbyType_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SetLobbyType_Parms.LobbyId, 0xC );
//
//	return SetLobbyType_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SetLobbyServer
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ServerIP                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            ServerUID                      ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SetLobbyServer ( struct FString ServerIP, struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* ServerUID )
//{
//	static UFunction* pFnSetLobbyServer = NULL;
//
//	if ( ! pFnSetLobbyServer )
//		pFnSetLobbyServer = (UFunction*) UObject::GObjObjects()->Data[ 57769 ];
//
//	UParties_X_execSetLobbyServer_Parms SetLobbyServer_Parms;
//	memcpy ( &SetLobbyServer_Parms.ServerIP, &ServerIP, 0xC );
//
//	this->ProcessEvent ( pFnSetLobbyServer, &SetLobbyServer_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SetLobbyServer_Parms.LobbyId, 0xC );
//
//	if ( ServerUID )
//		memcpy ( ServerUID, &SetLobbyServer_Parms.ServerUID, 0x48 );
//
//	return SetLobbyServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.RemoveLobbySetting
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::RemoveLobbySetting ( struct FString Key, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnRemoveLobbySetting = NULL;
//
//	if ( ! pFnRemoveLobbySetting )
//		pFnRemoveLobbySetting = (UFunction*) UObject::GObjObjects()->Data[ 57765 ];
//
//	UParties_X_execRemoveLobbySetting_Parms RemoveLobbySetting_Parms;
//	memcpy ( &RemoveLobbySetting_Parms.Key, &Key, 0xC );
//
//	this->ProcessEvent ( pFnRemoveLobbySetting, &RemoveLobbySetting_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &RemoveLobbySetting_Parms.LobbyId, 0xC );
//
//	return RemoveLobbySetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SetLobbySetting
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SetLobbySetting ( struct FString Key, struct FString Value, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnSetLobbySetting = NULL;
//
//	if ( ! pFnSetLobbySetting )
//		pFnSetLobbySetting = (UFunction*) UObject::GObjObjects()->Data[ 57760 ];
//
//	UParties_X_execSetLobbySetting_Parms SetLobbySetting_Parms;
//	memcpy ( &SetLobbySetting_Parms.Key, &Key, 0xC );
//	memcpy ( &SetLobbySetting_Parms.Value, &Value, 0xC );
//
//	this->ProcessEvent ( pFnSetLobbySetting, &SetLobbySetting_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SetLobbySetting_Parms.LobbyId, 0xC );
//
//	return SetLobbySetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.GetLobbyAdmin
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            AdminId                        ( CPF_Parm | CPF_OutParm )
//
//bool UParties_X::GetLobbyAdmin ( struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* AdminId )
//{
//	static UFunction* pFnGetLobbyAdmin = NULL;
//
//	if ( ! pFnGetLobbyAdmin )
//		pFnGetLobbyAdmin = (UFunction*) UObject::GObjObjects()->Data[ 57756 ];
//
//	UParties_X_execGetLobbyAdmin_Parms GetLobbyAdmin_Parms;
//
//	this->ProcessEvent ( pFnGetLobbyAdmin, &GetLobbyAdmin_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &GetLobbyAdmin_Parms.LobbyId, 0xC );
//
//	if ( AdminId )
//		memcpy ( AdminId, &GetLobbyAdmin_Parms.AdminId, 0x48 );
//
//	return GetLobbyAdmin_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SendLobbyBinaryData
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// TArray< unsigned char >        Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UParties_X::SendLobbyBinaryData ( struct FUniqueLobbyId* LobbyId, TArray< unsigned char >* Data )
//{
//	static UFunction* pFnSendLobbyBinaryData = NULL;
//
//	if ( ! pFnSendLobbyBinaryData )
//		pFnSendLobbyBinaryData = (UFunction*) UObject::GObjObjects()->Data[ 57750 ];
//
//	UParties_X_execSendLobbyBinaryData_Parms SendLobbyBinaryData_Parms;
//
//	this->ProcessEvent ( pFnSendLobbyBinaryData, &SendLobbyBinaryData_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SendLobbyBinaryData_Parms.LobbyId, 0xC );
//
//	if ( Data )
//		memcpy ( Data, &SendLobbyBinaryData_Parms.Data, 0xC );
//
//	return SendLobbyBinaryData_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SendLobbyMessage
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SendLobbyMessage ( struct FString Message, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnSendLobbyMessage = NULL;
//
//	if ( ! pFnSendLobbyMessage )
//		pFnSendLobbyMessage = (UFunction*) UObject::GObjObjects()->Data[ 57743 ];
//
//	UParties_X_execSendLobbyMessage_Parms SendLobbyMessage_Parms;
//	memcpy ( &SendLobbyMessage_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnSendLobbyMessage, &SendLobbyMessage_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SendLobbyMessage_Parms.LobbyId, 0xC );
//
//	return SendLobbyMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.SetLobbyUserSetting
//// [0x00420000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::SetLobbyUserSetting ( struct FString Key, struct FString Value, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnSetLobbyUserSetting = NULL;
//
//	if ( ! pFnSetLobbyUserSetting )
//		pFnSetLobbyUserSetting = (UFunction*) UObject::GObjObjects()->Data[ 57738 ];
//
//	UParties_X_execSetLobbyUserSetting_Parms SetLobbyUserSetting_Parms;
//	memcpy ( &SetLobbyUserSetting_Parms.Key, &Key, 0xC );
//	memcpy ( &SetLobbyUserSetting_Parms.Value, &Value, 0xC );
//
//	this->ProcessEvent ( pFnSetLobbyUserSetting, &SetLobbyUserSetting_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &SetLobbyUserSetting_Parms.LobbyId, 0xC );
//
//	return SetLobbyUserSetting_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.LeaveLobby
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::LeaveLobby ( struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnLeaveLobby = NULL;
//
//	if ( ! pFnLeaveLobby )
//		pFnLeaveLobby = (UFunction*) UObject::GObjObjects()->Data[ 57732 ];
//
//	UParties_X_execLeaveLobby_Parms LeaveLobby_Parms;
//
//	this->ProcessEvent ( pFnLeaveLobby, &LeaveLobby_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &LeaveLobby_Parms.LobbyId, 0xC );
//
//	return LeaveLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.RemoveLobbyMember
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerUID                      ( CPF_Parm )
//
//void UParties_X::RemoveLobbyMember ( struct FUniqueNetId PlayerUID )
//{
//	static UFunction* pFnRemoveLobbyMember = NULL;
//
//	if ( ! pFnRemoveLobbyMember )
//		pFnRemoveLobbyMember = (UFunction*) UObject::GObjObjects()->Data[ 57729 ];
//
//	UParties_X_execRemoveLobbyMember_Parms RemoveLobbyMember_Parms;
//	memcpy ( &RemoveLobbyMember_Parms.PlayerUID, &PlayerUID, 0x48 );
//
//	this->ProcessEvent ( pFnRemoveLobbyMember, &RemoveLobbyMember_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyMember
//// [0x00820002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerUID                      ( CPF_Parm )
//// struct FString                 UserName                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyMember ( struct FUniqueNetId PlayerUID, struct FString UserName )
//{
//	static UFunction* pFnAddLobbyMember = NULL;
//
//	if ( ! pFnAddLobbyMember )
//		pFnAddLobbyMember = (UFunction*) UObject::GObjObjects()->Data[ 57725 ];
//
//	UParties_X_execAddLobbyMember_Parms AddLobbyMember_Parms;
//	memcpy ( &AddLobbyMember_Parms.PlayerUID, &PlayerUID, 0x48 );
//	memcpy ( &AddLobbyMember_Parms.UserName, &UserName, 0xC );
//
//	this->ProcessEvent ( pFnAddLobbyMember, &AddLobbyMember_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleLobbyJoinFailed
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyJoin_X*        RpcPartyJoin                   ( CPF_Parm )
//
//void UParties_X::HandleLobbyJoinFailed ( class URPC_PartyJoin_X* RpcPartyJoin )
//{
//	static UFunction* pFnHandleLobbyJoinFailed = NULL;
//
//	if ( ! pFnHandleLobbyJoinFailed )
//		pFnHandleLobbyJoinFailed = (UFunction*) UObject::GObjObjects()->Data[ 57718 ];
//
//	UParties_X_execHandleLobbyJoinFailed_Parms HandleLobbyJoinFailed_Parms;
//	HandleLobbyJoinFailed_Parms.RpcPartyJoin = RpcPartyJoin;
//
//	this->ProcessEvent ( pFnHandleLobbyJoinFailed, &HandleLobbyJoinFailed_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleLobbyJoinSucceeded
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyJoin_X*        RpcPartyJoin                   ( CPF_Parm )
//
//void UParties_X::HandleLobbyJoinSucceeded ( class URPC_PartyJoin_X* RpcPartyJoin )
//{
//	static UFunction* pFnHandleLobbyJoinSucceeded = NULL;
//
//	if ( ! pFnHandleLobbyJoinSucceeded )
//		pFnHandleLobbyJoinSucceeded = (UFunction*) UObject::GObjObjects()->Data[ 57686 ];
//
//	UParties_X_execHandleLobbyJoinSucceeded_Parms HandleLobbyJoinSucceeded_Parms;
//	HandleLobbyJoinSucceeded_Parms.RpcPartyJoin = RpcPartyJoin;
//
//	this->ProcessEvent ( pFnHandleLobbyJoinSucceeded, &HandleLobbyJoinSucceeded_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.JoinLobby
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            LocalPlayerNum                 ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//bool UParties_X::JoinLobby ( int LocalPlayerNum, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnJoinLobby = NULL;
//
//	if ( ! pFnJoinLobby )
//		pFnJoinLobby = (UFunction*) UObject::GObjObjects()->Data[ 57706 ];
//
//	UParties_X_execJoinLobby_Parms JoinLobby_Parms;
//	JoinLobby_Parms.LocalPlayerNum = LocalPlayerNum;
//
//	this->ProcessEvent ( pFnJoinLobby, &JoinLobby_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &JoinLobby_Parms.LobbyId, 0xC );
//
//	return JoinLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.UpdateFoundLobbies
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_OptionalParm | CPF_Parm )
//
//bool UParties_X::UpdateFoundLobbies ( struct FUniqueLobbyId LobbyId )
//{
//	static UFunction* pFnUpdateFoundLobbies = NULL;
//
//	if ( ! pFnUpdateFoundLobbies )
//		pFnUpdateFoundLobbies = (UFunction*) UObject::GObjObjects()->Data[ 57703 ];
//
//	UParties_X_execUpdateFoundLobbies_Parms UpdateFoundLobbies_Parms;
//	memcpy ( &UpdateFoundLobbies_Parms.LobbyId, &LobbyId, 0xC );
//
//	this->ProcessEvent ( pFnUpdateFoundLobbies, &UpdateFoundLobbies_Parms, NULL );
//
//	return UpdateFoundLobbies_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.FindMemberIndex
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            MemberId                       ( CPF_Parm )
//
//int UParties_X::FindMemberIndex ( struct FUniqueNetId MemberId )
//{
//	static UFunction* pFnFindMemberIndex = NULL;
//
//	if ( ! pFnFindMemberIndex )
//		pFnFindMemberIndex = (UFunction*) UObject::GObjObjects()->Data[ 57699 ];
//
//	UParties_X_execFindMemberIndex_Parms FindMemberIndex_Parms;
//	memcpy ( &FindMemberIndex_Parms.MemberId, &MemberId, 0x48 );
//
//	this->ProcessEvent ( pFnFindMemberIndex, &FindMemberIndex_Parms, NULL );
//
//	return FindMemberIndex_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.FindLobbies
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            MaxResults                     ( CPF_OptionalParm | CPF_Parm )
//// TArray< struct FLobbyFilter >  Filters                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FLobbySortFilter > SortFilters                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//// int                            MinSlots                       ( CPF_OptionalParm | CPF_Parm )
//// unsigned char                  Distance                       ( CPF_OptionalParm | CPF_Parm )
//
//bool UParties_X::FindLobbies ( int MaxResults, TArray< struct FLobbyFilter > Filters, TArray< struct FLobbySortFilter > SortFilters, int MinSlots, unsigned char Distance )
//{
//	static UFunction* pFnFindLobbies = NULL;
//
//	if ( ! pFnFindLobbies )
//		pFnFindLobbies = (UFunction*) UObject::GObjObjects()->Data[ 57690 ];
//
//	UParties_X_execFindLobbies_Parms FindLobbies_Parms;
//	FindLobbies_Parms.MaxResults = MaxResults;
//	memcpy ( &FindLobbies_Parms.Filters, &Filters, 0xC );
//	memcpy ( &FindLobbies_Parms.SortFilters, &SortFilters, 0xC );
//	FindLobbies_Parms.MinSlots = MinSlots;
//	FindLobbies_Parms.Distance = Distance;
//
//	this->ProcessEvent ( pFnFindLobbies, &FindLobbies_Parms, NULL );
//
//	return FindLobbies_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.HandleLobbyCreateFailed
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyCreate_X*      RpcPartyCreate                 ( CPF_Parm )
//
//void UParties_X::HandleLobbyCreateFailed ( class URPC_PartyCreate_X* RpcPartyCreate )
//{
//	static UFunction* pFnHandleLobbyCreateFailed = NULL;
//
//	if ( ! pFnHandleLobbyCreateFailed )
//		pFnHandleLobbyCreateFailed = (UFunction*) UObject::GObjObjects()->Data[ 57687 ];
//
//	UParties_X_execHandleLobbyCreateFailed_Parms HandleLobbyCreateFailed_Parms;
//	HandleLobbyCreateFailed_Parms.RpcPartyCreate = RpcPartyCreate;
//
//	this->ProcessEvent ( pFnHandleLobbyCreateFailed, &HandleLobbyCreateFailed_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.HandleLobbyCreated
//// [0x20840003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PartyCreate_X*      RpcPartyCreate                 ( CPF_Parm )
//
//void UParties_X::HandleLobbyCreated ( class URPC_PartyCreate_X* RpcPartyCreate )
//{
//	static UFunction* pFnHandleLobbyCreated = NULL;
//
//	if ( ! pFnHandleLobbyCreated )
//		pFnHandleLobbyCreated = (UFunction*) UObject::GObjObjects()->Data[ 57674 ];
//
//	UParties_X_execHandleLobbyCreated_Parms HandleLobbyCreated_Parms;
//	HandleLobbyCreated_Parms.RpcPartyCreate = RpcPartyCreate;
//
//	this->ProcessEvent ( pFnHandleLobbyCreated, &HandleLobbyCreated_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.CreateLobby
//// [0x00024002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            LocalPlayerNum                 ( CPF_Parm )
//// int                            MaxPlayers                     ( CPF_Parm )
//// unsigned char                  Type                           ( CPF_OptionalParm | CPF_Parm )
//// TArray< struct FLobbyMetaData > InitialSettings                ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//bool UParties_X::CreateLobby ( int LocalPlayerNum, int MaxPlayers, unsigned char Type, TArray< struct FLobbyMetaData > InitialSettings )
//{
//	static UFunction* pFnCreateLobby = NULL;
//
//	if ( ! pFnCreateLobby )
//		pFnCreateLobby = (UFunction*) UObject::GObjObjects()->Data[ 57665 ];
//
//	UParties_X_execCreateLobby_Parms CreateLobby_Parms;
//	CreateLobby_Parms.LocalPlayerNum = LocalPlayerNum;
//	CreateLobby_Parms.MaxPlayers = MaxPlayers;
//	CreateLobby_Parms.Type = Type;
//	memcpy ( &CreateLobby_Parms.InitialSettings, &InitialSettings, 0xC );
//
//	this->ProcessEvent ( pFnCreateLobby, &CreateLobby_Parms, NULL );
//
//	return CreateLobby_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.EventPartyChatRecieved
//// [0x00120000] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::EventPartyChatRecieved ( struct FUniqueNetId PlayerID, struct FString Text )
//{
//	static UFunction* pFnEventPartyChatRecieved = NULL;
//
//	if ( ! pFnEventPartyChatRecieved )
//		pFnEventPartyChatRecieved = (UFunction*) UObject::GObjObjects()->Data[ 57672 ];
//
//	UParties_X_execEventPartyChatRecieved_Parms EventPartyChatRecieved_Parms;
//	memcpy ( &EventPartyChatRecieved_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &EventPartyChatRecieved_Parms.Text, &Text, 0xC );
//
//	this->ProcessEvent ( pFnEventPartyChatRecieved, &EventPartyChatRecieved_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyDestroyedDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyDestroyedDelegate         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyDestroyedDelegate ( struct FScriptDelegate LobbyDestroyedDelegate )
//{
//	static UFunction* pFnClearLobbyDestroyedDelegate = NULL;
//
//	if ( ! pFnClearLobbyDestroyedDelegate )
//		pFnClearLobbyDestroyedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57663 ];
//
//	UParties_X_execClearLobbyDestroyedDelegate_Parms ClearLobbyDestroyedDelegate_Parms;
//	memcpy ( &ClearLobbyDestroyedDelegate_Parms.LobbyDestroyedDelegate, &LobbyDestroyedDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyDestroyedDelegate, &ClearLobbyDestroyedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyDestroyedDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyDestroyedDelegate         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyDestroyedDelegate ( struct FScriptDelegate LobbyDestroyedDelegate )
//{
//	static UFunction* pFnAddLobbyDestroyedDelegate = NULL;
//
//	if ( ! pFnAddLobbyDestroyedDelegate )
//		pFnAddLobbyDestroyedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57661 ];
//
//	UParties_X_execAddLobbyDestroyedDelegate_Parms AddLobbyDestroyedDelegate_Parms;
//	memcpy ( &AddLobbyDestroyedDelegate_Parms.LobbyDestroyedDelegate, &LobbyDestroyedDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyDestroyedDelegate, &AddLobbyDestroyedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyDestroyed
//// [0x00520000] 
//// Parameters infos:
//// unsigned char                  Reason                         ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::OnLobbyDestroyed ( unsigned char Reason, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnOnLobbyDestroyed = NULL;
//
//	if ( ! pFnOnLobbyDestroyed )
//		pFnOnLobbyDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 57521 ];
//
//	UParties_X_execOnLobbyDestroyed_Parms OnLobbyDestroyed_Parms;
//	OnLobbyDestroyed_Parms.Reason = Reason;
//
//	this->ProcessEvent ( pFnOnLobbyDestroyed, &OnLobbyDestroyed_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &OnLobbyDestroyed_Parms.LobbyId, 0xC );
//};
//
//// Function ProjectX.Parties_X.RemoveLocalPlayerFromSession
//// [0x00420000] 
//// Parameters infos:
//// struct FUniqueNetId            PartyMember                    ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::RemoveLocalPlayerFromSession ( struct FUniqueNetId* PartyMember )
//{
//	static UFunction* pFnRemoveLocalPlayerFromSession = NULL;
//
//	if ( ! pFnRemoveLocalPlayerFromSession )
//		pFnRemoveLocalPlayerFromSession = (UFunction*) UObject::GObjObjects()->Data[ 57657 ];
//
//	UParties_X_execRemoveLocalPlayerFromSession_Parms RemoveLocalPlayerFromSession_Parms;
//
//	this->ProcessEvent ( pFnRemoveLocalPlayerFromSession, &RemoveLocalPlayerFromSession_Parms, NULL );
//
//	if ( PartyMember )
//		memcpy ( PartyMember, &RemoveLocalPlayerFromSession_Parms.PartyMember, 0x48 );
//};
//
//// Function ProjectX.Parties_X.AddLocalPartyMemberToSession
//// [0x00420000] 
//// Parameters infos:
//// struct FUniqueNetId            NewPartyMember                 ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::AddLocalPartyMemberToSession ( struct FUniqueNetId* NewPartyMember )
//{
//	static UFunction* pFnAddLocalPartyMemberToSession = NULL;
//
//	if ( ! pFnAddLocalPartyMemberToSession )
//		pFnAddLocalPartyMemberToSession = (UFunction*) UObject::GObjObjects()->Data[ 57655 ];
//
//	UParties_X_execAddLocalPartyMemberToSession_Parms AddLocalPartyMemberToSession_Parms;
//
//	this->ProcessEvent ( pFnAddLocalPartyMemberToSession, &AddLocalPartyMemberToSession_Parms, NULL );
//
//	if ( NewPartyMember )
//		memcpy ( NewPartyMember, &AddLocalPartyMemberToSession_Parms.NewPartyMember, 0x48 );
//};
//
//// Function ProjectX.Parties_X.GetLobbyMembers
//// [0x00420002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// TArray< struct FLobbyMember >  Members                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//bool UParties_X::GetLobbyMembers ( struct FUniqueLobbyId* LobbyId, TArray< struct FLobbyMember >* Members )
//{
//	static UFunction* pFnGetLobbyMembers = NULL;
//
//	if ( ! pFnGetLobbyMembers )
//		pFnGetLobbyMembers = (UFunction*) UObject::GObjObjects()->Data[ 57650 ];
//
//	UParties_X_execGetLobbyMembers_Parms GetLobbyMembers_Parms;
//
//	this->ProcessEvent ( pFnGetLobbyMembers, &GetLobbyMembers_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &GetLobbyMembers_Parms.LobbyId, 0xC );
//
//	if ( Members )
//		memcpy ( Members, &GetLobbyMembers_Parms.Members, 0xC );
//
//	return GetLobbyMembers_Parms.ReturnValue;
//};
//
//// Function ProjectX.Parties_X.PlayTogether_Invite
//// [0x00420002] 
//// Parameters infos:
//// struct FString                 InviteMessage                  ( CPF_Const | CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::PlayTogether_Invite ( struct FString InviteMessage, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnPlayTogether_Invite = NULL;
//
//	if ( ! pFnPlayTogether_Invite )
//		pFnPlayTogether_Invite = (UFunction*) UObject::GObjObjects()->Data[ 57646 ];
//
//	UParties_X_execPlayTogether_Invite_Parms PlayTogether_Invite_Parms;
//	memcpy ( &PlayTogether_Invite_Parms.InviteMessage, &InviteMessage, 0xC );
//
//	this->ProcessEvent ( pFnPlayTogether_Invite, &PlayTogether_Invite_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &PlayTogether_Invite_Parms.LobbyId, 0xC );
//};
//
//// Function ProjectX.Parties_X.EventLobbyInvitePending
//// [0x00120000] 
//// Parameters infos:
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm )
//// struct FUniqueNetId            FromUserId                     ( CPF_Const | CPF_Parm )
//// struct FString                 FromUserName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::EventLobbyInvitePending ( struct FUniqueLobbyId LobbyId, struct FUniqueNetId FromUserId, struct FString FromUserName )
//{
//	static UFunction* pFnEventLobbyInvitePending = NULL;
//
//	if ( ! pFnEventLobbyInvitePending )
//		pFnEventLobbyInvitePending = (UFunction*) UObject::GObjObjects()->Data[ 57649 ];
//
//	UParties_X_execEventLobbyInvitePending_Parms EventLobbyInvitePending_Parms;
//	memcpy ( &EventLobbyInvitePending_Parms.LobbyId, &LobbyId, 0xC );
//	memcpy ( &EventLobbyInvitePending_Parms.FromUserId, &FromUserId, 0x48 );
//	memcpy ( &EventLobbyInvitePending_Parms.FromUserName, &FromUserName, 0xC );
//
//	this->ProcessEvent ( pFnEventLobbyInvitePending, &EventLobbyInvitePending_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyInviteDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyInviteDelegate            ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyInviteDelegate ( struct FScriptDelegate LobbyInviteDelegate )
//{
//	static UFunction* pFnClearLobbyInviteDelegate = NULL;
//
//	if ( ! pFnClearLobbyInviteDelegate )
//		pFnClearLobbyInviteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57644 ];
//
//	UParties_X_execClearLobbyInviteDelegate_Parms ClearLobbyInviteDelegate_Parms;
//	memcpy ( &ClearLobbyInviteDelegate_Parms.LobbyInviteDelegate, &LobbyInviteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyInviteDelegate, &ClearLobbyInviteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyInviteDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyInviteDelegate            ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyInviteDelegate ( struct FScriptDelegate LobbyInviteDelegate )
//{
//	static UFunction* pFnAddLobbyInviteDelegate = NULL;
//
//	if ( ! pFnAddLobbyInviteDelegate )
//		pFnAddLobbyInviteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57642 ];
//
//	UParties_X_execAddLobbyInviteDelegate_Parms AddLobbyInviteDelegate_Parms;
//	memcpy ( &AddLobbyInviteDelegate_Parms.LobbyInviteDelegate, &LobbyInviteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyInviteDelegate, &AddLobbyInviteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyInvite
//// [0x00520000] 
//// Parameters infos:
//// unsigned long                  bAccepted                      ( CPF_Parm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//// struct FUniqueNetId            FriendId                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::OnLobbyInvite ( unsigned long bAccepted, struct FUniqueLobbyId* LobbyId, struct FUniqueNetId* FriendId )
//{
//	static UFunction* pFnOnLobbyInvite = NULL;
//
//	if ( ! pFnOnLobbyInvite )
//		pFnOnLobbyInvite = (UFunction*) UObject::GObjObjects()->Data[ 57524 ];
//
//	UParties_X_execOnLobbyInvite_Parms OnLobbyInvite_Parms;
//	OnLobbyInvite_Parms.bAccepted = bAccepted;
//
//	this->ProcessEvent ( pFnOnLobbyInvite, &OnLobbyInvite_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &OnLobbyInvite_Parms.LobbyId, 0xC );
//
//	if ( FriendId )
//		memcpy ( FriendId, &OnLobbyInvite_Parms.FriendId, 0x48 );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyJoinGameDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyJoinGameDelegate          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyJoinGameDelegate ( struct FScriptDelegate LobbyJoinGameDelegate )
//{
//	static UFunction* pFnClearLobbyJoinGameDelegate = NULL;
//
//	if ( ! pFnClearLobbyJoinGameDelegate )
//		pFnClearLobbyJoinGameDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57637 ];
//
//	UParties_X_execClearLobbyJoinGameDelegate_Parms ClearLobbyJoinGameDelegate_Parms;
//	memcpy ( &ClearLobbyJoinGameDelegate_Parms.LobbyJoinGameDelegate, &LobbyJoinGameDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyJoinGameDelegate, &ClearLobbyJoinGameDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyJoinGameDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyJoinGameDelegate          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyJoinGameDelegate ( struct FScriptDelegate LobbyJoinGameDelegate )
//{
//	static UFunction* pFnAddLobbyJoinGameDelegate = NULL;
//
//	if ( ! pFnAddLobbyJoinGameDelegate )
//		pFnAddLobbyJoinGameDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57635 ];
//
//	UParties_X_execAddLobbyJoinGameDelegate_Parms AddLobbyJoinGameDelegate_Parms;
//	memcpy ( &AddLobbyJoinGameDelegate_Parms.LobbyJoinGameDelegate, &LobbyJoinGameDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyJoinGameDelegate, &AddLobbyJoinGameDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyJoinGame
//// [0x00520000] 
//// Parameters infos:
//// struct FString                 ServerIP                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            ServerID                       ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::OnLobbyJoinGame ( struct FString ServerIP, struct FActiveLobbyInfo* LobbyInfo, struct FUniqueNetId* ServerID )
//{
//	static UFunction* pFnOnLobbyJoinGame = NULL;
//
//	if ( ! pFnOnLobbyJoinGame )
//		pFnOnLobbyJoinGame = (UFunction*) UObject::GObjObjects()->Data[ 57526 ];
//
//	UParties_X_execOnLobbyJoinGame_Parms OnLobbyJoinGame_Parms;
//	memcpy ( &OnLobbyJoinGame_Parms.ServerIP, &ServerIP, 0xC );
//
//	this->ProcessEvent ( pFnOnLobbyJoinGame, &OnLobbyJoinGame_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnLobbyJoinGame_Parms.LobbyInfo, 0x24 );
//
//	if ( ServerID )
//		memcpy ( ServerID, &OnLobbyJoinGame_Parms.ServerID, 0x48 );
//};
//
//// Function ProjectX.Parties_X.TriggerLobbyReceiveBinaryDataDelegate
//// [0x00020002] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// TArray< unsigned char >        Data                           ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::TriggerLobbyReceiveBinaryDataDelegate ( int MemberIndex, TArray< unsigned char > Data )
//{
//	static UFunction* pFnTriggerLobbyReceiveBinaryDataDelegate = NULL;
//
//	if ( ! pFnTriggerLobbyReceiveBinaryDataDelegate )
//		pFnTriggerLobbyReceiveBinaryDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57628 ];
//
//	UParties_X_execTriggerLobbyReceiveBinaryDataDelegate_Parms TriggerLobbyReceiveBinaryDataDelegate_Parms;
//	TriggerLobbyReceiveBinaryDataDelegate_Parms.MemberIndex = MemberIndex;
//	memcpy ( &TriggerLobbyReceiveBinaryDataDelegate_Parms.Data, &Data, 0xC );
//
//	this->ProcessEvent ( pFnTriggerLobbyReceiveBinaryDataDelegate, &TriggerLobbyReceiveBinaryDataDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyReceiveBinaryDataDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyReceiveBinaryDataDelegate ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyReceiveBinaryDataDelegate ( struct FScriptDelegate LobbyReceiveBinaryDataDelegate )
//{
//	static UFunction* pFnClearLobbyReceiveBinaryDataDelegate = NULL;
//
//	if ( ! pFnClearLobbyReceiveBinaryDataDelegate )
//		pFnClearLobbyReceiveBinaryDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57626 ];
//
//	UParties_X_execClearLobbyReceiveBinaryDataDelegate_Parms ClearLobbyReceiveBinaryDataDelegate_Parms;
//	memcpy ( &ClearLobbyReceiveBinaryDataDelegate_Parms.LobbyReceiveBinaryDataDelegate, &LobbyReceiveBinaryDataDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyReceiveBinaryDataDelegate, &ClearLobbyReceiveBinaryDataDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyReceiveBinaryDataDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyReceiveBinaryDataDelegate ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyReceiveBinaryDataDelegate ( struct FScriptDelegate LobbyReceiveBinaryDataDelegate )
//{
//	static UFunction* pFnAddLobbyReceiveBinaryDataDelegate = NULL;
//
//	if ( ! pFnAddLobbyReceiveBinaryDataDelegate )
//		pFnAddLobbyReceiveBinaryDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57624 ];
//
//	UParties_X_execAddLobbyReceiveBinaryDataDelegate_Parms AddLobbyReceiveBinaryDataDelegate_Parms;
//	memcpy ( &AddLobbyReceiveBinaryDataDelegate_Parms.LobbyReceiveBinaryDataDelegate, &LobbyReceiveBinaryDataDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyReceiveBinaryDataDelegate, &AddLobbyReceiveBinaryDataDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyReceiveBinaryData
//// [0x00520000] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< unsigned char >        Data                           ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::OnLobbyReceiveBinaryData ( int MemberIndex, struct FActiveLobbyInfo* LobbyInfo, TArray< unsigned char >* Data )
//{
//	static UFunction* pFnOnLobbyReceiveBinaryData = NULL;
//
//	if ( ! pFnOnLobbyReceiveBinaryData )
//		pFnOnLobbyReceiveBinaryData = (UFunction*) UObject::GObjObjects()->Data[ 57528 ];
//
//	UParties_X_execOnLobbyReceiveBinaryData_Parms OnLobbyReceiveBinaryData_Parms;
//	OnLobbyReceiveBinaryData_Parms.MemberIndex = MemberIndex;
//
//	this->ProcessEvent ( pFnOnLobbyReceiveBinaryData, &OnLobbyReceiveBinaryData_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnLobbyReceiveBinaryData_Parms.LobbyInfo, 0x24 );
//
//	if ( Data )
//		memcpy ( Data, &OnLobbyReceiveBinaryData_Parms.Data, 0xC );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyReceiveMessageDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyReceiveMessageDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyReceiveMessageDelegate ( struct FScriptDelegate LobbyReceiveMessageDelegate )
//{
//	static UFunction* pFnClearLobbyReceiveMessageDelegate = NULL;
//
//	if ( ! pFnClearLobbyReceiveMessageDelegate )
//		pFnClearLobbyReceiveMessageDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57618 ];
//
//	UParties_X_execClearLobbyReceiveMessageDelegate_Parms ClearLobbyReceiveMessageDelegate_Parms;
//	memcpy ( &ClearLobbyReceiveMessageDelegate_Parms.LobbyReceiveMessageDelegate, &LobbyReceiveMessageDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyReceiveMessageDelegate, &ClearLobbyReceiveMessageDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyReceiveMessageDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyReceiveMessageDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyReceiveMessageDelegate ( struct FScriptDelegate LobbyReceiveMessageDelegate )
//{
//	static UFunction* pFnAddLobbyReceiveMessageDelegate = NULL;
//
//	if ( ! pFnAddLobbyReceiveMessageDelegate )
//		pFnAddLobbyReceiveMessageDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57616 ];
//
//	UParties_X_execAddLobbyReceiveMessageDelegate_Parms AddLobbyReceiveMessageDelegate_Parms;
//	memcpy ( &AddLobbyReceiveMessageDelegate_Parms.LobbyReceiveMessageDelegate, &LobbyReceiveMessageDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyReceiveMessageDelegate, &AddLobbyReceiveMessageDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyReceiveMessage
//// [0x00520000] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// struct FString                 Type                           ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::OnLobbyReceiveMessage ( int MemberIndex, struct FString Type, struct FString Message, struct FActiveLobbyInfo* LobbyInfo )
//{
//	static UFunction* pFnOnLobbyReceiveMessage = NULL;
//
//	if ( ! pFnOnLobbyReceiveMessage )
//		pFnOnLobbyReceiveMessage = (UFunction*) UObject::GObjObjects()->Data[ 57530 ];
//
//	UParties_X_execOnLobbyReceiveMessage_Parms OnLobbyReceiveMessage_Parms;
//	OnLobbyReceiveMessage_Parms.MemberIndex = MemberIndex;
//	memcpy ( &OnLobbyReceiveMessage_Parms.Type, &Type, 0xC );
//	memcpy ( &OnLobbyReceiveMessage_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnOnLobbyReceiveMessage, &OnLobbyReceiveMessage_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnLobbyReceiveMessage_Parms.LobbyInfo, 0x24 );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyMemberStatusUpdateDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyMemberStatusUpdateDelegate ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyMemberStatusUpdateDelegate ( struct FScriptDelegate LobbyMemberStatusUpdateDelegate )
//{
//	static UFunction* pFnClearLobbyMemberStatusUpdateDelegate = NULL;
//
//	if ( ! pFnClearLobbyMemberStatusUpdateDelegate )
//		pFnClearLobbyMemberStatusUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57610 ];
//
//	UParties_X_execClearLobbyMemberStatusUpdateDelegate_Parms ClearLobbyMemberStatusUpdateDelegate_Parms;
//	memcpy ( &ClearLobbyMemberStatusUpdateDelegate_Parms.LobbyMemberStatusUpdateDelegate, &LobbyMemberStatusUpdateDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyMemberStatusUpdateDelegate, &ClearLobbyMemberStatusUpdateDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyMemberStatusUpdateDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyMemberStatusUpdateDelegate ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyMemberStatusUpdateDelegate ( struct FScriptDelegate LobbyMemberStatusUpdateDelegate )
//{
//	static UFunction* pFnAddLobbyMemberStatusUpdateDelegate = NULL;
//
//	if ( ! pFnAddLobbyMemberStatusUpdateDelegate )
//		pFnAddLobbyMemberStatusUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57608 ];
//
//	UParties_X_execAddLobbyMemberStatusUpdateDelegate_Parms AddLobbyMemberStatusUpdateDelegate_Parms;
//	memcpy ( &AddLobbyMemberStatusUpdateDelegate_Parms.LobbyMemberStatusUpdateDelegate, &LobbyMemberStatusUpdateDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyMemberStatusUpdateDelegate, &AddLobbyMemberStatusUpdateDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.TriggerLobbyMemberStatusUpdateDelegates
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// int                            InstigatorIndex                ( CPF_Parm )
//// struct FString                 Status                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::eventTriggerLobbyMemberStatusUpdateDelegates ( int MemberIndex, int InstigatorIndex, struct FString Status )
//{
//	static UFunction* pFnTriggerLobbyMemberStatusUpdateDelegates = NULL;
//
//	if ( ! pFnTriggerLobbyMemberStatusUpdateDelegates )
//		pFnTriggerLobbyMemberStatusUpdateDelegates = (UFunction*) UObject::GObjObjects()->Data[ 57604 ];
//
//	UParties_X_eventTriggerLobbyMemberStatusUpdateDelegates_Parms TriggerLobbyMemberStatusUpdateDelegates_Parms;
//	TriggerLobbyMemberStatusUpdateDelegates_Parms.MemberIndex = MemberIndex;
//	TriggerLobbyMemberStatusUpdateDelegates_Parms.InstigatorIndex = InstigatorIndex;
//	memcpy ( &TriggerLobbyMemberStatusUpdateDelegates_Parms.Status, &Status, 0xC );
//
//	this->ProcessEvent ( pFnTriggerLobbyMemberStatusUpdateDelegates, &TriggerLobbyMemberStatusUpdateDelegates_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyMemberStatusUpdate
//// [0x00520000] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// int                            InstigatorIndex                ( CPF_Parm )
//// struct FString                 Status                         ( CPF_Parm | CPF_NeedCtorLink )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::OnLobbyMemberStatusUpdate ( int MemberIndex, int InstigatorIndex, struct FString Status, struct FActiveLobbyInfo* LobbyInfo )
//{
//	static UFunction* pFnOnLobbyMemberStatusUpdate = NULL;
//
//	if ( ! pFnOnLobbyMemberStatusUpdate )
//		pFnOnLobbyMemberStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57532 ];
//
//	UParties_X_execOnLobbyMemberStatusUpdate_Parms OnLobbyMemberStatusUpdate_Parms;
//	OnLobbyMemberStatusUpdate_Parms.MemberIndex = MemberIndex;
//	OnLobbyMemberStatusUpdate_Parms.InstigatorIndex = InstigatorIndex;
//	memcpy ( &OnLobbyMemberStatusUpdate_Parms.Status, &Status, 0xC );
//
//	this->ProcessEvent ( pFnOnLobbyMemberStatusUpdate, &OnLobbyMemberStatusUpdate_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnLobbyMemberStatusUpdate_Parms.LobbyInfo, 0x24 );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyMemberSettingsUpdateDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyMemberSettingsUpdateDelegate ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyMemberSettingsUpdateDelegate ( struct FScriptDelegate LobbyMemberSettingsUpdateDelegate )
//{
//	static UFunction* pFnClearLobbyMemberSettingsUpdateDelegate = NULL;
//
//	if ( ! pFnClearLobbyMemberSettingsUpdateDelegate )
//		pFnClearLobbyMemberSettingsUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57598 ];
//
//	UParties_X_execClearLobbyMemberSettingsUpdateDelegate_Parms ClearLobbyMemberSettingsUpdateDelegate_Parms;
//	memcpy ( &ClearLobbyMemberSettingsUpdateDelegate_Parms.LobbyMemberSettingsUpdateDelegate, &LobbyMemberSettingsUpdateDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyMemberSettingsUpdateDelegate, &ClearLobbyMemberSettingsUpdateDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyMemberSettingsUpdateDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyMemberSettingsUpdateDelegate ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyMemberSettingsUpdateDelegate ( struct FScriptDelegate LobbyMemberSettingsUpdateDelegate )
//{
//	static UFunction* pFnAddLobbyMemberSettingsUpdateDelegate = NULL;
//
//	if ( ! pFnAddLobbyMemberSettingsUpdateDelegate )
//		pFnAddLobbyMemberSettingsUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57596 ];
//
//	UParties_X_execAddLobbyMemberSettingsUpdateDelegate_Parms AddLobbyMemberSettingsUpdateDelegate_Parms;
//	memcpy ( &AddLobbyMemberSettingsUpdateDelegate_Parms.LobbyMemberSettingsUpdateDelegate, &LobbyMemberSettingsUpdateDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyMemberSettingsUpdateDelegate, &AddLobbyMemberSettingsUpdateDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyMemberSettingsUpdate
//// [0x00520000] 
//// Parameters infos:
//// int                            MemberIndex                    ( CPF_Parm )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::OnLobbyMemberSettingsUpdate ( int MemberIndex, struct FActiveLobbyInfo* LobbyInfo )
//{
//	static UFunction* pFnOnLobbyMemberSettingsUpdate = NULL;
//
//	if ( ! pFnOnLobbyMemberSettingsUpdate )
//		pFnOnLobbyMemberSettingsUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57534 ];
//
//	UParties_X_execOnLobbyMemberSettingsUpdate_Parms OnLobbyMemberSettingsUpdate_Parms;
//	OnLobbyMemberSettingsUpdate_Parms.MemberIndex = MemberIndex;
//
//	this->ProcessEvent ( pFnOnLobbyMemberSettingsUpdate, &OnLobbyMemberSettingsUpdate_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnLobbyMemberSettingsUpdate_Parms.LobbyInfo, 0x24 );
//};
//
//// Function ProjectX.Parties_X.ClearLobbySettingsUpdateDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbySettingsUpdateDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbySettingsUpdateDelegate ( struct FScriptDelegate LobbySettingsUpdateDelegate )
//{
//	static UFunction* pFnClearLobbySettingsUpdateDelegate = NULL;
//
//	if ( ! pFnClearLobbySettingsUpdateDelegate )
//		pFnClearLobbySettingsUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57592 ];
//
//	UParties_X_execClearLobbySettingsUpdateDelegate_Parms ClearLobbySettingsUpdateDelegate_Parms;
//	memcpy ( &ClearLobbySettingsUpdateDelegate_Parms.LobbySettingsUpdateDelegate, &LobbySettingsUpdateDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbySettingsUpdateDelegate, &ClearLobbySettingsUpdateDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbySettingsUpdateDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbySettingsUpdateDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbySettingsUpdateDelegate ( struct FScriptDelegate LobbySettingsUpdateDelegate )
//{
//	static UFunction* pFnAddLobbySettingsUpdateDelegate = NULL;
//
//	if ( ! pFnAddLobbySettingsUpdateDelegate )
//		pFnAddLobbySettingsUpdateDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57590 ];
//
//	UParties_X_execAddLobbySettingsUpdateDelegate_Parms AddLobbySettingsUpdateDelegate_Parms;
//	memcpy ( &AddLobbySettingsUpdateDelegate_Parms.LobbySettingsUpdateDelegate, &LobbySettingsUpdateDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbySettingsUpdateDelegate, &AddLobbySettingsUpdateDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbySettingsUpdate
//// [0x00520000] 
//// Parameters infos:
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::OnLobbySettingsUpdate ( struct FActiveLobbyInfo* LobbyInfo )
//{
//	static UFunction* pFnOnLobbySettingsUpdate = NULL;
//
//	if ( ! pFnOnLobbySettingsUpdate )
//		pFnOnLobbySettingsUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57536 ];
//
//	UParties_X_execOnLobbySettingsUpdate_Parms OnLobbySettingsUpdate_Parms;
//
//	this->ProcessEvent ( pFnOnLobbySettingsUpdate, &OnLobbySettingsUpdate_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnLobbySettingsUpdate_Parms.LobbyInfo, 0x24 );
//};
//
//// Function ProjectX.Parties_X.ClearJoinLobbyCompleteDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         JoinLobbyCompleteDelegate      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearJoinLobbyCompleteDelegate ( struct FScriptDelegate JoinLobbyCompleteDelegate )
//{
//	static UFunction* pFnClearJoinLobbyCompleteDelegate = NULL;
//
//	if ( ! pFnClearJoinLobbyCompleteDelegate )
//		pFnClearJoinLobbyCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57587 ];
//
//	UParties_X_execClearJoinLobbyCompleteDelegate_Parms ClearJoinLobbyCompleteDelegate_Parms;
//	memcpy ( &ClearJoinLobbyCompleteDelegate_Parms.JoinLobbyCompleteDelegate, &JoinLobbyCompleteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearJoinLobbyCompleteDelegate, &ClearJoinLobbyCompleteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddJoinLobbyCompleteDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         JoinLobbyCompleteDelegate      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddJoinLobbyCompleteDelegate ( struct FScriptDelegate JoinLobbyCompleteDelegate )
//{
//	static UFunction* pFnAddJoinLobbyCompleteDelegate = NULL;
//
//	if ( ! pFnAddJoinLobbyCompleteDelegate )
//		pFnAddJoinLobbyCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57585 ];
//
//	UParties_X_execAddJoinLobbyCompleteDelegate_Parms AddJoinLobbyCompleteDelegate_Parms;
//	memcpy ( &AddJoinLobbyCompleteDelegate_Parms.JoinLobbyCompleteDelegate, &JoinLobbyCompleteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddJoinLobbyCompleteDelegate, &AddJoinLobbyCompleteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnJoinLobbyComplete
//// [0x00520000] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FActiveLobbyInfo        LobbyInfo                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::OnJoinLobbyComplete ( unsigned long bWasSuccessful, struct FString Error, struct FActiveLobbyInfo* LobbyInfo, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnOnJoinLobbyComplete = NULL;
//
//	if ( ! pFnOnJoinLobbyComplete )
//		pFnOnJoinLobbyComplete = (UFunction*) UObject::GObjObjects()->Data[ 57538 ];
//
//	UParties_X_execOnJoinLobbyComplete_Parms OnJoinLobbyComplete_Parms;
//	OnJoinLobbyComplete_Parms.bWasSuccessful = bWasSuccessful;
//	memcpy ( &OnJoinLobbyComplete_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnOnJoinLobbyComplete, &OnJoinLobbyComplete_Parms, NULL );
//
//	if ( LobbyInfo )
//		memcpy ( LobbyInfo, &OnJoinLobbyComplete_Parms.LobbyInfo, 0x24 );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &OnJoinLobbyComplete_Parms.LobbyId, 0xC );
//};
//
//// Function ProjectX.Parties_X.ClearFindLobbiesCompleteDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         FindLobbiesCompleteDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearFindLobbiesCompleteDelegate ( struct FScriptDelegate FindLobbiesCompleteDelegate )
//{
//	static UFunction* pFnClearFindLobbiesCompleteDelegate = NULL;
//
//	if ( ! pFnClearFindLobbiesCompleteDelegate )
//		pFnClearFindLobbiesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57579 ];
//
//	UParties_X_execClearFindLobbiesCompleteDelegate_Parms ClearFindLobbiesCompleteDelegate_Parms;
//	memcpy ( &ClearFindLobbiesCompleteDelegate_Parms.FindLobbiesCompleteDelegate, &FindLobbiesCompleteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearFindLobbiesCompleteDelegate, &ClearFindLobbiesCompleteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddFindLobbiesCompleteDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         FindLobbiesCompleteDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddFindLobbiesCompleteDelegate ( struct FScriptDelegate FindLobbiesCompleteDelegate )
//{
//	static UFunction* pFnAddFindLobbiesCompleteDelegate = NULL;
//
//	if ( ! pFnAddFindLobbiesCompleteDelegate )
//		pFnAddFindLobbiesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57577 ];
//
//	UParties_X_execAddFindLobbiesCompleteDelegate_Parms AddFindLobbiesCompleteDelegate_Parms;
//	memcpy ( &AddFindLobbiesCompleteDelegate_Parms.FindLobbiesCompleteDelegate, &FindLobbiesCompleteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddFindLobbiesCompleteDelegate, &AddFindLobbiesCompleteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnFindLobbiesComplete
//// [0x00520000] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//// TArray< struct FBasicLobbyInfo > LobbyList                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UParties_X::OnFindLobbiesComplete ( unsigned long bWasSuccessful, TArray< struct FBasicLobbyInfo >* LobbyList )
//{
//	static UFunction* pFnOnFindLobbiesComplete = NULL;
//
//	if ( ! pFnOnFindLobbiesComplete )
//		pFnOnFindLobbiesComplete = (UFunction*) UObject::GObjObjects()->Data[ 57540 ];
//
//	UParties_X_execOnFindLobbiesComplete_Parms OnFindLobbiesComplete_Parms;
//	OnFindLobbiesComplete_Parms.bWasSuccessful = bWasSuccessful;
//
//	this->ProcessEvent ( pFnOnFindLobbiesComplete, &OnFindLobbiesComplete_Parms, NULL );
//
//	if ( LobbyList )
//		memcpy ( LobbyList, &OnFindLobbiesComplete_Parms.LobbyList, 0xC );
//};
//
//// Function ProjectX.Parties_X.ClearLobbySessionCreatedDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbySessionCreatedDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbySessionCreatedDelegate ( struct FScriptDelegate LobbySessionCreatedDelegate )
//{
//	static UFunction* pFnClearLobbySessionCreatedDelegate = NULL;
//
//	if ( ! pFnClearLobbySessionCreatedDelegate )
//		pFnClearLobbySessionCreatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57572 ];
//
//	UParties_X_execClearLobbySessionCreatedDelegate_Parms ClearLobbySessionCreatedDelegate_Parms;
//	memcpy ( &ClearLobbySessionCreatedDelegate_Parms.LobbySessionCreatedDelegate, &LobbySessionCreatedDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbySessionCreatedDelegate, &ClearLobbySessionCreatedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbySessionCreatedDelegate
//// [0x00020000] 
//// Parameters infos:
//// struct FScriptDelegate         LobbySessionCreatedDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbySessionCreatedDelegate ( struct FScriptDelegate LobbySessionCreatedDelegate )
//{
//	static UFunction* pFnAddLobbySessionCreatedDelegate = NULL;
//
//	if ( ! pFnAddLobbySessionCreatedDelegate )
//		pFnAddLobbySessionCreatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57570 ];
//
//	UParties_X_execAddLobbySessionCreatedDelegate_Parms AddLobbySessionCreatedDelegate_Parms;
//	memcpy ( &AddLobbySessionCreatedDelegate_Parms.LobbySessionCreatedDelegate, &LobbySessionCreatedDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbySessionCreatedDelegate, &AddLobbySessionCreatedDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbySessionCreated
//// [0x00120000] 
//// Parameters infos:
//
//void UParties_X::OnLobbySessionCreated ( )
//{
//	static UFunction* pFnOnLobbySessionCreated = NULL;
//
//	if ( ! pFnOnLobbySessionCreated )
//		pFnOnLobbySessionCreated = (UFunction*) UObject::GObjObjects()->Data[ 57542 ];
//
//	UParties_X_execOnLobbySessionCreated_Parms OnLobbySessionCreated_Parms;
//
//	this->ProcessEvent ( pFnOnLobbySessionCreated, &OnLobbySessionCreated_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.ClearLobbyErrorDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyErrorDelegate             ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearLobbyErrorDelegate ( struct FScriptDelegate LobbyErrorDelegate )
//{
//	static UFunction* pFnClearLobbyErrorDelegate = NULL;
//
//	if ( ! pFnClearLobbyErrorDelegate )
//		pFnClearLobbyErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57568 ];
//
//	UParties_X_execClearLobbyErrorDelegate_Parms ClearLobbyErrorDelegate_Parms;
//	memcpy ( &ClearLobbyErrorDelegate_Parms.LobbyErrorDelegate, &LobbyErrorDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearLobbyErrorDelegate, &ClearLobbyErrorDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddLobbyErrorDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         LobbyErrorDelegate             ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddLobbyErrorDelegate ( struct FScriptDelegate LobbyErrorDelegate )
//{
//	static UFunction* pFnAddLobbyErrorDelegate = NULL;
//
//	if ( ! pFnAddLobbyErrorDelegate )
//		pFnAddLobbyErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57566 ];
//
//	UParties_X_execAddLobbyErrorDelegate_Parms AddLobbyErrorDelegate_Parms;
//	memcpy ( &AddLobbyErrorDelegate_Parms.LobbyErrorDelegate, &LobbyErrorDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddLobbyErrorDelegate, &AddLobbyErrorDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnLobbyError
//// [0x00120000] 
//// Parameters infos:
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::OnLobbyError ( struct FString Error )
//{
//	static UFunction* pFnOnLobbyError = NULL;
//
//	if ( ! pFnOnLobbyError )
//		pFnOnLobbyError = (UFunction*) UObject::GObjObjects()->Data[ 57544 ];
//
//	UParties_X_execOnLobbyError_Parms OnLobbyError_Parms;
//	memcpy ( &OnLobbyError_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnOnLobbyError, &OnLobbyError_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.ClearCreateLobbyCompleteDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         CreateLobbyCompleteDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::ClearCreateLobbyCompleteDelegate ( struct FScriptDelegate CreateLobbyCompleteDelegate )
//{
//	static UFunction* pFnClearCreateLobbyCompleteDelegate = NULL;
//
//	if ( ! pFnClearCreateLobbyCompleteDelegate )
//		pFnClearCreateLobbyCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57563 ];
//
//	UParties_X_execClearCreateLobbyCompleteDelegate_Parms ClearCreateLobbyCompleteDelegate_Parms;
//	memcpy ( &ClearCreateLobbyCompleteDelegate_Parms.CreateLobbyCompleteDelegate, &CreateLobbyCompleteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnClearCreateLobbyCompleteDelegate, &ClearCreateLobbyCompleteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.AddCreateLobbyCompleteDelegate
//// [0x00020002] 
//// Parameters infos:
//// struct FScriptDelegate         CreateLobbyCompleteDelegate    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UParties_X::AddCreateLobbyCompleteDelegate ( struct FScriptDelegate CreateLobbyCompleteDelegate )
//{
//	static UFunction* pFnAddCreateLobbyCompleteDelegate = NULL;
//
//	if ( ! pFnAddCreateLobbyCompleteDelegate )
//		pFnAddCreateLobbyCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57561 ];
//
//	UParties_X_execAddCreateLobbyCompleteDelegate_Parms AddCreateLobbyCompleteDelegate_Parms;
//	memcpy ( &AddCreateLobbyCompleteDelegate_Parms.CreateLobbyCompleteDelegate, &CreateLobbyCompleteDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnAddCreateLobbyCompleteDelegate, &AddCreateLobbyCompleteDelegate_Parms, NULL );
//};
//
//// Function ProjectX.Parties_X.OnCreateLobbyComplete
//// [0x00520000] 
//// Parameters infos:
//// unsigned long                  bWasSuccessful                 ( CPF_Parm )
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UParties_X::OnCreateLobbyComplete ( unsigned long bWasSuccessful, struct FString Error, struct FUniqueLobbyId* LobbyId )
//{
//	static UFunction* pFnOnCreateLobbyComplete = NULL;
//
//	if ( ! pFnOnCreateLobbyComplete )
//		pFnOnCreateLobbyComplete = (UFunction*) UObject::GObjObjects()->Data[ 57546 ];
//
//	UParties_X_execOnCreateLobbyComplete_Parms OnCreateLobbyComplete_Parms;
//	OnCreateLobbyComplete_Parms.bWasSuccessful = bWasSuccessful;
//	memcpy ( &OnCreateLobbyComplete_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnOnCreateLobbyComplete, &OnCreateLobbyComplete_Parms, NULL );
//
//	if ( LobbyId )
//		memcpy ( LobbyId, &OnCreateLobbyComplete_Parms.LobbyId, 0xC );
//};
//
//// Function ProjectX.Parties_X.EventShowInviteUI
//// [0x00120000] 
//// Parameters infos:
//
//void UParties_X::EventShowInviteUI ( )
//{
//	static UFunction* pFnEventShowInviteUI = NULL;
//
//	if ( ! pFnEventShowInviteUI )
//		pFnEventShowInviteUI = (UFunction*) UObject::GObjObjects()->Data[ 57548 ];
//
//	UParties_X_execEventShowInviteUI_Parms EventShowInviteUI_Parms;
//
//	this->ProcessEvent ( pFnEventShowInviteUI, &EventShowInviteUI_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessage_X.Broadcast
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UPartyMessage_X::Broadcast ( )
//{
//	static UFunction* pFnBroadcast = NULL;
//
//	if ( ! pFnBroadcast )
//		pFnBroadcast = (UFunction*) UObject::GObjObjects()->Data[ 52376 ];
//
//	UPartyMessage_X_execBroadcast_Parms Broadcast_Parms;
//
//	this->ProcessEvent ( pFnBroadcast, &Broadcast_Parms, NULL );
//
//	return Broadcast_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_SearchStatus_X.SetIsSearching
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_SearchStatus_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bValue                         ( CPF_Parm )
//
//class UPartyMessage_SearchStatus_X* UPartyMessage_SearchStatus_X::SetIsSearching ( unsigned long bValue )
//{
//	static UFunction* pFnSetIsSearching = NULL;
//
//	if ( ! pFnSetIsSearching )
//		pFnSetIsSearching = (UFunction*) UObject::GObjObjects()->Data[ 52390 ];
//
//	UPartyMessage_SearchStatus_X_execSetIsSearching_Parms SetIsSearching_Parms;
//	SetIsSearching_Parms.bValue = bValue;
//
//	this->ProcessEvent ( pFnSetIsSearching, &SetIsSearching_Parms, NULL );
//
//	return SetIsSearching_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_SearchStatus_X.SetSearchState
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_SearchStatus_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   InSearchState                  ( CPF_Parm )
//
//class UPartyMessage_SearchStatus_X* UPartyMessage_SearchStatus_X::SetSearchState ( struct FName InSearchState )
//{
//	static UFunction* pFnSetSearchState = NULL;
//
//	if ( ! pFnSetSearchState )
//		pFnSetSearchState = (UFunction*) UObject::GObjObjects()->Data[ 52387 ];
//
//	UPartyMessage_SearchStatus_X_execSetSearchState_Parms SetSearchState_Parms;
//	memcpy ( &SetSearchState_Parms.InSearchState, &InSearchState, 0x8 );
//
//	this->ProcessEvent ( pFnSetSearchState, &SetSearchState_Parms, NULL );
//
//	return SetSearchState_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_LobbySettings_X.SetBuildID
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_LobbySettings_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InBuildID                      ( CPF_Parm )
//
//class UPartyMessage_LobbySettings_X* UPartyMessage_LobbySettings_X::SetBuildID ( int InBuildID )
//{
//	static UFunction* pFnSetBuildID = NULL;
//
//	if ( ! pFnSetBuildID )
//		pFnSetBuildID = (UFunction*) UObject::GObjObjects()->Data[ 52995 ];
//
//	UPartyMessage_LobbySettings_X_execSetBuildID_Parms SetBuildID_Parms;
//	SetBuildID_Parms.InBuildID = InBuildID;
//
//	this->ProcessEvent ( pFnSetBuildID, &SetBuildID_Parms, NULL );
//
//	return SetBuildID_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_Kick_X.SetReason
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_Kick_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  InKickReason                   ( CPF_Parm )
//
//class UPartyMessage_Kick_X* UPartyMessage_Kick_X::SetReason ( unsigned char InKickReason )
//{
//	static UFunction* pFnSetReason = NULL;
//
//	if ( ! pFnSetReason )
//		pFnSetReason = (UFunction*) UObject::GObjObjects()->Data[ 52540 ];
//
//	UPartyMessage_Kick_X_execSetReason_Parms SetReason_Parms;
//	SetReason_Parms.InKickReason = InKickReason;
//
//	this->ProcessEvent ( pFnSetReason, &SetReason_Parms, NULL );
//
//	return SetReason_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_Kick_X.SetInstigator
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_Kick_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayer                       ( CPF_Parm )
//
//class UPartyMessage_Kick_X* UPartyMessage_Kick_X::SetInstigator ( struct FUniqueNetId InPlayer )
//{
//	static UFunction* pFnSetInstigator = NULL;
//
//	if ( ! pFnSetInstigator )
//		pFnSetInstigator = (UFunction*) UObject::GObjObjects()->Data[ 52538 ];
//
//	UPartyMessage_Kick_X_execSetInstigator_Parms SetInstigator_Parms;
//	memcpy ( &SetInstigator_Parms.InPlayer, &InPlayer, 0x48 );
//
//	this->ProcessEvent ( pFnSetInstigator, &SetInstigator_Parms, NULL );
//
//	return SetInstigator_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_Kick_X.SetKicked
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_Kick_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayer                       ( CPF_Parm )
//
//class UPartyMessage_Kick_X* UPartyMessage_Kick_X::SetKicked ( struct FUniqueNetId InPlayer )
//{
//	static UFunction* pFnSetKicked = NULL;
//
//	if ( ! pFnSetKicked )
//		pFnSetKicked = (UFunction*) UObject::GObjObjects()->Data[ 52536 ];
//
//	UPartyMessage_Kick_X_execSetKicked_Parms SetKicked_Parms;
//	memcpy ( &SetKicked_Parms.InPlayer, &InPlayer, 0x48 );
//
//	this->ProcessEvent ( pFnSetKicked, &SetKicked_Parms, NULL );
//
//	return SetKicked_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_LocalPlayers_X.SetFromLeader
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_LocalPlayers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bIsLeader                      ( CPF_Parm )
//
//class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::SetFromLeader ( unsigned long bIsLeader )
//{
//	static UFunction* pFnSetFromLeader = NULL;
//
//	if ( ! pFnSetFromLeader )
//		pFnSetFromLeader = (UFunction*) UObject::GObjObjects()->Data[ 52702 ];
//
//	UPartyMessage_LocalPlayers_X_execSetFromLeader_Parms SetFromLeader_Parms;
//	SetFromLeader_Parms.bIsLeader = bIsLeader;
//
//	this->ProcessEvent ( pFnSetFromLeader, &SetFromLeader_Parms, NULL );
//
//	return SetFromLeader_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_LocalPlayers_X.AddMember
//// [0x00020002] 
//// Parameters infos:
//// struct FPartyMember            Member                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPartyMessage_LocalPlayers_X::AddMember ( struct FPartyMember Member )
//{
//	static UFunction* pFnAddMember = NULL;
//
//	if ( ! pFnAddMember )
//		pFnAddMember = (UFunction*) UObject::GObjObjects()->Data[ 54728 ];
//
//	UPartyMessage_LocalPlayers_X_execAddMember_Parms AddMember_Parms;
//	memcpy ( &AddMember_Parms.Member, &Member, 0x120 );
//
//	this->ProcessEvent ( pFnAddMember, &AddMember_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessage_LocalPlayers_X.AddPlayer
//// [0x00820002] 
//// Parameters infos:
//// class UPartyMessage_LocalPlayers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::AddPlayer ( struct FUniqueNetId PlayerID, struct FString PlayerName )
//{
//	static UFunction* pFnAddPlayer = NULL;
//
//	if ( ! pFnAddPlayer )
//		pFnAddPlayer = (UFunction*) UObject::GObjObjects()->Data[ 54723 ];
//
//	UPartyMessage_LocalPlayers_X_execAddPlayer_Parms AddPlayer_Parms;
//	memcpy ( &AddPlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &AddPlayer_Parms.PlayerName, &PlayerName, 0xC );
//
//	this->ProcessEvent ( pFnAddPlayer, &AddPlayer_Parms, NULL );
//
//	return AddPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_LocalPlayers_X.AddOnlinePlayer
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_LocalPlayers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UOnlinePlayer_X*         Player                         ( CPF_Parm )
//
//class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::AddOnlinePlayer ( class UOnlinePlayer_X* Player )
//{
//	static UFunction* pFnAddOnlinePlayer = NULL;
//
//	if ( ! pFnAddOnlinePlayer )
//		pFnAddOnlinePlayer = (UFunction*) UObject::GObjObjects()->Data[ 54720 ];
//
//	UPartyMessage_LocalPlayers_X_execAddOnlinePlayer_Parms AddOnlinePlayer_Parms;
//	AddOnlinePlayer_Parms.Player = Player;
//
//	this->ProcessEvent ( pFnAddOnlinePlayer, &AddOnlinePlayer_Parms, NULL );
//
//	return AddOnlinePlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_LocalPlayers_X.SetPrimaryMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_LocalPlayers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPrimaryMemberId              ( CPF_Parm )
//
//class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::SetPrimaryMemberId ( struct FUniqueNetId InPrimaryMemberId )
//{
//	static UFunction* pFnSetPrimaryMemberId = NULL;
//
//	if ( ! pFnSetPrimaryMemberId )
//		pFnSetPrimaryMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52731 ];
//
//	UPartyMessage_LocalPlayers_X_execSetPrimaryMemberId_Parms SetPrimaryMemberId_Parms;
//	memcpy ( &SetPrimaryMemberId_Parms.InPrimaryMemberId, &InPrimaryMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPrimaryMemberId, &SetPrimaryMemberId_Parms, NULL );
//
//	return SetPrimaryMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_LocalPlayers_X.AddOnlinePlayers
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_LocalPlayers_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::AddOnlinePlayers ( )
//{
//	static UFunction* pFnAddOnlinePlayers = NULL;
//
//	if ( ! pFnAddOnlinePlayers )
//		pFnAddOnlinePlayers = (UFunction*) UObject::GObjObjects()->Data[ 52725 ];
//
//	UPartyMessage_LocalPlayers_X_execAddOnlinePlayers_Parms AddOnlinePlayers_Parms;
//
//	this->ProcessEvent ( pFnAddOnlinePlayers, &AddOnlinePlayers_Parms, NULL );
//
//	return AddOnlinePlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_MatchmakingAvailability_X.SetMatchmakeRestrictions
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_MatchmakingAvailability_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InRestrictions                 ( CPF_Parm )
//
//class UPartyMessage_MatchmakingAvailability_X* UPartyMessage_MatchmakingAvailability_X::SetMatchmakeRestrictions ( int InRestrictions )
//{
//	static UFunction* pFnSetMatchmakeRestrictions = NULL;
//
//	if ( ! pFnSetMatchmakeRestrictions )
//		pFnSetMatchmakeRestrictions = (UFunction*) UObject::GObjObjects()->Data[ 52943 ];
//
//	UPartyMessage_MatchmakingAvailability_X_execSetMatchmakeRestrictions_Parms SetMatchmakeRestrictions_Parms;
//	SetMatchmakeRestrictions_Parms.InRestrictions = InRestrictions;
//
//	this->ProcessEvent ( pFnSetMatchmakeRestrictions, &SetMatchmakeRestrictions_Parms, NULL );
//
//	return SetMatchmakeRestrictions_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_MatchmakingAvailability_X.SetMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_MatchmakingAvailability_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//class UPartyMessage_MatchmakingAvailability_X* UPartyMessage_MatchmakingAvailability_X::SetMemberId ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnSetMemberId = NULL;
//
//	if ( ! pFnSetMemberId )
//		pFnSetMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52941 ];
//
//	UPartyMessage_MatchmakingAvailability_X_execSetMemberId_Parms SetMemberId_Parms;
//	memcpy ( &SetMemberId_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetMemberId, &SetMemberId_Parms, NULL );
//
//	return SetMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_JoinGame_X.SetSettings
//// [0x00420002] 
//// Parameters infos:
//// class UPartyMessage_JoinGame_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FPartyJoinMatchSettings InSettings                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UPartyMessage_JoinGame_X* UPartyMessage_JoinGame_X::SetSettings ( struct FPartyJoinMatchSettings* InSettings )
//{
//	static UFunction* pFnSetSettings = NULL;
//
//	if ( ! pFnSetSettings )
//		pFnSetSettings = (UFunction*) UObject::GObjObjects()->Data[ 52974 ];
//
//	UPartyMessage_JoinGame_X_execSetSettings_Parms SetSettings_Parms;
//
//	this->ProcessEvent ( pFnSetSettings, &SetSettings_Parms, NULL );
//
//	if ( InSettings )
//		memcpy ( InSettings, &SetSettings_Parms.InSettings, 0x2C );
//
//	return SetSettings_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_PartyMemberJoinGame_X.SetPartyMemberID
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_PartyMemberJoinGame_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class UPartyMessage_PartyMemberJoinGame_X* UPartyMessage_PartyMemberJoinGame_X::SetPartyMemberID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPartyMemberID = NULL;
//
//	if ( ! pFnSetPartyMemberID )
//		pFnSetPartyMemberID = (UFunction*) UObject::GObjObjects()->Data[ 52988 ];
//
//	UPartyMessage_PartyMemberJoinGame_X_execSetPartyMemberID_Parms SetPartyMemberID_Parms;
//	memcpy ( &SetPartyMemberID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPartyMemberID, &SetPartyMemberID_Parms, NULL );
//
//	return SetPartyMemberID_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_PartyMemberJoinGame_X.SetPartyMemberServer
//// [0x00420002] 
//// Parameters infos:
//// class UPartyMessage_PartyMemberJoinGame_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FPartyMemberServer      InServer                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UPartyMessage_PartyMemberJoinGame_X* UPartyMessage_PartyMemberJoinGame_X::SetPartyMemberServer ( struct FPartyMemberServer* InServer )
//{
//	static UFunction* pFnSetPartyMemberServer = NULL;
//
//	if ( ! pFnSetPartyMemberServer )
//		pFnSetPartyMemberServer = (UFunction*) UObject::GObjObjects()->Data[ 52990 ];
//
//	UPartyMessage_PartyMemberJoinGame_X_execSetPartyMemberServer_Parms SetPartyMemberServer_Parms;
//
//	this->ProcessEvent ( pFnSetPartyMemberServer, &SetPartyMemberServer_Parms, NULL );
//
//	if ( InServer )
//		memcpy ( InServer, &SetPartyMemberServer_Parms.InServer, 0x1C );
//
//	return SetPartyMemberServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_DisableCrossPlay_X.SetDisableCrossPlay
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_DisableCrossPlay_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  InDisableCrossPlay             ( CPF_Parm )
//
//class UPartyMessage_DisableCrossPlay_X* UPartyMessage_DisableCrossPlay_X::SetDisableCrossPlay ( unsigned long InDisableCrossPlay )
//{
//	static UFunction* pFnSetDisableCrossPlay = NULL;
//
//	if ( ! pFnSetDisableCrossPlay )
//		pFnSetDisableCrossPlay = (UFunction*) UObject::GObjObjects()->Data[ 52918 ];
//
//	UPartyMessage_DisableCrossPlay_X_execSetDisableCrossPlay_Parms SetDisableCrossPlay_Parms;
//	SetDisableCrossPlay_Parms.InDisableCrossPlay = InDisableCrossPlay;
//
//	this->ProcessEvent ( pFnSetDisableCrossPlay, &SetDisableCrossPlay_Parms, NULL );
//
//	return SetDisableCrossPlay_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_DisableCrossPlay_X.SetMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_DisableCrossPlay_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//class UPartyMessage_DisableCrossPlay_X* UPartyMessage_DisableCrossPlay_X::SetMemberId ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnSetMemberId = NULL;
//
//	if ( ! pFnSetMemberId )
//		pFnSetMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52916 ];
//
//	UPartyMessage_DisableCrossPlay_X_execSetMemberId_Parms SetMemberId_Parms;
//	memcpy ( &SetMemberId_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetMemberId, &SetMemberId_Parms, NULL );
//
//	return SetMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_InviteToTrade_X.SetInviteMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_InviteToTrade_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//class UPartyMessage_InviteToTrade_X* UPartyMessage_InviteToTrade_X::SetInviteMemberId ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnSetInviteMemberId = NULL;
//
//	if ( ! pFnSetInviteMemberId )
//		pFnSetInviteMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52873 ];
//
//	UPartyMessage_InviteToTrade_X_execSetInviteMemberId_Parms SetInviteMemberId_Parms;
//	memcpy ( &SetInviteMemberId_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetInviteMemberId, &SetInviteMemberId_Parms, NULL );
//
//	return SetInviteMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_AcceptInviteToTrade_X.SetTradeId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_AcceptInviteToTrade_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FGuid                   InTradeId                      ( CPF_Parm )
//
//class UPartyMessage_AcceptInviteToTrade_X* UPartyMessage_AcceptInviteToTrade_X::SetTradeId ( struct FGuid InTradeId )
//{
//	static UFunction* pFnSetTradeId = NULL;
//
//	if ( ! pFnSetTradeId )
//		pFnSetTradeId = (UFunction*) UObject::GObjObjects()->Data[ 52848 ];
//
//	UPartyMessage_AcceptInviteToTrade_X_execSetTradeId_Parms SetTradeId_Parms;
//	memcpy ( &SetTradeId_Parms.InTradeId, &InTradeId, 0x10 );
//
//	this->ProcessEvent ( pFnSetTradeId, &SetTradeId_Parms, NULL );
//
//	return SetTradeId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_AcceptInviteToTrade_X.SetInviteAccepted
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_AcceptInviteToTrade_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bInInviteAccepted              ( CPF_Parm )
//
//class UPartyMessage_AcceptInviteToTrade_X* UPartyMessage_AcceptInviteToTrade_X::SetInviteAccepted ( unsigned long bInInviteAccepted )
//{
//	static UFunction* pFnSetInviteAccepted = NULL;
//
//	if ( ! pFnSetInviteAccepted )
//		pFnSetInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 52846 ];
//
//	UPartyMessage_AcceptInviteToTrade_X_execSetInviteAccepted_Parms SetInviteAccepted_Parms;
//	SetInviteAccepted_Parms.bInInviteAccepted = bInInviteAccepted;
//
//	this->ProcessEvent ( pFnSetInviteAccepted, &SetInviteAccepted_Parms, NULL );
//
//	return SetInviteAccepted_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_AcceptInviteToTrade_X.SetInviteMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_AcceptInviteToTrade_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//class UPartyMessage_AcceptInviteToTrade_X* UPartyMessage_AcceptInviteToTrade_X::SetInviteMemberId ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnSetInviteMemberId = NULL;
//
//	if ( ! pFnSetInviteMemberId )
//		pFnSetInviteMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52844 ];
//
//	UPartyMessage_AcceptInviteToTrade_X_execSetInviteMemberId_Parms SetInviteMemberId_Parms;
//	memcpy ( &SetInviteMemberId_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetInviteMemberId, &SetInviteMemberId_Parms, NULL );
//
//	return SetInviteMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_PlayerTradeComplete_X.SetTradingMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_PlayerTradeComplete_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InMemberId                     ( CPF_Parm )
//
//class UPartyMessage_PlayerTradeComplete_X* UPartyMessage_PlayerTradeComplete_X::SetTradingMemberId ( struct FUniqueNetId InMemberId )
//{
//	static UFunction* pFnSetTradingMemberId = NULL;
//
//	if ( ! pFnSetTradingMemberId )
//		pFnSetTradingMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52790 ];
//
//	UPartyMessage_PlayerTradeComplete_X_execSetTradingMemberId_Parms SetTradingMemberId_Parms;
//	memcpy ( &SetTradingMemberId_Parms.InMemberId, &InMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetTradingMemberId, &SetTradingMemberId_Parms, NULL );
//
//	return SetTradingMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMetrics_X.PartyChannelBroken
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// int                            MissingMessageID               ( CPF_Parm )
//
//void UPartyMetrics_X::PartyChannelBroken ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, int MissingMessageID )
//{
//	static UFunction* pFnPartyChannelBroken = NULL;
//
//	if ( ! pFnPartyChannelBroken )
//		pFnPartyChannelBroken = (UFunction*) UObject::GObjObjects()->Data[ 56087 ];
//
//	UPartyMetrics_X_execPartyChannelBroken_Parms PartyChannelBroken_Parms;
//	memcpy ( &PartyChannelBroken_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyChannelBroken_Parms.LeaderID, &LeaderID, 0x48 );
//	PartyChannelBroken_Parms.MissingMessageID = MissingMessageID;
//
//	this->ProcessEvent ( pFnPartyChannelBroken, &PartyChannelBroken_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// struct FName                   MessageType                    ( CPF_Parm )
//
//void UPartyMetrics_X::PartyMessage ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FName MessageType )
//{
//	static UFunction* pFnPartyMessage = NULL;
//
//	if ( ! pFnPartyMessage )
//		pFnPartyMessage = (UFunction*) UObject::GObjObjects()->Data[ 52480 ];
//
//	UPartyMetrics_X_execPartyMessage_Parms PartyMessage_Parms;
//	memcpy ( &PartyMessage_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyMessage_Parms.LeaderID, &LeaderID, 0x48 );
//	memcpy ( &PartyMessage_Parms.MessageType, &MessageType, 0x8 );
//
//	this->ProcessEvent ( pFnPartyMessage, &PartyMessage_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// unsigned long                  bLeader                        ( CPF_Parm )
//// int                            PartySize                      ( CPF_Parm )
//// int                            LocalPlayers                   ( CPF_Parm )
//// int                            RemotePlayers                  ( CPF_Parm )
//
//void UPartyMetrics_X::PartyChanged ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, unsigned long bLeader, int PartySize, int LocalPlayers, int RemotePlayers )
//{
//	static UFunction* pFnPartyChanged = NULL;
//
//	if ( ! pFnPartyChanged )
//		pFnPartyChanged = (UFunction*) UObject::GObjObjects()->Data[ 56076 ];
//
//	UPartyMetrics_X_execPartyChanged_Parms PartyChanged_Parms;
//	memcpy ( &PartyChanged_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyChanged_Parms.LeaderID, &LeaderID, 0x48 );
//	PartyChanged_Parms.bLeader = bLeader;
//	PartyChanged_Parms.PartySize = PartySize;
//	PartyChanged_Parms.LocalPlayers = LocalPlayers;
//	PartyChanged_Parms.RemotePlayers = RemotePlayers;
//
//	this->ProcessEvent ( pFnPartyChanged, &PartyChanged_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.CreatePartyMetricsData
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FPartyMetricsData       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UOnlineGameParty_X*      Party                          ( CPF_Parm )
//
//struct FPartyMetricsData UPartyMetrics_X::CreatePartyMetricsData ( class UOnlineGameParty_X* Party )
//{
//	static UFunction* pFnCreatePartyMetricsData = NULL;
//
//	if ( ! pFnCreatePartyMetricsData )
//		pFnCreatePartyMetricsData = (UFunction*) UObject::GObjObjects()->Data[ 56075 ];
//
//	UPartyMetrics_X_execCreatePartyMetricsData_Parms CreatePartyMetricsData_Parms;
//	CreatePartyMetricsData_Parms.Party = Party;
//
//	this->ProcessEvent ( pFnCreatePartyMetricsData, &CreatePartyMetricsData_Parms, NULL );
//
//	return CreatePartyMetricsData_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMetrics_X.RecordPartyChanged
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineGameParty_X*      Party                          ( CPF_Parm )
//
//void UPartyMetrics_X::RecordPartyChanged ( class UOnlineGameParty_X* Party )
//{
//	static UFunction* pFnRecordPartyChanged = NULL;
//
//	if ( ! pFnRecordPartyChanged )
//		pFnRecordPartyChanged = (UFunction*) UObject::GObjObjects()->Data[ 52753 ];
//
//	UPartyMetrics_X_execRecordPartyChanged_Parms RecordPartyChanged_Parms;
//	RecordPartyChanged_Parms.Party = Party;
//
//	this->ProcessEvent ( pFnRecordPartyChanged, &RecordPartyChanged_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPartyMetrics_X::PartyError ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FString Error )
//{
//	static UFunction* pFnPartyError = NULL;
//
//	if ( ! pFnPartyError )
//		pFnPartyError = (UFunction*) UObject::GObjObjects()->Data[ 52597 ];
//
//	UPartyMetrics_X_execPartyError_Parms PartyError_Parms;
//	memcpy ( &PartyError_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyError_Parms.LeaderID, &LeaderID, 0x48 );
//	memcpy ( &PartyError_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnPartyError, &PartyError_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyKickRemotePlayer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void UPartyMetrics_X::PartyKickRemotePlayer ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FString Reason )
//{
//	static UFunction* pFnPartyKickRemotePlayer = NULL;
//
//	if ( ! pFnPartyKickRemotePlayer )
//		pFnPartyKickRemotePlayer = (UFunction*) UObject::GObjObjects()->Data[ 52535 ];
//
//	UPartyMetrics_X_execPartyKickRemotePlayer_Parms PartyKickRemotePlayer_Parms;
//	memcpy ( &PartyKickRemotePlayer_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyKickRemotePlayer_Parms.LeaderID, &LeaderID, 0x48 );
//	memcpy ( &PartyKickRemotePlayer_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnPartyKickRemotePlayer, &PartyKickRemotePlayer_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyKickLocalPlayer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//void UPartyMetrics_X::PartyKickLocalPlayer ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FString Reason )
//{
//	static UFunction* pFnPartyKickLocalPlayer = NULL;
//
//	if ( ! pFnPartyKickLocalPlayer )
//		pFnPartyKickLocalPlayer = (UFunction*) UObject::GObjObjects()->Data[ 52534 ];
//
//	UPartyMetrics_X_execPartyKickLocalPlayer_Parms PartyKickLocalPlayer_Parms;
//	memcpy ( &PartyKickLocalPlayer_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyKickLocalPlayer_Parms.LeaderID, &LeaderID, 0x48 );
//	memcpy ( &PartyKickLocalPlayer_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnPartyKickLocalPlayer, &PartyKickLocalPlayer_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyLeave
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPartyMetrics_X::PartyLeave ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FString Reason )
//{
//	static UFunction* pFnPartyLeave = NULL;
//
//	if ( ! pFnPartyLeave )
//		pFnPartyLeave = (UFunction*) UObject::GObjObjects()->Data[ 52522 ];
//
//	UPartyMetrics_X_execPartyLeave_Parms PartyLeave_Parms;
//	memcpy ( &PartyLeave_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyLeave_Parms.LeaderID, &LeaderID, 0x48 );
//	memcpy ( &PartyLeave_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnPartyLeave, &PartyLeave_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyCreationFailed
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPartyMetrics_X::PartyCreationFailed ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FString Error )
//{
//	static UFunction* pFnPartyCreationFailed = NULL;
//
//	if ( ! pFnPartyCreationFailed )
//		pFnPartyCreationFailed = (UFunction*) UObject::GObjObjects()->Data[ 52495 ];
//
//	UPartyMetrics_X_execPartyCreationFailed_Parms PartyCreationFailed_Parms;
//	memcpy ( &PartyCreationFailed_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyCreationFailed_Parms.LeaderID, &LeaderID, 0x48 );
//	memcpy ( &PartyCreationFailed_Parms.Error, &Error, 0xC );
//
//	this->ProcessEvent ( pFnPartyCreationFailed, &PartyCreationFailed_Parms, NULL );
//};
//
//// Function ProjectX.PartyMetrics_X.PartyCreated
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          PartyID                        ( CPF_Parm )
//// struct FUniqueNetId            LeaderID                       ( CPF_Parm )
//
//void UPartyMetrics_X::PartyCreated ( struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID )
//{
//	static UFunction* pFnPartyCreated = NULL;
//
//	if ( ! pFnPartyCreated )
//		pFnPartyCreated = (UFunction*) UObject::GObjObjects()->Data[ 52494 ];
//
//	UPartyMetrics_X_execPartyCreated_Parms PartyCreated_Parms;
//	memcpy ( &PartyCreated_Parms.PartyID, &PartyID, 0xC );
//	memcpy ( &PartyCreated_Parms.LeaderID, &LeaderID, 0x48 );
//
//	this->ProcessEvent ( pFnPartyCreated, &PartyCreated_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessage_ReadyToTrade_X.SetReadyToTrade
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_ReadyToTrade_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bInReadyToTrade                ( CPF_Parm )
//
//class UPartyMessage_ReadyToTrade_X* UPartyMessage_ReadyToTrade_X::SetReadyToTrade ( unsigned long bInReadyToTrade )
//{
//	static UFunction* pFnSetReadyToTrade = NULL;
//
//	if ( ! pFnSetReadyToTrade )
//		pFnSetReadyToTrade = (UFunction*) UObject::GObjObjects()->Data[ 52812 ];
//
//	UPartyMessage_ReadyToTrade_X_execSetReadyToTrade_Parms SetReadyToTrade_Parms;
//	SetReadyToTrade_Parms.bInReadyToTrade = bInReadyToTrade;
//
//	this->ProcessEvent ( pFnSetReadyToTrade, &SetReadyToTrade_Parms, NULL );
//
//	return SetReadyToTrade_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessage_ReadyToTrade_X.SetTradingMemberId
//// [0x00020002] 
//// Parameters infos:
//// class UPartyMessage_ReadyToTrade_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InTradingMemberId              ( CPF_Parm )
//
//class UPartyMessage_ReadyToTrade_X* UPartyMessage_ReadyToTrade_X::SetTradingMemberId ( struct FUniqueNetId InTradingMemberId )
//{
//	static UFunction* pFnSetTradingMemberId = NULL;
//
//	if ( ! pFnSetTradingMemberId )
//		pFnSetTradingMemberId = (UFunction*) UObject::GObjObjects()->Data[ 52810 ];
//
//	UPartyMessage_ReadyToTrade_X_execSetTradingMemberId_Parms SetTradingMemberId_Parms;
//	memcpy ( &SetTradingMemberId_Parms.InTradingMemberId, &InTradingMemberId, 0x48 );
//
//	this->ProcessEvent ( pFnSetTradingMemberId, &SetTradingMemberId_Parms, NULL );
//
//	return SetTradingMemberId_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetPlayerTitles_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetPlayerTitles_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_GetPlayerTitles_X* URPC_GetPlayerTitles_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 53092 ];
//
//	URPC_GetPlayerTitles_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RankedConfig_X.HasSeasonEnded
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool URankedConfig_X::HasSeasonEnded ( )
//{
//	static UFunction* pFnHasSeasonEnded = NULL;
//
//	if ( ! pFnHasSeasonEnded )
//		pFnHasSeasonEnded = (UFunction*) UObject::GObjObjects()->Data[ 53181 ];
//
//	URankedConfig_X_execHasSeasonEnded_Parms HasSeasonEnded_Parms;
//
//	this->ProcessEvent ( pFnHasSeasonEnded, &HasSeasonEnded_Parms, NULL );
//
//	return HasSeasonEnded_Parms.ReturnValue;
//};
//
//// Function ProjectX.RankedConfig_X.GetSeasonTimeRemaining
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int URankedConfig_X::GetSeasonTimeRemaining ( )
//{
//	static UFunction* pFnGetSeasonTimeRemaining = NULL;
//
//	if ( ! pFnGetSeasonTimeRemaining )
//		pFnGetSeasonTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 56544 ];
//
//	URankedConfig_X_execGetSeasonTimeRemaining_Parms GetSeasonTimeRemaining_Parms;
//
//	this->ProcessEvent ( pFnGetSeasonTimeRemaining, &GetSeasonTimeRemaining_Parms, NULL );
//
//	return GetSeasonTimeRemaining_Parms.ReturnValue;
//};
//
//// Function ProjectX.RankedConfig_X.Apply
//// [0x00020002] 
//// Parameters infos:
//
//void URankedConfig_X::Apply ( )
//{
//	static UFunction* pFnApply = NULL;
//
//	if ( ! pFnApply )
//		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 56543 ];
//
//	URankedConfig_X_execApply_Parms Apply_Parms;
//
//	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
//};
//
//// Function ProjectX.RPC_PlayerSearchPrivateMatch_X.SetRegion
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PlayerSearchPrivateMatch_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InRegion                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PlayerSearchPrivateMatch_X* URPC_PlayerSearchPrivateMatch_X::SetRegion ( struct FString InRegion )
//{
//	static UFunction* pFnSetRegion = NULL;
//
//	if ( ! pFnSetRegion )
//		pFnSetRegion = (UFunction*) UObject::GObjObjects()->Data[ 53271 ];
//
//	URPC_PlayerSearchPrivateMatch_X_execSetRegion_Parms SetRegion_Parms;
//	memcpy ( &SetRegion_Parms.InRegion, &InRegion, 0xC );
//
//	this->ProcessEvent ( pFnSetRegion, &SetRegion_Parms, NULL );
//
//	return SetRegion_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetGameServerPingList_X.OnSuccess
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_GetGameServerPingList_X::eventOnSuccess ( )
//{
//	static UFunction* pFnOnSuccess = NULL;
//
//	if ( ! pFnOnSuccess )
//		pFnOnSuccess = (UFunction*) UObject::GObjObjects()->Data[ 56616 ];
//
//	URPC_GetGameServerPingList_X_eventOnSuccess_Parms OnSuccess_Parms;
//
//	this->ProcessEvent ( pFnOnSuccess, &OnSuccess_Parms, NULL );
//};
//
//// Function ProjectX.OnlineGameReservations_AssignTeamsByParty_X.PartySort
//// [0x00022002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FPartyByTeam            Left                           ( CPF_Parm )
//// struct FPartyByTeam            Right                          ( CPF_Parm )
//
//int UOnlineGameReservations_AssignTeamsByParty_X::PartySort ( struct FPartyByTeam Left, struct FPartyByTeam Right )
//{
//	static UFunction* pFnPartySort = NULL;
//
//	if ( ! pFnPartySort )
//		pFnPartySort = (UFunction*) UObject::GObjObjects()->Data[ 53428 ];
//
//	UOnlineGameReservations_AssignTeamsByParty_X_execPartySort_Parms PartySort_Parms;
//	memcpy ( &PartySort_Parms.Left, &Left, 0x50 );
//	memcpy ( &PartySort_Parms.Right, &Right, 0x50 );
//
//	this->ProcessEvent ( pFnPartySort, &PartySort_Parms, NULL );
//
//	return PartySort_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineGameReservations_AssignTeamsByParty_X.AssignTeams
//// [0x00422002] 
//// Parameters infos:
//// int                            TeamSize                       ( CPF_Parm )
//// TArray< struct FReservationData > TestPlayers                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlineGameReservations_AssignTeamsByParty_X::AssignTeams ( int TeamSize, TArray< struct FReservationData >* TestPlayers )
//{
//	static UFunction* pFnAssignTeams = NULL;
//
//	if ( ! pFnAssignTeams )
//		pFnAssignTeams = (UFunction*) UObject::GObjObjects()->Data[ 53418 ];
//
//	UOnlineGameReservations_AssignTeamsByParty_X_execAssignTeams_Parms AssignTeams_Parms;
//	AssignTeams_Parms.TeamSize = TeamSize;
//
//	this->ProcessEvent ( pFnAssignTeams, &AssignTeams_Parms, NULL );
//
//	if ( TestPlayers )
//		memcpy ( TestPlayers, &AssignTeams_Parms.TestPlayers, 0xC );
//};
//
//// Function ProjectX.ReservationsMetrics_X.NotAllPlayersJoined
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::NotAllPlayersJoined ( )
//{
//	static UFunction* pFnNotAllPlayersJoined = NULL;
//
//	if ( ! pFnNotAllPlayersJoined )
//		pFnNotAllPlayersJoined = (UFunction*) UObject::GObjObjects()->Data[ 53529 ];
//
//	UReservationsMetrics_X_execNotAllPlayersJoined_Parms NotAllPlayersJoined_Parms;
//
//	this->ProcessEvent ( pFnNotAllPlayersJoined, &NotAllPlayersJoined_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.GetKeysInvalidOrigin
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::GetKeysInvalidOrigin ( )
//{
//	static UFunction* pFnGetKeysInvalidOrigin = NULL;
//
//	if ( ! pFnGetKeysInvalidOrigin )
//		pFnGetKeysInvalidOrigin = (UFunction*) UObject::GObjObjects()->Data[ 53821 ];
//
//	UReservationsMetrics_X_execGetKeysInvalidOrigin_Parms GetKeysInvalidOrigin_Parms;
//
//	this->ProcessEvent ( pFnGetKeysInvalidOrigin, &GetKeysInvalidOrigin_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.GetKeysFailed
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::GetKeysFailed ( )
//{
//	static UFunction* pFnGetKeysFailed = NULL;
//
//	if ( ! pFnGetKeysFailed )
//		pFnGetKeysFailed = (UFunction*) UObject::GObjObjects()->Data[ 53827 ];
//
//	UReservationsMetrics_X_execGetKeysFailed_Parms GetKeysFailed_Parms;
//
//	this->ProcessEvent ( pFnGetKeysFailed, &GetKeysFailed_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.ReservationsFull
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::ReservationsFull ( )
//{
//	static UFunction* pFnReservationsFull = NULL;
//
//	if ( ! pFnReservationsFull )
//		pFnReservationsFull = (UFunction*) UObject::GObjObjects()->Data[ 53485 ];
//
//	UReservationsMetrics_X_execReservationsFull_Parms ReservationsFull_Parms;
//
//	this->ProcessEvent ( pFnReservationsFull, &ReservationsFull_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.PlatformExclusiveReservation
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::PlatformExclusiveReservation ( )
//{
//	static UFunction* pFnPlatformExclusiveReservation = NULL;
//
//	if ( ! pFnPlatformExclusiveReservation )
//		pFnPlatformExclusiveReservation = (UFunction*) UObject::GObjObjects()->Data[ 53484 ];
//
//	UReservationsMetrics_X_execPlatformExclusiveReservation_Parms PlatformExclusiveReservation_Parms;
//
//	this->ProcessEvent ( pFnPlatformExclusiveReservation, &PlatformExclusiveReservation_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.WrongReservationPlaylist
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::WrongReservationPlaylist ( )
//{
//	static UFunction* pFnWrongReservationPlaylist = NULL;
//
//	if ( ! pFnWrongReservationPlaylist )
//		pFnWrongReservationPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 53482 ];
//
//	UReservationsMetrics_X_execWrongReservationPlaylist_Parms WrongReservationPlaylist_Parms;
//
//	this->ProcessEvent ( pFnWrongReservationPlaylist, &WrongReservationPlaylist_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.InvalidReservationPlaylist
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::InvalidReservationPlaylist ( )
//{
//	static UFunction* pFnInvalidReservationPlaylist = NULL;
//
//	if ( ! pFnInvalidReservationPlaylist )
//		pFnInvalidReservationPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 53480 ];
//
//	UReservationsMetrics_X_execInvalidReservationPlaylist_Parms InvalidReservationPlaylist_Parms;
//
//	this->ProcessEvent ( pFnInvalidReservationPlaylist, &InvalidReservationPlaylist_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.RankedReconnect
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::RankedReconnect ( )
//{
//	static UFunction* pFnRankedReconnect = NULL;
//
//	if ( ! pFnRankedReconnect )
//		pFnRankedReconnect = (UFunction*) UObject::GObjObjects()->Data[ 53479 ];
//
//	UReservationsMetrics_X_execRankedReconnect_Parms RankedReconnect_Parms;
//
//	this->ProcessEvent ( pFnRankedReconnect, &RankedReconnect_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.RankedReconnectFinished
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::RankedReconnectFinished ( )
//{
//	static UFunction* pFnRankedReconnectFinished = NULL;
//
//	if ( ! pFnRankedReconnectFinished )
//		pFnRankedReconnectFinished = (UFunction*) UObject::GObjObjects()->Data[ 53478 ];
//
//	UReservationsMetrics_X_execRankedReconnectFinished_Parms RankedReconnectFinished_Parms;
//
//	this->ProcessEvent ( pFnRankedReconnectFinished, &RankedReconnectFinished_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.FriendJoin
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::FriendJoin ( )
//{
//	static UFunction* pFnFriendJoin = NULL;
//
//	if ( ! pFnFriendJoin )
//		pFnFriendJoin = (UFunction*) UObject::GObjObjects()->Data[ 53476 ];
//
//	UReservationsMetrics_X_execFriendJoin_Parms FriendJoin_Parms;
//
//	this->ProcessEvent ( pFnFriendJoin, &FriendJoin_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.FriendJoinEmpty
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::FriendJoinEmpty ( )
//{
//	static UFunction* pFnFriendJoinEmpty = NULL;
//
//	if ( ! pFnFriendJoinEmpty )
//		pFnFriendJoinEmpty = (UFunction*) UObject::GObjObjects()->Data[ 53475 ];
//
//	UReservationsMetrics_X_execFriendJoinEmpty_Parms FriendJoinEmpty_Parms;
//
//	this->ProcessEvent ( pFnFriendJoinEmpty, &FriendJoinEmpty_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.FriendJoinRanked
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UReservationsMetrics_X::FriendJoinRanked ( )
//{
//	static UFunction* pFnFriendJoinRanked = NULL;
//
//	if ( ! pFnFriendJoinRanked )
//		pFnFriendJoinRanked = (UFunction*) UObject::GObjObjects()->Data[ 53474 ];
//
//	UReservationsMetrics_X_execFriendJoinRanked_Parms FriendJoinRanked_Parms;
//
//	this->ProcessEvent ( pFnFriendJoinRanked, &FriendJoinRanked_Parms, NULL );
//};
//
//// Function ProjectX.ReservationsMetrics_X.FirstReservation
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            Playlist                       ( CPF_Parm )
//
//void UReservationsMetrics_X::FirstReservation ( int Playlist )
//{
//	static UFunction* pFnFirstReservation = NULL;
//
//	if ( ! pFnFirstReservation )
//		pFnFirstReservation = (UFunction*) UObject::GObjObjects()->Data[ 53481 ];
//
//	UReservationsMetrics_X_execFirstReservation_Parms FirstReservation_Parms;
//	FirstReservation_Parms.Playlist = Playlist;
//
//	this->ProcessEvent ( pFnFirstReservation, &FirstReservation_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.OnUniqueIdChanged
//// [0x00080102] 
//// Parameters infos:
//
//void APRI_X::OnUniqueIdChanged ( )
//{
//	static UFunction* pFnOnUniqueIdChanged = NULL;
//
//	if ( ! pFnOnUniqueIdChanged )
//		pFnOnUniqueIdChanged = (UFunction*) UObject::GObjObjects()->Data[ 55133 ];
//
//	APRI_X_execOnUniqueIdChanged_Parms OnUniqueIdChanged_Parms;
//
//	this->ProcessEvent ( pFnOnUniqueIdChanged, &OnUniqueIdChanged_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.SetUniqueId
//// [0x00020102] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerUniqueId                 ( CPF_Parm )
//
//void APRI_X::SetUniqueId ( struct FUniqueNetId PlayerUniqueId )
//{
//	static UFunction* pFnSetUniqueId = NULL;
//
//	if ( ! pFnSetUniqueId )
//		pFnSetUniqueId = (UFunction*) UObject::GObjObjects()->Data[ 55131 ];
//
//	APRI_X_execSetUniqueId_Parms SetUniqueId_Parms;
//	memcpy ( &SetUniqueId_Parms.PlayerUniqueId, &PlayerUniqueId, 0x48 );
//
//	this->ProcessEvent ( pFnSetUniqueId, &SetUniqueId_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.RegisterPlayerWithSession
//// [0x00820102] 
//// Parameters infos:
//
//void APRI_X::RegisterPlayerWithSession ( )
//{
//	static UFunction* pFnRegisterPlayerWithSession = NULL;
//
//	if ( ! pFnRegisterPlayerWithSession )
//		pFnRegisterPlayerWithSession = (UFunction*) UObject::GObjObjects()->Data[ 55126 ];
//
//	APRI_X_execRegisterPlayerWithSession_Parms RegisterPlayerWithSession_Parms;
//
//	this->ProcessEvent ( pFnRegisterPlayerWithSession, &RegisterPlayerWithSession_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.AddPlayerHistoryKey
//// [0x00080102] 
//// Parameters infos:
//// class UOnlineRecentPlayersList* PlayersList                    ( CPF_Parm )
//
//void APRI_X::AddPlayerHistoryKey ( class UOnlineRecentPlayersList* PlayersList )
//{
//	static UFunction* pFnAddPlayerHistoryKey = NULL;
//
//	if ( ! pFnAddPlayerHistoryKey )
//		pFnAddPlayerHistoryKey = (UFunction*) UObject::GObjObjects()->Data[ 55130 ];
//
//	APRI_X_execAddPlayerHistoryKey_Parms AddPlayerHistoryKey_Parms;
//	AddPlayerHistoryKey_Parms.PlayersList = PlayersList;
//
//	this->ProcessEvent ( pFnAddPlayerHistoryKey, &AddPlayerHistoryKey_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.OnTeamChanged
//// [0x00080102] 
//// Parameters infos:
//
//void APRI_X::OnTeamChanged ( )
//{
//	static UFunction* pFnOnTeamChanged = NULL;
//
//	if ( ! pFnOnTeamChanged )
//		pFnOnTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 55125 ];
//
//	APRI_X_execOnTeamChanged_Parms OnTeamChanged_Parms;
//
//	this->ProcessEvent ( pFnOnTeamChanged, &OnTeamChanged_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.SetPlayerTeam
//// [0x00020002] 
//// Parameters infos:
//// class ATeamInfo*               NewTeam                        ( CPF_Parm )
//
//void APRI_X::SetPlayerTeam ( class ATeamInfo* NewTeam )
//{
//	static UFunction* pFnSetPlayerTeam = NULL;
//
//	if ( ! pFnSetPlayerTeam )
//		pFnSetPlayerTeam = (UFunction*) UObject::GObjObjects()->Data[ 55123 ];
//
//	APRI_X_execSetPlayerTeam_Parms SetPlayerTeam_Parms;
//	SetPlayerTeam_Parms.NewTeam = NewTeam;
//
//	this->ProcessEvent ( pFnSetPlayerTeam, &SetPlayerTeam_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.OnOwnerChanged
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//
//void APRI_X::eventOnOwnerChanged ( )
//{
//	static UFunction* pFnOnOwnerChanged = NULL;
//
//	if ( ! pFnOnOwnerChanged )
//		pFnOnOwnerChanged = (UFunction*) UObject::GObjObjects()->Data[ 55122 ];
//
//	APRI_X_eventOnOwnerChanged_Parms OnOwnerChanged_Parms;
//
//	this->ProcessEvent ( pFnOnOwnerChanged, &OnOwnerChanged_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.SetPlayerName
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )
//
//void APRI_X::eventSetPlayerName ( struct FString S )
//{
//	static UFunction* pFnSetPlayerName = NULL;
//
//	if ( ! pFnSetPlayerName )
//		pFnSetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 55120 ];
//
//	APRI_X_eventSetPlayerName_Parms SetPlayerName_Parms;
//	memcpy ( &SetPlayerName_Parms.S, &S, 0xC );
//
//	this->ProcessEvent ( pFnSetPlayerName, &SetPlayerName_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.ReplicatedEvent
//// [0x00020902] ( FUNC_Event )
//// Parameters infos:
//// struct FName                   VarName                        ( CPF_Parm )
//
//void APRI_X::eventReplicatedEvent ( struct FName VarName )
//{
//	static UFunction* pFnReplicatedEvent = NULL;
//
//	if ( ! pFnReplicatedEvent )
//		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 55118 ];
//
//	APRI_X_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
//	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );
//
//	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.EventTeamChanged
//// [0x00120000] 
//// Parameters infos:
//// class APRI_X*                  PRI                            ( CPF_Parm )
//
//void APRI_X::EventTeamChanged ( class APRI_X* PRI )
//{
//	static UFunction* pFnEventTeamChanged = NULL;
//
//	if ( ! pFnEventTeamChanged )
//		pFnEventTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 55112 ];
//
//	APRI_X_execEventTeamChanged_Parms EventTeamChanged_Parms;
//	EventTeamChanged_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnEventTeamChanged, &EventTeamChanged_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.EventUniqueIdChanged
//// [0x00120000] 
//// Parameters infos:
//// class APRI_X*                  PRI                            ( CPF_Parm )
//
//void APRI_X::EventUniqueIdChanged ( class APRI_X* PRI )
//{
//	static UFunction* pFnEventUniqueIdChanged = NULL;
//
//	if ( ! pFnEventUniqueIdChanged )
//		pFnEventUniqueIdChanged = (UFunction*) UObject::GObjObjects()->Data[ 55114 ];
//
//	APRI_X_execEventUniqueIdChanged_Parms EventUniqueIdChanged_Parms;
//	EventUniqueIdChanged_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnEventUniqueIdChanged, &EventUniqueIdChanged_Parms, NULL );
//};
//
//// Function ProjectX.PRI_X.EventPlayerNameChanged
//// [0x00120000] 
//// Parameters infos:
//// class APRI_X*                  PRI                            ( CPF_Parm )
//
//void APRI_X::EventPlayerNameChanged ( class APRI_X* PRI )
//{
//	static UFunction* pFnEventPlayerNameChanged = NULL;
//
//	if ( ! pFnEventPlayerNameChanged )
//		pFnEventPlayerNameChanged = (UFunction*) UObject::GObjObjects()->Data[ 55110 ];
//
//	APRI_X_execEventPlayerNameChanged_Parms EventPlayerNameChanged_Parms;
//	EventPlayerNameChanged_Parms.PRI = PRI;
//
//	this->ProcessEvent ( pFnEventPlayerNameChanged, &EventPlayerNameChanged_Parms, NULL );
//};
//
//// Function ProjectX.RPC_GetKeys_X.SetPlayer
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetKeys_X*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_GetKeys_X* URPC_GetKeys_X::SetPlayer ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayer = NULL;
//
//	if ( ! pFnSetPlayer )
//		pFnSetPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53814 ];
//
//	URPC_GetKeys_X_execSetPlayer_Parms SetPlayer_Parms;
//	memcpy ( &SetPlayer_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayer, &SetPlayer_Parms, NULL );
//
//	return SetPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CustomGameServerGet_X.OnSuccess
//// [0x00880802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_CustomGameServerGet_X::eventOnSuccess ( )
//{
//	static UFunction* pFnOnSuccess = NULL;
//
//	if ( ! pFnOnSuccess )
//		pFnOnSuccess = (UFunction*) UObject::GObjObjects()->Data[ 55821 ];
//
//	URPC_CustomGameServerGet_X_eventOnSuccess_Parms OnSuccess_Parms;
//
//	this->ProcessEvent ( pFnOnSuccess, &OnSuccess_Parms, NULL );
//};
//
//// Function ProjectX.RPC_CustomGameServerGet_X.SetPassword
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CustomGameServerGet_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InPassword                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CustomGameServerGet_X* URPC_CustomGameServerGet_X::SetPassword ( struct FString InPassword )
//{
//	static UFunction* pFnSetPassword = NULL;
//
//	if ( ! pFnSetPassword )
//		pFnSetPassword = (UFunction*) UObject::GObjObjects()->Data[ 53919 ];
//
//	URPC_CustomGameServerGet_X_execSetPassword_Parms SetPassword_Parms;
//	memcpy ( &SetPassword_Parms.InPassword, &InPassword, 0xC );
//
//	this->ProcessEvent ( pFnSetPassword, &SetPassword_Parms, NULL );
//
//	return SetPassword_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CustomGameServerGet_X.SetServerName
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CustomGameServerGet_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CustomGameServerGet_X* URPC_CustomGameServerGet_X::SetServerName ( struct FString InServerName )
//{
//	static UFunction* pFnSetServerName = NULL;
//
//	if ( ! pFnSetServerName )
//		pFnSetServerName = (UFunction*) UObject::GObjObjects()->Data[ 53917 ];
//
//	URPC_CustomGameServerGet_X_execSetServerName_Parms SetServerName_Parms;
//	memcpy ( &SetServerName_Parms.InServerName, &InServerName, 0xC );
//
//	this->ProcessEvent ( pFnSetServerName, &SetServerName_Parms, NULL );
//
//	return SetServerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlaylistSkillCache_X.GetPlayerIndex
//// [0x00880003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//int UPlaylistSkillCache_X::GetPlayerIndex ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetPlayerIndex = NULL;
//
//	if ( ! pFnGetPlayerIndex )
//		pFnGetPlayerIndex = (UFunction*) UObject::GObjObjects()->Data[ 54923 ];
//
//	UPlaylistSkillCache_X_execGetPlayerIndex_Parms GetPlayerIndex_Parms;
//	memcpy ( &GetPlayerIndex_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPlayerIndex, &GetPlayerIndex_Parms, NULL );
//
//	return GetPlayerIndex_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlaylistSkillCache_X.GetPlayerRating
//// [0x00820002] 
//// Parameters infos:
//// struct FPlayerSkillRating      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//struct FPlayerSkillRating UPlaylistSkillCache_X::GetPlayerRating ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnGetPlayerRating = NULL;
//
//	if ( ! pFnGetPlayerRating )
//		pFnGetPlayerRating = (UFunction*) UObject::GObjObjects()->Data[ 54033 ];
//
//	UPlaylistSkillCache_X_execGetPlayerRating_Parms GetPlayerRating_Parms;
//	memcpy ( &GetPlayerRating_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnGetPlayerRating, &GetPlayerRating_Parms, NULL );
//
//	return GetPlayerRating_Parms.ReturnValue;
//};
//
//// Function ProjectX.PlaylistSkillCache_X.ClearSkill
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UPlaylistSkillCache_X::ClearSkill ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnClearSkill = NULL;
//
//	if ( ! pFnClearSkill )
//		pFnClearSkill = (UFunction*) UObject::GObjObjects()->Data[ 54927 ];
//
//	UPlaylistSkillCache_X_execClearSkill_Parms ClearSkill_Parms;
//	memcpy ( &ClearSkill_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnClearSkill, &ClearSkill_Parms, NULL );
//};
//
//// Function ProjectX.PlaylistSkillCache_X.CacheSkill
//// [0x00020002] 
//// Parameters infos:
//// struct FPlayerSkillRating      Rating                         ( CPF_Parm )
//
//void UPlaylistSkillCache_X::CacheSkill ( struct FPlayerSkillRating Rating )
//{
//	static UFunction* pFnCacheSkill = NULL;
//
//	if ( ! pFnCacheSkill )
//		pFnCacheSkill = (UFunction*) UObject::GObjObjects()->Data[ 54924 ];
//
//	UPlaylistSkillCache_X_execCacheSkill_Parms CacheSkill_Parms;
//	memcpy ( &CacheSkill_Parms.Rating, &Rating, 0x60 );
//
//	this->ProcessEvent ( pFnCacheSkill, &CacheSkill_Parms, NULL );
//};
//
//// Function ProjectX.PlaylistSkillCache_X.PreCacheSkill
//// [0x00020002] 
//// Parameters infos:
//// struct FPlayerSkillRating      Rating                         ( CPF_Parm )
//
//void UPlaylistSkillCache_X::PreCacheSkill ( struct FPlayerSkillRating Rating )
//{
//	static UFunction* pFnPreCacheSkill = NULL;
//
//	if ( ! pFnPreCacheSkill )
//		pFnPreCacheSkill = (UFunction*) UObject::GObjObjects()->Data[ 54920 ];
//
//	UPlaylistSkillCache_X_execPreCacheSkill_Parms PreCacheSkill_Parms;
//	memcpy ( &PreCacheSkill_Parms.Rating, &Rating, 0x60 );
//
//	this->ProcessEvent ( pFnPreCacheSkill, &PreCacheSkill_Parms, NULL );
//};
//
//// Function ProjectX.RPC_GetPlayerSkill_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_GetPlayerSkill_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_GetPlayerSkill_X* URPC_GetPlayerSkill_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 54028 ];
//
//	URPC_GetPlayerSkill_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateSkills_X.CreateSkillMatchPlayer
//// [0x00880002] 
//// Parameters infos:
//// struct FSkillMatchPlayer       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// float                          PctTimePlayed                  ( CPF_Parm )
//// unsigned long                  bQuitter                       ( CPF_Parm )
//
//struct FSkillMatchPlayer URPC_UpdateSkills_X::CreateSkillMatchPlayer ( struct FUniqueNetId PlayerID, float PctTimePlayed, unsigned long bQuitter )
//{
//	static UFunction* pFnCreateSkillMatchPlayer = NULL;
//
//	if ( ! pFnCreateSkillMatchPlayer )
//		pFnCreateSkillMatchPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55532 ];
//
//	URPC_UpdateSkills_X_execCreateSkillMatchPlayer_Parms CreateSkillMatchPlayer_Parms;
//	memcpy ( &CreateSkillMatchPlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	CreateSkillMatchPlayer_Parms.PctTimePlayed = PctTimePlayed;
//	CreateSkillMatchPlayer_Parms.bQuitter = bQuitter;
//
//	this->ProcessEvent ( pFnCreateSkillMatchPlayer, &CreateSkillMatchPlayer_Parms, NULL );
//
//	return CreateSkillMatchPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateSkills_X.SetMetrics
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateSkills_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UMetricsSystem_X*        MetricsSystem                  ( CPF_Parm | CPF_EditInline )
//
//class URPC_UpdateSkills_X* URPC_UpdateSkills_X::SetMetrics ( class UMetricsSystem_X* MetricsSystem )
//{
//	static UFunction* pFnSetMetrics = NULL;
//
//	if ( ! pFnSetMetrics )
//		pFnSetMetrics = (UFunction*) UObject::GObjObjects()->Data[ 54082 ];
//
//	URPC_UpdateSkills_X_execSetMetrics_Parms SetMetrics_Parms;
//	SetMetrics_Parms.MetricsSystem = MetricsSystem;
//
//	this->ProcessEvent ( pFnSetMetrics, &SetMetrics_Parms, NULL );
//
//	return SetMetrics_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateSkills_X.SetMatch
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateSkills_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UMatchRecorder_X*        InRecorder                     ( CPF_Parm )
//
//class URPC_UpdateSkills_X* URPC_UpdateSkills_X::SetMatch ( class UMatchRecorder_X* InRecorder )
//{
//	static UFunction* pFnSetMatch = NULL;
//
//	if ( ! pFnSetMatch )
//		pFnSetMatch = (UFunction*) UObject::GObjObjects()->Data[ 54080 ];
//
//	URPC_UpdateSkills_X_execSetMatch_Parms SetMatch_Parms;
//	SetMatch_Parms.InRecorder = InRecorder;
//
//	this->ProcessEvent ( pFnSetMatch, &SetMatch_Parms, NULL );
//
//	return SetMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateSkills_X.SetMatchGUID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateSkills_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InGuid                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_UpdateSkills_X* URPC_UpdateSkills_X::SetMatchGUID ( struct FString InGuid )
//{
//	static UFunction* pFnSetMatchGUID = NULL;
//
//	if ( ! pFnSetMatchGUID )
//		pFnSetMatchGUID = (UFunction*) UObject::GObjObjects()->Data[ 54077 ];
//
//	URPC_UpdateSkills_X_execSetMatchGUID_Parms SetMatchGUID_Parms;
//	memcpy ( &SetMatchGUID_Parms.InGuid, &InGuid, 0xC );
//
//	this->ProcessEvent ( pFnSetMatchGUID, &SetMatchGUID_Parms, NULL );
//
//	return SetMatchGUID_Parms.ReturnValue;
//};
//
//// Function ProjectX.MatchRecorder_X.GetSkillMatchPlayers
//// [0x00C20002] 
//// Parameters infos:
//// TArray< struct FSkillMatchPlayer > Winners                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FSkillMatchPlayer > Losers                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UMatchRecorder_X::GetSkillMatchPlayers ( TArray< struct FSkillMatchPlayer >* Winners, TArray< struct FSkillMatchPlayer >* Losers )
//{
//	static UFunction* pFnGetSkillMatchPlayers = NULL;
//
//	if ( ! pFnGetSkillMatchPlayers )
//		pFnGetSkillMatchPlayers = (UFunction*) UObject::GObjObjects()->Data[ 55860 ];
//
//	UMatchRecorder_X_execGetSkillMatchPlayers_Parms GetSkillMatchPlayers_Parms;
//
//	this->ProcessEvent ( pFnGetSkillMatchPlayers, &GetSkillMatchPlayers_Parms, NULL );
//
//	if ( Winners )
//		memcpy ( Winners, &GetSkillMatchPlayers_Parms.Winners, 0xC );
//
//	if ( Losers )
//		memcpy ( Losers, &GetSkillMatchPlayers_Parms.Losers, 0xC );
//};
//
//// Function ProjectX.MatchRecorder_X.GetSkillMatchPlayer
//// [0x00820002] 
//// Parameters infos:
//// struct FSkillMatchPlayer       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FRecordedMatchPlayer    Player                         ( CPF_Parm )
//
//struct FSkillMatchPlayer UMatchRecorder_X::GetSkillMatchPlayer ( struct FRecordedMatchPlayer Player )
//{
//	static UFunction* pFnGetSkillMatchPlayer = NULL;
//
//	if ( ! pFnGetSkillMatchPlayer )
//		pFnGetSkillMatchPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55856 ];
//
//	UMatchRecorder_X_execGetSkillMatchPlayer_Parms GetSkillMatchPlayer_Parms;
//	memcpy ( &GetSkillMatchPlayer_Parms.Player, &Player, 0x58 );
//
//	this->ProcessEvent ( pFnGetSkillMatchPlayer, &GetSkillMatchPlayer_Parms, NULL );
//
//	return GetSkillMatchPlayer_Parms.ReturnValue;
//};
//
//// Function ProjectX.MatchRecorder_X.Finish
//// [0x00020002] 
//// Parameters infos:
//// int                            InWinningTeam                  ( CPF_Parm )
//// int                            InTeam0Score                   ( CPF_Parm )
//// int                            InTeam1Score                   ( CPF_Parm )
//// int                            InPlaylist                     ( CPF_Parm )
//// unsigned long                  bInOvertime                    ( CPF_Parm )
//
//void UMatchRecorder_X::Finish ( int InWinningTeam, int InTeam0Score, int InTeam1Score, int InPlaylist, unsigned long bInOvertime )
//{
//	static UFunction* pFnFinish = NULL;
//
//	if ( ! pFnFinish )
//		pFnFinish = (UFunction*) UObject::GObjObjects()->Data[ 55849 ];
//
//	UMatchRecorder_X_execFinish_Parms Finish_Parms;
//	Finish_Parms.InWinningTeam = InWinningTeam;
//	Finish_Parms.InTeam0Score = InTeam0Score;
//	Finish_Parms.InTeam1Score = InTeam1Score;
//	Finish_Parms.InPlaylist = InPlaylist;
//	Finish_Parms.bInOvertime = bInOvertime;
//
//	this->ProcessEvent ( pFnFinish, &Finish_Parms, NULL );
//};
//
//// Function ProjectX.MatchRecorder_X.AccumulateTime
//// [0x00020002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UMatchRecorder_X::AccumulateTime ( float DeltaTime )
//{
//	static UFunction* pFnAccumulateTime = NULL;
//
//	if ( ! pFnAccumulateTime )
//		pFnAccumulateTime = (UFunction*) UObject::GObjObjects()->Data[ 55846 ];
//
//	UMatchRecorder_X_execAccumulateTime_Parms AccumulateTime_Parms;
//	AccumulateTime_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnAccumulateTime, &AccumulateTime_Parms, NULL );
//};
//
//// Function ProjectX.MatchRecorder_X.RemovePlayer
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// unsigned long                  bPenalize                      ( CPF_Parm )
//
//void UMatchRecorder_X::RemovePlayer ( struct FUniqueNetId PlayerID, unsigned long bPenalize )
//{
//	static UFunction* pFnRemovePlayer = NULL;
//
//	if ( ! pFnRemovePlayer )
//		pFnRemovePlayer = (UFunction*) UObject::GObjObjects()->Data[ 55842 ];
//
//	UMatchRecorder_X_execRemovePlayer_Parms RemovePlayer_Parms;
//	memcpy ( &RemovePlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	RemovePlayer_Parms.bPenalize = bPenalize;
//
//	this->ProcessEvent ( pFnRemovePlayer, &RemovePlayer_Parms, NULL );
//};
//
//// Function ProjectX.MatchRecorder_X.AddPlayer
//// [0x00020002] 
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// int                            Team                           ( CPF_Parm )
//// struct FUniqueNetId            PartyID                        ( CPF_Parm )
//
//void UMatchRecorder_X::AddPlayer ( struct FUniqueNetId PlayerID, int Team, struct FUniqueNetId PartyID )
//{
//	static UFunction* pFnAddPlayer = NULL;
//
//	if ( ! pFnAddPlayer )
//		pFnAddPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55836 ];
//
//	UMatchRecorder_X_execAddPlayer_Parms AddPlayer_Parms;
//	memcpy ( &AddPlayer_Parms.PlayerID, &PlayerID, 0x48 );
//	AddPlayer_Parms.Team = Team;
//	memcpy ( &AddPlayer_Parms.PartyID, &PartyID, 0x48 );
//
//	this->ProcessEvent ( pFnAddPlayer, &AddPlayer_Parms, NULL );
//};
//
//// Function ProjectX.RPC_UpdateLeaderboard_X.SetUpdates
//// [0x00420002] 
//// Parameters infos:
//// class URPC_UpdateLeaderboard_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FUploadStatDataSet > InUpdates                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class URPC_UpdateLeaderboard_X* URPC_UpdateLeaderboard_X::SetUpdates ( TArray< struct FUploadStatDataSet >* InUpdates )
//{
//	static UFunction* pFnSetUpdates = NULL;
//
//	if ( ! pFnSetUpdates )
//		pFnSetUpdates = (UFunction*) UObject::GObjObjects()->Data[ 54123 ];
//
//	URPC_UpdateLeaderboard_X_execSetUpdates_Parms SetUpdates_Parms;
//
//	this->ProcessEvent ( pFnSetUpdates, &SetUpdates_Parms, NULL );
//
//	if ( InUpdates )
//		memcpy ( InUpdates, &SetUpdates_Parms.InUpdates, 0xC );
//
//	return SetUpdates_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorage_X.OnInit
//// [0x00080002] 
//// Parameters infos:
//
//void UOnlinePlayerStorage_X::OnInit ( )
//{
//	static UFunction* pFnOnInit = NULL;
//
//	if ( ! pFnOnInit )
//		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 58885 ];
//
//	UOnlinePlayerStorage_X_execOnInit_Parms OnInit_Parms;
//
//	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetTrial
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bIsTrial                       ( CPF_Parm )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetTrial ( unsigned long bIsTrial )
//{
//	static UFunction* pFnSetTrial = NULL;
//
//	if ( ! pFnSetTrial )
//		pFnSetTrial = (UFunction*) UObject::GObjObjects()->Data[ 54567 ];
//
//	URPC_LoginAuthPlayer_X_execSetTrial_Parms SetTrial_Parms;
//	SetTrial_Parms.bIsTrial = bIsTrial;
//
//	this->ProcessEvent ( pFnSetTrial, &SetTrial_Parms, NULL );
//
//	return SetTrial_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetFeatureSet
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   InFeatureSet                   ( CPF_Parm )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetFeatureSet ( struct FName InFeatureSet )
//{
//	static UFunction* pFnSetFeatureSet = NULL;
//
//	if ( ! pFnSetFeatureSet )
//		pFnSetFeatureSet = (UFunction*) UObject::GObjObjects()->Data[ 54563 ];
//
//	URPC_LoginAuthPlayer_X_execSetFeatureSet_Parms SetFeatureSet_Parms;
//	memcpy ( &SetFeatureSet_Parms.InFeatureSet, &InFeatureSet, 0x8 );
//
//	this->ProcessEvent ( pFnSetFeatureSet, &SetFeatureSet_Parms, NULL );
//
//	return SetFeatureSet_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetBuildRegion
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InBuildRegion                  ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetBuildRegion ( struct FString InBuildRegion )
//{
//	static UFunction* pFnSetBuildRegion = NULL;
//
//	if ( ! pFnSetBuildRegion )
//		pFnSetBuildRegion = (UFunction*) UObject::GObjObjects()->Data[ 54561 ];
//
//	URPC_LoginAuthPlayer_X_execSetBuildRegion_Parms SetBuildRegion_Parms;
//	memcpy ( &SetBuildRegion_Parms.InBuildRegion, &InBuildRegion, 0xC );
//
//	this->ProcessEvent ( pFnSetBuildRegion, &SetBuildRegion_Parms, NULL );
//
//	return SetBuildRegion_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetAuthTicket
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InAuthTicket                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetAuthTicket ( struct FString InAuthTicket )
//{
//	static UFunction* pFnSetAuthTicket = NULL;
//
//	if ( ! pFnSetAuthTicket )
//		pFnSetAuthTicket = (UFunction*) UObject::GObjObjects()->Data[ 54571 ];
//
//	URPC_LoginAuthPlayer_X_execSetAuthTicket_Parms SetAuthTicket_Parms;
//	memcpy ( &SetAuthTicket_Parms.InAuthTicket, &InAuthTicket, 0xC );
//
//	this->ProcessEvent ( pFnSetAuthTicket, &SetAuthTicket_Parms, NULL );
//
//	return SetAuthTicket_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetLanguage
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InLanguage                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetLanguage ( struct FString InLanguage )
//{
//	static UFunction* pFnSetLanguage = NULL;
//
//	if ( ! pFnSetLanguage )
//		pFnSetLanguage = (UFunction*) UObject::GObjObjects()->Data[ 54565 ];
//
//	URPC_LoginAuthPlayer_X_execSetLanguage_Parms SetLanguage_Parms;
//	memcpy ( &SetLanguage_Parms.InLanguage, &InLanguage, 0xC );
//
//	this->ProcessEvent ( pFnSetLanguage, &SetLanguage_Parms, NULL );
//
//	return SetLanguage_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetGameVersion
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InGameVersion                  ( CPF_Parm )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetGameVersion ( int InGameVersion )
//{
//	static UFunction* pFnSetGameVersion = NULL;
//
//	if ( ! pFnSetGameVersion )
//		pFnSetGameVersion = (UFunction*) UObject::GObjObjects()->Data[ 54559 ];
//
//	URPC_LoginAuthPlayer_X_execSetGameVersion_Parms SetGameVersion_Parms;
//	SetGameVersion_Parms.InGameVersion = InGameVersion;
//
//	this->ProcessEvent ( pFnSetGameVersion, &SetGameVersion_Parms, NULL );
//
//	return SetGameVersion_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetPlayerID ( )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 54555 ];
//
//	URPC_LoginAuthPlayer_X_execSetPlayerID_Parms SetPlayerID_Parms;
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetPlayerName
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InPlayerName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetPlayerName ( struct FString InPlayerName )
//{
//	static UFunction* pFnSetPlayerName = NULL;
//
//	if ( ! pFnSetPlayerName )
//		pFnSetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 54553 ];
//
//	URPC_LoginAuthPlayer_X_execSetPlayerName_Parms SetPlayerName_Parms;
//	memcpy ( &SetPlayerName_Parms.InPlayerName, &InPlayerName, 0xC );
//
//	this->ProcessEvent ( pFnSetPlayerName, &SetPlayerName_Parms, NULL );
//
//	return SetPlayerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_LoginAuthPlayer_X.SetPlatform
//// [0x00020002] 
//// Parameters infos:
//// class URPC_LoginAuthPlayer_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InPlatform                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetPlatform ( struct FString InPlatform )
//{
//	static UFunction* pFnSetPlatform = NULL;
//
//	if ( ! pFnSetPlatform )
//		pFnSetPlatform = (UFunction*) UObject::GObjObjects()->Data[ 54557 ];
//
//	URPC_LoginAuthPlayer_X_execSetPlatform_Parms SetPlatform_Parms;
//	memcpy ( &SetPlatform_Parms.InPlatform, &InPlatform, 0xC );
//
//	this->ProcessEvent ( pFnSetPlatform, &SetPlatform_Parms, NULL );
//
//	return SetPlatform_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetService_PersonaInfo_X.GetOnlineState
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//unsigned char UPsyNetService_PersonaInfo_X::GetOnlineState ( )
//{
//	static UFunction* pFnGetOnlineState = NULL;
//
//	if ( ! pFnGetOnlineState )
//		pFnGetOnlineState = (UFunction*) UObject::GObjObjects()->Data[ 58480 ];
//
//	UPsyNetService_PersonaInfo_X_execGetOnlineState_Parms GetOnlineState_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineState, &GetOnlineState_Parms, NULL );
//
//	return GetOnlineState_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetService_PersonaInfo_X.GetData
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// struct FOnlineFriend           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FOnlineFriend UPsyNetService_PersonaInfo_X::GetData ( )
//{
//	static UFunction* pFnGetData = NULL;
//
//	if ( ! pFnGetData )
//		pFnGetData = (UFunction*) UObject::GObjObjects()->Data[ 54648 ];
//
//	UPsyNetService_PersonaInfo_X_execGetData_Parms GetData_Parms;
//
//	this->ProcessEvent ( pFnGetData, &GetData_Parms, NULL );
//
//	return GetData_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.GetNextPostProcessOverride
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UPostProcessManager_X::GetNextPostProcessOverride ( )
//{
//	static UFunction* pFnGetNextPostProcessOverride = NULL;
//
//	if ( ! pFnGetNextPostProcessOverride )
//		pFnGetNextPostProcessOverride = (UFunction*) UObject::GObjObjects()->Data[ 55088 ];
//
//	UPostProcessManager_X_execGetNextPostProcessOverride_Parms GetNextPostProcessOverride_Parms;
//
//	this->ProcessEvent ( pFnGetNextPostProcessOverride, &GetNextPostProcessOverride_Parms, NULL );
//
//	return GetNextPostProcessOverride_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.TogglePostProcessSettings
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   Id                             ( CPF_Parm )
//// unsigned long                  bEnabled                       ( CPF_Parm )
//
//void UPostProcessManager_X::TogglePostProcessSettings ( struct FName Id, unsigned long bEnabled )
//{
//	static UFunction* pFnTogglePostProcessSettings = NULL;
//
//	if ( ! pFnTogglePostProcessSettings )
//		pFnTogglePostProcessSettings = (UFunction*) UObject::GObjObjects()->Data[ 55089 ];
//
//	UPostProcessManager_X_execTogglePostProcessSettings_Parms TogglePostProcessSettings_Parms;
//	memcpy ( &TogglePostProcessSettings_Parms.Id, &Id, 0x8 );
//	TogglePostProcessSettings_Parms.bEnabled = bEnabled;
//
//	this->ProcessEvent ( pFnTogglePostProcessSettings, &TogglePostProcessSettings_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.SetMaterialEffectValue
//// [0x00020102] 
//// Parameters infos:
//// struct FName                   EffectName                     ( CPF_Parm )
//// float                          NewValue                       ( CPF_Parm )
//
//void UPostProcessManager_X::SetMaterialEffectValue ( struct FName EffectName, float NewValue )
//{
//	static UFunction* pFnSetMaterialEffectValue = NULL;
//
//	if ( ! pFnSetMaterialEffectValue )
//		pFnSetMaterialEffectValue = (UFunction*) UObject::GObjObjects()->Data[ 55090 ];
//
//	UPostProcessManager_X_execSetMaterialEffectValue_Parms SetMaterialEffectValue_Parms;
//	memcpy ( &SetMaterialEffectValue_Parms.EffectName, &EffectName, 0x8 );
//	SetMaterialEffectValue_Parms.NewValue = NewValue;
//
//	this->ProcessEvent ( pFnSetMaterialEffectValue, &SetMaterialEffectValue_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.ResetEffectsToDefaults
//// [0x00024102] 
//// Parameters infos:
//// unsigned long                  bRebuildPostProcessChains      ( CPF_OptionalParm | CPF_Parm )
//
//void UPostProcessManager_X::ResetEffectsToDefaults ( unsigned long bRebuildPostProcessChains )
//{
//	static UFunction* pFnResetEffectsToDefaults = NULL;
//
//	if ( ! pFnResetEffectsToDefaults )
//		pFnResetEffectsToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 55083 ];
//
//	UPostProcessManager_X_execResetEffectsToDefaults_Parms ResetEffectsToDefaults_Parms;
//	ResetEffectsToDefaults_Parms.bRebuildPostProcessChains = bRebuildPostProcessChains;
//
//	this->ProcessEvent ( pFnResetEffectsToDefaults, &ResetEffectsToDefaults_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.ToggleChainNamed
//// [0x00080002] 
//// Parameters infos:
//// class UPostProcessChain*       Chain                          ( CPF_Parm )
//// struct FName                   ChainName                      ( CPF_Parm )
//// unsigned long                  bEnabled                       ( CPF_Parm )
//
//void UPostProcessManager_X::ToggleChainNamed ( class UPostProcessChain* Chain, struct FName ChainName, unsigned long bEnabled )
//{
//	static UFunction* pFnToggleChainNamed = NULL;
//
//	if ( ! pFnToggleChainNamed )
//		pFnToggleChainNamed = (UFunction*) UObject::GObjObjects()->Data[ 55078 ];
//
//	UPostProcessManager_X_execToggleChainNamed_Parms ToggleChainNamed_Parms;
//	ToggleChainNamed_Parms.Chain = Chain;
//	memcpy ( &ToggleChainNamed_Parms.ChainName, &ChainName, 0x8 );
//	ToggleChainNamed_Parms.bEnabled = bEnabled;
//
//	this->ProcessEvent ( pFnToggleChainNamed, &ToggleChainNamed_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.StopChainNamed
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   ChainName                      ( CPF_Parm )
//
//void UPostProcessManager_X::StopChainNamed ( struct FName ChainName )
//{
//	static UFunction* pFnStopChainNamed = NULL;
//
//	if ( ! pFnStopChainNamed )
//		pFnStopChainNamed = (UFunction*) UObject::GObjObjects()->Data[ 55076 ];
//
//	UPostProcessManager_X_execStopChainNamed_Parms StopChainNamed_Parms;
//	memcpy ( &StopChainNamed_Parms.ChainName, &ChainName, 0x8 );
//
//	this->ProcessEvent ( pFnStopChainNamed, &StopChainNamed_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.StartChainNamed
//// [0x00020002] 
//// Parameters infos:
//// class UPostProcessChain*       Chain                          ( CPF_Parm )
//// struct FName                   ChainName                      ( CPF_Parm )
//
//void UPostProcessManager_X::StartChainNamed ( class UPostProcessChain* Chain, struct FName ChainName )
//{
//	static UFunction* pFnStartChainNamed = NULL;
//
//	if ( ! pFnStartChainNamed )
//		pFnStartChainNamed = (UFunction*) UObject::GObjObjects()->Data[ 55073 ];
//
//	UPostProcessManager_X_execStartChainNamed_Parms StartChainNamed_Parms;
//	StartChainNamed_Parms.Chain = Chain;
//	memcpy ( &StartChainNamed_Parms.ChainName, &ChainName, 0x8 );
//
//	this->ProcessEvent ( pFnStartChainNamed, &StartChainNamed_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.RemovePostProcessChain
//// [0x00020102] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            OldChain                       ( CPF_Parm )
//
//bool UPostProcessManager_X::RemovePostProcessChain ( int OldChain )
//{
//	static UFunction* pFnRemovePostProcessChain = NULL;
//
//	if ( ! pFnRemovePostProcessChain )
//		pFnRemovePostProcessChain = (UFunction*) UObject::GObjObjects()->Data[ 55070 ];
//
//	UPostProcessManager_X_execRemovePostProcessChain_Parms RemovePostProcessChain_Parms;
//	RemovePostProcessChain_Parms.OldChain = OldChain;
//
//	this->ProcessEvent ( pFnRemovePostProcessChain, &RemovePostProcessChain_Parms, NULL );
//
//	return RemovePostProcessChain_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.AddPostProcessChain
//// [0x00020102] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPostProcessChain*       NewChain                       ( CPF_Parm )
//// struct FName                   ChainName                      ( CPF_Parm )
//
//int UPostProcessManager_X::AddPostProcessChain ( class UPostProcessChain* NewChain, struct FName ChainName )
//{
//	static UFunction* pFnAddPostProcessChain = NULL;
//
//	if ( ! pFnAddPostProcessChain )
//		pFnAddPostProcessChain = (UFunction*) UObject::GObjObjects()->Data[ 55065 ];
//
//	UPostProcessManager_X_execAddPostProcessChain_Parms AddPostProcessChain_Parms;
//	AddPostProcessChain_Parms.NewChain = NewChain;
//	memcpy ( &AddPostProcessChain_Parms.ChainName, &ChainName, 0x8 );
//
//	this->ProcessEvent ( pFnAddPostProcessChain, &AddPostProcessChain_Parms, NULL );
//
//	return AddPostProcessChain_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.GetEffect
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UMaterialEffect_X*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   EffectName                     ( CPF_Parm )
//
//class UMaterialEffect_X* UPostProcessManager_X::GetEffect ( struct FName EffectName )
//{
//	static UFunction* pFnGetEffect = NULL;
//
//	if ( ! pFnGetEffect )
//		pFnGetEffect = (UFunction*) UObject::GObjObjects()->Data[ 55047 ];
//
//	UPostProcessManager_X_execGetEffect_Parms GetEffect_Parms;
//	memcpy ( &GetEffect_Parms.EffectName, &EffectName, 0x8 );
//
//	this->ProcessEvent ( pFnGetEffect, &GetEffect_Parms, NULL );
//
//	return GetEffect_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.TickPostProcess
//// [0x00020002] 
//// Parameters infos:
//// float                          dt                             ( CPF_Parm )
//
//void UPostProcessManager_X::TickPostProcess ( float dt )
//{
//	static UFunction* pFnTickPostProcess = NULL;
//
//	if ( ! pFnTickPostProcess )
//		pFnTickPostProcess = (UFunction*) UObject::GObjObjects()->Data[ 55059 ];
//
//	UPostProcessManager_X_execTickPostProcess_Parms TickPostProcess_Parms;
//	TickPostProcess_Parms.dt = dt;
//
//	this->ProcessEvent ( pFnTickPostProcess, &TickPostProcess_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.ToggleEffect
//// [0x00080002] 
//// Parameters infos:
//// class UMaterialEffect_X*       Effect                         ( CPF_Parm )
//// unsigned long                  bEnabled                       ( CPF_Parm )
//
//void UPostProcessManager_X::ToggleEffect ( class UMaterialEffect_X* Effect, unsigned long bEnabled )
//{
//	static UFunction* pFnToggleEffect = NULL;
//
//	if ( ! pFnToggleEffect )
//		pFnToggleEffect = (UFunction*) UObject::GObjObjects()->Data[ 55056 ];
//
//	UPostProcessManager_X_execToggleEffect_Parms ToggleEffect_Parms;
//	ToggleEffect_Parms.Effect = Effect;
//	ToggleEffect_Parms.bEnabled = bEnabled;
//
//	this->ProcessEvent ( pFnToggleEffect, &ToggleEffect_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.StopEffectNamed
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   EffectName                     ( CPF_Parm )
//
//void UPostProcessManager_X::StopEffectNamed ( struct FName EffectName )
//{
//	static UFunction* pFnStopEffectNamed = NULL;
//
//	if ( ! pFnStopEffectNamed )
//		pFnStopEffectNamed = (UFunction*) UObject::GObjObjects()->Data[ 55054 ];
//
//	UPostProcessManager_X_execStopEffectNamed_Parms StopEffectNamed_Parms;
//	memcpy ( &StopEffectNamed_Parms.EffectName, &EffectName, 0x8 );
//
//	this->ProcessEvent ( pFnStopEffectNamed, &StopEffectNamed_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.StartEffectNamed
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   EffectName                     ( CPF_Parm )
//
//void UPostProcessManager_X::StartEffectNamed ( struct FName EffectName )
//{
//	static UFunction* pFnStartEffectNamed = NULL;
//
//	if ( ! pFnStartEffectNamed )
//		pFnStartEffectNamed = (UFunction*) UObject::GObjObjects()->Data[ 55052 ];
//
//	UPostProcessManager_X_execStartEffectNamed_Parms StartEffectNamed_Parms;
//	memcpy ( &StartEffectNamed_Parms.EffectName, &EffectName, 0x8 );
//
//	this->ProcessEvent ( pFnStartEffectNamed, &StartEffectNamed_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.ToggleEffectNamed
//// [0x00020002] 
//// Parameters infos:
//// struct FName                   EffectName                     ( CPF_Parm )
//// unsigned long                  bEnabled                       ( CPF_Parm )
//
//void UPostProcessManager_X::ToggleEffectNamed ( struct FName EffectName, unsigned long bEnabled )
//{
//	static UFunction* pFnToggleEffectNamed = NULL;
//
//	if ( ! pFnToggleEffectNamed )
//		pFnToggleEffectNamed = (UFunction*) UObject::GObjObjects()->Data[ 55048 ];
//
//	UPostProcessManager_X_execToggleEffectNamed_Parms ToggleEffectNamed_Parms;
//	memcpy ( &ToggleEffectNamed_Parms.EffectName, &EffectName, 0x8 );
//	ToggleEffectNamed_Parms.bEnabled = bEnabled;
//
//	this->ProcessEvent ( pFnToggleEffectNamed, &ToggleEffectNamed_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UPostProcessManager_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 55040 ];
//
//	UPostProcessManager_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.GetUberPostProcessEffect
//// [0x00020002] 
//// Parameters infos:
//// class UUberPostProcessEffect*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UUberPostProcessEffect* UPostProcessManager_X::GetUberPostProcessEffect ( )
//{
//	static UFunction* pFnGetUberPostProcessEffect = NULL;
//
//	if ( ! pFnGetUberPostProcessEffect )
//		pFnGetUberPostProcessEffect = (UFunction*) UObject::GObjObjects()->Data[ 55035 ];
//
//	UPostProcessManager_X_execGetUberPostProcessEffect_Parms GetUberPostProcessEffect_Parms;
//
//	this->ProcessEvent ( pFnGetUberPostProcessEffect, &GetUberPostProcessEffect_Parms, NULL );
//
//	return GetUberPostProcessEffect_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.GetPlayerChain
//// [0x00020102] 
//// Parameters infos:
//// class UPostProcessChain*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPostProcessChain* UPostProcessManager_X::GetPlayerChain ( )
//{
//	static UFunction* pFnGetPlayerChain = NULL;
//
//	if ( ! pFnGetPlayerChain )
//		pFnGetPlayerChain = (UFunction*) UObject::GObjObjects()->Data[ 55033 ];
//
//	UPostProcessManager_X_execGetPlayerChain_Parms GetPlayerChain_Parms;
//
//	this->ProcessEvent ( pFnGetPlayerChain, &GetPlayerChain_Parms, NULL );
//
//	return GetPlayerChain_Parms.ReturnValue;
//};
//
//// Function ProjectX.PostProcessManager_X.Exit
//// [0x00020102] 
//// Parameters infos:
//
//void UPostProcessManager_X::Exit ( )
//{
//	static UFunction* pFnExit = NULL;
//
//	if ( ! pFnExit )
//		pFnExit = (UFunction*) UObject::GObjObjects()->Data[ 55032 ];
//
//	UPostProcessManager_X_execExit_Parms Exit_Parms;
//
//	this->ProcessEvent ( pFnExit, &Exit_Parms, NULL );
//};
//
//// Function ProjectX.PostProcessManager_X.Init
//// [0x00020002] 
//// Parameters infos:
//// class APlayerController_X*     NewOwner                       ( CPF_Parm )
//
//void UPostProcessManager_X::Init ( class APlayerController_X* NewOwner )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55029 ];
//
//	UPostProcessManager_X_execInit_Parms Init_Parms;
//	Init_Parms.NewOwner = NewOwner;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMetrics_X.ServiceErrors
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FServiceErrorData > Errors                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetMetrics_X::ServiceErrors ( TArray< struct FServiceErrorData > Errors )
//{
//	static UFunction* pFnServiceErrors = NULL;
//
//	if ( ! pFnServiceErrors )
//		pFnServiceErrors = (UFunction*) UObject::GObjObjects()->Data[ 58432 ];
//
//	UPsyNetMetrics_X_execServiceErrors_Parms ServiceErrors_Parms;
//	memcpy ( &ServiceErrors_Parms.Errors, &Errors, 0xC );
//
//	this->ProcessEvent ( pFnServiceErrors, &ServiceErrors_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMetrics_X.ServiceCalls
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FServiceMetricsData > Services                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetMetrics_X::ServiceCalls ( TArray< struct FServiceMetricsData > Services )
//{
//	static UFunction* pFnServiceCalls = NULL;
//
//	if ( ! pFnServiceCalls )
//		pFnServiceCalls = (UFunction*) UObject::GObjObjects()->Data[ 58431 ];
//
//	UPsyNetMetrics_X_execServiceCalls_Parms ServiceCalls_Parms;
//	memcpy ( &ServiceCalls_Parms.Services, &Services, 0xC );
//
//	this->ProcessEvent ( pFnServiceCalls, &ServiceCalls_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMetrics_X.HandleMapChange
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 M                              ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetMetrics_X::HandleMapChange ( struct FString M )
//{
//	static UFunction* pFnHandleMapChange = NULL;
//
//	if ( ! pFnHandleMapChange )
//		pFnHandleMapChange = (UFunction*) UObject::GObjObjects()->Data[ 58429 ];
//
//	UPsyNetMetrics_X_execHandleMapChange_Parms HandleMapChange_Parms;
//	memcpy ( &HandleMapChange_Parms.M, &M, 0xC );
//
//	this->ProcessEvent ( pFnHandleMapChange, &HandleMapChange_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMetrics_X.RecordServiceError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Service                        ( CPF_Parm | CPF_NeedCtorLink )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetMetrics_X::RecordServiceError ( struct FString Service, class UError* Error )
//{
//	static UFunction* pFnRecordServiceError = NULL;
//
//	if ( ! pFnRecordServiceError )
//		pFnRecordServiceError = (UFunction*) UObject::GObjObjects()->Data[ 55206 ];
//
//	UPsyNetMetrics_X_execRecordServiceError_Parms RecordServiceError_Parms;
//	memcpy ( &RecordServiceError_Parms.Service, &Service, 0xC );
//	RecordServiceError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnRecordServiceError, &RecordServiceError_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetMetrics_X.RecordServiceCall
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 Service                        ( CPF_Parm | CPF_NeedCtorLink )
//// float                          Latency                        ( CPF_Parm )
//
//void UPsyNetMetrics_X::RecordServiceCall ( struct FString Service, float Latency )
//{
//	static UFunction* pFnRecordServiceCall = NULL;
//
//	if ( ! pFnRecordServiceCall )
//		pFnRecordServiceCall = (UFunction*) UObject::GObjObjects()->Data[ 55218 ];
//
//	UPsyNetMetrics_X_execRecordServiceCall_Parms RecordServiceCall_Parms;
//	memcpy ( &RecordServiceCall_Parms.Service, &Service, 0xC );
//	RecordServiceCall_Parms.Latency = Latency;
//
//	this->ProcessEvent ( pFnRecordServiceCall, &RecordServiceCall_Parms, NULL );
//};
//
//// Function ProjectX.__RPCQueue_X__CreateBatch.__RPCQueue_X__CreateBatch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessage_X*        Response                       ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void U__RPCQueue_X__CreateBatch::__RPCQueue_X__CreateBatch ( class UPsyNetMessage_X* Response, class UError* Error )
//{
//	static UFunction* pFn__RPCQueue_X__CreateBatch = NULL;
//
//	if ( ! pFn__RPCQueue_X__CreateBatch )
//		pFn__RPCQueue_X__CreateBatch = (UFunction*) UObject::GObjObjects()->Data[ 57219 ];
//
//	U__RPCQueue_X__CreateBatch_exec__RPCQueue_X__CreateBatch_Parms __RPCQueue_X__CreateBatch_Parms;
//	__RPCQueue_X__CreateBatch_Parms.Response = Response;
//	__RPCQueue_X__CreateBatch_Parms.Error = Error;
//
//	this->ProcessEvent ( pFn__RPCQueue_X__CreateBatch, &__RPCQueue_X__CreateBatch_Parms, NULL );
//};
//
//// Function ProjectX.SendRequestTask.CreateResultError
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  InError                        ( CPF_Parm )
//
//class USendRequestTask* USendRequestTask::CreateResultError ( class UError* InError )
//{
//	static UFunction* pFnCreateResultError = NULL;
//
//	if ( ! pFnCreateResultError )
//		pFnCreateResultError = (UFunction*) UObject::GObjObjects()->Data[ 58628 ];
//
//	USendRequestTask_execCreateResultError_Parms CreateResultError_Parms;
//	CreateResultError_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnCreateResultError, &CreateResultError_Parms, NULL );
//
//	return CreateResultError_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.CreateResult
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        InResult                       ( CPF_Parm )
//
//class USendRequestTask* USendRequestTask::CreateResult ( class UPsyNetMessage_X* InResult )
//{
//	static UFunction* pFnCreateResult = NULL;
//
//	if ( ! pFnCreateResult )
//		pFnCreateResult = (UFunction*) UObject::GObjObjects()->Data[ 58624 ];
//
//	USendRequestTask_execCreateResult_Parms CreateResult_Parms;
//	CreateResult_Parms.InResult = InResult;
//
//	this->ProcessEvent ( pFnCreateResult, &CreateResult_Parms, NULL );
//
//	return CreateResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.ClearCallbacks
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void USendRequestTask::eventClearCallbacks ( )
//{
//	static UFunction* pFnClearCallbacks = NULL;
//
//	if ( ! pFnClearCallbacks )
//		pFnClearCallbacks = (UFunction*) UObject::GObjObjects()->Data[ 58623 ];
//
//	USendRequestTask_eventClearCallbacks_Parms ClearCallbacks_Parms;
//
//	this->ProcessEvent ( pFnClearCallbacks, &ClearCallbacks_Parms, NULL );
//};
//
//// Function ProjectX.SendRequestTask.SetResultWhen
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAsyncTask*              Other                          ( CPF_Parm )
//// struct FScriptDelegate         GetResultDelegate              ( CPF_Parm | CPF_NeedCtorLink )
//
//class USendRequestTask* USendRequestTask::eventSetResultWhen ( class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate )
//{
//	static UFunction* pFnSetResultWhen = NULL;
//
//	if ( ! pFnSetResultWhen )
//		pFnSetResultWhen = (UFunction*) UObject::GObjObjects()->Data[ 58618 ];
//
//	USendRequestTask_eventSetResultWhen_Parms SetResultWhen_Parms;
//	SetResultWhen_Parms.Other = Other;
//	memcpy ( &SetResultWhen_Parms.GetResultDelegate, &GetResultDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnSetResultWhen, &SetResultWhen_Parms, NULL );
//
//	return SetResultWhen_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.SetResult
//// [0x00024803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        InResult                       ( CPF_Parm )
//// class UError*                  InError                        ( CPF_OptionalParm | CPF_Parm )
//
//class USendRequestTask* USendRequestTask::eventSetResult ( class UPsyNetMessage_X* InResult, class UError* InError )
//{
//	static UFunction* pFnSetResult = NULL;
//
//	if ( ! pFnSetResult )
//		pFnSetResult = (UFunction*) UObject::GObjObjects()->Data[ 57246 ];
//
//	USendRequestTask_eventSetResult_Parms SetResult_Parms;
//	SetResult_Parms.InResult = InResult;
//	SetResult_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnSetResult, &SetResult_Parms, NULL );
//
//	return SetResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.NotifyOnResultComplete
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class USendRequestTask* USendRequestTask::NotifyOnResultComplete ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnResultComplete = NULL;
//
//	if ( ! pFnNotifyOnResultComplete )
//		pFnNotifyOnResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 55236 ];
//
//	USendRequestTask_execNotifyOnResultComplete_Parms NotifyOnResultComplete_Parms;
//	memcpy ( &NotifyOnResultComplete_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnResultComplete, &NotifyOnResultComplete_Parms, NULL );
//
//	return NotifyOnResultComplete_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.NotifyOnResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class USendRequestTask* USendRequestTask::NotifyOnResult ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnResult = NULL;
//
//	if ( ! pFnNotifyOnResult )
//		pFnNotifyOnResult = (UFunction*) UObject::GObjObjects()->Data[ 58610 ];
//
//	USendRequestTask_execNotifyOnResult_Parms NotifyOnResult_Parms;
//	memcpy ( &NotifyOnResult_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnResult, &NotifyOnResult_Parms, NULL );
//
//	return NotifyOnResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.SendRequestTaskResultDelegate
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessage_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPsyNetMessage_X* USendRequestTask::SendRequestTaskResultDelegate ( )
//{
//	static UFunction* pFnSendRequestTaskResultDelegate = NULL;
//
//	if ( ! pFnSendRequestTaskResultDelegate )
//		pFnSendRequestTaskResultDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57227 ];
//
//	USendRequestTask_execSendRequestTaskResultDelegate_Parms SendRequestTaskResultDelegate_Parms;
//
//	this->ProcessEvent ( pFnSendRequestTaskResultDelegate, &SendRequestTaskResultDelegate_Parms, NULL );
//
//	return SendRequestTaskResultDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.SendRequestTask.EventSendRequestTaskResultComplete
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessage_X*        OutResult                      ( CPF_Parm )
//// class UError*                  OutError                       ( CPF_Parm )
//
//void USendRequestTask::EventSendRequestTaskResultComplete ( class UPsyNetMessage_X* OutResult, class UError* OutError )
//{
//	static UFunction* pFnEventSendRequestTaskResultComplete = NULL;
//
//	if ( ! pFnEventSendRequestTaskResultComplete )
//		pFnEventSendRequestTaskResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57223 ];
//
//	USendRequestTask_execEventSendRequestTaskResultComplete_Parms EventSendRequestTaskResultComplete_Parms;
//	EventSendRequestTaskResultComplete_Parms.OutResult = OutResult;
//	EventSendRequestTaskResultComplete_Parms.OutError = OutError;
//
//	this->ProcessEvent ( pFnEventSendRequestTaskResultComplete, &EventSendRequestTaskResultComplete_Parms, NULL );
//};
//
//// Function ProjectX.SendRequestTask.EventSendRequestTaskResult
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetMessage_X*        OutResult                      ( CPF_Parm )
//
//void USendRequestTask::EventSendRequestTaskResult ( class UPsyNetMessage_X* OutResult )
//{
//	static UFunction* pFnEventSendRequestTaskResult = NULL;
//
//	if ( ! pFnEventSendRequestTaskResult )
//		pFnEventSendRequestTaskResult = (UFunction*) UObject::GObjObjects()->Data[ 57226 ];
//
//	USendRequestTask_execEventSendRequestTaskResult_Parms EventSendRequestTaskResult_Parms;
//	EventSendRequestTaskResult_Parms.OutResult = OutResult;
//
//	this->ProcessEvent ( pFnEventSendRequestTaskResult, &EventSendRequestTaskResult_Parms, NULL );
//};
//
//// Function ProjectX.NetMetrics_X.RpcSignatureMismatch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ServiceID                      ( CPF_Parm )
//
//void UNetMetrics_X::RpcSignatureMismatch ( int ServiceID )
//{
//	static UFunction* pFnRpcSignatureMismatch = NULL;
//
//	if ( ! pFnRpcSignatureMismatch )
//		pFnRpcSignatureMismatch = (UFunction*) UObject::GObjObjects()->Data[ 55241 ];
//
//	UNetMetrics_X_execRpcSignatureMismatch_Parms RpcSignatureMismatch_Parms;
//	RpcSignatureMismatch_Parms.ServiceID = ServiceID;
//
//	this->ProcessEvent ( pFnRpcSignatureMismatch, &RpcSignatureMismatch_Parms, NULL );
//};
//
//// Function ProjectX.NetMetrics_X.ConnectionChangedIP
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UNetMetrics_X::ConnectionChangedIP ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnConnectionChangedIP = NULL;
//
//	if ( ! pFnConnectionChangedIP )
//		pFnConnectionChangedIP = (UFunction*) UObject::GObjObjects()->Data[ 55297 ];
//
//	UNetMetrics_X_execConnectionChangedIP_Parms ConnectionChangedIP_Parms;
//	memcpy ( &ConnectionChangedIP_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnConnectionChangedIP, &ConnectionChangedIP_Parms, NULL );
//};
//
//// Function ProjectX.NetMetrics_X.PlayerNetworkError
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UNetMetrics_X::PlayerNetworkError ( struct FUniqueNetId PlayerID, struct FString Reason )
//{
//	static UFunction* pFnPlayerNetworkError = NULL;
//
//	if ( ! pFnPlayerNetworkError )
//		pFnPlayerNetworkError = (UFunction*) UObject::GObjObjects()->Data[ 55299 ];
//
//	UNetMetrics_X_execPlayerNetworkError_Parms PlayerNetworkError_Parms;
//	memcpy ( &PlayerNetworkError_Parms.PlayerID, &PlayerID, 0x48 );
//	memcpy ( &PlayerNetworkError_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnPlayerNetworkError, &PlayerNetworkError_Parms, NULL );
//};
//
//// Function ProjectX.NetMetrics_X.PlayerTimeout
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//void UNetMetrics_X::PlayerTimeout ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnPlayerTimeout = NULL;
//
//	if ( ! pFnPlayerTimeout )
//		pFnPlayerTimeout = (UFunction*) UObject::GObjObjects()->Data[ 56256 ];
//
//	UNetMetrics_X_execPlayerTimeout_Parms PlayerTimeout_Parms;
//	memcpy ( &PlayerTimeout_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnPlayerTimeout, &PlayerTimeout_Parms, NULL );
//};
//
//// Function ProjectX.NetMetrics_X.PlayerNetwork
//// [0x00080003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//// int                            PingMin                        ( CPF_Parm )
//// int                            PingMax                        ( CPF_Parm )
//// int                            PingAvg                        ( CPF_Parm )
//// int                            PktLossRateMin                 ( CPF_Parm )
//// int                            PktLossRateMax                 ( CPF_Parm )
//// int                            PktLossAvg                     ( CPF_Parm )
//// int                            InBpsMax                       ( CPF_Parm )
//// int                            InBpsAvg                       ( CPF_Parm )
//// int                            OutBpsMax                      ( CPF_Parm )
//// int                            OutBpsAvg                      ( CPF_Parm )
//
//void UNetMetrics_X::PlayerNetwork ( struct FUniqueNetId PlayerID, int PingMin, int PingMax, int PingAvg, int PktLossRateMin, int PktLossRateMax, int PktLossAvg, int InBpsMax, int InBpsAvg, int OutBpsMax, int OutBpsAvg )
//{
//	static UFunction* pFnPlayerNetwork = NULL;
//
//	if ( ! pFnPlayerNetwork )
//		pFnPlayerNetwork = (UFunction*) UObject::GObjObjects()->Data[ 56258 ];
//
//	UNetMetrics_X_execPlayerNetwork_Parms PlayerNetwork_Parms;
//	memcpy ( &PlayerNetwork_Parms.PlayerID, &PlayerID, 0x48 );
//	PlayerNetwork_Parms.PingMin = PingMin;
//	PlayerNetwork_Parms.PingMax = PingMax;
//	PlayerNetwork_Parms.PingAvg = PingAvg;
//	PlayerNetwork_Parms.PktLossRateMin = PktLossRateMin;
//	PlayerNetwork_Parms.PktLossRateMax = PktLossRateMax;
//	PlayerNetwork_Parms.PktLossAvg = PktLossAvg;
//	PlayerNetwork_Parms.InBpsMax = InBpsMax;
//	PlayerNetwork_Parms.InBpsAvg = InBpsAvg;
//	PlayerNetwork_Parms.OutBpsMax = OutBpsMax;
//	PlayerNetwork_Parms.OutBpsAvg = OutBpsAvg;
//
//	this->ProcessEvent ( pFnPlayerNetwork, &PlayerNetwork_Parms, NULL );
//};
//
//// Function ProjectX.NetMetrics_X.RecordPlayerNetwork
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class APlayerController*       PC                             ( CPF_Parm )
//
//void UNetMetrics_X::RecordPlayerNetwork ( class APlayerController* PC )
//{
//	static UFunction* pFnRecordPlayerNetwork = NULL;
//
//	if ( ! pFnRecordPlayerNetwork )
//		pFnRecordPlayerNetwork = (UFunction*) UObject::GObjObjects()->Data[ 56251 ];
//
//	UNetMetrics_X_execRecordPlayerNetwork_Parms RecordPlayerNetwork_Parms;
//	RecordPlayerNetwork_Parms.PC = PC;
//
//	this->ProcessEvent ( pFnRecordPlayerNetwork, &RecordPlayerNetwork_Parms, NULL );
//};
//
//// Function ProjectX.RPC_ReportCheater_X.SetReason
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportCheater_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InReason                       ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
//
//class URPC_ReportCheater_X* URPC_ReportCheater_X::SetReason ( struct FString InReason )
//{
//	static UFunction* pFnSetReason = NULL;
//
//	if ( ! pFnSetReason )
//		pFnSetReason = (UFunction*) UObject::GObjObjects()->Data[ 55273 ];
//
//	URPC_ReportCheater_X_execSetReason_Parms SetReason_Parms;
//	memcpy ( &SetReason_Parms.InReason, &InReason, 0xC );
//
//	this->ProcessEvent ( pFnSetReason, &SetReason_Parms, NULL );
//
//	return SetReason_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportCheater_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportCheater_X*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_ReportCheater_X* URPC_ReportCheater_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 55271 ];
//
//	URPC_ReportCheater_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.FinalizeServiceTask
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//// class UExecuteServiceTask*     Task                           ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetServiceProvider_X::FinalizeServiceTask ( class UPsyNetClientService_X* Service, class UExecuteServiceTask* Task, class UError* Error )
//{
//	static UFunction* pFnFinalizeServiceTask = NULL;
//
//	if ( ! pFnFinalizeServiceTask )
//		pFnFinalizeServiceTask = (UFunction*) UObject::GObjObjects()->Data[ 57213 ];
//
//	UPsyNetServiceProvider_X_execFinalizeServiceTask_Parms FinalizeServiceTask_Parms;
//	FinalizeServiceTask_Parms.Service = Service;
//	FinalizeServiceTask_Parms.Task = Task;
//	FinalizeServiceTask_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnFinalizeServiceTask, &FinalizeServiceTask_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.PrintServiceResult
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ServiceName                    ( CPF_Parm | CPF_NeedCtorLink )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetServiceProvider_X::PrintServiceResult ( struct FString ServiceName, class UError* Error )
//{
//	static UFunction* pFnPrintServiceResult = NULL;
//
//	if ( ! pFnPrintServiceResult )
//		pFnPrintServiceResult = (UFunction*) UObject::GObjObjects()->Data[ 57216 ];
//
//	UPsyNetServiceProvider_X_execPrintServiceResult_Parms PrintServiceResult_Parms;
//	memcpy ( &PrintServiceResult_Parms.ServiceName, &ServiceName, 0xC );
//	PrintServiceResult_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnPrintServiceResult, &PrintServiceResult_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.ExecuteServiceMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UExecuteServiceTask* UPsyNetServiceProvider_X::ExecuteServiceMessage ( class UPsyNetConnection_X* Connection, class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnExecuteServiceMessage = NULL;
//
//	if ( ! pFnExecuteServiceMessage )
//		pFnExecuteServiceMessage = (UFunction*) UObject::GObjObjects()->Data[ 58535 ];
//
//	UPsyNetServiceProvider_X_execExecuteServiceMessage_Parms ExecuteServiceMessage_Parms;
//	ExecuteServiceMessage_Parms.Connection = Connection;
//	ExecuteServiceMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnExecuteServiceMessage, &ExecuteServiceMessage_Parms, NULL );
//
//	return ExecuteServiceMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.IsServiceRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//bool UPsyNetServiceProvider_X::IsServiceRequest ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnIsServiceRequest = NULL;
//
//	if ( ! pFnIsServiceRequest )
//		pFnIsServiceRequest = (UFunction*) UObject::GObjObjects()->Data[ 58255 ];
//
//	UPsyNetServiceProvider_X_execIsServiceRequest_Parms IsServiceRequest_Parms;
//	IsServiceRequest_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnIsServiceRequest, &IsServiceRequest_Parms, NULL );
//
//	return IsServiceRequest_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.ExecuteNotification
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UExecuteServiceTask* UPsyNetServiceProvider_X::ExecuteNotification ( class UPsyNetConnection_X* Connection, class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnExecuteNotification = NULL;
//
//	if ( ! pFnExecuteNotification )
//		pFnExecuteNotification = (UFunction*) UObject::GObjObjects()->Data[ 58259 ];
//
//	UPsyNetServiceProvider_X_execExecuteNotification_Parms ExecuteNotification_Parms;
//	ExecuteNotification_Parms.Connection = Connection;
//	ExecuteNotification_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnExecuteNotification, &ExecuteNotification_Parms, NULL );
//
//	return ExecuteNotification_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.SetResponse
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//// class UPsyNetMessage_X*        Response                       ( CPF_Parm )
//
//void UPsyNetServiceProvider_X::SetResponse ( class UPsyNetClientService_X* Service, class UError* Error, class UPsyNetMessage_X* Response )
//{
//	static UFunction* pFnSetResponse = NULL;
//
//	if ( ! pFnSetResponse )
//		pFnSetResponse = (UFunction*) UObject::GObjObjects()->Data[ 57204 ];
//
//	UPsyNetServiceProvider_X_execSetResponse_Parms SetResponse_Parms;
//	SetResponse_Parms.Service = Service;
//	SetResponse_Parms.Error = Error;
//	SetResponse_Parms.Response = Response;
//
//	this->ProcessEvent ( pFnSetResponse, &SetResponse_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.ExecuteRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetConnection_X*     Connection                     ( CPF_Parm )
//// class UPsyNetMessage_X*        Request                        ( CPF_Parm )
//// class UPsyNetMessage_X*        Response                       ( CPF_Parm )
//
//class UExecuteServiceTask* UPsyNetServiceProvider_X::ExecuteRequest ( class UPsyNetConnection_X* Connection, class UPsyNetMessage_X* Request, class UPsyNetMessage_X* Response )
//{
//	static UFunction* pFnExecuteRequest = NULL;
//
//	if ( ! pFnExecuteRequest )
//		pFnExecuteRequest = (UFunction*) UObject::GObjObjects()->Data[ 58257 ];
//
//	UPsyNetServiceProvider_X_execExecuteRequest_Parms ExecuteRequest_Parms;
//	ExecuteRequest_Parms.Connection = Connection;
//	ExecuteRequest_Parms.Request = Request;
//	ExecuteRequest_Parms.Response = Response;
//
//	this->ProcessEvent ( pFnExecuteRequest, &ExecuteRequest_Parms, NULL );
//
//	return ExecuteRequest_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.HandleChannelClosed
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetChannel_X*        Channel                        ( CPF_Parm )
//
//void UPsyNetServiceProvider_X::HandleChannelClosed ( class UPsyNetChannel_X* Channel )
//{
//	static UFunction* pFnHandleChannelClosed = NULL;
//
//	if ( ! pFnHandleChannelClosed )
//		pFnHandleChannelClosed = (UFunction*) UObject::GObjObjects()->Data[ 58528 ];
//
//	UPsyNetServiceProvider_X_execHandleChannelClosed_Parms HandleChannelClosed_Parms;
//	HandleChannelClosed_Parms.Channel = Channel;
//
//	this->ProcessEvent ( pFnHandleChannelClosed, &HandleChannelClosed_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.CreateChannel
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetChannel_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ChannelName                    ( CPF_Parm | CPF_NeedCtorLink )
//
//class UPsyNetChannel_X* UPsyNetServiceProvider_X::CreateChannel ( struct FString ChannelName )
//{
//	static UFunction* pFnCreateChannel = NULL;
//
//	if ( ! pFnCreateChannel )
//		pFnCreateChannel = (UFunction*) UObject::GObjObjects()->Data[ 57892 ];
//
//	UPsyNetServiceProvider_X_execCreateChannel_Parms CreateChannel_Parms;
//	memcpy ( &CreateChannel_Parms.ChannelName, &ChannelName, 0xC );
//
//	this->ProcessEvent ( pFnCreateChannel, &CreateChannel_Parms, NULL );
//
//	return CreateChannel_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.Unsubscribe
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetServiceProvider_X::Unsubscribe ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnUnsubscribe = NULL;
//
//	if ( ! pFnUnsubscribe )
//		pFnUnsubscribe = (UFunction*) UObject::GObjObjects()->Data[ 57870 ];
//
//	UPsyNetServiceProvider_X_execUnsubscribe_Parms Unsubscribe_Parms;
//	memcpy ( &Unsubscribe_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnUnsubscribe, &Unsubscribe_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.Subscribe
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UClass*                  ServiceClass                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetServiceProvider_X::Subscribe ( class UClass* ServiceClass, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSubscribe = NULL;
//
//	if ( ! pFnSubscribe )
//		pFnSubscribe = (UFunction*) UObject::GObjObjects()->Data[ 57872 ];
//
//	UPsyNetServiceProvider_X_execSubscribe_Parms Subscribe_Parms;
//	Subscribe_Parms.ServiceClass = ServiceClass;
//	memcpy ( &Subscribe_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSubscribe, &Subscribe_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPsyNetServiceProvider_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58521 ];
//
//	UPsyNetServiceProvider_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetServiceProvider_X.EventServiceExecuted
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetServiceProvider_X* ServiceProvider                ( CPF_Parm )
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void UPsyNetServiceProvider_X::EventServiceExecuted ( class UPsyNetServiceProvider_X* ServiceProvider, class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnEventServiceExecuted = NULL;
//
//	if ( ! pFnEventServiceExecuted )
//		pFnEventServiceExecuted = (UFunction*) UObject::GObjObjects()->Data[ 58516 ];
//
//	UPsyNetServiceProvider_X_execEventServiceExecuted_Parms EventServiceExecuted_Parms;
//	EventServiceExecuted_Parms.ServiceProvider = ServiceProvider;
//	EventServiceExecuted_Parms.Service = Service;
//
//	this->ProcessEvent ( pFnEventServiceExecuted, &EventServiceExecuted_Parms, NULL );
//};
//
//// Function ProjectX.__RPC_X__CreateTask.__RPC_X__CreateTask
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Err                            ( CPF_Parm )
//
//void U__RPC_X__CreateTask::__RPC_X__CreateTask ( class UError* Err )
//{
//	static UFunction* pFn__RPC_X__CreateTask = NULL;
//
//	if ( ! pFn__RPC_X__CreateTask )
//		pFn__RPC_X__CreateTask = (UFunction*) UObject::GObjObjects()->Data[ 56839 ];
//
//	U__RPC_X__CreateTask_exec__RPC_X__CreateTask_Parms __RPC_X__CreateTask_Parms;
//	__RPC_X__CreateTask_Parms.Err = Err;
//
//	this->ProcessEvent ( pFn__RPC_X__CreateTask, &__RPC_X__CreateTask_Parms, NULL );
//};
//
//// Function ProjectX.RPC_Test_X.Check
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  Assertion                      ( CPF_Parm )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool URPC_Test_X::Check ( unsigned long Assertion, struct FString Message )
//{
//	static UFunction* pFnCheck = NULL;
//
//	if ( ! pFnCheck )
//		pFnCheck = (UFunction*) UObject::GObjObjects()->Data[ 55486 ];
//
//	URPC_Test_X_execCheck_Parms Check_Parms;
//	Check_Parms.Assertion = Assertion;
//	memcpy ( &Check_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnCheck, &Check_Parms, NULL );
//
//	return Check_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.CheckParamArraysMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FRPCTestParam > A                              ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FRPCTestParam > B                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool URPC_Test_X::CheckParamArraysMatch ( TArray< struct FRPCTestParam > A, TArray< struct FRPCTestParam > B, struct FString Message )
//{
//	static UFunction* pFnCheckParamArraysMatch = NULL;
//
//	if ( ! pFnCheckParamArraysMatch )
//		pFnCheckParamArraysMatch = (UFunction*) UObject::GObjObjects()->Data[ 55513 ];
//
//	URPC_Test_X_execCheckParamArraysMatch_Parms CheckParamArraysMatch_Parms;
//	memcpy ( &CheckParamArraysMatch_Parms.A, &A, 0xC );
//	memcpy ( &CheckParamArraysMatch_Parms.B, &B, 0xC );
//	memcpy ( &CheckParamArraysMatch_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnCheckParamArraysMatch, &CheckParamArraysMatch_Parms, NULL );
//
//	return CheckParamArraysMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.CheckItemArraysMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FRPCTestItem >  A                              ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FRPCTestItem >  B                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool URPC_Test_X::CheckItemArraysMatch ( TArray< struct FRPCTestItem > A, TArray< struct FRPCTestItem > B, struct FString Message )
//{
//	static UFunction* pFnCheckItemArraysMatch = NULL;
//
//	if ( ! pFnCheckItemArraysMatch )
//		pFnCheckItemArraysMatch = (UFunction*) UObject::GObjObjects()->Data[ 55505 ];
//
//	URPC_Test_X_execCheckItemArraysMatch_Parms CheckItemArraysMatch_Parms;
//	memcpy ( &CheckItemArraysMatch_Parms.A, &A, 0xC );
//	memcpy ( &CheckItemArraysMatch_Parms.B, &B, 0xC );
//	memcpy ( &CheckItemArraysMatch_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnCheckItemArraysMatch, &CheckItemArraysMatch_Parms, NULL );
//
//	return CheckItemArraysMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.CheckStringArraysMatch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FString >       A                              ( CPF_Parm | CPF_NeedCtorLink )
//// TArray< struct FString >       B                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool URPC_Test_X::CheckStringArraysMatch ( TArray< struct FString > A, TArray< struct FString > B, struct FString Message )
//{
//	static UFunction* pFnCheckStringArraysMatch = NULL;
//
//	if ( ! pFnCheckStringArraysMatch )
//		pFnCheckStringArraysMatch = (UFunction*) UObject::GObjObjects()->Data[ 55497 ];
//
//	URPC_Test_X_execCheckStringArraysMatch_Parms CheckStringArraysMatch_Parms;
//	memcpy ( &CheckStringArraysMatch_Parms.A, &A, 0xC );
//	memcpy ( &CheckStringArraysMatch_Parms.B, &B, 0xC );
//	memcpy ( &CheckStringArraysMatch_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnCheckStringArraysMatch, &CheckStringArraysMatch_Parms, NULL );
//
//	return CheckStringArraysMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.CheckItemsMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FRPCTestItem            A                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FRPCTestItem            B                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool URPC_Test_X::CheckItemsMatch ( struct FRPCTestItem A, struct FRPCTestItem B, struct FString Message )
//{
//	static UFunction* pFnCheckItemsMatch = NULL;
//
//	if ( ! pFnCheckItemsMatch )
//		pFnCheckItemsMatch = (UFunction*) UObject::GObjObjects()->Data[ 55492 ];
//
//	URPC_Test_X_execCheckItemsMatch_Parms CheckItemsMatch_Parms;
//	memcpy ( &CheckItemsMatch_Parms.A, &A, 0x6C );
//	memcpy ( &CheckItemsMatch_Parms.B, &B, 0x6C );
//	memcpy ( &CheckItemsMatch_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnCheckItemsMatch, &CheckItemsMatch_Parms, NULL );
//
//	return CheckItemsMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.CheckParamsMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FRPCTestParam           A                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FRPCTestParam           B                              ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//bool URPC_Test_X::CheckParamsMatch ( struct FRPCTestParam A, struct FRPCTestParam B, struct FString Message )
//{
//	static UFunction* pFnCheckParamsMatch = NULL;
//
//	if ( ! pFnCheckParamsMatch )
//		pFnCheckParamsMatch = (UFunction*) UObject::GObjObjects()->Data[ 55487 ];
//
//	URPC_Test_X_execCheckParamsMatch_Parms CheckParamsMatch_Parms;
//	memcpy ( &CheckParamsMatch_Parms.A, &A, 0x78 );
//	memcpy ( &CheckParamsMatch_Parms.B, &B, 0x78 );
//	memcpy ( &CheckParamsMatch_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnCheckParamsMatch, &CheckParamsMatch_Parms, NULL );
//
//	return CheckParamsMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.ValidateResults
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool URPC_Test_X::ValidateResults ( )
//{
//	static UFunction* pFnValidateResults = NULL;
//
//	if ( ! pFnValidateResults )
//		pFnValidateResults = (UFunction*) UObject::GObjObjects()->Data[ 55484 ];
//
//	URPC_Test_X_execValidateResults_Parms ValidateResults_Parms;
//
//	this->ProcessEvent ( pFnValidateResults, &ValidateResults_Parms, NULL );
//
//	return ValidateResults_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.OnComplete
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void URPC_Test_X::eventOnComplete ( )
//{
//	static UFunction* pFnOnComplete = NULL;
//
//	if ( ! pFnOnComplete )
//		pFnOnComplete = (UFunction*) UObject::GObjObjects()->Data[ 55483 ];
//
//	URPC_Test_X_eventOnComplete_Parms OnComplete_Parms;
//
//	this->ProcessEvent ( pFnOnComplete, &OnComplete_Parms, NULL );
//};
//
//// Function ProjectX.RPC_Test_X.GetRandomTestParams
//// [0x00020002] 
//// Parameters infos:
//// TArray< struct FRPCTestParam > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FRPCTestParam > URPC_Test_X::GetRandomTestParams ( )
//{
//	static UFunction* pFnGetRandomTestParams = NULL;
//
//	if ( ! pFnGetRandomTestParams )
//		pFnGetRandomTestParams = (UFunction*) UObject::GObjObjects()->Data[ 55477 ];
//
//	URPC_Test_X_execGetRandomTestParams_Parms GetRandomTestParams_Parms;
//
//	this->ProcessEvent ( pFnGetRandomTestParams, &GetRandomTestParams_Parms, NULL );
//
//	return GetRandomTestParams_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.GetRandomTestParam
//// [0x00820002] 
//// Parameters infos:
//// struct FRPCTestParam           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FRPCTestParam URPC_Test_X::GetRandomTestParam ( )
//{
//	static UFunction* pFnGetRandomTestParam = NULL;
//
//	if ( ! pFnGetRandomTestParam )
//		pFnGetRandomTestParam = (UFunction*) UObject::GObjObjects()->Data[ 55474 ];
//
//	URPC_Test_X_execGetRandomTestParam_Parms GetRandomTestParam_Parms;
//
//	this->ProcessEvent ( pFnGetRandomTestParam, &GetRandomTestParam_Parms, NULL );
//
//	return GetRandomTestParam_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.GetRandomTestItems
//// [0x00020002] 
//// Parameters infos:
//// TArray< struct FRPCTestItem >  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FRPCTestItem > URPC_Test_X::GetRandomTestItems ( )
//{
//	static UFunction* pFnGetRandomTestItems = NULL;
//
//	if ( ! pFnGetRandomTestItems )
//		pFnGetRandomTestItems = (UFunction*) UObject::GObjObjects()->Data[ 55468 ];
//
//	URPC_Test_X_execGetRandomTestItems_Parms GetRandomTestItems_Parms;
//
//	this->ProcessEvent ( pFnGetRandomTestItems, &GetRandomTestItems_Parms, NULL );
//
//	return GetRandomTestItems_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.GetRandomTestItem
//// [0x00820002] 
//// Parameters infos:
//// struct FRPCTestItem            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FRPCTestItem URPC_Test_X::GetRandomTestItem ( )
//{
//	static UFunction* pFnGetRandomTestItem = NULL;
//
//	if ( ! pFnGetRandomTestItem )
//		pFnGetRandomTestItem = (UFunction*) UObject::GObjObjects()->Data[ 55463 ];
//
//	URPC_Test_X_execGetRandomTestItem_Parms GetRandomTestItem_Parms;
//
//	this->ProcessEvent ( pFnGetRandomTestItem, &GetRandomTestItem_Parms, NULL );
//
//	return GetRandomTestItem_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_Test_X.Init
//// [0x00020002] 
//// Parameters infos:
//
//void URPC_Test_X::Init ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55458 ];
//
//	URPC_Test_X_execInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.TestsHelper_X.GetRandomUppercaseString
//// [0x00022002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UTestsHelper_X::GetRandomUppercaseString ( )
//{
//	static UFunction* pFnGetRandomUppercaseString = NULL;
//
//	if ( ! pFnGetRandomUppercaseString )
//		pFnGetRandomUppercaseString = (UFunction*) UObject::GObjObjects()->Data[ 55696 ];
//
//	UTestsHelper_X_execGetRandomUppercaseString_Parms GetRandomUppercaseString_Parms;
//
//	this->ProcessEvent ( pFnGetRandomUppercaseString, &GetRandomUppercaseString_Parms, NULL );
//
//	return GetRandomUppercaseString_Parms.ReturnValue;
//};
//
//// Function ProjectX.TestsHelper_X.GetRandomStringArray
//// [0x00022002] 
//// Parameters infos:
//// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< struct FString > UTestsHelper_X::GetRandomStringArray ( )
//{
//	static UFunction* pFnGetRandomStringArray = NULL;
//
//	if ( ! pFnGetRandomStringArray )
//		pFnGetRandomStringArray = (UFunction*) UObject::GObjObjects()->Data[ 55466 ];
//
//	UTestsHelper_X_execGetRandomStringArray_Parms GetRandomStringArray_Parms;
//
//	this->ProcessEvent ( pFnGetRandomStringArray, &GetRandomStringArray_Parms, NULL );
//
//	return GetRandomStringArray_Parms.ReturnValue;
//};
//
//// Function ProjectX.TestsHelper_X.GetRandomString
//// [0x00022002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UTestsHelper_X::GetRandomString ( )
//{
//	static UFunction* pFnGetRandomString = NULL;
//
//	if ( ! pFnGetRandomString )
//		pFnGetRandomString = (UFunction*) UObject::GObjObjects()->Data[ 55461 ];
//
//	UTestsHelper_X_execGetRandomString_Parms GetRandomString_Parms;
//
//	this->ProcessEvent ( pFnGetRandomString, &GetRandomString_Parms, NULL );
//
//	return GetRandomString_Parms.ReturnValue;
//};
//
//// Function ProjectX.SeqAct_SpawnArchetype_X.Init
//// [0x00880002] 
//// Parameters infos:
//// class AActor*                  SpawnedActor                   ( CPF_Parm )
//
//void USeqAct_SpawnArchetype_X::Init ( class AActor* SpawnedActor )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55565 ];
//
//	USeqAct_SpawnArchetype_X_execInit_Parms Init_Parms;
//	Init_Parms.SpawnedActor = SpawnedActor;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.SeqAct_SpawnArchetype_X.Activated
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void USeqAct_SpawnArchetype_X::eventActivated ( )
//{
//	static UFunction* pFnActivated = NULL;
//
//	if ( ! pFnActivated )
//		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 55561 ];
//
//	USeqAct_SpawnArchetype_X_eventActivated_Parms Activated_Parms;
//
//	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
//};
//
//// Function ProjectX.RPC_TestPlayerID_X.OnSuccess
//// [0x00080002] 
//// Parameters infos:
//
//void URPC_TestPlayerID_X::OnSuccess ( )
//{
//	static UFunction* pFnOnSuccess = NULL;
//
//	if ( ! pFnOnSuccess )
//		pFnOnSuccess = (UFunction*) UObject::GObjObjects()->Data[ 55807 ];
//
//	URPC_TestPlayerID_X_execOnSuccess_Parms OnSuccess_Parms;
//
//	this->ProcessEvent ( pFnOnSuccess, &OnSuccess_Parms, NULL );
//};
//
//// Function ProjectX.RPC_TestPlayerID_X.Init
//// [0x00020002] 
//// Parameters infos:
//
//void URPC_TestPlayerID_X::Init ( )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 55806 ];
//
//	URPC_TestPlayerID_X_execInit_Parms Init_Parms;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.RPC_RecordMatch_X.SetMatchName
//// [0x00020002] 
//// Parameters infos:
//// class URPC_RecordMatch_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InName                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_RecordMatch_X* URPC_RecordMatch_X::SetMatchName ( struct FString InName )
//{
//	static UFunction* pFnSetMatchName = NULL;
//
//	if ( ! pFnSetMatchName )
//		pFnSetMatchName = (UFunction*) UObject::GObjObjects()->Data[ 55909 ];
//
//	URPC_RecordMatch_X_execSetMatchName_Parms SetMatchName_Parms;
//	memcpy ( &SetMatchName_Parms.InName, &InName, 0xC );
//
//	this->ProcessEvent ( pFnSetMatchName, &SetMatchName_Parms, NULL );
//
//	return SetMatchName_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_RecordMatch_X.SetMatch
//// [0x00020002] 
//// Parameters infos:
//// class URPC_RecordMatch_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UMatchRecorder_X*        InRecorder                     ( CPF_Parm )
//
//class URPC_RecordMatch_X* URPC_RecordMatch_X::SetMatch ( class UMatchRecorder_X* InRecorder )
//{
//	static UFunction* pFnSetMatch = NULL;
//
//	if ( ! pFnSetMatch )
//		pFnSetMatch = (UFunction*) UObject::GObjObjects()->Data[ 55906 ];
//
//	URPC_RecordMatch_X_execSetMatch_Parms SetMatch_Parms;
//	SetMatch_Parms.InRecorder = InRecorder;
//
//	this->ProcessEvent ( pFnSetMatch, &SetMatch_Parms, NULL );
//
//	return SetMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_RecordMatch_X.SetMatchGUID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_RecordMatch_X*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InGuid                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_RecordMatch_X* URPC_RecordMatch_X::SetMatchGUID ( struct FString InGuid )
//{
//	static UFunction* pFnSetMatchGUID = NULL;
//
//	if ( ! pFnSetMatchGUID )
//		pFnSetMatchGUID = (UFunction*) UObject::GObjObjects()->Data[ 55903 ];
//
//	URPC_RecordMatch_X_execSetMatchGUID_Parms SetMatchGUID_Parms;
//	memcpy ( &SetMatchGUID_Parms.InGuid, &InGuid, 0xC );
//
//	this->ProcessEvent ( pFnSetMatchGUID, &SetMatchGUID_Parms, NULL );
//
//	return SetMatchGUID_Parms.ReturnValue;
//};
//
//// Function ProjectX.LocalCacheTests_X.HandleLocalCacheImported
//// [0x00042003] ( FUNC_Final )
//// Parameters infos:
//// class ULocalCache_X*           Cache                          ( CPF_Parm )
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void ULocalCacheTests_X::HandleLocalCacheImported ( class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error )
//{
//	static UFunction* pFnHandleLocalCacheImported = NULL;
//
//	if ( ! pFnHandleLocalCacheImported )
//		pFnHandleLocalCacheImported = (UFunction*) UObject::GObjObjects()->Data[ 56244 ];
//
//	ULocalCacheTests_X_execHandleLocalCacheImported_Parms HandleLocalCacheImported_Parms;
//	HandleLocalCacheImported_Parms.Cache = Cache;
//	HandleLocalCacheImported_Parms.CacheObject = CacheObject;
//	HandleLocalCacheImported_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleLocalCacheImported, &HandleLocalCacheImported_Parms, NULL );
//};
//
//// Function ProjectX.LocalCacheTests_X.ImportTest
//// [0x00022002] 
//// Parameters infos:
//
//void ULocalCacheTests_X::ImportTest ( )
//{
//	static UFunction* pFnImportTest = NULL;
//
//	if ( ! pFnImportTest )
//		pFnImportTest = (UFunction*) UObject::GObjObjects()->Data[ 56243 ];
//
//	ULocalCacheTests_X_execImportTest_Parms ImportTest_Parms;
//
//	this->ProcessEvent ( pFnImportTest, &ImportTest_Parms, NULL );
//};
//
//// Function ProjectX.LocalCacheTests_X.HandleLocalCacheExported
//// [0x00042003] ( FUNC_Final )
//// Parameters infos:
//// class ULocalCache_X*           Cache                          ( CPF_Parm )
//// class UObject*                 CacheObject                    ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void ULocalCacheTests_X::HandleLocalCacheExported ( class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error )
//{
//	static UFunction* pFnHandleLocalCacheExported = NULL;
//
//	if ( ! pFnHandleLocalCacheExported )
//		pFnHandleLocalCacheExported = (UFunction*) UObject::GObjObjects()->Data[ 56239 ];
//
//	ULocalCacheTests_X_execHandleLocalCacheExported_Parms HandleLocalCacheExported_Parms;
//	HandleLocalCacheExported_Parms.Cache = Cache;
//	HandleLocalCacheExported_Parms.CacheObject = CacheObject;
//	HandleLocalCacheExported_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleLocalCacheExported, &HandleLocalCacheExported_Parms, NULL );
//};
//
//// Function ProjectX.LocalCacheTests_X.ToCacheAndBack
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// int                            RandomSeed                     ( CPF_Parm )
//
//void ULocalCacheTests_X::ToCacheAndBack ( int RandomSeed )
//{
//	static UFunction* pFnToCacheAndBack = NULL;
//
//	if ( ! pFnToCacheAndBack )
//		pFnToCacheAndBack = (UFunction*) UObject::GObjObjects()->Data[ 56237 ];
//
//	ULocalCacheTests_X_execToCacheAndBack_Parms ToCacheAndBack_Parms;
//	ToCacheAndBack_Parms.RandomSeed = RandomSeed;
//
//	this->ProcessEvent ( pFnToCacheAndBack, &ToCacheAndBack_Parms, NULL );
//};
//
//// Function ProjectX.SkelControlBlendTargetComponent_X.SetControlActiveInComponent
//// [0x00080002] 
//// Parameters infos:
//// class USkeletalMeshComponent*  SKC                            ( CPF_Parm | CPF_EditInline )
//// unsigned long                  bActive                        ( CPF_Parm )
//
//void USkelControlBlendTargetComponent_X::SetControlActiveInComponent ( class USkeletalMeshComponent* SKC, unsigned long bActive )
//{
//	static UFunction* pFnSetControlActiveInComponent = NULL;
//
//	if ( ! pFnSetControlActiveInComponent )
//		pFnSetControlActiveInComponent = (UFunction*) UObject::GObjObjects()->Data[ 56297 ];
//
//	USkelControlBlendTargetComponent_X_execSetControlActiveInComponent_Parms SetControlActiveInComponent_Parms;
//	SetControlActiveInComponent_Parms.SKC = SKC;
//	SetControlActiveInComponent_Parms.bActive = bActive;
//
//	this->ProcessEvent ( pFnSetControlActiveInComponent, &SetControlActiveInComponent_Parms, NULL );
//};
//
//// Function ProjectX.SkelControlBlendTargetComponent_X.SetControlActive
//// [0x00080002] 
//// Parameters infos:
//// unsigned long                  bActive                        ( CPF_Parm )
//
//void USkelControlBlendTargetComponent_X::SetControlActive ( unsigned long bActive )
//{
//	static UFunction* pFnSetControlActive = NULL;
//
//	if ( ! pFnSetControlActive )
//		pFnSetControlActive = (UFunction*) UObject::GObjObjects()->Data[ 56293 ];
//
//	USkelControlBlendTargetComponent_X_execSetControlActive_Parms SetControlActive_Parms;
//	SetControlActive_Parms.bActive = bActive;
//
//	this->ProcessEvent ( pFnSetControlActive, &SetControlActive_Parms, NULL );
//};
//
//// Function ProjectX.SkelControlBlendTargetComponent_X.Detached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void USkelControlBlendTargetComponent_X::eventDetached ( )
//{
//	static UFunction* pFnDetached = NULL;
//
//	if ( ! pFnDetached )
//		pFnDetached = (UFunction*) UObject::GObjObjects()->Data[ 56292 ];
//
//	USkelControlBlendTargetComponent_X_eventDetached_Parms Detached_Parms;
//
//	this->ProcessEvent ( pFnDetached, &Detached_Parms, NULL );
//};
//
//// Function ProjectX.SkelControlBlendTargetComponent_X.Attached
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void USkelControlBlendTargetComponent_X::eventAttached ( )
//{
//	static UFunction* pFnAttached = NULL;
//
//	if ( ! pFnAttached )
//		pFnAttached = (UFunction*) UObject::GObjObjects()->Data[ 56291 ];
//
//	USkelControlBlendTargetComponent_X_eventAttached_Parms Attached_Parms;
//
//	this->ProcessEvent ( pFnAttached, &Attached_Parms, NULL );
//};
//
//// Function ProjectX.AprilConfig_X.IsActive
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UAprilConfig_X::IsActive ( )
//{
//	static UFunction* pFnIsActive = NULL;
//
//	if ( ! pFnIsActive )
//		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 56346 ];
//
//	UAprilConfig_X_execIsActive_Parms IsActive_Parms;
//
//	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );
//
//	return IsActive_Parms.ReturnValue;
//};
//
//// Function ProjectX.AprilConfig_X.Apply
//// [0x00020002] 
//// Parameters infos:
//
//void UAprilConfig_X::Apply ( )
//{
//	static UFunction* pFnApply = NULL;
//
//	if ( ! pFnApply )
//		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 56345 ];
//
//	UAprilConfig_X_execApply_Parms Apply_Parms;
//
//	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
//};
//
//// Function ProjectX.ArrayFuncs_X.ShuffleStringArray
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FString >       ArrayToShuffle                 ( CPF_Parm | CPF_NeedCtorLink )
//
//TArray< struct FString > UArrayFuncs_X::ShuffleStringArray ( TArray< struct FString > ArrayToShuffle )
//{
//	static UFunction* pFnShuffleStringArray = NULL;
//
//	if ( ! pFnShuffleStringArray )
//		pFnShuffleStringArray = (UFunction*) UObject::GObjObjects()->Data[ 56351 ];
//
//	UArrayFuncs_X_execShuffleStringArray_Parms ShuffleStringArray_Parms;
//	memcpy ( &ShuffleStringArray_Parms.ArrayToShuffle, &ArrayToShuffle, 0xC );
//
//	this->ProcessEvent ( pFnShuffleStringArray, &ShuffleStringArray_Parms, NULL );
//
//	return ShuffleStringArray_Parms.ReturnValue;
//};
//
//// Function ProjectX.CameraState_CamActorCinematic_X.UpdatePOV
//// [0x00420002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//// struct FCameraOrientation      OutPOV                         ( CPF_Parm | CPF_OutParm )
//
//void UCameraState_CamActorCinematic_X::UpdatePOV ( float DeltaTime, struct FCameraOrientation* OutPOV )
//{
//	static UFunction* pFnUpdatePOV = NULL;
//
//	if ( ! pFnUpdatePOV )
//		pFnUpdatePOV = (UFunction*) UObject::GObjObjects()->Data[ 56362 ];
//
//	UCameraState_CamActorCinematic_X_execUpdatePOV_Parms UpdatePOV_Parms;
//	UpdatePOV_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnUpdatePOV, &UpdatePOV_Parms, NULL );
//
//	if ( OutPOV )
//		memcpy ( OutPOV, &UpdatePOV_Parms.OutPOV, 0x2C );
//};
//
//// Function ProjectX.CameraState_CamActorCinematic_X.EndCameraState
//// [0x00020002] 
//// Parameters infos:
//
//void UCameraState_CamActorCinematic_X::EndCameraState ( )
//{
//	static UFunction* pFnEndCameraState = NULL;
//
//	if ( ! pFnEndCameraState )
//		pFnEndCameraState = (UFunction*) UObject::GObjObjects()->Data[ 56361 ];
//
//	UCameraState_CamActorCinematic_X_execEndCameraState_Parms EndCameraState_Parms;
//
//	this->ProcessEvent ( pFnEndCameraState, &EndCameraState_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservationService_X.HandleReservation
//// [0x00042003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_CheckReservation_X* RPC                            ( CPF_Parm )
//// struct FScriptDelegate         FoundCallback                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         NotFoundCallback               ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCheckReservationService_X::HandleReservation ( class URPC_CheckReservation_X* RPC, struct FScriptDelegate FoundCallback, struct FScriptDelegate NotFoundCallback )
//{
//	static UFunction* pFnHandleReservation = NULL;
//
//	if ( ! pFnHandleReservation )
//		pFnHandleReservation = (UFunction*) UObject::GObjObjects()->Data[ 57104 ];
//
//	UCheckReservationService_X_execHandleReservation_Parms HandleReservation_Parms;
//	HandleReservation_Parms.RPC = RPC;
//	memcpy ( &HandleReservation_Parms.FoundCallback, &FoundCallback, 0x10 );
//	memcpy ( &HandleReservation_Parms.NotFoundCallback, &NotFoundCallback, 0x10 );
//
//	this->ProcessEvent ( pFnHandleReservation, &HandleReservation_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservationService_X.SendRequest
//// [0x00026003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bIsHeartbeat                   ( CPF_Parm )
//// struct FScriptDelegate         FoundCallback                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         NotFoundCallback               ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UCheckReservationService_X::SendRequest ( unsigned long bIsHeartbeat, struct FScriptDelegate FoundCallback, struct FScriptDelegate NotFoundCallback )
//{
//	static UFunction* pFnSendRequest = NULL;
//
//	if ( ! pFnSendRequest )
//		pFnSendRequest = (UFunction*) UObject::GObjObjects()->Data[ 57388 ];
//
//	UCheckReservationService_X_execSendRequest_Parms SendRequest_Parms;
//	SendRequest_Parms.bIsHeartbeat = bIsHeartbeat;
//	memcpy ( &SendRequest_Parms.FoundCallback, &FoundCallback, 0x10 );
//	memcpy ( &SendRequest_Parms.NotFoundCallback, &NotFoundCallback, 0x10 );
//
//	this->ProcessEvent ( pFnSendRequest, &SendRequest_Parms, NULL );
//
//	return SendRequest_Parms.ReturnValue;
//};
//
//// Function ProjectX.CheckReservationService_X.CheckReservationDelegate
//// [0x00124000] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bIsHeartbeat                   ( CPF_Parm )
//// struct FScriptDelegate         FoundCallback                  ( CPF_Parm | CPF_NeedCtorLink )
//// struct FScriptDelegate         NotFoundCallback               ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UCheckReservationService_X::CheckReservationDelegate ( unsigned long bIsHeartbeat, struct FScriptDelegate FoundCallback, struct FScriptDelegate NotFoundCallback )
//{
//	static UFunction* pFnCheckReservationDelegate = NULL;
//
//	if ( ! pFnCheckReservationDelegate )
//		pFnCheckReservationDelegate = (UFunction*) UObject::GObjObjects()->Data[ 56377 ];
//
//	UCheckReservationService_X_execCheckReservationDelegate_Parms CheckReservationDelegate_Parms;
//	CheckReservationDelegate_Parms.bIsHeartbeat = bIsHeartbeat;
//	memcpy ( &CheckReservationDelegate_Parms.FoundCallback, &FoundCallback, 0x10 );
//	memcpy ( &CheckReservationDelegate_Parms.NotFoundCallback, &NotFoundCallback, 0x10 );
//
//	this->ProcessEvent ( pFnCheckReservationDelegate, &CheckReservationDelegate_Parms, NULL );
//
//	return CheckReservationDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.CheckReservationService_X.OnReservationNotFound
//// [0x00120000] 
//// Parameters infos:
//
//void UCheckReservationService_X::OnReservationNotFound ( )
//{
//	static UFunction* pFnOnReservationNotFound = NULL;
//
//	if ( ! pFnOnReservationNotFound )
//		pFnOnReservationNotFound = (UFunction*) UObject::GObjObjects()->Data[ 57092 ];
//
//	UCheckReservationService_X_execOnReservationNotFound_Parms OnReservationNotFound_Parms;
//
//	this->ProcessEvent ( pFnOnReservationNotFound, &OnReservationNotFound_Parms, NULL );
//};
//
//// Function ProjectX.CheckReservationService_X.OnFoundReservation
//// [0x00120000] 
//// Parameters infos:
//// struct FCheckReservationData   Reservation                    ( CPF_Parm | CPF_NeedCtorLink )
//
//void UCheckReservationService_X::OnFoundReservation ( struct FCheckReservationData Reservation )
//{
//	static UFunction* pFnOnFoundReservation = NULL;
//
//	if ( ! pFnOnFoundReservation )
//		pFnOnFoundReservation = (UFunction*) UObject::GObjObjects()->Data[ 56376 ];
//
//	UCheckReservationService_X_execOnFoundReservation_Parms OnFoundReservation_Parms;
//	memcpy ( &OnFoundReservation_Parms.Reservation, &Reservation, 0x1C );
//
//	this->ProcessEvent ( pFnOnFoundReservation, &OnFoundReservation_Parms, NULL );
//};
//
//// Function ProjectX.OnlineResource_X.SetCachedData
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UCachedWebData_X*        NewData                        ( CPF_Parm )
//
//void UOnlineResource_X::SetCachedData ( class UCachedWebData_X* NewData )
//{
//	static UFunction* pFnSetCachedData = NULL;
//
//	if ( ! pFnSetCachedData )
//		pFnSetCachedData = (UFunction*) UObject::GObjObjects()->Data[ 56447 ];
//
//	UOnlineResource_X_execSetCachedData_Parms SetCachedData_Parms;
//	SetCachedData_Parms.NewData = NewData;
//
//	this->ProcessEvent ( pFnSetCachedData, &SetCachedData_Parms, NULL );
//};
//
//// Function ProjectX.OnlineResource_X.IsValidNewData
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UCachedWebData_X*        Data                           ( CPF_Parm )
//
//bool UOnlineResource_X::IsValidNewData ( class UCachedWebData_X* Data )
//{
//	static UFunction* pFnIsValidNewData = NULL;
//
//	if ( ! pFnIsValidNewData )
//		pFnIsValidNewData = (UFunction*) UObject::GObjObjects()->Data[ 56446 ];
//
//	UOnlineResource_X_execIsValidNewData_Parms IsValidNewData_Parms;
//	IsValidNewData_Parms.Data = Data;
//
//	this->ProcessEvent ( pFnIsValidNewData, &IsValidNewData_Parms, NULL );
//
//	return IsValidNewData_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlineResource_X.ClearRetryTimer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineResource_X::ClearRetryTimer ( )
//{
//	static UFunction* pFnClearRetryTimer = NULL;
//
//	if ( ! pFnClearRetryTimer )
//		pFnClearRetryTimer = (UFunction*) UObject::GObjObjects()->Data[ 56442 ];
//
//	UOnlineResource_X_execClearRetryTimer_Parms ClearRetryTimer_Parms;
//
//	this->ProcessEvent ( pFnClearRetryTimer, &ClearRetryTimer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineResource_X.SetRetryTimer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// float                          Delay                          ( CPF_Parm )
//
//void UOnlineResource_X::SetRetryTimer ( float Delay )
//{
//	static UFunction* pFnSetRetryTimer = NULL;
//
//	if ( ! pFnSetRetryTimer )
//		pFnSetRetryTimer = (UFunction*) UObject::GObjObjects()->Data[ 56445 ];
//
//	UOnlineResource_X_execSetRetryTimer_Parms SetRetryTimer_Parms;
//	SetRetryTimer_Parms.Delay = Delay;
//
//	this->ProcessEvent ( pFnSetRetryTimer, &SetRetryTimer_Parms, NULL );
//};
//
//// Function ProjectX.OnlineResource_X.HandleSync
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UCachedWebData_X*        Data                           ( CPF_Parm )
//
//void UOnlineResource_X::HandleSync ( class UCachedWebData_X* Data )
//{
//	static UFunction* pFnHandleSync = NULL;
//
//	if ( ! pFnHandleSync )
//		pFnHandleSync = (UFunction*) UObject::GObjObjects()->Data[ 56443 ];
//
//	UOnlineResource_X_execHandleSync_Parms HandleSync_Parms;
//	HandleSync_Parms.Data = Data;
//
//	this->ProcessEvent ( pFnHandleSync, &HandleSync_Parms, NULL );
//};
//
//// Function ProjectX.OnlineResource_X.SyncData
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlineResource_X::SyncData ( )
//{
//	static UFunction* pFnSyncData = NULL;
//
//	if ( ! pFnSyncData )
//		pFnSyncData = (UFunction*) UObject::GObjObjects()->Data[ 56441 ];
//
//	UOnlineResource_X_execSyncData_Parms SyncData_Parms;
//
//	this->ProcessEvent ( pFnSyncData, &SyncData_Parms, NULL );
//};
//
//// Function ProjectX.OnlineResource_X.EventDataChanged
//// [0x00120000] 
//// Parameters infos:
//// class UOnlineResource_X*       DataSync                       ( CPF_Parm | CPF_EditInline )
//
//void UOnlineResource_X::EventDataChanged ( class UOnlineResource_X* DataSync )
//{
//	static UFunction* pFnEventDataChanged = NULL;
//
//	if ( ! pFnEventDataChanged )
//		pFnEventDataChanged = (UFunction*) UObject::GObjObjects()->Data[ 56435 ];
//
//	UOnlineResource_X_execEventDataChanged_Parms EventDataChanged_Parms;
//	EventDataChanged_Parms.DataSync = DataSync;
//
//	this->ProcessEvent ( pFnEventDataChanged, &EventDataChanged_Parms, NULL );
//};
//
//// Function ProjectX.RPC_UpdateTrialData_X.SetAdditionalMinutesToRemove
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateTrialData_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InAdditionalMinutesToRemove    ( CPF_Parm )
//
//class URPC_UpdateTrialData_X* URPC_UpdateTrialData_X::SetAdditionalMinutesToRemove ( int InAdditionalMinutesToRemove )
//{
//	static UFunction* pFnSetAdditionalMinutesToRemove = NULL;
//
//	if ( ! pFnSetAdditionalMinutesToRemove )
//		pFnSetAdditionalMinutesToRemove = (UFunction*) UObject::GObjObjects()->Data[ 56493 ];
//
//	URPC_UpdateTrialData_X_execSetAdditionalMinutesToRemove_Parms SetAdditionalMinutesToRemove_Parms;
//	SetAdditionalMinutesToRemove_Parms.InAdditionalMinutesToRemove = InAdditionalMinutesToRemove;
//
//	this->ProcessEvent ( pFnSetAdditionalMinutesToRemove, &SetAdditionalMinutesToRemove_Parms, NULL );
//
//	return SetAdditionalMinutesToRemove_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_UpdateTrialData_X.SetMinutesToRemove
//// [0x00020002] 
//// Parameters infos:
//// class URPC_UpdateTrialData_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InMinutesToRemove              ( CPF_Parm )
//
//class URPC_UpdateTrialData_X* URPC_UpdateTrialData_X::SetMinutesToRemove ( int InMinutesToRemove )
//{
//	static UFunction* pFnSetMinutesToRemove = NULL;
//
//	if ( ! pFnSetMinutesToRemove )
//		pFnSetMinutesToRemove = (UFunction*) UObject::GObjObjects()->Data[ 56491 ];
//
//	URPC_UpdateTrialData_X_execSetMinutesToRemove_Parms SetMinutesToRemove_Parms;
//	SetMinutesToRemove_Parms.InMinutesToRemove = InMinutesToRemove;
//
//	this->ProcessEvent ( pFnSetMinutesToRemove, &SetMinutesToRemove_Parms, NULL );
//
//	return SetMinutesToRemove_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CheckKeys_X.KeysMatch
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool URPC_CheckKeys_X::KeysMatch ( )
//{
//	static UFunction* pFnKeysMatch = NULL;
//
//	if ( ! pFnKeysMatch )
//		pFnKeysMatch = (UFunction*) UObject::GObjObjects()->Data[ 56566 ];
//
//	URPC_CheckKeys_X_execKeysMatch_Parms KeysMatch_Parms;
//
//	this->ProcessEvent ( pFnKeysMatch, &KeysMatch_Parms, NULL );
//
//	return KeysMatch_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CheckKeys_X.SetKeyToCheck
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CheckKeys_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InKey                          ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_CheckKeys_X* URPC_CheckKeys_X::SetKeyToCheck ( struct FString InKey )
//{
//	static UFunction* pFnSetKeyToCheck = NULL;
//
//	if ( ! pFnSetKeyToCheck )
//		pFnSetKeyToCheck = (UFunction*) UObject::GObjObjects()->Data[ 56563 ];
//
//	URPC_CheckKeys_X_execSetKeyToCheck_Parms SetKeyToCheck_Parms;
//	memcpy ( &SetKeyToCheck_Parms.InKey, &InKey, 0xC );
//
//	this->ProcessEvent ( pFnSetKeyToCheck, &SetKeyToCheck_Parms, NULL );
//
//	return SetKeyToCheck_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CheckReservation_X.GetReservation
//// [0x00820003] ( FUNC_Final )
//// Parameters infos:
//// struct FCheckReservationData   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FCheckReservationData URPC_CheckReservation_X::GetReservation ( )
//{
//	static UFunction* pFnGetReservation = NULL;
//
//	if ( ! pFnGetReservation )
//		pFnGetReservation = (UFunction*) UObject::GObjObjects()->Data[ 56591 ];
//
//	URPC_CheckReservation_X_execGetReservation_Parms GetReservation_Parms;
//
//	this->ProcessEvent ( pFnGetReservation, &GetReservation_Parms, NULL );
//
//	return GetReservation_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_CheckReservation_X.SetIsHeartbeat
//// [0x00020002] 
//// Parameters infos:
//// class URPC_CheckReservation_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned long                  bInIsHeartbeat                 ( CPF_Parm )
//
//class URPC_CheckReservation_X* URPC_CheckReservation_X::SetIsHeartbeat ( unsigned long bInIsHeartbeat )
//{
//	static UFunction* pFnSetIsHeartbeat = NULL;
//
//	if ( ! pFnSetIsHeartbeat )
//		pFnSetIsHeartbeat = (UFunction*) UObject::GObjObjects()->Data[ 56588 ];
//
//	URPC_CheckReservation_X_execSetIsHeartbeat_Parms SetIsHeartbeat_Parms;
//	SetIsHeartbeat_Parms.bInIsHeartbeat = bInIsHeartbeat;
//
//	this->ProcessEvent ( pFnSetIsHeartbeat, &SetIsHeartbeat_Parms, NULL );
//
//	return SetIsHeartbeat_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportLowFPS_X.SetNumBots
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportLowFPS_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InNumBots                      ( CPF_Parm )
//
//class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetNumBots ( int InNumBots )
//{
//	static UFunction* pFnSetNumBots = NULL;
//
//	if ( ! pFnSetNumBots )
//		pFnSetNumBots = (UFunction*) UObject::GObjObjects()->Data[ 56722 ];
//
//	URPC_ReportLowFPS_X_execSetNumBots_Parms SetNumBots_Parms;
//	SetNumBots_Parms.InNumBots = InNumBots;
//
//	this->ProcessEvent ( pFnSetNumBots, &SetNumBots_Parms, NULL );
//
//	return SetNumBots_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportLowFPS_X.SetNumHumans
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportLowFPS_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InNumHumans                    ( CPF_Parm )
//
//class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetNumHumans ( int InNumHumans )
//{
//	static UFunction* pFnSetNumHumans = NULL;
//
//	if ( ! pFnSetNumHumans )
//		pFnSetNumHumans = (UFunction*) UObject::GObjObjects()->Data[ 56719 ];
//
//	URPC_ReportLowFPS_X_execSetNumHumans_Parms SetNumHumans_Parms;
//	SetNumHumans_Parms.InNumHumans = InNumHumans;
//
//	this->ProcessEvent ( pFnSetNumHumans, &SetNumHumans_Parms, NULL );
//
//	return SetNumHumans_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportLowFPS_X.SetServerName
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportLowFPS_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerName                   ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetServerName ( struct FString InServerName )
//{
//	static UFunction* pFnSetServerName = NULL;
//
//	if ( ! pFnSetServerName )
//		pFnSetServerName = (UFunction*) UObject::GObjObjects()->Data[ 56716 ];
//
//	URPC_ReportLowFPS_X_execSetServerName_Parms SetServerName_Parms;
//	memcpy ( &SetServerName_Parms.InServerName, &InServerName, 0xC );
//
//	this->ProcessEvent ( pFnSetServerName, &SetServerName_Parms, NULL );
//
//	return SetServerName_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportLowFPS_X.SetServerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportLowFPS_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetServerID ( )
//{
//	static UFunction* pFnSetServerID = NULL;
//
//	if ( ! pFnSetServerID )
//		pFnSetServerID = (UFunction*) UObject::GObjObjects()->Data[ 56713 ];
//
//	URPC_ReportLowFPS_X_execSetServerID_Parms SetServerID_Parms;
//
//	this->ProcessEvent ( pFnSetServerID, &SetServerID_Parms, NULL );
//
//	return SetServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportLowFPS_X.SetMachineID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportLowFPS_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InMachineID                    ( CPF_Parm )
//
//class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetMachineID ( int InMachineID )
//{
//	static UFunction* pFnSetMachineID = NULL;
//
//	if ( ! pFnSetMachineID )
//		pFnSetMachineID = (UFunction*) UObject::GObjObjects()->Data[ 56710 ];
//
//	URPC_ReportLowFPS_X_execSetMachineID_Parms SetMachineID_Parms;
//	SetMachineID_Parms.InMachineID = InMachineID;
//
//	this->ProcessEvent ( pFnSetMachineID, &SetMachineID_Parms, NULL );
//
//	return SetMachineID_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_ReportLowFPS_X.SetIP
//// [0x00020002] 
//// Parameters infos:
//// class URPC_ReportLowFPS_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InIP                           ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetIP ( struct FString InIP )
//{
//	static UFunction* pFnSetIP = NULL;
//
//	if ( ! pFnSetIP )
//		pFnSetIP = (UFunction*) UObject::GObjObjects()->Data[ 56707 ];
//
//	URPC_ReportLowFPS_X_execSetIP_Parms SetIP_Parms;
//	memcpy ( &SetIP_Parms.InIP, &InIP, 0xC );
//
//	this->ProcessEvent ( pFnSetIP, &SetIP_Parms, NULL );
//
//	return SetIP_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetPlayerSkill_X.SetSigma
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetPlayerSkill_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          InSigma                        ( CPF_Parm )
//
//class URPC_SetPlayerSkill_X* URPC_SetPlayerSkill_X::SetSigma ( float InSigma )
//{
//	static UFunction* pFnSetSigma = NULL;
//
//	if ( ! pFnSetSigma )
//		pFnSetSigma = (UFunction*) UObject::GObjObjects()->Data[ 56736 ];
//
//	URPC_SetPlayerSkill_X_execSetSigma_Parms SetSigma_Parms;
//	SetSigma_Parms.InSigma = InSigma;
//
//	this->ProcessEvent ( pFnSetSigma, &SetSigma_Parms, NULL );
//
//	return SetSigma_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetPlayerSkill_X.SetMu
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetPlayerSkill_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          InMu                           ( CPF_Parm )
//
//class URPC_SetPlayerSkill_X* URPC_SetPlayerSkill_X::SetMu ( float InMu )
//{
//	static UFunction* pFnSetMu = NULL;
//
//	if ( ! pFnSetMu )
//		pFnSetMu = (UFunction*) UObject::GObjObjects()->Data[ 56733 ];
//
//	URPC_SetPlayerSkill_X_execSetMu_Parms SetMu_Parms;
//	SetMu_Parms.InMu = InMu;
//
//	this->ProcessEvent ( pFnSetMu, &SetMu_Parms, NULL );
//
//	return SetMu_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetPlayerSkill_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetPlayerSkill_X*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_SetPlayerSkill_X* URPC_SetPlayerSkill_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 56730 ];
//
//	URPC_SetPlayerSkill_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetPlayerSkillTier_X.SetMatchesPlayed
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetPlayerSkillTier_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InMatchesPlayed                ( CPF_Parm )
//
//class URPC_SetPlayerSkillTier_X* URPC_SetPlayerSkillTier_X::SetMatchesPlayed ( int InMatchesPlayed )
//{
//	static UFunction* pFnSetMatchesPlayed = NULL;
//
//	if ( ! pFnSetMatchesPlayed )
//		pFnSetMatchesPlayed = (UFunction*) UObject::GObjObjects()->Data[ 56750 ];
//
//	URPC_SetPlayerSkillTier_X_execSetMatchesPlayed_Parms SetMatchesPlayed_Parms;
//	SetMatchesPlayed_Parms.InMatchesPlayed = InMatchesPlayed;
//
//	this->ProcessEvent ( pFnSetMatchesPlayed, &SetMatchesPlayed_Parms, NULL );
//
//	return SetMatchesPlayed_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetPlayerSkillTier_X.SetTier
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetPlayerSkillTier_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InTier                         ( CPF_Parm )
//
//class URPC_SetPlayerSkillTier_X* URPC_SetPlayerSkillTier_X::SetTier ( int InTier )
//{
//	static UFunction* pFnSetTier = NULL;
//
//	if ( ! pFnSetTier )
//		pFnSetTier = (UFunction*) UObject::GObjObjects()->Data[ 56747 ];
//
//	URPC_SetPlayerSkillTier_X_execSetTier_Parms SetTier_Parms;
//	SetTier_Parms.InTier = InTier;
//
//	this->ProcessEvent ( pFnSetTier, &SetTier_Parms, NULL );
//
//	return SetTier_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetPlayerSkillTier_X.SetPlaylist
//// [0x00020002] 
//// Parameters infos:
//// class URPC_SetPlayerSkillTier_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            InPlaylist                     ( CPF_Parm )
//
//class URPC_SetPlayerSkillTier_X* URPC_SetPlayerSkillTier_X::SetPlaylist ( int InPlaylist )
//{
//	static UFunction* pFnSetPlaylist = NULL;
//
//	if ( ! pFnSetPlaylist )
//		pFnSetPlaylist = (UFunction*) UObject::GObjObjects()->Data[ 56744 ];
//
//	URPC_SetPlayerSkillTier_X_execSetPlaylist_Parms SetPlaylist_Parms;
//	SetPlaylist_Parms.InPlaylist = InPlaylist;
//
//	this->ProcessEvent ( pFnSetPlaylist, &SetPlaylist_Parms, NULL );
//
//	return SetPlaylist_Parms.ReturnValue;
//};
//
//// Function ProjectX.EventRecorderConfig_X.ResetProperties
//// [0x20020003] ( FUNC_Final )
//// Parameters infos:
//// class UEventRecorder_X*        EventRecorder                  ( CPF_Parm | CPF_EditInline )
//
//void UEventRecorderConfig_X::ResetProperties ( class UEventRecorder_X* EventRecorder )
//{
//	static UFunction* pFnResetProperties = NULL;
//
//	if ( ! pFnResetProperties )
//		pFnResetProperties = (UFunction*) UObject::GObjObjects()->Data[ 56898 ];
//
//	UEventRecorderConfig_X_execResetProperties_Parms ResetProperties_Parms;
//	ResetProperties_Parms.EventRecorder = EventRecorder;
//
//	this->ProcessEvent ( pFnResetProperties, &ResetProperties_Parms, NULL );
//};
//
//// Function ProjectX.EventRecorderConfig_X.SetProperties
//// [0x20020003] ( FUNC_Final )
//// Parameters infos:
//// class UEventRecorder_X*        EventRecorder                  ( CPF_Parm | CPF_EditInline )
//
//void UEventRecorderConfig_X::SetProperties ( class UEventRecorder_X* EventRecorder )
//{
//	static UFunction* pFnSetProperties = NULL;
//
//	if ( ! pFnSetProperties )
//		pFnSetProperties = (UFunction*) UObject::GObjObjects()->Data[ 56896 ];
//
//	UEventRecorderConfig_X_execSetProperties_Parms SetProperties_Parms;
//	SetProperties_Parms.EventRecorder = EventRecorder;
//
//	this->ProcessEvent ( pFnSetProperties, &SetProperties_Parms, NULL );
//};
//
//// Function ProjectX.EventRecorderConfig_X.Apply
//// [0x00020002] 
//// Parameters infos:
//
//void UEventRecorderConfig_X::Apply ( )
//{
//	static UFunction* pFnApply = NULL;
//
//	if ( ! pFnApply )
//		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 56895 ];
//
//	UEventRecorderConfig_X_execApply_Parms Apply_Parms;
//
//	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
//};
//
//// Function ProjectX.RPC_GetPlayerPermissions_X.__RPC_GetPlayerPermissions_X__GetPlayerPermissions
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPlayerPermissionsList  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            P                              ( CPF_Parm )
//
//struct FPlayerPermissionsList URPC_GetPlayerPermissions_X::__RPC_GetPlayerPermissions_X__GetPlayerPermissions ( struct FUniqueNetId P )
//{
//	static UFunction* pFn__RPC_GetPlayerPermissions_X__GetPlayerPermissions = NULL;
//
//	if ( ! pFn__RPC_GetPlayerPermissions_X__GetPlayerPermissions )
//		pFn__RPC_GetPlayerPermissions_X__GetPlayerPermissions = (UFunction*) UObject::GObjObjects()->Data[ 57027 ];
//
//	URPC_GetPlayerPermissions_X_exec__RPC_GetPlayerPermissions_X__GetPlayerPermissions_Parms __RPC_GetPlayerPermissions_X__GetPlayerPermissions_Parms;
//	memcpy ( &__RPC_GetPlayerPermissions_X__GetPlayerPermissions_Parms.P, &P, 0x48 );
//
//	this->ProcessEvent ( pFn__RPC_GetPlayerPermissions_X__GetPlayerPermissions, &__RPC_GetPlayerPermissions_X__GetPlayerPermissions_Parms, NULL );
//
//	return __RPC_GetPlayerPermissions_X__GetPlayerPermissions_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetPlayerPermissions_X.GetPermissionFromString
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   PermissionName                 ( CPF_Parm )
//// unsigned char                  Permission                     ( CPF_Parm | CPF_OutParm )
//
//bool URPC_GetPlayerPermissions_X::GetPermissionFromString ( struct FName PermissionName, unsigned char* Permission )
//{
//	static UFunction* pFnGetPermissionFromString = NULL;
//
//	if ( ! pFnGetPermissionFromString )
//		pFnGetPermissionFromString = (UFunction*) UObject::GObjObjects()->Data[ 57023 ];
//
//	URPC_GetPlayerPermissions_X_execGetPermissionFromString_Parms GetPermissionFromString_Parms;
//	memcpy ( &GetPermissionFromString_Parms.PermissionName, &PermissionName, 0x8 );
//
//	this->ProcessEvent ( pFnGetPermissionFromString, &GetPermissionFromString_Parms, NULL );
//
//	if ( Permission )
//		*Permission = GetPermissionFromString_Parms.Permission;
//
//	return GetPermissionFromString_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetPlayerPermissions_X.ConvertPermissions
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// TArray< unsigned char >        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FName >         PermissionNames                ( CPF_Parm | CPF_NeedCtorLink )
//
//TArray< unsigned char > URPC_GetPlayerPermissions_X::ConvertPermissions ( TArray< struct FName > PermissionNames )
//{
//	static UFunction* pFnConvertPermissions = NULL;
//
//	if ( ! pFnConvertPermissions )
//		pFnConvertPermissions = (UFunction*) UObject::GObjObjects()->Data[ 57014 ];
//
//	URPC_GetPlayerPermissions_X_execConvertPermissions_Parms ConvertPermissions_Parms;
//	memcpy ( &ConvertPermissions_Parms.PermissionNames, &PermissionNames, 0xC );
//
//	this->ProcessEvent ( pFnConvertPermissions, &ConvertPermissions_Parms, NULL );
//
//	return ConvertPermissions_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetPlayerPermissions_X.ConvertPlayerPermissions
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FPlayerPermissionsList  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// struct FUniqueNetId            PlayerID                       ( CPF_Parm )
//
//struct FPlayerPermissionsList URPC_GetPlayerPermissions_X::ConvertPlayerPermissions ( struct FUniqueNetId PlayerID )
//{
//	static UFunction* pFnConvertPlayerPermissions = NULL;
//
//	if ( ! pFnConvertPlayerPermissions )
//		pFnConvertPlayerPermissions = (UFunction*) UObject::GObjObjects()->Data[ 57009 ];
//
//	URPC_GetPlayerPermissions_X_execConvertPlayerPermissions_Parms ConvertPlayerPermissions_Parms;
//	memcpy ( &ConvertPlayerPermissions_Parms.PlayerID, &PlayerID, 0x48 );
//
//	this->ProcessEvent ( pFnConvertPlayerPermissions, &ConvertPlayerPermissions_Parms, NULL );
//
//	return ConvertPlayerPermissions_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetPlayerPermissions_X.GetPlayerPermissions
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FPlayerPermissionsList > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//// TArray< struct FPlayerPermissionsList > MapLocal_63D780F34358A2BF65A6FDB43C7F1011 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//TArray< struct FPlayerPermissionsList > URPC_GetPlayerPermissions_X::GetPlayerPermissions ( TArray< struct FPlayerPermissionsList >* MapLocal_63D780F34358A2BF65A6FDB43C7F1011 )
//{
//	static UFunction* pFnGetPlayerPermissions = NULL;
//
//	if ( ! pFnGetPlayerPermissions )
//		pFnGetPlayerPermissions = (UFunction*) UObject::GObjObjects()->Data[ 56937 ];
//
//	URPC_GetPlayerPermissions_X_execGetPlayerPermissions_Parms GetPlayerPermissions_Parms;
//
//	this->ProcessEvent ( pFnGetPlayerPermissions, &GetPlayerPermissions_Parms, NULL );
//
//	if ( MapLocal_63D780F34358A2BF65A6FDB43C7F1011 )
//		memcpy ( MapLocal_63D780F34358A2BF65A6FDB43C7F1011, &GetPlayerPermissions_Parms.MapLocal_63D780F34358A2BF65A6FDB43C7F1011, 0xC );
//
//	return GetPlayerPermissions_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_GetPlayerPermissions_X.SetPlayers
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_GetPlayerPermissions_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FUniqueNetId >  InPlayerIDs                    ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class URPC_GetPlayerPermissions_X* URPC_GetPlayerPermissions_X::SetPlayers ( TArray< struct FUniqueNetId >* InPlayerIDs )
//{
//	static UFunction* pFnSetPlayers = NULL;
//
//	if ( ! pFnSetPlayers )
//		pFnSetPlayers = (UFunction*) UObject::GObjObjects()->Data[ 56929 ];
//
//	URPC_GetPlayerPermissions_X_execSetPlayers_Parms SetPlayers_Parms;
//
//	this->ProcessEvent ( pFnSetPlayers, &SetPlayers_Parms, NULL );
//
//	if ( InPlayerIDs )
//		memcpy ( InPlayerIDs, &SetPlayers_Parms.InPlayerIDs, 0xC );
//
//	return SetPlayers_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_AddPlayerToRole_X.SetRole
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_AddPlayerToRole_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Role                           ( CPF_Parm )
//
//class URPC_AddPlayerToRole_X* URPC_AddPlayerToRole_X::SetRole ( unsigned char Role )
//{
//	static UFunction* pFnSetRole = NULL;
//
//	if ( ! pFnSetRole )
//		pFnSetRole = (UFunction*) UObject::GObjObjects()->Data[ 56992 ];
//
//	URPC_AddPlayerToRole_X_execSetRole_Parms SetRole_Parms;
//	SetRole_Parms.Role = Role;
//
//	this->ProcessEvent ( pFnSetRole, &SetRole_Parms, NULL );
//
//	return SetRole_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_RemovePlayerFromRole_X.SetRole
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_RemovePlayerFromRole_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// unsigned char                  Role                           ( CPF_Parm )
//
//class URPC_RemovePlayerFromRole_X* URPC_RemovePlayerFromRole_X::SetRole ( unsigned char Role )
//{
//	static UFunction* pFnSetRole = NULL;
//
//	if ( ! pFnSetRole )
//		pFnSetRole = (UFunction*) UObject::GObjObjects()->Data[ 57033 ];
//
//	URPC_RemovePlayerFromRole_X_execSetRole_Parms SetRole_Parms;
//	SetRole_Parms.Role = Role;
//
//	this->ProcessEvent ( pFnSetRole, &SetRole_Parms, NULL );
//
//	return SetRole_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_SetSeasonReward_X.SetReward
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_SetSeasonReward_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// int                            Level                          ( CPF_Parm )
//// int                            Wins                           ( CPF_Parm )
//
//class URPC_SetSeasonReward_X* URPC_SetSeasonReward_X::SetReward ( int Level, int Wins )
//{
//	static UFunction* pFnSetReward = NULL;
//
//	if ( ! pFnSetReward )
//		pFnSetReward = (UFunction*) UObject::GObjObjects()->Data[ 57040 ];
//
//	URPC_SetSeasonReward_X_execSetReward_Parms SetReward_Parms;
//	SetReward_Parms.Level = Level;
//	SetReward_Parms.Wins = Wins;
//
//	this->ProcessEvent ( pFnSetReward, &SetReward_Parms, NULL );
//
//	return SetReward_Parms.ReturnValue;
//};
//
//// Function ProjectX.__AdHocBrowser_X__CreateErrorDelegate.__AdHocBrowser_X__CreateErrorDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__AdHocBrowser_X__CreateErrorDelegate::__AdHocBrowser_X__CreateErrorDelegate ( )
//{
//	static UFunction* pFn__AdHocBrowser_X__CreateErrorDelegate = NULL;
//
//	if ( ! pFn__AdHocBrowser_X__CreateErrorDelegate )
//		pFn__AdHocBrowser_X__CreateErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57055 ];
//
//	U__AdHocBrowser_X__CreateErrorDelegate_exec__AdHocBrowser_X__CreateErrorDelegate_Parms __AdHocBrowser_X__CreateErrorDelegate_Parms;
//
//	this->ProcessEvent ( pFn__AdHocBrowser_X__CreateErrorDelegate, &__AdHocBrowser_X__CreateErrorDelegate_Parms, NULL );
//};
//
//// Function ProjectX.__AdHocBrowser_X__CreateErrorDelegate.__AdHocBrowser_X__CreateErrorDelegate
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void U__AdHocBrowser_X__CreateErrorDelegate::__AdHocBrowser_X__CreateErrorDelegate ( class UError* Error )
//{
//	static UFunction* pFn__AdHocBrowser_X__CreateErrorDelegate = NULL;
//
//	if ( ! pFn__AdHocBrowser_X__CreateErrorDelegate )
//		pFn__AdHocBrowser_X__CreateErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57056 ];
//
//	U__AdHocBrowser_X__CreateErrorDelegate_exec__AdHocBrowser_X__CreateErrorDelegate_Parms __AdHocBrowser_X__CreateErrorDelegate_Parms;
//	__AdHocBrowser_X__CreateErrorDelegate_Parms.Error = Error;
//
//	this->ProcessEvent ( pFn__AdHocBrowser_X__CreateErrorDelegate, &__AdHocBrowser_X__CreateErrorDelegate_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBrowser_X.__AdHocBrowser_X__GetServerList
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//
//void UAdHocBrowser_X::__AdHocBrowser_X__GetServerList ( )
//{
//	static UFunction* pFn__AdHocBrowser_X__GetServerList = NULL;
//
//	if ( ! pFn__AdHocBrowser_X__GetServerList )
//		pFn__AdHocBrowser_X__GetServerList = (UFunction*) UObject::GObjObjects()->Data[ 57344 ];
//
//	UAdHocBrowser_X_exec__AdHocBrowser_X__GetServerList_Parms __AdHocBrowser_X__GetServerList_Parms;
//
//	this->ProcessEvent ( pFn__AdHocBrowser_X__GetServerList, &__AdHocBrowser_X__GetServerList_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBrowser_X.HandleSearchTimeout
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UAdHocBrowser_X::HandleSearchTimeout ( )
//{
//	static UFunction* pFnHandleSearchTimeout = NULL;
//
//	if ( ! pFnHandleSearchTimeout )
//		pFnHandleSearchTimeout = (UFunction*) UObject::GObjObjects()->Data[ 57343 ];
//
//	UAdHocBrowser_X_execHandleSearchTimeout_Parms HandleSearchTimeout_Parms;
//
//	this->ProcessEvent ( pFnHandleSearchTimeout, &HandleSearchTimeout_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBrowser_X.AdHocHandleOnNetworkChanged
//// [0x00820002] 
//// Parameters infos:
//// TArray< struct FAdHocAccessPointInfo > Ahapis                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UAdHocBrowser_X::AdHocHandleOnNetworkChanged ( TArray< struct FAdHocAccessPointInfo > Ahapis )
//{
//	static UFunction* pFnAdHocHandleOnNetworkChanged = NULL;
//
//	if ( ! pFnAdHocHandleOnNetworkChanged )
//		pFnAdHocHandleOnNetworkChanged = (UFunction*) UObject::GObjObjects()->Data[ 57336 ];
//
//	UAdHocBrowser_X_execAdHocHandleOnNetworkChanged_Parms AdHocHandleOnNetworkChanged_Parms;
//	memcpy ( &AdHocHandleOnNetworkChanged_Parms.Ahapis, &Ahapis, 0xC );
//
//	this->ProcessEvent ( pFnAdHocHandleOnNetworkChanged, &AdHocHandleOnNetworkChanged_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBrowser_X.FindIndexFromServerID
//// [0x00020002] 
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InServerID                     ( CPF_Parm | CPF_NeedCtorLink )
//
//int UAdHocBrowser_X::FindIndexFromServerID ( struct FString InServerID )
//{
//	static UFunction* pFnFindIndexFromServerID = NULL;
//
//	if ( ! pFnFindIndexFromServerID )
//		pFnFindIndexFromServerID = (UFunction*) UObject::GObjObjects()->Data[ 57332 ];
//
//	UAdHocBrowser_X_execFindIndexFromServerID_Parms FindIndexFromServerID_Parms;
//	memcpy ( &FindIndexFromServerID_Parms.InServerID, &InServerID, 0xC );
//
//	this->ProcessEvent ( pFnFindIndexFromServerID, &FindIndexFromServerID_Parms, NULL );
//
//	return FindIndexFromServerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocBrowser_X.JoinServer
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 ServerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UAdHocBrowser_X::JoinServer ( struct FString ServerID, struct FString Options )
//{
//	static UFunction* pFnJoinServer = NULL;
//
//	if ( ! pFnJoinServer )
//		pFnJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 57325 ];
//
//	UAdHocBrowser_X_execJoinServer_Parms JoinServer_Parms;
//	memcpy ( &JoinServer_Parms.ServerID, &ServerID, 0xC );
//	memcpy ( &JoinServer_Parms.Options, &Options, 0xC );
//
//	this->ProcessEvent ( pFnJoinServer, &JoinServer_Parms, NULL );
//
//	return JoinServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocBrowser_X.CreateErrorDelegate
//// [0x00022002] 
//// Parameters infos:
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UAdHocBrowser_X::CreateErrorDelegate ( class UAsyncTask* Task )
//{
//	static UFunction* pFnCreateErrorDelegate = NULL;
//
//	if ( ! pFnCreateErrorDelegate )
//		pFnCreateErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57322 ];
//
//	UAdHocBrowser_X_execCreateErrorDelegate_Parms CreateErrorDelegate_Parms;
//	CreateErrorDelegate_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnCreateErrorDelegate, &CreateErrorDelegate_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBrowser_X.GetServerList
//// [0x00020002] 
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class ULanSearchTask* UAdHocBrowser_X::GetServerList ( )
//{
//	static UFunction* pFnGetServerList = NULL;
//
//	if ( ! pFnGetServerList )
//		pFnGetServerList = (UFunction*) UObject::GObjObjects()->Data[ 57320 ];
//
//	UAdHocBrowser_X_execGetServerList_Parms GetServerList_Parms;
//
//	this->ProcessEvent ( pFnGetServerList, &GetServerList_Parms, NULL );
//
//	return GetServerList_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocBrowser_X.DestroyServer
//// [0x00020002] 
//// Parameters infos:
//
//void UAdHocBrowser_X::DestroyServer ( )
//{
//	static UFunction* pFnDestroyServer = NULL;
//
//	if ( ! pFnDestroyServer )
//		pFnDestroyServer = (UFunction*) UObject::GObjObjects()->Data[ 57319 ];
//
//	UAdHocBrowser_X_execDestroyServer_Parms DestroyServer_Parms;
//
//	this->ProcessEvent ( pFnDestroyServer, &DestroyServer_Parms, NULL );
//};
//
//// Function ProjectX.AdHocBrowser_X.SetServerMetaData
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MetaData                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UAdHocBrowser_X::SetServerMetaData ( struct FString MetaData )
//{
//	static UFunction* pFnSetServerMetaData = NULL;
//
//	if ( ! pFnSetServerMetaData )
//		pFnSetServerMetaData = (UFunction*) UObject::GObjObjects()->Data[ 57066 ];
//
//	UAdHocBrowser_X_execSetServerMetaData_Parms SetServerMetaData_Parms;
//	memcpy ( &SetServerMetaData_Parms.MetaData, &MetaData, 0xC );
//
//	this->ProcessEvent ( pFnSetServerMetaData, &SetServerMetaData_Parms, NULL );
//
//	return SetServerMetaData_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocBrowser_X.CreateServer
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 MetaData                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UAdHocBrowser_X::CreateServer ( struct FString MetaData )
//{
//	static UFunction* pFnCreateServer = NULL;
//
//	if ( ! pFnCreateServer )
//		pFnCreateServer = (UFunction*) UObject::GObjObjects()->Data[ 57314 ];
//
//	UAdHocBrowser_X_execCreateServer_Parms CreateServer_Parms;
//	memcpy ( &CreateServer_Parms.MetaData, &MetaData, 0xC );
//
//	this->ProcessEvent ( pFnCreateServer, &CreateServer_Parms, NULL );
//
//	return CreateServer_Parms.ReturnValue;
//};
//
//// Function ProjectX.__AdHocBrowser_X__CreateServer.__AdHocBrowser_X__CreateServer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__AdHocBrowser_X__CreateServer::__AdHocBrowser_X__CreateServer ( )
//{
//	static UFunction* pFn__AdHocBrowser_X__CreateServer = NULL;
//
//	if ( ! pFn__AdHocBrowser_X__CreateServer )
//		pFn__AdHocBrowser_X__CreateServer = (UFunction*) UObject::GObjObjects()->Data[ 57064 ];
//
//	U__AdHocBrowser_X__CreateServer_exec__AdHocBrowser_X__CreateServer_Parms __AdHocBrowser_X__CreateServer_Parms;
//
//	this->ProcessEvent ( pFn__AdHocBrowser_X__CreateServer, &__AdHocBrowser_X__CreateServer_Parms, NULL );
//};
//
//// Function ProjectX.__AdHocBrowser_X__CreateServer.__AdHocBrowser_X__CreateServer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
////
////void U__AdHocBrowser_X__CreateServer::__AdHocBrowser_X__CreateServer ( )
////{
////	static UFunction* pFn__AdHocBrowser_X__CreateServer = NULL;
////
////	if ( ! pFn__AdHocBrowser_X__CreateServer )
////		pFn__AdHocBrowser_X__CreateServer = (UFunction*) UObject::GObjObjects()->Data[ 57065 ];
////
////	U__AdHocBrowser_X__CreateServer_exec__AdHocBrowser_X__CreateServer_Parms __AdHocBrowser_X__CreateServer_Parms;
////
////	this->ProcessEvent ( pFn__AdHocBrowser_X__CreateServer, &__AdHocBrowser_X__CreateServer_Parms, NULL );
////};
//
//// Function ProjectX.__AdHocBrowser_X__JoinServer.__AdHocBrowser_X__JoinServer
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__AdHocBrowser_X__JoinServer::__AdHocBrowser_X__JoinServer ( )
//{
//	static UFunction* pFn__AdHocBrowser_X__JoinServer = NULL;
//
//	if ( ! pFn__AdHocBrowser_X__JoinServer )
//		pFn__AdHocBrowser_X__JoinServer = (UFunction*) UObject::GObjObjects()->Data[ 57074 ];
//
//	U__AdHocBrowser_X__JoinServer_exec__AdHocBrowser_X__JoinServer_Parms __AdHocBrowser_X__JoinServer_Parms;
//
//	this->ProcessEvent ( pFn__AdHocBrowser_X__JoinServer, &__AdHocBrowser_X__JoinServer_Parms, NULL );
//};
//
//// Function ProjectX.__AdHocInterface_X__DisableAdHoc.__AdHocInterface_X__DisableAdHoc
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__AdHocInterface_X__DisableAdHoc::__AdHocInterface_X__DisableAdHoc ( )
//{
//	static UFunction* pFn__AdHocInterface_X__DisableAdHoc = NULL;
//
//	if ( ! pFn__AdHocInterface_X__DisableAdHoc )
//		pFn__AdHocInterface_X__DisableAdHoc = (UFunction*) UObject::GObjObjects()->Data[ 57079 ];
//
//	U__AdHocInterface_X__DisableAdHoc_exec__AdHocInterface_X__DisableAdHoc_Parms __AdHocInterface_X__DisableAdHoc_Parms;
//
//	this->ProcessEvent ( pFn__AdHocInterface_X__DisableAdHoc, &__AdHocInterface_X__DisableAdHoc_Parms, NULL );
//};
//
//// Function ProjectX.__AdHocInterface_X__DisableAdHoc.__AdHocInterface_X__DisableAdHoc
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
////void U__AdHocInterface_X__DisableAdHoc::__AdHocInterface_X__DisableAdHoc ( )
////{
////	static UFunction* pFn__AdHocInterface_X__DisableAdHoc = NULL;
////
////	if ( ! pFn__AdHocInterface_X__DisableAdHoc )
////		pFn__AdHocInterface_X__DisableAdHoc = (UFunction*) UObject::GObjObjects()->Data[ 57080 ];
////
////	U__AdHocInterface_X__DisableAdHoc_exec__AdHocInterface_X__DisableAdHoc_Parms __AdHocInterface_X__DisableAdHoc_Parms;
////
////	this->ProcessEvent ( pFn__AdHocInterface_X__DisableAdHoc, &__AdHocInterface_X__DisableAdHoc_Parms, NULL );
////};
//
//// Function ProjectX.AdHocInterface_X.CreateErrorDelegate
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UAdHocInterface_X::CreateErrorDelegate ( class UAsyncTask* Task )
//{
//	static UFunction* pFnCreateErrorDelegate = NULL;
//
//	if ( ! pFnCreateErrorDelegate )
//		pFnCreateErrorDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57357 ];
//
//	UAdHocInterface_X_execCreateErrorDelegate_Parms CreateErrorDelegate_Parms;
//	CreateErrorDelegate_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnCreateErrorDelegate, &CreateErrorDelegate_Parms, NULL );
//};
//
//// Function ProjectX.AdHocInterface_X.DisableAdHoc
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UAsyncTask* UAdHocInterface_X::DisableAdHoc ( )
//{
//	static UFunction* pFnDisableAdHoc = NULL;
//
//	if ( ! pFnDisableAdHoc )
//		pFnDisableAdHoc = (UFunction*) UObject::GObjObjects()->Data[ 57354 ];
//
//	UAdHocInterface_X_execDisableAdHoc_Parms DisableAdHoc_Parms;
//
//	this->ProcessEvent ( pFnDisableAdHoc, &DisableAdHoc_Parms, NULL );
//
//	return DisableAdHoc_Parms.ReturnValue;
//};
//
//// Function ProjectX.AdHocInterface_X.HandleGameInfoSpawned
//// [0x00080002] 
//// Parameters infos:
//// class AGameInfo_X*             InGameInfo                     ( CPF_Parm )
//
//void UAdHocInterface_X::HandleGameInfoSpawned ( class AGameInfo_X* InGameInfo )
//{
//	static UFunction* pFnHandleGameInfoSpawned = NULL;
//
//	if ( ! pFnHandleGameInfoSpawned )
//		pFnHandleGameInfoSpawned = (UFunction*) UObject::GObjObjects()->Data[ 57352 ];
//
//	UAdHocInterface_X_execHandleGameInfoSpawned_Parms HandleGameInfoSpawned_Parms;
//	HandleGameInfoSpawned_Parms.InGameInfo = InGameInfo;
//
//	this->ProcessEvent ( pFnHandleGameInfoSpawned, &HandleGameInfoSpawned_Parms, NULL );
//};
//
//// Function ProjectX.AdHocInterface_X.EnableAdHoc
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UAsyncTask* UAdHocInterface_X::EnableAdHoc ( )
//{
//	static UFunction* pFnEnableAdHoc = NULL;
//
//	if ( ! pFnEnableAdHoc )
//		pFnEnableAdHoc = (UFunction*) UObject::GObjObjects()->Data[ 57348 ];
//
//	UAdHocInterface_X_execEnableAdHoc_Parms EnableAdHoc_Parms;
//
//	this->ProcessEvent ( pFnEnableAdHoc, &EnableAdHoc_Parms, NULL );
//
//	return EnableAdHoc_Parms.ReturnValue;
//};
//
//// Function ProjectX.__AdHocInterface_X__EnableAdHoc.__AdHocInterface_X__EnableAdHoc
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__AdHocInterface_X__EnableAdHoc::__AdHocInterface_X__EnableAdHoc ( )
//{
//	static UFunction* pFn__AdHocInterface_X__EnableAdHoc = NULL;
//
//	if ( ! pFn__AdHocInterface_X__EnableAdHoc )
//		pFn__AdHocInterface_X__EnableAdHoc = (UFunction*) UObject::GObjObjects()->Data[ 57087 ];
//
//	U__AdHocInterface_X__EnableAdHoc_exec__AdHocInterface_X__EnableAdHoc_Parms __AdHocInterface_X__EnableAdHoc_Parms;
//
//	this->ProcessEvent ( pFn__AdHocInterface_X__EnableAdHoc, &__AdHocInterface_X__EnableAdHoc_Parms, NULL );
//};
//
//// Function ProjectX.__AdHocInterface_X__EnableAdHoc.__AdHocInterface_X__EnableAdHoc
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
////
////void U__AdHocInterface_X__EnableAdHoc::__AdHocInterface_X__EnableAdHoc ( )
////{
////	static UFunction* pFn__AdHocInterface_X__EnableAdHoc = NULL;
////
////	if ( ! pFn__AdHocInterface_X__EnableAdHoc )
////		pFn__AdHocInterface_X__EnableAdHoc = (UFunction*) UObject::GObjObjects()->Data[ 57088 ];
////
////	U__AdHocInterface_X__EnableAdHoc_exec__AdHocInterface_X__EnableAdHoc_Parms __AdHocInterface_X__EnableAdHoc_Parms;
////
////	this->ProcessEvent ( pFn__AdHocInterface_X__EnableAdHoc, &__AdHocInterface_X__EnableAdHoc_Parms, NULL );
////};
//
//// Function ProjectX.__CheckReservationService_X__SendRequest.__CheckReservationService_X__SendRequest
//// [0x20020003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_CheckReservation_X* RPC                            ( CPF_Parm )
//
//void U__CheckReservationService_X__SendRequest::__CheckReservationService_X__SendRequest ( class URPC_CheckReservation_X* RPC )
//{
//	static UFunction* pFn__CheckReservationService_X__SendRequest = NULL;
//
//	if ( ! pFn__CheckReservationService_X__SendRequest )
//		pFn__CheckReservationService_X__SendRequest = (UFunction*) UObject::GObjObjects()->Data[ 57102 ];
//
//	U__CheckReservationService_X__SendRequest_exec__CheckReservationService_X__SendRequest_Parms __CheckReservationService_X__SendRequest_Parms;
//	__CheckReservationService_X__SendRequest_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFn__CheckReservationService_X__SendRequest, &__CheckReservationService_X__SendRequest_Parms, NULL );
//};
//
//// Function ProjectX.ExecuteServiceTask.CreateResultError
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  InError                        ( CPF_Parm )
//
//class UExecuteServiceTask* UExecuteServiceTask::CreateResultError ( class UError* InError )
//{
//	static UFunction* pFnCreateResultError = NULL;
//
//	if ( ! pFnCreateResultError )
//		pFnCreateResultError = (UFunction*) UObject::GObjObjects()->Data[ 57427 ];
//
//	UExecuteServiceTask_execCreateResultError_Parms CreateResultError_Parms;
//	CreateResultError_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnCreateResultError, &CreateResultError_Parms, NULL );
//
//	return CreateResultError_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.CreateResult
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetClientService_X*  InResult                       ( CPF_Parm )
//
//class UExecuteServiceTask* UExecuteServiceTask::CreateResult ( class UPsyNetClientService_X* InResult )
//{
//	static UFunction* pFnCreateResult = NULL;
//
//	if ( ! pFnCreateResult )
//		pFnCreateResult = (UFunction*) UObject::GObjObjects()->Data[ 57423 ];
//
//	UExecuteServiceTask_execCreateResult_Parms CreateResult_Parms;
//	CreateResult_Parms.InResult = InResult;
//
//	this->ProcessEvent ( pFnCreateResult, &CreateResult_Parms, NULL );
//
//	return CreateResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.ClearCallbacks
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void UExecuteServiceTask::eventClearCallbacks ( )
//{
//	static UFunction* pFnClearCallbacks = NULL;
//
//	if ( ! pFnClearCallbacks )
//		pFnClearCallbacks = (UFunction*) UObject::GObjObjects()->Data[ 57422 ];
//
//	UExecuteServiceTask_eventClearCallbacks_Parms ClearCallbacks_Parms;
//
//	this->ProcessEvent ( pFnClearCallbacks, &ClearCallbacks_Parms, NULL );
//};
//
//// Function ProjectX.ExecuteServiceTask.SetResultWhen
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAsyncTask*              Other                          ( CPF_Parm )
//// struct FScriptDelegate         GetResultDelegate              ( CPF_Parm | CPF_NeedCtorLink )
//
//class UExecuteServiceTask* UExecuteServiceTask::eventSetResultWhen ( class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate )
//{
//	static UFunction* pFnSetResultWhen = NULL;
//
//	if ( ! pFnSetResultWhen )
//		pFnSetResultWhen = (UFunction*) UObject::GObjObjects()->Data[ 57417 ];
//
//	UExecuteServiceTask_eventSetResultWhen_Parms SetResultWhen_Parms;
//	SetResultWhen_Parms.Other = Other;
//	memcpy ( &SetResultWhen_Parms.GetResultDelegate, &GetResultDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnSetResultWhen, &SetResultWhen_Parms, NULL );
//
//	return SetResultWhen_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.SetResult
//// [0x00024803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetClientService_X*  InResult                       ( CPF_Parm )
//// class UError*                  InError                        ( CPF_OptionalParm | CPF_Parm )
//
//class UExecuteServiceTask* UExecuteServiceTask::eventSetResult ( class UPsyNetClientService_X* InResult, class UError* InError )
//{
//	static UFunction* pFnSetResult = NULL;
//
//	if ( ! pFnSetResult )
//		pFnSetResult = (UFunction*) UObject::GObjObjects()->Data[ 57130 ];
//
//	UExecuteServiceTask_eventSetResult_Parms SetResult_Parms;
//	SetResult_Parms.InResult = InResult;
//	SetResult_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnSetResult, &SetResult_Parms, NULL );
//
//	return SetResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.NotifyOnResultComplete
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UExecuteServiceTask* UExecuteServiceTask::NotifyOnResultComplete ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnResultComplete = NULL;
//
//	if ( ! pFnNotifyOnResultComplete )
//		pFnNotifyOnResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57411 ];
//
//	UExecuteServiceTask_execNotifyOnResultComplete_Parms NotifyOnResultComplete_Parms;
//	memcpy ( &NotifyOnResultComplete_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnResultComplete, &NotifyOnResultComplete_Parms, NULL );
//
//	return NotifyOnResultComplete_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.NotifyOnResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UExecuteServiceTask*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class UExecuteServiceTask* UExecuteServiceTask::NotifyOnResult ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnResult = NULL;
//
//	if ( ! pFnNotifyOnResult )
//		pFnNotifyOnResult = (UFunction*) UObject::GObjObjects()->Data[ 57407 ];
//
//	UExecuteServiceTask_execNotifyOnResult_Parms NotifyOnResult_Parms;
//	memcpy ( &NotifyOnResult_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnResult, &NotifyOnResult_Parms, NULL );
//
//	return NotifyOnResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.ExecuteServiceTaskResultDelegate
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetClientService_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UPsyNetClientService_X* UExecuteServiceTask::ExecuteServiceTaskResultDelegate ( )
//{
//	static UFunction* pFnExecuteServiceTaskResultDelegate = NULL;
//
//	if ( ! pFnExecuteServiceTaskResultDelegate )
//		pFnExecuteServiceTaskResultDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57111 ];
//
//	UExecuteServiceTask_execExecuteServiceTaskResultDelegate_Parms ExecuteServiceTaskResultDelegate_Parms;
//
//	this->ProcessEvent ( pFnExecuteServiceTaskResultDelegate, &ExecuteServiceTaskResultDelegate_Parms, NULL );
//
//	return ExecuteServiceTaskResultDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.ExecuteServiceTask.EventExecuteServiceTaskResultComplete
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetClientService_X*  OutResult                      ( CPF_Parm )
//// class UError*                  OutError                       ( CPF_Parm )
//
//void UExecuteServiceTask::EventExecuteServiceTaskResultComplete ( class UPsyNetClientService_X* OutResult, class UError* OutError )
//{
//	static UFunction* pFnEventExecuteServiceTaskResultComplete = NULL;
//
//	if ( ! pFnEventExecuteServiceTaskResultComplete )
//		pFnEventExecuteServiceTaskResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57107 ];
//
//	UExecuteServiceTask_execEventExecuteServiceTaskResultComplete_Parms EventExecuteServiceTaskResultComplete_Parms;
//	EventExecuteServiceTaskResultComplete_Parms.OutResult = OutResult;
//	EventExecuteServiceTaskResultComplete_Parms.OutError = OutError;
//
//	this->ProcessEvent ( pFnEventExecuteServiceTaskResultComplete, &EventExecuteServiceTaskResultComplete_Parms, NULL );
//};
//
//// Function ProjectX.ExecuteServiceTask.EventExecuteServiceTaskResult
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetClientService_X*  OutResult                      ( CPF_Parm )
//
//void UExecuteServiceTask::EventExecuteServiceTaskResult ( class UPsyNetClientService_X* OutResult )
//{
//	static UFunction* pFnEventExecuteServiceTaskResult = NULL;
//
//	if ( ! pFnEventExecuteServiceTaskResult )
//		pFnEventExecuteServiceTaskResult = (UFunction*) UObject::GObjObjects()->Data[ 57110 ];
//
//	UExecuteServiceTask_execEventExecuteServiceTaskResult_Parms EventExecuteServiceTaskResult_Parms;
//	EventExecuteServiceTaskResult_Parms.OutResult = OutResult;
//
//	this->ProcessEvent ( pFnEventExecuteServiceTaskResult, &EventExecuteServiceTaskResult_Parms, NULL );
//};
//
//// Function ProjectX.__ExecuteServiceTask__NotifyOnResult.__ExecuteServiceTask__NotifyOnResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__ExecuteServiceTask__NotifyOnResult::__ExecuteServiceTask__NotifyOnResult ( )
//{
//	static UFunction* pFn__ExecuteServiceTask__NotifyOnResult = NULL;
//
//	if ( ! pFn__ExecuteServiceTask__NotifyOnResult )
//		pFn__ExecuteServiceTask__NotifyOnResult = (UFunction*) UObject::GObjObjects()->Data[ 57120 ];
//
//	U__ExecuteServiceTask__NotifyOnResult_exec__ExecuteServiceTask__NotifyOnResult_Parms __ExecuteServiceTask__NotifyOnResult_Parms;
//
//	this->ProcessEvent ( pFn__ExecuteServiceTask__NotifyOnResult, &__ExecuteServiceTask__NotifyOnResult_Parms, NULL );
//};
//
//// Function ProjectX.__ExecuteServiceTask__NotifyOnResultComplete.__ExecuteServiceTask__NotifyOnResultComplete
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Err                            ( CPF_Parm )
//
//void U__ExecuteServiceTask__NotifyOnResultComplete::__ExecuteServiceTask__NotifyOnResultComplete ( class UError* Err )
//{
//	static UFunction* pFn__ExecuteServiceTask__NotifyOnResultComplete = NULL;
//
//	if ( ! pFn__ExecuteServiceTask__NotifyOnResultComplete )
//		pFn__ExecuteServiceTask__NotifyOnResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57124 ];
//
//	U__ExecuteServiceTask__NotifyOnResultComplete_exec__ExecuteServiceTask__NotifyOnResultComplete_Parms __ExecuteServiceTask__NotifyOnResultComplete_Parms;
//	__ExecuteServiceTask__NotifyOnResultComplete_Parms.Err = Err;
//
//	this->ProcessEvent ( pFn__ExecuteServiceTask__NotifyOnResultComplete, &__ExecuteServiceTask__NotifyOnResultComplete_Parms, NULL );
//};
//
//// Function ProjectX.__ExecuteServiceTask__SetResultWhen.__ExecuteServiceTask__SetResultWhen
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__ExecuteServiceTask__SetResultWhen::__ExecuteServiceTask__SetResultWhen ( )
//{
//	static UFunction* pFn__ExecuteServiceTask__SetResultWhen = NULL;
//
//	if ( ! pFn__ExecuteServiceTask__SetResultWhen )
//		pFn__ExecuteServiceTask__SetResultWhen = (UFunction*) UObject::GObjObjects()->Data[ 57129 ];
//
//	U__ExecuteServiceTask__SetResultWhen_exec__ExecuteServiceTask__SetResultWhen_Parms __ExecuteServiceTask__SetResultWhen_Parms;
//
//	this->ProcessEvent ( pFn__ExecuteServiceTask__SetResultWhen, &__ExecuteServiceTask__SetResultWhen_Parms, NULL );
//};
//
//// Function ProjectX.LanSearchTask.CreateResultError
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  InError                        ( CPF_Parm )
//
//class ULanSearchTask* ULanSearchTask::CreateResultError ( class UError* InError )
//{
//	static UFunction* pFnCreateResultError = NULL;
//
//	if ( ! pFnCreateResultError )
//		pFnCreateResultError = (UFunction*) UObject::GObjObjects()->Data[ 57298 ];
//
//	ULanSearchTask_execCreateResultError_Parms CreateResultError_Parms;
//	CreateResultError_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnCreateResultError, &CreateResultError_Parms, NULL );
//
//	return CreateResultError_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.CreateResult
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< class ULanServerRecord_X* > InResult                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanSearchTask* ULanSearchTask::CreateResult ( TArray< class ULanServerRecord_X* > InResult )
//{
//	static UFunction* pFnCreateResult = NULL;
//
//	if ( ! pFnCreateResult )
//		pFnCreateResult = (UFunction*) UObject::GObjObjects()->Data[ 57449 ];
//
//	ULanSearchTask_execCreateResult_Parms CreateResult_Parms;
//	memcpy ( &CreateResult_Parms.InResult, &InResult, 0xC );
//
//	this->ProcessEvent ( pFnCreateResult, &CreateResult_Parms, NULL );
//
//	return CreateResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.ClearCallbacks
//// [0x00080802] ( FUNC_Event )
//// Parameters infos:
//
//void ULanSearchTask::eventClearCallbacks ( )
//{
//	static UFunction* pFnClearCallbacks = NULL;
//
//	if ( ! pFnClearCallbacks )
//		pFnClearCallbacks = (UFunction*) UObject::GObjObjects()->Data[ 57448 ];
//
//	ULanSearchTask_eventClearCallbacks_Parms ClearCallbacks_Parms;
//
//	this->ProcessEvent ( pFnClearCallbacks, &ClearCallbacks_Parms, NULL );
//};
//
//// Function ProjectX.LanSearchTask.SetResultWhen
//// [0x00020803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UAsyncTask*              Other                          ( CPF_Parm )
//// struct FScriptDelegate         GetResultDelegate              ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanSearchTask* ULanSearchTask::eventSetResultWhen ( class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate )
//{
//	static UFunction* pFnSetResultWhen = NULL;
//
//	if ( ! pFnSetResultWhen )
//		pFnSetResultWhen = (UFunction*) UObject::GObjObjects()->Data[ 57443 ];
//
//	ULanSearchTask_eventSetResultWhen_Parms SetResultWhen_Parms;
//	SetResultWhen_Parms.Other = Other;
//	memcpy ( &SetResultWhen_Parms.GetResultDelegate, &GetResultDelegate, 0x10 );
//
//	this->ProcessEvent ( pFnSetResultWhen, &SetResultWhen_Parms, NULL );
//
//	return SetResultWhen_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.SetResult
//// [0x00024803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< class ULanServerRecord_X* > InResult                       ( CPF_Parm | CPF_NeedCtorLink )
//// class UError*                  InError                        ( CPF_OptionalParm | CPF_Parm )
//
//class ULanSearchTask* ULanSearchTask::eventSetResult ( TArray< class ULanServerRecord_X* > InResult, class UError* InError )
//{
//	static UFunction* pFnSetResult = NULL;
//
//	if ( ! pFnSetResult )
//		pFnSetResult = (UFunction*) UObject::GObjObjects()->Data[ 57162 ];
//
//	ULanSearchTask_eventSetResult_Parms SetResult_Parms;
//	memcpy ( &SetResult_Parms.InResult, &InResult, 0xC );
//	SetResult_Parms.InError = InError;
//
//	this->ProcessEvent ( pFnSetResult, &SetResult_Parms, NULL );
//
//	return SetResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.NotifyOnResultComplete
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanSearchTask* ULanSearchTask::NotifyOnResultComplete ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnResultComplete = NULL;
//
//	if ( ! pFnNotifyOnResultComplete )
//		pFnNotifyOnResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57436 ];
//
//	ULanSearchTask_execNotifyOnResultComplete_Parms NotifyOnResultComplete_Parms;
//	memcpy ( &NotifyOnResultComplete_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnResultComplete, &NotifyOnResultComplete_Parms, NULL );
//
//	return NotifyOnResultComplete_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.NotifyOnResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class ULanSearchTask*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//class ULanSearchTask* ULanSearchTask::NotifyOnResult ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnNotifyOnResult = NULL;
//
//	if ( ! pFnNotifyOnResult )
//		pFnNotifyOnResult = (UFunction*) UObject::GObjObjects()->Data[ 57432 ];
//
//	ULanSearchTask_execNotifyOnResult_Parms NotifyOnResult_Parms;
//	memcpy ( &NotifyOnResult_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnNotifyOnResult, &NotifyOnResult_Parms, NULL );
//
//	return NotifyOnResult_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.LanSearchTaskResultDelegate
//// [0x00120000] 
//// Parameters infos:
//// TArray< class ULanServerRecord_X* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//TArray< class ULanServerRecord_X* > ULanSearchTask::LanSearchTaskResultDelegate ( )
//{
//	static UFunction* pFnLanSearchTaskResultDelegate = NULL;
//
//	if ( ! pFnLanSearchTaskResultDelegate )
//		pFnLanSearchTaskResultDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57142 ];
//
//	ULanSearchTask_execLanSearchTaskResultDelegate_Parms LanSearchTaskResultDelegate_Parms;
//
//	this->ProcessEvent ( pFnLanSearchTaskResultDelegate, &LanSearchTaskResultDelegate_Parms, NULL );
//
//	return LanSearchTaskResultDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.LanSearchTask.EventLanSearchTaskResultComplete
//// [0x00120000] 
//// Parameters infos:
//// TArray< class ULanServerRecord_X* > OutResult                      ( CPF_Parm | CPF_NeedCtorLink )
//// class UError*                  OutError                       ( CPF_Parm )
//
//void ULanSearchTask::EventLanSearchTaskResultComplete ( TArray< class ULanServerRecord_X* > OutResult, class UError* OutError )
//{
//	static UFunction* pFnEventLanSearchTaskResultComplete = NULL;
//
//	if ( ! pFnEventLanSearchTaskResultComplete )
//		pFnEventLanSearchTaskResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57137 ];
//
//	ULanSearchTask_execEventLanSearchTaskResultComplete_Parms EventLanSearchTaskResultComplete_Parms;
//	memcpy ( &EventLanSearchTaskResultComplete_Parms.OutResult, &OutResult, 0xC );
//	EventLanSearchTaskResultComplete_Parms.OutError = OutError;
//
//	this->ProcessEvent ( pFnEventLanSearchTaskResultComplete, &EventLanSearchTaskResultComplete_Parms, NULL );
//};
//
//// Function ProjectX.LanSearchTask.EventLanSearchTaskResult
//// [0x00120000] 
//// Parameters infos:
//// TArray< class ULanServerRecord_X* > OutResult                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void ULanSearchTask::EventLanSearchTaskResult ( TArray< class ULanServerRecord_X* > OutResult )
//{
//	static UFunction* pFnEventLanSearchTaskResult = NULL;
//
//	if ( ! pFnEventLanSearchTaskResult )
//		pFnEventLanSearchTaskResult = (UFunction*) UObject::GObjObjects()->Data[ 57141 ];
//
//	ULanSearchTask_execEventLanSearchTaskResult_Parms EventLanSearchTaskResult_Parms;
//	memcpy ( &EventLanSearchTaskResult_Parms.OutResult, &OutResult, 0xC );
//
//	this->ProcessEvent ( pFnEventLanSearchTaskResult, &EventLanSearchTaskResult_Parms, NULL );
//};
//
//// Function ProjectX.__LanSearchTask__NotifyOnResult.__LanSearchTask__NotifyOnResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__LanSearchTask__NotifyOnResult::__LanSearchTask__NotifyOnResult ( )
//{
//	static UFunction* pFn__LanSearchTask__NotifyOnResult = NULL;
//
//	if ( ! pFn__LanSearchTask__NotifyOnResult )
//		pFn__LanSearchTask__NotifyOnResult = (UFunction*) UObject::GObjObjects()->Data[ 57152 ];
//
//	U__LanSearchTask__NotifyOnResult_exec__LanSearchTask__NotifyOnResult_Parms __LanSearchTask__NotifyOnResult_Parms;
//
//	this->ProcessEvent ( pFn__LanSearchTask__NotifyOnResult, &__LanSearchTask__NotifyOnResult_Parms, NULL );
//};
//
//// Function ProjectX.__LanSearchTask__NotifyOnResultComplete.__LanSearchTask__NotifyOnResultComplete
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Err                            ( CPF_Parm )
//
//void U__LanSearchTask__NotifyOnResultComplete::__LanSearchTask__NotifyOnResultComplete ( class UError* Err )
//{
//	static UFunction* pFn__LanSearchTask__NotifyOnResultComplete = NULL;
//
//	if ( ! pFn__LanSearchTask__NotifyOnResultComplete )
//		pFn__LanSearchTask__NotifyOnResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57156 ];
//
//	U__LanSearchTask__NotifyOnResultComplete_exec__LanSearchTask__NotifyOnResultComplete_Parms __LanSearchTask__NotifyOnResultComplete_Parms;
//	__LanSearchTask__NotifyOnResultComplete_Parms.Err = Err;
//
//	this->ProcessEvent ( pFn__LanSearchTask__NotifyOnResultComplete, &__LanSearchTask__NotifyOnResultComplete_Parms, NULL );
//};
//
//// Function ProjectX.__LanSearchTask__SetResultWhen.__LanSearchTask__SetResultWhen
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__LanSearchTask__SetResultWhen::__LanSearchTask__SetResultWhen ( )
//{
//	static UFunction* pFn__LanSearchTask__SetResultWhen = NULL;
//
//	if ( ! pFn__LanSearchTask__SetResultWhen )
//		pFn__LanSearchTask__SetResultWhen = (UFunction*) UObject::GObjObjects()->Data[ 57161 ];
//
//	U__LanSearchTask__SetResultWhen_exec__LanSearchTask__SetResultWhen_Parms __LanSearchTask__SetResultWhen_Parms;
//
//	this->ProcessEvent ( pFn__LanSearchTask__SetResultWhen, &__LanSearchTask__SetResultWhen_Parms, NULL );
//};
//
//// Function ProjectX.__PartyMessageQueue_X__SendMessage.__PartyMessageQueue_X__SendMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  _                              ( CPF_Parm )
//
//void U__PartyMessageQueue_X__SendMessage::__PartyMessageQueue_X__SendMessage ( class UError* _ )
//{
//	static UFunction* pFn__PartyMessageQueue_X__SendMessage = NULL;
//
//	if ( ! pFn__PartyMessageQueue_X__SendMessage )
//		pFn__PartyMessageQueue_X__SendMessage = (UFunction*) UObject::GObjObjects()->Data[ 57167 ];
//
//	U__PartyMessageQueue_X__SendMessage_exec__PartyMessageQueue_X__SendMessage_Parms __PartyMessageQueue_X__SendMessage_Parms;
//	__PartyMessageQueue_X__SendMessage_Parms._ = _;
//
//	this->ProcessEvent ( pFn__PartyMessageQueue_X__SendMessage, &__PartyMessageQueue_X__SendMessage_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.__PartyMessageQueue_X__CancelAll
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UPartyMessageQueue_X::__PartyMessageQueue_X__CancelAll ( class UAsyncTask* Task )
//{
//	static UFunction* pFn__PartyMessageQueue_X__CancelAll = NULL;
//
//	if ( ! pFn__PartyMessageQueue_X__CancelAll )
//		pFn__PartyMessageQueue_X__CancelAll = (UFunction*) UObject::GObjObjects()->Data[ 57497 ];
//
//	UPartyMessageQueue_X_exec__PartyMessageQueue_X__CancelAll_Parms __PartyMessageQueue_X__CancelAll_Parms;
//	__PartyMessageQueue_X__CancelAll_Parms.Task = Task;
//
//	this->ProcessEvent ( pFn__PartyMessageQueue_X__CancelAll, &__PartyMessageQueue_X__CancelAll_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.HandleTaskComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              Task                           ( CPF_Parm )
//
//void UPartyMessageQueue_X::HandleTaskComplete ( class UAsyncTask* Task )
//{
//	static UFunction* pFnHandleTaskComplete = NULL;
//
//	if ( ! pFnHandleTaskComplete )
//		pFnHandleTaskComplete = (UFunction*) UObject::GObjObjects()->Data[ 57170 ];
//
//	UPartyMessageQueue_X_execHandleTaskComplete_Parms HandleTaskComplete_Parms;
//	HandleTaskComplete_Parms.Task = Task;
//
//	this->ProcessEvent ( pFnHandleTaskComplete, &HandleTaskComplete_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.SendMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Parm )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UPartyMessageQueue_X::SendMessage ( struct FUniqueLobbyId LobbyId, struct FString Message )
//{
//	static UFunction* pFnSendMessage = NULL;
//
//	if ( ! pFnSendMessage )
//		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 57491 ];
//
//	UPartyMessageQueue_X_execSendMessage_Parms SendMessage_Parms;
//	memcpy ( &SendMessage_Parms.LobbyId, &LobbyId, 0xC );
//	memcpy ( &SendMessage_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
//
//	return SendMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PartyMessageQueue_X.SendBatch
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPartyMessageQueue_X::SendBatch ( )
//{
//	static UFunction* pFnSendBatch = NULL;
//
//	if ( ! pFnSendBatch )
//		pFnSendBatch = (UFunction*) UObject::GObjObjects()->Data[ 57486 ];
//
//	UPartyMessageQueue_X_execSendBatch_Parms SendBatch_Parms;
//
//	this->ProcessEvent ( pFnSendBatch, &SendBatch_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.SendBatchTimer
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPartyMessageQueue_X::SendBatchTimer ( )
//{
//	static UFunction* pFnSendBatchTimer = NULL;
//
//	if ( ! pFnSendBatchTimer )
//		pFnSendBatchTimer = (UFunction*) UObject::GObjObjects()->Data[ 57490 ];
//
//	UPartyMessageQueue_X_execSendBatchTimer_Parms SendBatchTimer_Parms;
//
//	this->ProcessEvent ( pFnSendBatchTimer, &SendBatchTimer_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.QueueBatch
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPartyMessageQueue_X::QueueBatch ( )
//{
//	static UFunction* pFnQueueBatch = NULL;
//
//	if ( ! pFnQueueBatch )
//		pFnQueueBatch = (UFunction*) UObject::GObjObjects()->Data[ 57484 ];
//
//	UPartyMessageQueue_X_execQueueBatch_Parms QueueBatch_Parms;
//
//	this->ProcessEvent ( pFnQueueBatch, &QueueBatch_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.CancelAll
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UPartyMessageQueue_X::CancelAll ( )
//{
//	static UFunction* pFnCancelAll = NULL;
//
//	if ( ! pFnCancelAll )
//		pFnCancelAll = (UFunction*) UObject::GObjObjects()->Data[ 57485 ];
//
//	UPartyMessageQueue_X_execCancelAll_Parms CancelAll_Parms;
//
//	this->ProcessEvent ( pFnCancelAll, &CancelAll_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.QueueMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Parm )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPartyMessageQueue_X::QueueMessage ( struct FUniqueLobbyId LobbyId, struct FString Message )
//{
//	static UFunction* pFnQueueMessage = NULL;
//
//	if ( ! pFnQueueMessage )
//		pFnQueueMessage = (UFunction*) UObject::GObjObjects()->Data[ 57479 ];
//
//	UPartyMessageQueue_X_execQueueMessage_Parms QueueMessage_Parms;
//	memcpy ( &QueueMessage_Parms.LobbyId, &LobbyId, 0xC );
//	memcpy ( &QueueMessage_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnQueueMessage, &QueueMessage_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.SetPaused
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bPause                         ( CPF_Parm )
//
//void UPartyMessageQueue_X::SetPaused ( unsigned long bPause )
//{
//	static UFunction* pFnSetPaused = NULL;
//
//	if ( ! pFnSetPaused )
//		pFnSetPaused = (UFunction*) UObject::GObjObjects()->Data[ 57483 ];
//
//	UPartyMessageQueue_X_execSetPaused_Parms SetPaused_Parms;
//	SetPaused_Parms.bPause = bPause;
//
//	this->ProcessEvent ( pFnSetPaused, &SetPaused_Parms, NULL );
//};
//
//// Function ProjectX.PartyMessageQueue_X.SendMessageServiceDelegate
//// [0x00120002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          LobbyId                        ( CPF_Parm )
//// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UPartyMessageQueue_X::SendMessageServiceDelegate ( struct FUniqueLobbyId LobbyId, struct FString Message )
//{
//	static UFunction* pFnSendMessageServiceDelegate = NULL;
//
//	if ( ! pFnSendMessageServiceDelegate )
//		pFnSendMessageServiceDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57467 ];
//
//	UPartyMessageQueue_X_execSendMessageServiceDelegate_Parms SendMessageServiceDelegate_Parms;
//	memcpy ( &SendMessageServiceDelegate_Parms.LobbyId, &LobbyId, 0xC );
//	memcpy ( &SendMessageServiceDelegate_Parms.Message, &Message, 0xC );
//
//	this->ProcessEvent ( pFnSendMessageServiceDelegate, &SendMessageServiceDelegate_Parms, NULL );
//
//	return SendMessageServiceDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.__PsyNetConnection_X__ProcessServiceCall.__PsyNetConnection_X__ProcessServiceCall
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  _                              ( CPF_Parm )
//
//void U__PsyNetConnection_X__ProcessServiceCall::__PsyNetConnection_X__ProcessServiceCall ( class UError* _ )
//{
//	static UFunction* pFn__PsyNetConnection_X__ProcessServiceCall = NULL;
//
//	if ( ! pFn__PsyNetConnection_X__ProcessServiceCall )
//		pFn__PsyNetConnection_X__ProcessServiceCall = (UFunction*) UObject::GObjObjects()->Data[ 57174 ];
//
//	U__PsyNetConnection_X__ProcessServiceCall_exec__PsyNetConnection_X__ProcessServiceCall_Parms __PsyNetConnection_X__ProcessServiceCall_Parms;
//	__PsyNetConnection_X__ProcessServiceCall_Parms._ = _;
//
//	this->ProcessEvent ( pFn__PsyNetConnection_X__ProcessServiceCall, &__PsyNetConnection_X__ProcessServiceCall_Parms, NULL );
//};
//
//// Function ProjectX.__PsyNetMessengerHttp_X__SendMessage.__PsyNetMessengerHttp_X__SendMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UWebRequest_X*           Request                        ( CPF_Parm )
//
//void U__PsyNetMessengerHttp_X__SendMessage::__PsyNetMessengerHttp_X__SendMessage ( class UWebRequest_X* Request )
//{
//	static UFunction* pFn__PsyNetMessengerHttp_X__SendMessage = NULL;
//
//	if ( ! pFn__PsyNetMessengerHttp_X__SendMessage )
//		pFn__PsyNetMessengerHttp_X__SendMessage = (UFunction*) UObject::GObjObjects()->Data[ 57182 ];
//
//	U__PsyNetMessengerHttp_X__SendMessage_exec__PsyNetMessengerHttp_X__SendMessage_Parms __PsyNetMessengerHttp_X__SendMessage_Parms;
//	__PsyNetMessengerHttp_X__SendMessage_Parms.Request = Request;
//
//	this->ProcessEvent ( pFn__PsyNetMessengerHttp_X__SendMessage, &__PsyNetMessengerHttp_X__SendMessage_Parms, NULL );
//};
//
//// Function ProjectX.__PsyNetRequestQue_X__SendRequest.__PsyNetRequestQue_X__SendRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__PsyNetRequestQue_X__SendRequest::__PsyNetRequestQue_X__SendRequest ( )
//{
//	static UFunction* pFn__PsyNetRequestQue_X__SendRequest = NULL;
//
//	if ( ! pFn__PsyNetRequestQue_X__SendRequest )
//		pFn__PsyNetRequestQue_X__SendRequest = (UFunction*) UObject::GObjObjects()->Data[ 57188 ];
//
//	U__PsyNetRequestQue_X__SendRequest_exec__PsyNetRequestQue_X__SendRequest_Parms __PsyNetRequestQue_X__SendRequest_Parms;
//
//	this->ProcessEvent ( pFn__PsyNetRequestQue_X__SendRequest, &__PsyNetRequestQue_X__SendRequest_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetRequestQue_X.FailAllPending
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetRequestQue_X::FailAllPending ( class UError* Error )
//{
//	static UFunction* pFnFailAllPending = NULL;
//
//	if ( ! pFnFailAllPending )
//		pFnFailAllPending = (UFunction*) UObject::GObjObjects()->Data[ 58215 ];
//
//	UPsyNetRequestQue_X_execFailAllPending_Parms FailAllPending_Parms;
//	FailAllPending_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnFailAllPending, &FailAllPending_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetRequestQue_X.TimeoutRequests
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetRequestQue_X::TimeoutRequests ( )
//{
//	static UFunction* pFnTimeoutRequests = NULL;
//
//	if ( ! pFnTimeoutRequests )
//		pFnTimeoutRequests = (UFunction*) UObject::GObjObjects()->Data[ 58463 ];
//
//	UPsyNetRequestQue_X_execTimeoutRequests_Parms TimeoutRequests_Parms;
//
//	this->ProcessEvent ( pFnTimeoutRequests, &TimeoutRequests_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetRequestQue_X.ProcessResponseMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//bool UPsyNetRequestQue_X::ProcessResponseMessage ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnProcessResponseMessage = NULL;
//
//	if ( ! pFnProcessResponseMessage )
//		pFnProcessResponseMessage = (UFunction*) UObject::GObjObjects()->Data[ 58248 ];
//
//	UPsyNetRequestQue_X_execProcessResponseMessage_Parms ProcessResponseMessage_Parms;
//	ProcessResponseMessage_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnProcessResponseMessage, &ProcessResponseMessage_Parms, NULL );
//
//	return ProcessResponseMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetRequestQue_X.RemoveRequest
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   RequestID                      ( CPF_Parm )
//
//void UPsyNetRequestQue_X::RemoveRequest ( struct FName RequestID )
//{
//	static UFunction* pFnRemoveRequest = NULL;
//
//	if ( ! pFnRemoveRequest )
//		pFnRemoveRequest = (UFunction*) UObject::GObjObjects()->Data[ 57190 ];
//
//	UPsyNetRequestQue_X_execRemoveRequest_Parms RemoveRequest_Parms;
//	memcpy ( &RemoveRequest_Parms.RequestID, &RequestID, 0x8 );
//
//	this->ProcessEvent ( pFnRemoveRequest, &RemoveRequest_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetRequestQue_X.SetRequestComplete
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   RequestID                      ( CPF_Parm )
//// class UPsyNetMessage_X*        Response                       ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPsyNetRequestQue_X::SetRequestComplete ( struct FName RequestID, class UPsyNetMessage_X* Response, class UError* Error )
//{
//	static UFunction* pFnSetRequestComplete = NULL;
//
//	if ( ! pFnSetRequestComplete )
//		pFnSetRequestComplete = (UFunction*) UObject::GObjObjects()->Data[ 58453 ];
//
//	UPsyNetRequestQue_X_execSetRequestComplete_Parms SetRequestComplete_Parms;
//	memcpy ( &SetRequestComplete_Parms.RequestID, &RequestID, 0x8 );
//	SetRequestComplete_Parms.Response = Response;
//	SetRequestComplete_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnSetRequestComplete, &SetRequestComplete_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetRequestQue_X.SendRequest
//// [0x00820803] ( FUNC_Final | FUNC_Event )
//// Parameters infos:
//// class USendRequestTask*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class USendRequestTask* UPsyNetRequestQue_X::eventSendRequest ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendRequest = NULL;
//
//	if ( ! pFnSendRequest )
//		pFnSendRequest = (UFunction*) UObject::GObjObjects()->Data[ 58242 ];
//
//	UPsyNetRequestQue_X_eventSendRequest_Parms SendRequest_Parms;
//	SendRequest_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendRequest, &SendRequest_Parms, NULL );
//
//	return SendRequest_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetRequestQue_X.SendMessageDelegate
//// [0x00120000] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UAsyncTask* UPsyNetRequestQue_X::SendMessageDelegate ( class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnSendMessageDelegate = NULL;
//
//	if ( ! pFnSendMessageDelegate )
//		pFnSendMessageDelegate = (UFunction*) UObject::GObjObjects()->Data[ 58445 ];
//
//	UPsyNetRequestQue_X_execSendMessageDelegate_Parms SendMessageDelegate_Parms;
//	SendMessageDelegate_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnSendMessageDelegate, &SendMessageDelegate_Parms, NULL );
//
//	return SendMessageDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.__PsyNetServiceProvider_X__CreateChannel.__PsyNetServiceProvider_X__CreateChannel
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetChannel_X*        C                              ( CPF_Parm )
//
//bool U__PsyNetServiceProvider_X__CreateChannel::__PsyNetServiceProvider_X__CreateChannel ( class UPsyNetChannel_X* C )
//{
//	static UFunction* pFn__PsyNetServiceProvider_X__CreateChannel = NULL;
//
//	if ( ! pFn__PsyNetServiceProvider_X__CreateChannel )
//		pFn__PsyNetServiceProvider_X__CreateChannel = (UFunction*) UObject::GObjObjects()->Data[ 57194 ];
//
//	U__PsyNetServiceProvider_X__CreateChannel_exec__PsyNetServiceProvider_X__CreateChannel_Parms __PsyNetServiceProvider_X__CreateChannel_Parms;
//	__PsyNetServiceProvider_X__CreateChannel_Parms.C = C;
//
//	this->ProcessEvent ( pFn__PsyNetServiceProvider_X__CreateChannel, &__PsyNetServiceProvider_X__CreateChannel_Parms, NULL );
//
//	return __PsyNetServiceProvider_X__CreateChannel_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetChannel_X.GetDebugName
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UPsyNetChannel_X::GetDebugName ( )
//{
//	static UFunction* pFnGetDebugName = NULL;
//
//	if ( ! pFnGetDebugName )
//		pFnGetDebugName = (UFunction*) UObject::GObjObjects()->Data[ 58150 ];
//
//	UPsyNetChannel_X_execGetDebugName_Parms GetDebugName_Parms;
//
//	this->ProcessEvent ( pFnGetDebugName, &GetDebugName_Parms, NULL );
//
//	return GetDebugName_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetChannel_X.Close
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetChannel_X::Close ( )
//{
//	static UFunction* pFnClose = NULL;
//
//	if ( ! pFnClose )
//		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 57878 ];
//
//	UPsyNetChannel_X_execClose_Parms Close_Parms;
//
//	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.Timeout
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetChannel_X::Timeout ( )
//{
//	static UFunction* pFnTimeout = NULL;
//
//	if ( ! pFnTimeout )
//		pFnTimeout = (UFunction*) UObject::GObjObjects()->Data[ 58161 ];
//
//	UPsyNetChannel_X_execTimeout_Parms Timeout_Parms;
//
//	this->ProcessEvent ( pFnTimeout, &Timeout_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.ClearTimeout
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetChannel_X::ClearTimeout ( )
//{
//	static UFunction* pFnClearTimeout = NULL;
//
//	if ( ! pFnClearTimeout )
//		pFnClearTimeout = (UFunction*) UObject::GObjObjects()->Data[ 58162 ];
//
//	UPsyNetChannel_X_execClearTimeout_Parms ClearTimeout_Parms;
//
//	this->ProcessEvent ( pFnClearTimeout, &ClearTimeout_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.UpdateTimeout
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetChannel_X::UpdateTimeout ( )
//{
//	static UFunction* pFnUpdateTimeout = NULL;
//
//	if ( ! pFnUpdateTimeout )
//		pFnUpdateTimeout = (UFunction*) UObject::GObjObjects()->Data[ 58142 ];
//
//	UPsyNetChannel_X_execUpdateTimeout_Parms UpdateTimeout_Parms;
//
//	this->ProcessEvent ( pFnUpdateTimeout, &UpdateTimeout_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.ExecuteService
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//
//void UPsyNetChannel_X::ExecuteService ( class UPsyNetClientService_X* Service )
//{
//	static UFunction* pFnExecuteService = NULL;
//
//	if ( ! pFnExecuteService )
//		pFnExecuteService = (UFunction*) UObject::GObjObjects()->Data[ 58151 ];
//
//	UPsyNetChannel_X_execExecuteService_Parms ExecuteService_Parms;
//	ExecuteService_Parms.Service = Service;
//
//	this->ProcessEvent ( pFnExecuteService, &ExecuteService_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.ExecuteNext
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetChannel_X::ExecuteNext ( )
//{
//	static UFunction* pFnExecuteNext = NULL;
//
//	if ( ! pFnExecuteNext )
//		pFnExecuteNext = (UFunction*) UObject::GObjObjects()->Data[ 58141 ];
//
//	UPsyNetChannel_X_execExecuteNext_Parms ExecuteNext_Parms;
//
//	this->ProcessEvent ( pFnExecuteNext, &ExecuteNext_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.CreatePendingService
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//// int                            MessageId                      ( CPF_Parm )
//
//class UAsyncTask* UPsyNetChannel_X::CreatePendingService ( class UPsyNetClientService_X* Service, int MessageId )
//{
//	static UFunction* pFnCreatePendingService = NULL;
//
//	if ( ! pFnCreatePendingService )
//		pFnCreatePendingService = (UFunction*) UObject::GObjObjects()->Data[ 58152 ];
//
//	UPsyNetChannel_X_execCreatePendingService_Parms CreatePendingService_Parms;
//	CreatePendingService_Parms.Service = Service;
//	CreatePendingService_Parms.MessageId = MessageId;
//
//	this->ProcessEvent ( pFnCreatePendingService, &CreatePendingService_Parms, NULL );
//
//	return CreatePendingService_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetChannel_X.QueueServiceCall
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UPsyNetClientService_X*  Service                        ( CPF_Parm )
//// class UPsyNetMessage_X*        Message                        ( CPF_Parm )
//
//class UAsyncTask* UPsyNetChannel_X::QueueServiceCall ( class UPsyNetClientService_X* Service, class UPsyNetMessage_X* Message )
//{
//	static UFunction* pFnQueueServiceCall = NULL;
//
//	if ( ! pFnQueueServiceCall )
//		pFnQueueServiceCall = (UFunction*) UObject::GObjObjects()->Data[ 58143 ];
//
//	UPsyNetChannel_X_execQueueServiceCall_Parms QueueServiceCall_Parms;
//	QueueServiceCall_Parms.Service = Service;
//	QueueServiceCall_Parms.Message = Message;
//
//	this->ProcessEvent ( pFnQueueServiceCall, &QueueServiceCall_Parms, NULL );
//
//	return QueueServiceCall_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetChannel_X.Open
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UPsyNetChannel_X::Open ( )
//{
//	static UFunction* pFnOpen = NULL;
//
//	if ( ! pFnOpen )
//		pFnOpen = (UFunction*) UObject::GObjObjects()->Data[ 57880 ];
//
//	UPsyNetChannel_X_execOpen_Parms Open_Parms;
//
//	this->ProcessEvent ( pFnOpen, &Open_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.Unsubscribe
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetChannel_X::Unsubscribe ( struct FScriptDelegate Callback )
//{
//	static UFunction* pFnUnsubscribe = NULL;
//
//	if ( ! pFnUnsubscribe )
//		pFnUnsubscribe = (UFunction*) UObject::GObjObjects()->Data[ 58139 ];
//
//	UPsyNetChannel_X_execUnsubscribe_Parms Unsubscribe_Parms;
//	memcpy ( &Unsubscribe_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnUnsubscribe, &Unsubscribe_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.Subscribe
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UClass*                  ServiceClass                   ( CPF_Parm )
//// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetChannel_X::Subscribe ( class UClass* ServiceClass, struct FScriptDelegate Callback )
//{
//	static UFunction* pFnSubscribe = NULL;
//
//	if ( ! pFnSubscribe )
//		pFnSubscribe = (UFunction*) UObject::GObjObjects()->Data[ 58136 ];
//
//	UPsyNetChannel_X_execSubscribe_Parms Subscribe_Parms;
//	Subscribe_Parms.ServiceClass = ServiceClass;
//	memcpy ( &Subscribe_Parms.Callback, &Callback, 0x10 );
//
//	this->ProcessEvent ( pFnSubscribe, &Subscribe_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.Init
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 InChannelName                  ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPsyNetChannel_X::Init ( struct FString InChannelName )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58134 ];
//
//	UPsyNetChannel_X_execInit_Parms Init_Parms;
//	memcpy ( &Init_Parms.InChannelName, &InChannelName, 0xC );
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetChannel_X.EventClosed
//// [0x00120000] 
//// Parameters infos:
//// class UPsyNetChannel_X*        Channel                        ( CPF_Parm )
//
//void UPsyNetChannel_X::EventClosed ( class UPsyNetChannel_X* Channel )
//{
//	static UFunction* pFnEventClosed = NULL;
//
//	if ( ! pFnEventClosed )
//		pFnEventClosed = (UFunction*) UObject::GObjObjects()->Data[ 58127 ];
//
//	UPsyNetChannel_X_execEventClosed_Parms EventClosed_Parms;
//	EventClosed_Parms.Channel = Channel;
//
//	this->ProcessEvent ( pFnEventClosed, &EventClosed_Parms, NULL );
//};
//
//// Function ProjectX.__PsyNetServiceProvider_X__ExecuteRequest.__PsyNetServiceProvider_X__ExecuteRequest
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  Result                         ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void U__PsyNetServiceProvider_X__ExecuteRequest::__PsyNetServiceProvider_X__ExecuteRequest ( class UPsyNetClientService_X* Result, class UError* Error )
//{
//	static UFunction* pFn__PsyNetServiceProvider_X__ExecuteRequest = NULL;
//
//	if ( ! pFn__PsyNetServiceProvider_X__ExecuteRequest )
//		pFn__PsyNetServiceProvider_X__ExecuteRequest = (UFunction*) UObject::GObjObjects()->Data[ 57202 ];
//
//	U__PsyNetServiceProvider_X__ExecuteRequest_exec__PsyNetServiceProvider_X__ExecuteRequest_Parms __PsyNetServiceProvider_X__ExecuteRequest_Parms;
//	__PsyNetServiceProvider_X__ExecuteRequest_Parms.Result = Result;
//	__PsyNetServiceProvider_X__ExecuteRequest_Parms.Error = Error;
//
//	this->ProcessEvent ( pFn__PsyNetServiceProvider_X__ExecuteRequest, &__PsyNetServiceProvider_X__ExecuteRequest_Parms, NULL );
//};
//
//// Function ProjectX.__PsyNetServiceProvider_X__ExecuteServiceMessage.__PsyNetServiceProvider_X__ExecuteServiceMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Err                            ( CPF_Parm )
//
//void U__PsyNetServiceProvider_X__ExecuteServiceMessage::__PsyNetServiceProvider_X__ExecuteServiceMessage ( class UError* Err )
//{
//	static UFunction* pFn__PsyNetServiceProvider_X__ExecuteServiceMessage = NULL;
//
//	if ( ! pFn__PsyNetServiceProvider_X__ExecuteServiceMessage )
//		pFn__PsyNetServiceProvider_X__ExecuteServiceMessage = (UFunction*) UObject::GObjObjects()->Data[ 57210 ];
//
//	U__PsyNetServiceProvider_X__ExecuteServiceMessage_exec__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms __PsyNetServiceProvider_X__ExecuteServiceMessage_Parms;
//	__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms.Err = Err;
//
//	this->ProcessEvent ( pFn__PsyNetServiceProvider_X__ExecuteServiceMessage, &__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms, NULL );
//};
//
//// Function ProjectX.__PsyNetServiceProvider_X__ExecuteServiceMessage.__PsyNetServiceProvider_X__ExecuteServiceMessage
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetClientService_X*  R                              ( CPF_Parm )
//// class UError*                  E                              ( CPF_Parm )
//
////void U__PsyNetServiceProvider_X__ExecuteServiceMessage::__PsyNetServiceProvider_X__ExecuteServiceMessage ( class UPsyNetClientService_X* R, class UError* E )
////{
////	static UFunction* pFn__PsyNetServiceProvider_X__ExecuteServiceMessage = NULL;
////
////	if ( ! pFn__PsyNetServiceProvider_X__ExecuteServiceMessage )
////		pFn__PsyNetServiceProvider_X__ExecuteServiceMessage = (UFunction*) UObject::GObjObjects()->Data[ 57211 ];
////
////	U__PsyNetServiceProvider_X__ExecuteServiceMessage_exec__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms __PsyNetServiceProvider_X__ExecuteServiceMessage_Parms;
////	__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms.R = R;
////	__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms.E = E;
////
////	this->ProcessEvent ( pFn__PsyNetServiceProvider_X__ExecuteServiceMessage, &__PsyNetServiceProvider_X__ExecuteServiceMessage_Parms, NULL );
////};
//
//// Function ProjectX.__SendRequestTask__NotifyOnResult.__SendRequestTask__NotifyOnResult
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__SendRequestTask__NotifyOnResult::__SendRequestTask__NotifyOnResult ( )
//{
//	static UFunction* pFn__SendRequestTask__NotifyOnResult = NULL;
//
//	if ( ! pFn__SendRequestTask__NotifyOnResult )
//		pFn__SendRequestTask__NotifyOnResult = (UFunction*) UObject::GObjObjects()->Data[ 57236 ];
//
//	U__SendRequestTask__NotifyOnResult_exec__SendRequestTask__NotifyOnResult_Parms __SendRequestTask__NotifyOnResult_Parms;
//
//	this->ProcessEvent ( pFn__SendRequestTask__NotifyOnResult, &__SendRequestTask__NotifyOnResult_Parms, NULL );
//};
//
//// Function ProjectX.__SendRequestTask__NotifyOnResultComplete.__SendRequestTask__NotifyOnResultComplete
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Err                            ( CPF_Parm )
//
//void U__SendRequestTask__NotifyOnResultComplete::__SendRequestTask__NotifyOnResultComplete ( class UError* Err )
//{
//	static UFunction* pFn__SendRequestTask__NotifyOnResultComplete = NULL;
//
//	if ( ! pFn__SendRequestTask__NotifyOnResultComplete )
//		pFn__SendRequestTask__NotifyOnResultComplete = (UFunction*) UObject::GObjObjects()->Data[ 57240 ];
//
//	U__SendRequestTask__NotifyOnResultComplete_exec__SendRequestTask__NotifyOnResultComplete_Parms __SendRequestTask__NotifyOnResultComplete_Parms;
//	__SendRequestTask__NotifyOnResultComplete_Parms.Err = Err;
//
//	this->ProcessEvent ( pFn__SendRequestTask__NotifyOnResultComplete, &__SendRequestTask__NotifyOnResultComplete_Parms, NULL );
//};
//
//// Function ProjectX.__SendRequestTask__SetResultWhen.__SendRequestTask__SetResultWhen
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__SendRequestTask__SetResultWhen::__SendRequestTask__SetResultWhen ( )
//{
//	static UFunction* pFn__SendRequestTask__SetResultWhen = NULL;
//
//	if ( ! pFn__SendRequestTask__SetResultWhen )
//		pFn__SendRequestTask__SetResultWhen = (UFunction*) UObject::GObjObjects()->Data[ 57245 ];
//
//	U__SendRequestTask__SetResultWhen_exec__SendRequestTask__SetResultWhen_Parms __SendRequestTask__SetResultWhen_Parms;
//
//	this->ProcessEvent ( pFn__SendRequestTask__SetResultWhen, &__SendRequestTask__SetResultWhen_Parms, NULL );
//};
//
//// Function ProjectX.__TaskGate_X__Add.__TaskGate_X__Add
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__TaskGate_X__Add::__TaskGate_X__Add ( )
//{
//	static UFunction* pFn__TaskGate_X__Add = NULL;
//
//	if ( ! pFn__TaskGate_X__Add )
//		pFn__TaskGate_X__Add = (UFunction*) UObject::GObjObjects()->Data[ 57251 ];
//
//	U__TaskGate_X__Add_exec__TaskGate_X__Add_Parms __TaskGate_X__Add_Parms;
//
//	this->ProcessEvent ( pFn__TaskGate_X__Add, &__TaskGate_X__Add_Parms, NULL );
//};
//
//// Function ProjectX.TaskGate_X.AddWithTimeout
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          TimeoutSeconds                 ( CPF_Parm )
//// class UErrorType*              TimeoutError                   ( CPF_Parm )
//// struct FString                 ErrorMessage                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UTaskGate_X::AddWithTimeout ( float TimeoutSeconds, class UErrorType* TimeoutError, struct FString ErrorMessage )
//{
//	static UFunction* pFnAddWithTimeout = NULL;
//
//	if ( ! pFnAddWithTimeout )
//		pFnAddWithTimeout = (UFunction*) UObject::GObjObjects()->Data[ 58664 ];
//
//	UTaskGate_X_execAddWithTimeout_Parms AddWithTimeout_Parms;
//	AddWithTimeout_Parms.TimeoutSeconds = TimeoutSeconds;
//	AddWithTimeout_Parms.TimeoutError = TimeoutError;
//	memcpy ( &AddWithTimeout_Parms.ErrorMessage, &ErrorMessage, 0xC );
//
//	this->ProcessEvent ( pFnAddWithTimeout, &AddWithTimeout_Parms, NULL );
//
//	return AddWithTimeout_Parms.ReturnValue;
//};
//
//// Function ProjectX.TaskGate_X.Add
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UAsyncTask* UTaskGate_X::Add ( )
//{
//	static UFunction* pFnAdd = NULL;
//
//	if ( ! pFnAdd )
//		pFnAdd = (UFunction*) UObject::GObjObjects()->Data[ 58661 ];
//
//	UTaskGate_X_execAdd_Parms Add_Parms;
//
//	this->ProcessEvent ( pFnAdd, &Add_Parms, NULL );
//
//	return Add_Parms.ReturnValue;
//};
//
//// Function ProjectX.TaskGate_X.CompleteTasks
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UTaskGate_X::CompleteTasks ( )
//{
//	static UFunction* pFnCompleteTasks = NULL;
//
//	if ( ! pFnCompleteTasks )
//		pFnCompleteTasks = (UFunction*) UObject::GObjObjects()->Data[ 58659 ];
//
//	UTaskGate_X_execCompleteTasks_Parms CompleteTasks_Parms;
//
//	this->ProcessEvent ( pFnCompleteTasks, &CompleteTasks_Parms, NULL );
//};
//
//// Function ProjectX.TaskGate_X.SetOpen
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// unsigned long                  bIsOpen                        ( CPF_Parm )
//
//void UTaskGate_X::SetOpen ( unsigned long bIsOpen )
//{
//	static UFunction* pFnSetOpen = NULL;
//
//	if ( ! pFnSetOpen )
//		pFnSetOpen = (UFunction*) UObject::GObjObjects()->Data[ 58657 ];
//
//	UTaskGate_X_execSetOpen_Parms SetOpen_Parms;
//	SetOpen_Parms.bIsOpen = bIsOpen;
//
//	this->ProcessEvent ( pFnSetOpen, &SetOpen_Parms, NULL );
//};
//
//// Function ProjectX.__TaskGate_X__AddWithTimeout.__TaskGate_X__AddWithTimeout
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void U__TaskGate_X__AddWithTimeout::__TaskGate_X__AddWithTimeout ( )
//{
//	static UFunction* pFn__TaskGate_X__AddWithTimeout = NULL;
//
//	if ( ! pFn__TaskGate_X__AddWithTimeout )
//		pFn__TaskGate_X__AddWithTimeout = (UFunction*) UObject::GObjObjects()->Data[ 57260 ];
//
//	U__TaskGate_X__AddWithTimeout_exec__TaskGate_X__AddWithTimeout_Parms __TaskGate_X__AddWithTimeout_Parms;
//
//	this->ProcessEvent ( pFn__TaskGate_X__AddWithTimeout, &__TaskGate_X__AddWithTimeout_Parms, NULL );
//};
//
//// Function ProjectX.__TaskGate_X__AddWithTimeout.__TaskGate_X__AddWithTimeout
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
////void U__TaskGate_X__AddWithTimeout::__TaskGate_X__AddWithTimeout ( )
////{
////	static UFunction* pFn__TaskGate_X__AddWithTimeout = NULL;
////
////	if ( ! pFn__TaskGate_X__AddWithTimeout )
////		pFn__TaskGate_X__AddWithTimeout = (UFunction*) UObject::GObjObjects()->Data[ 57261 ];
////
////	U__TaskGate_X__AddWithTimeout_exec__TaskGate_X__AddWithTimeout_Parms __TaskGate_X__AddWithTimeout_Parms;
////
////	this->ProcessEvent ( pFn__TaskGate_X__AddWithTimeout, &__TaskGate_X__AddWithTimeout_Parms, NULL );
////};
//
//// Function ProjectX.BlogTile_X.UTCtoEpoch
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UBlogTile_X::UTCtoEpoch ( )
//{
//	static UFunction* pFnUTCtoEpoch = NULL;
//
//	if ( ! pFnUTCtoEpoch )
//		pFnUTCtoEpoch = (UFunction*) UObject::GObjObjects()->Data[ 57373 ];
//
//	UBlogTile_X_execUTCtoEpoch_Parms UTCtoEpoch_Parms;
//
//	this->ProcessEvent ( pFnUTCtoEpoch, &UTCtoEpoch_Parms, NULL );
//};
//
//// Function ProjectX.BlogTile_X.GetTileID
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UBlogTile_X::GetTileID ( )
//{
//	static UFunction* pFnGetTileID = NULL;
//
//	if ( ! pFnGetTileID )
//		pFnGetTileID = (UFunction*) UObject::GObjObjects()->Data[ 57371 ];
//
//	UBlogTile_X_execGetTileID_Parms GetTileID_Parms;
//
//	this->ProcessEvent ( pFnGetTileID, &GetTileID_Parms, NULL );
//
//	return GetTileID_Parms.ReturnValue;
//};
//
//// Function ProjectX.CountTrigger_X.Reset
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UCountTrigger_X::Reset ( )
//{
//	static UFunction* pFnReset = NULL;
//
//	if ( ! pFnReset )
//		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 57405 ];
//
//	UCountTrigger_X_execReset_Parms Reset_Parms;
//
//	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
//};
//
//// Function ProjectX.CountTrigger_X.Increment
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//
//void UCountTrigger_X::Increment ( )
//{
//	static UFunction* pFnIncrement = NULL;
//
//	if ( ! pFnIncrement )
//		pFnIncrement = (UFunction*) UObject::GObjObjects()->Data[ 57404 ];
//
//	UCountTrigger_X_execIncrement_Parms Increment_Parms;
//
//	this->ProcessEvent ( pFnIncrement, &Increment_Parms, NULL );
//};
//
//// Function ProjectX.CountTrigger_X.EventTriggered
//// [0x00120000] 
//// Parameters infos:
//// class UCountTrigger_X*         Trigger                        ( CPF_Parm | CPF_EditInline )
//
//void UCountTrigger_X::EventTriggered ( class UCountTrigger_X* Trigger )
//{
//	static UFunction* pFnEventTriggered = NULL;
//
//	if ( ! pFnEventTriggered )
//		pFnEventTriggered = (UFunction*) UObject::GObjObjects()->Data[ 57400 ];
//
//	UCountTrigger_X_execEventTriggered_Parms EventTriggered_Parms;
//	EventTriggered_Parms.Trigger = Trigger;
//
//	this->ProcessEvent ( pFnEventTriggered, &EventTriggered_Parms, NULL );
//};
//
//// Function ProjectX.RPC_PartyMessage_X.SetMessage
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartyMessage_X*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InMessage                      ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PartyMessage_X* URPC_PartyMessage_X::SetMessage ( struct FString InMessage )
//{
//	static UFunction* pFnSetMessage = NULL;
//
//	if ( ! pFnSetMessage )
//		pFnSetMessage = (UFunction*) UObject::GObjObjects()->Data[ 57475 ];
//
//	URPC_PartyMessage_X_execSetMessage_Parms SetMessage_Parms;
//	memcpy ( &SetMessage_Parms.InMessage, &InMessage, 0xC );
//
//	this->ProcessEvent ( pFnSetMessage, &SetMessage_Parms, NULL );
//
//	return SetMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PartyBase_X.SetPartyId
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartyBase_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueLobbyId          InLobbyId                      ( CPF_Parm )
//
//class URPC_PartyBase_X* URPC_PartyBase_X::SetPartyId ( struct FUniqueLobbyId InLobbyId )
//{
//	static UFunction* pFnSetPartyId = NULL;
//
//	if ( ! pFnSetPartyId )
//		pFnSetPartyId = (UFunction*) UObject::GObjObjects()->Data[ 57477 ];
//
//	URPC_PartyBase_X_execSetPartyId_Parms SetPartyId_Parms;
//	memcpy ( &SetPartyId_Parms.InLobbyId, &InLobbyId, 0xC );
//
//	this->ProcessEvent ( pFnSetPartyId, &SetPartyId_Parms, NULL );
//
//	return SetPartyId_Parms.ReturnValue;
//};
//
//// Function ProjectX.BugMetrics_X.Report
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   Id                             ( CPF_Parm )
//// struct FString                 Details                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Trace                          ( CPF_Parm | CPF_NeedCtorLink )
//
//void UBugMetrics_X::Report ( struct FName Id, struct FString Details, struct FString Trace )
//{
//	static UFunction* pFnReport = NULL;
//
//	if ( ! pFnReport )
//		pFnReport = (UFunction*) UObject::GObjObjects()->Data[ 58728 ];
//
//	UBugMetrics_X_execReport_Parms Report_Parms;
//	memcpy ( &Report_Parms.Id, &Id, 0x8 );
//	memcpy ( &Report_Parms.Details, &Details, 0xC );
//	memcpy ( &Report_Parms.Trace, &Trace, 0xC );
//
//	this->ProcessEvent ( pFnReport, &Report_Parms, NULL );
//};
//
//// Function ProjectX.BugMetrics_X.BugReport
//// [0x00024003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   Id                             ( CPF_Parm )
//// struct FString                 Details                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
//
//void UBugMetrics_X::BugReport ( struct FName Id, struct FString Details )
//{
//	static UFunction* pFnBugReport = NULL;
//
//	if ( ! pFnBugReport )
//		pFnBugReport = (UFunction*) UObject::GObjObjects()->Data[ 57736 ];
//
//	UBugMetrics_X_execBugReport_Parms BugReport_Parms;
//	memcpy ( &BugReport_Parms.Id, &Id, 0x8 );
//	memcpy ( &BugReport_Parms.Details, &Details, 0xC );
//
//	this->ProcessEvent ( pFnBugReport, &BugReport_Parms, NULL );
//};
//
//// Function ProjectX.RPC_PartyChat_X.SetText
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartyChat_X*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PartyChat_X* URPC_PartyChat_X::SetText ( struct FString InText )
//{
//	static UFunction* pFnSetText = NULL;
//
//	if ( ! pFnSetText )
//		pFnSetText = (UFunction*) UObject::GObjObjects()->Data[ 57748 ];
//
//	URPC_PartyChat_X_execSetText_Parms SetText_Parms;
//	memcpy ( &SetText_Parms.InText, &InText, 0xC );
//
//	this->ProcessEvent ( pFnSetText, &SetText_Parms, NULL );
//
//	return SetText_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PartyChangeOwner_X.SetNewOwnerId
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartyChangeOwner_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InNewOwnerId                   ( CPF_Parm )
//
//class URPC_PartyChangeOwner_X* URPC_PartyChangeOwner_X::SetNewOwnerId ( struct FUniqueNetId InNewOwnerId )
//{
//	static UFunction* pFnSetNewOwnerId = NULL;
//
//	if ( ! pFnSetNewOwnerId )
//		pFnSetNewOwnerId = (UFunction*) UObject::GObjObjects()->Data[ 57787 ];
//
//	URPC_PartyChangeOwner_X_execSetNewOwnerId_Parms SetNewOwnerId_Parms;
//	memcpy ( &SetNewOwnerId_Parms.InNewOwnerId, &InNewOwnerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetNewOwnerId, &SetNewOwnerId_Parms, NULL );
//
//	return SetNewOwnerId_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PartySendInvites_X.AddInvitee
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartySendInvites_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InInviteeUserId                ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PartySendInvites_X* URPC_PartySendInvites_X::AddInvitee ( struct FString InInviteeUserId )
//{
//	static UFunction* pFnAddInvitee = NULL;
//
//	if ( ! pFnAddInvitee )
//		pFnAddInvitee = (UFunction*) UObject::GObjObjects()->Data[ 57803 ];
//
//	URPC_PartySendInvites_X_execAddInvitee_Parms AddInvitee_Parms;
//	memcpy ( &AddInvitee_Parms.InInviteeUserId, &InInviteeUserId, 0xC );
//
//	this->ProcessEvent ( pFnAddInvitee, &AddInvitee_Parms, NULL );
//
//	return AddInvitee_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PartyKickMember_X.AddMember
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartyKickMember_X*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InMemberId                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PartyKickMember_X* URPC_PartyKickMember_X::AddMember ( struct FString InMemberId )
//{
//	static UFunction* pFnAddMember = NULL;
//
//	if ( ! pFnAddMember )
//		pFnAddMember = (UFunction*) UObject::GObjObjects()->Data[ 57816 ];
//
//	URPC_PartyKickMember_X_execAddMember_Parms AddMember_Parms;
//	memcpy ( &AddMember_Parms.InMemberId, &InMemberId, 0xC );
//
//	this->ProcessEvent ( pFnAddMember, &AddMember_Parms, NULL );
//
//	return AddMember_Parms.ReturnValue;
//};
//
//// Function ProjectX.PerConMetrics_X.ServiceFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Count                          ( CPF_Parm )
//// struct FString                 Service                        ( CPF_Parm | CPF_NeedCtorLink )
//// struct FName                   Error                          ( CPF_Parm )
//
//void UPerConMetrics_X::ServiceFail ( struct FString PlayerID, int Count, struct FString Service, struct FName Error )
//{
//	static UFunction* pFnServiceFail = NULL;
//
//	if ( ! pFnServiceFail )
//		pFnServiceFail = (UFunction*) UObject::GObjObjects()->Data[ 58057 ];
//
//	UPerConMetrics_X_execServiceFail_Parms ServiceFail_Parms;
//	memcpy ( &ServiceFail_Parms.PlayerID, &PlayerID, 0xC );
//	ServiceFail_Parms.Count = Count;
//	memcpy ( &ServiceFail_Parms.Service, &Service, 0xC );
//	memcpy ( &ServiceFail_Parms.Error, &Error, 0x8 );
//
//	this->ProcessEvent ( pFnServiceFail, &ServiceFail_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.InvalidMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Count                          ( CPF_Parm )
//// struct FString                 Substring                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::InvalidMessage ( struct FString PlayerID, int Count, struct FString Substring )
//{
//	static UFunction* pFnInvalidMessage = NULL;
//
//	if ( ! pFnInvalidMessage )
//		pFnInvalidMessage = (UFunction*) UObject::GObjObjects()->Data[ 58049 ];
//
//	UPerConMetrics_X_execInvalidMessage_Parms InvalidMessage_Parms;
//	memcpy ( &InvalidMessage_Parms.PlayerID, &PlayerID, 0xC );
//	InvalidMessage_Parms.Count = Count;
//	memcpy ( &InvalidMessage_Parms.Substring, &Substring, 0xC );
//
//	this->ProcessEvent ( pFnInvalidMessage, &InvalidMessage_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.Disconnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Count                          ( CPF_Parm )
//// int                            Code                           ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//// float                          ElapsedSeconds                 ( CPF_Parm )
//
//void UPerConMetrics_X::Disconnected ( struct FString PlayerID, int Count, int Code, struct FString Reason, float ElapsedSeconds )
//{
//	static UFunction* pFnDisconnected = NULL;
//
//	if ( ! pFnDisconnected )
//		pFnDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58044 ];
//
//	UPerConMetrics_X_execDisconnected_Parms Disconnected_Parms;
//	memcpy ( &Disconnected_Parms.PlayerID, &PlayerID, 0xC );
//	Disconnected_Parms.Count = Count;
//	Disconnected_Parms.Code = Code;
//	memcpy ( &Disconnected_Parms.Reason, &Reason, 0xC );
//	Disconnected_Parms.ElapsedSeconds = ElapsedSeconds;
//
//	this->ProcessEvent ( pFnDisconnected, &Disconnected_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.Connected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// float                          ElapsedSeconds                 ( CPF_Parm )
//
//void UPerConMetrics_X::Connected ( struct FString PlayerID, float ElapsedSeconds )
//{
//	static UFunction* pFnConnected = NULL;
//
//	if ( ! pFnConnected )
//		pFnConnected = (UFunction*) UObject::GObjObjects()->Data[ 58039 ];
//
//	UPerConMetrics_X_execConnected_Parms Connected_Parms;
//	memcpy ( &Connected_Parms.PlayerID, &PlayerID, 0xC );
//	Connected_Parms.ElapsedSeconds = ElapsedSeconds;
//
//	this->ProcessEvent ( pFnConnected, &Connected_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.ConnectFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Count                          ( CPF_Parm )
//// int                            Code                           ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//// float                          ElapsedSeconds                 ( CPF_Parm )
//
//void UPerConMetrics_X::ConnectFail ( struct FString PlayerID, int Count, int Code, struct FString Reason, float ElapsedSeconds )
//{
//	static UFunction* pFnConnectFail = NULL;
//
//	if ( ! pFnConnectFail )
//		pFnConnectFail = (UFunction*) UObject::GObjObjects()->Data[ 58045 ];
//
//	UPerConMetrics_X_execConnectFail_Parms ConnectFail_Parms;
//	memcpy ( &ConnectFail_Parms.PlayerID, &PlayerID, 0xC );
//	ConnectFail_Parms.Count = Count;
//	ConnectFail_Parms.Code = Code;
//	memcpy ( &ConnectFail_Parms.Reason, &Reason, 0xC );
//	ConnectFail_Parms.ElapsedSeconds = ElapsedSeconds;
//
//	this->ProcessEvent ( pFnConnectFail, &ConnectFail_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.StartConnectFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// int                            Count                          ( CPF_Parm )
//
//void UPerConMetrics_X::StartConnectFail ( struct FString PlayerID, int Count )
//{
//	static UFunction* pFnStartConnectFail = NULL;
//
//	if ( ! pFnStartConnectFail )
//		pFnStartConnectFail = (UFunction*) UObject::GObjObjects()->Data[ 58036 ];
//
//	UPerConMetrics_X_execStartConnectFail_Parms StartConnectFail_Parms;
//	memcpy ( &StartConnectFail_Parms.PlayerID, &PlayerID, 0xC );
//	StartConnectFail_Parms.Count = Count;
//
//	this->ProcessEvent ( pFnStartConnectFail, &StartConnectFail_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.StartConnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::StartConnect ( struct FString PlayerID )
//{
//	static UFunction* pFnStartConnect = NULL;
//
//	if ( ! pFnStartConnect )
//		pFnStartConnect = (UFunction*) UObject::GObjObjects()->Data[ 58033 ];
//
//	UPerConMetrics_X_execStartConnect_Parms StartConnect_Parms;
//	memcpy ( &StartConnect_Parms.PlayerID, &PlayerID, 0xC );
//
//	this->ProcessEvent ( pFnStartConnect, &StartConnect_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.Broken
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::Broken ( struct FString PlayerID, struct FString Reason )
//{
//	static UFunction* pFnBroken = NULL;
//
//	if ( ! pFnBroken )
//		pFnBroken = (UFunction*) UObject::GObjObjects()->Data[ 58029 ];
//
//	UPerConMetrics_X_execBroken_Parms Broken_Parms;
//	memcpy ( &Broken_Parms.PlayerID, &PlayerID, 0xC );
//	memcpy ( &Broken_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnBroken, &Broken_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.Disabled
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::Disabled ( struct FString PlayerID )
//{
//	static UFunction* pFnDisabled = NULL;
//
//	if ( ! pFnDisabled )
//		pFnDisabled = (UFunction*) UObject::GObjObjects()->Data[ 58028 ];
//
//	UPerConMetrics_X_execDisabled_Parms Disabled_Parms;
//	memcpy ( &Disabled_Parms.PlayerID, &PlayerID, 0xC );
//
//	this->ProcessEvent ( pFnDisabled, &Disabled_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.Enabled
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 PlayerID                       ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::Enabled ( struct FString PlayerID )
//{
//	static UFunction* pFnEnabled = NULL;
//
//	if ( ! pFnEnabled )
//		pFnEnabled = (UFunction*) UObject::GObjObjects()->Data[ 58027 ];
//
//	UPerConMetrics_X_execEnabled_Parms Enabled_Parms;
//	memcpy ( &Enabled_Parms.PlayerID, &PlayerID, 0xC );
//
//	this->ProcessEvent ( pFnEnabled, &Enabled_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleRPCError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPCQueue_X*             InQueue                        ( CPF_Parm | CPF_EditInline )
//// class URPC_X*                  RPC                            ( CPF_Parm )
//// class UError*                  Error                          ( CPF_Parm )
//
//void UPerConMetrics_X::HandleRPCError ( class URPCQueue_X* InQueue, class URPC_X* RPC, class UError* Error )
//{
//	static UFunction* pFnHandleRPCError = NULL;
//
//	if ( ! pFnHandleRPCError )
//		pFnHandleRPCError = (UFunction*) UObject::GObjObjects()->Data[ 58050 ];
//
//	UPerConMetrics_X_execHandleRPCError_Parms HandleRPCError_Parms;
//	HandleRPCError_Parms.InQueue = InQueue;
//	HandleRPCError_Parms.RPC = RPC;
//	HandleRPCError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleRPCError, &HandleRPCError_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleInvalidMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* InMessenger                    ( CPF_Parm )
//// struct FString                 Substring                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::HandleInvalidMessage ( class UPsyNetMessengerWebSocket_X* InMessenger, struct FString Substring )
//{
//	static UFunction* pFnHandleInvalidMessage = NULL;
//
//	if ( ! pFnHandleInvalidMessage )
//		pFnHandleInvalidMessage = (UFunction*) UObject::GObjObjects()->Data[ 58046 ];
//
//	UPerConMetrics_X_execHandleInvalidMessage_Parms HandleInvalidMessage_Parms;
//	HandleInvalidMessage_Parms.InMessenger = InMessenger;
//	memcpy ( &HandleInvalidMessage_Parms.Substring, &Substring, 0xC );
//
//	this->ProcessEvent ( pFnHandleInvalidMessage, &HandleInvalidMessage_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleDisconnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Socket                         ( CPF_Parm )
//// int                            Code                           ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMetrics_X::HandleDisconnected ( class UPsyNetMessengerWebSocket_X* Socket, int Code, struct FString Reason )
//{
//	static UFunction* pFnHandleDisconnected = NULL;
//
//	if ( ! pFnHandleDisconnected )
//		pFnHandleDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58040 ];
//
//	UPerConMetrics_X_execHandleDisconnected_Parms HandleDisconnected_Parms;
//	HandleDisconnected_Parms.Socket = Socket;
//	HandleDisconnected_Parms.Code = Code;
//	memcpy ( &HandleDisconnected_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnHandleDisconnected, &HandleDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleConnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Socket                         ( CPF_Parm )
//
//void UPerConMetrics_X::HandleConnected ( class UPsyNetMessengerWebSocket_X* Socket )
//{
//	static UFunction* pFnHandleConnected = NULL;
//
//	if ( ! pFnHandleConnected )
//		pFnHandleConnected = (UFunction*) UObject::GObjObjects()->Data[ 58037 ];
//
//	UPerConMetrics_X_execHandleConnected_Parms HandleConnected_Parms;
//	HandleConnected_Parms.Socket = Socket;
//
//	this->ProcessEvent ( pFnHandleConnected, &HandleConnected_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleStartConnectFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Socket                         ( CPF_Parm )
//
//void UPerConMetrics_X::HandleStartConnectFail ( class UPsyNetMessengerWebSocket_X* Socket )
//{
//	static UFunction* pFnHandleStartConnectFail = NULL;
//
//	if ( ! pFnHandleStartConnectFail )
//		pFnHandleStartConnectFail = (UFunction*) UObject::GObjObjects()->Data[ 58034 ];
//
//	UPerConMetrics_X_execHandleStartConnectFail_Parms HandleStartConnectFail_Parms;
//	HandleStartConnectFail_Parms.Socket = Socket;
//
//	this->ProcessEvent ( pFnHandleStartConnectFail, &HandleStartConnectFail_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleStartConnect
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* Socket                         ( CPF_Parm )
//
//void UPerConMetrics_X::HandleStartConnect ( class UPsyNetMessengerWebSocket_X* Socket )
//{
//	static UFunction* pFnHandleStartConnect = NULL;
//
//	if ( ! pFnHandleStartConnect )
//		pFnHandleStartConnect = (UFunction*) UObject::GObjObjects()->Data[ 58030 ];
//
//	UPerConMetrics_X_execHandleStartConnect_Parms HandleStartConnect_Parms;
//	HandleStartConnect_Parms.Socket = Socket;
//
//	this->ProcessEvent ( pFnHandleStartConnect, &HandleStartConnect_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.HandleStatusChanged
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPerCon_X*               PerCon                         ( CPF_Parm )
//
//void UPerConMetrics_X::HandleStatusChanged ( class UPerCon_X* PerCon )
//{
//	static UFunction* pFnHandleStatusChanged = NULL;
//
//	if ( ! pFnHandleStatusChanged )
//		pFnHandleStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 58025 ];
//
//	UPerConMetrics_X_execHandleStatusChanged_Parms HandleStatusChanged_Parms;
//	HandleStatusChanged_Parms.PerCon = PerCon;
//
//	this->ProcessEvent ( pFnHandleStatusChanged, &HandleStatusChanged_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.GetPlayerID
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UPerConMetrics_X::GetPlayerID ( )
//{
//	static UFunction* pFnGetPlayerID = NULL;
//
//	if ( ! pFnGetPlayerID )
//		pFnGetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 58022 ];
//
//	UPerConMetrics_X_execGetPlayerID_Parms GetPlayerID_Parms;
//
//	this->ProcessEvent ( pFnGetPlayerID, &GetPlayerID_Parms, NULL );
//
//	return GetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.PerConMetrics_X.SetMessenger
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* PerConMessenger                ( CPF_Parm )
//
//void UPerConMetrics_X::SetMessenger ( class UPsyNetMessengerWebSocket_X* PerConMessenger )
//{
//	static UFunction* pFnSetMessenger = NULL;
//
//	if ( ! pFnSetMessenger )
//		pFnSetMessenger = (UFunction*) UObject::GObjObjects()->Data[ 58015 ];
//
//	UPerConMetrics_X_execSetMessenger_Parms SetMessenger_Parms;
//	SetMessenger_Parms.PerConMessenger = PerConMessenger;
//
//	this->ProcessEvent ( pFnSetMessenger, &SetMessenger_Parms, NULL );
//};
//
//// Function ProjectX.PerConMetrics_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPerConMetrics_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58014 ];
//
//	UPerConMetrics_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.PerConMonitor_X.__PerConMonitor_X__HandleBatchError
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// float                          RemoveTime                     ( CPF_Parm )
//
//bool UPerConMonitor_X::__PerConMonitor_X__HandleBatchError ( float RemoveTime )
//{
//	static UFunction* pFn__PerConMonitor_X__HandleBatchError = NULL;
//
//	if ( ! pFn__PerConMonitor_X__HandleBatchError )
//		pFn__PerConMonitor_X__HandleBatchError = (UFunction*) UObject::GObjObjects()->Data[ 58111 ];
//
//	UPerConMonitor_X_exec__PerConMonitor_X__HandleBatchError_Parms __PerConMonitor_X__HandleBatchError_Parms;
//	__PerConMonitor_X__HandleBatchError_Parms.RemoveTime = RemoveTime;
//
//	this->ProcessEvent ( pFn__PerConMonitor_X__HandleBatchError, &__PerConMonitor_X__HandleBatchError_Parms, NULL );
//
//	return __PerConMonitor_X__HandleBatchError_Parms.ReturnValue;
//};
//
//// Function ProjectX.PerConMonitor_X.IsPerConRelevantError
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UError*                  Error                          ( CPF_Parm )
//
//bool UPerConMonitor_X::IsPerConRelevantError ( class UError* Error )
//{
//	static UFunction* pFnIsPerConRelevantError = NULL;
//
//	if ( ! pFnIsPerConRelevantError )
//		pFnIsPerConRelevantError = (UFunction*) UObject::GObjObjects()->Data[ 58055 ];
//
//	UPerConMonitor_X_execIsPerConRelevantError_Parms IsPerConRelevantError_Parms;
//	IsPerConRelevantError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnIsPerConRelevantError, &IsPerConRelevantError_Parms, NULL );
//
//	return IsPerConRelevantError_Parms.ReturnValue;
//};
//
//// Function ProjectX.PerConMonitor_X.HandleBatchError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class URPCQueue_X*             InQueue                        ( CPF_Parm | CPF_EditInline )
//// class UError*                  Error                          ( CPF_Parm )
//// TArray< float >                FilterLocal_EE7BC6DB470A7CAAC76982B7361AADF7 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UPerConMonitor_X::HandleBatchError ( class URPCQueue_X* InQueue, class UError* Error, TArray< float >* FilterLocal_EE7BC6DB470A7CAAC76982B7361AADF7 )
//{
//	static UFunction* pFnHandleBatchError = NULL;
//
//	if ( ! pFnHandleBatchError )
//		pFnHandleBatchError = (UFunction*) UObject::GObjObjects()->Data[ 58110 ];
//
//	UPerConMonitor_X_execHandleBatchError_Parms HandleBatchError_Parms;
//	HandleBatchError_Parms.InQueue = InQueue;
//	HandleBatchError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleBatchError, &HandleBatchError_Parms, NULL );
//
//	if ( FilterLocal_EE7BC6DB470A7CAAC76982B7361AADF7 )
//		memcpy ( FilterLocal_EE7BC6DB470A7CAAC76982B7361AADF7, &HandleBatchError_Parms.FilterLocal_EE7BC6DB470A7CAAC76982B7361AADF7, 0xC );
//};
//
//// Function ProjectX.PerConMonitor_X.HandleInvalidMessage
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* InMessenger                    ( CPF_Parm )
//// struct FString                 Substring                      ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMonitor_X::HandleInvalidMessage ( class UPsyNetMessengerWebSocket_X* InMessenger, struct FString Substring )
//{
//	static UFunction* pFnHandleInvalidMessage = NULL;
//
//	if ( ! pFnHandleInvalidMessage )
//		pFnHandleInvalidMessage = (UFunction*) UObject::GObjObjects()->Data[ 58106 ];
//
//	UPerConMonitor_X_execHandleInvalidMessage_Parms HandleInvalidMessage_Parms;
//	HandleInvalidMessage_Parms.InMessenger = InMessenger;
//	memcpy ( &HandleInvalidMessage_Parms.Substring, &Substring, 0xC );
//
//	this->ProcessEvent ( pFnHandleInvalidMessage, &HandleInvalidMessage_Parms, NULL );
//};
//
//// Function ProjectX.PerConMonitor_X.HandleDisconnected
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* InMessenger                    ( CPF_Parm )
//// int                            Code                           ( CPF_Parm )
//// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
//
//void UPerConMonitor_X::HandleDisconnected ( class UPsyNetMessengerWebSocket_X* InMessenger, int Code, struct FString Reason )
//{
//	static UFunction* pFnHandleDisconnected = NULL;
//
//	if ( ! pFnHandleDisconnected )
//		pFnHandleDisconnected = (UFunction*) UObject::GObjObjects()->Data[ 58100 ];
//
//	UPerConMonitor_X_execHandleDisconnected_Parms HandleDisconnected_Parms;
//	HandleDisconnected_Parms.InMessenger = InMessenger;
//	HandleDisconnected_Parms.Code = Code;
//	memcpy ( &HandleDisconnected_Parms.Reason, &Reason, 0xC );
//
//	this->ProcessEvent ( pFnHandleDisconnected, &HandleDisconnected_Parms, NULL );
//};
//
//// Function ProjectX.PerConMonitor_X.HandleConnectFail
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* InMessenger                    ( CPF_Parm )
//
//void UPerConMonitor_X::HandleConnectFail ( class UPsyNetMessengerWebSocket_X* InMessenger )
//{
//	static UFunction* pFnHandleConnectFail = NULL;
//
//	if ( ! pFnHandleConnectFail )
//		pFnHandleConnectFail = (UFunction*) UObject::GObjObjects()->Data[ 58098 ];
//
//	UPerConMonitor_X_execHandleConnectFail_Parms HandleConnectFail_Parms;
//	HandleConnectFail_Parms.InMessenger = InMessenger;
//
//	this->ProcessEvent ( pFnHandleConnectFail, &HandleConnectFail_Parms, NULL );
//};
//
//// Function ProjectX.PerConMonitor_X.Dispose
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UPerConMonitor_X::eventDispose ( )
//{
//	static UFunction* pFnDispose = NULL;
//
//	if ( ! pFnDispose )
//		pFnDispose = (UFunction*) UObject::GObjObjects()->Data[ 58097 ];
//
//	UPerConMonitor_X_eventDispose_Parms Dispose_Parms;
//
//	this->ProcessEvent ( pFnDispose, &Dispose_Parms, NULL );
//};
//
//// Function ProjectX.PerConMonitor_X.SetMessenger
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPsyNetMessengerWebSocket_X* InMessenger                    ( CPF_Parm )
//
//void UPerConMonitor_X::SetMessenger ( class UPsyNetMessengerWebSocket_X* InMessenger )
//{
//	static UFunction* pFnSetMessenger = NULL;
//
//	if ( ! pFnSetMessenger )
//		pFnSetMessenger = (UFunction*) UObject::GObjObjects()->Data[ 58095 ];
//
//	UPerConMonitor_X_execSetMessenger_Parms SetMessenger_Parms;
//	SetMessenger_Parms.InMessenger = InMessenger;
//
//	this->ProcessEvent ( pFnSetMessenger, &SetMessenger_Parms, NULL );
//};
//
//// Function ProjectX.PerConMonitor_X.Init
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UPerCon_X*               InPerCon                       ( CPF_Parm )
//// class URPCQueue_X*             InRpcQueue                     ( CPF_Parm | CPF_EditInline )
//
//void UPerConMonitor_X::Init ( class UPerCon_X* InPerCon, class URPCQueue_X* InRpcQueue )
//{
//	static UFunction* pFnInit = NULL;
//
//	if ( ! pFnInit )
//		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58092 ];
//
//	UPerConMonitor_X_execInit_Parms Init_Parms;
//	Init_Parms.InPerCon = InPerCon;
//	Init_Parms.InRpcQueue = InRpcQueue;
//
//	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
//};
//
//// Function ProjectX.PsyNetService_AAS_X.GetOnlineHours
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//int UPsyNetService_AAS_X::GetOnlineHours ( )
//{
//	static UFunction* pFnGetOnlineHours = NULL;
//
//	if ( ! pFnGetOnlineHours )
//		pFnGetOnlineHours = (UFunction*) UObject::GObjObjects()->Data[ 58471 ];
//
//	UPsyNetService_AAS_X_execGetOnlineHours_Parms GetOnlineHours_Parms;
//
//	this->ProcessEvent ( pFnGetOnlineHours, &GetOnlineHours_Parms, NULL );
//
//	return GetOnlineHours_Parms.ReturnValue;
//};
//
//// Function ProjectX.PsyNetService_Echo_X.Execute
//// [0x00020002] 
//// Parameters infos:
//
//void UPsyNetService_Echo_X::Execute ( )
//{
//	static UFunction* pFnExecute = NULL;
//
//	if ( ! pFnExecute )
//		pFnExecute = (UFunction*) UObject::GObjObjects()->Data[ 58478 ];
//
//	UPsyNetService_Echo_X_execExecute_Parms Execute_Parms;
//
//	this->ProcessEvent ( pFnExecute, &Execute_Parms, NULL );
//};
//
//// Function ProjectX.RPC_PartyChatMessage_X.SetMessage
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PartyChatMessage_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InMessage                      ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PartyChatMessage_X* URPC_PartyChatMessage_X::SetMessage ( struct FString InMessage )
//{
//	static UFunction* pFnSetMessage = NULL;
//
//	if ( ! pFnSetMessage )
//		pFnSetMessage = (UFunction*) UObject::GObjObjects()->Data[ 58572 ];
//
//	URPC_PartyChatMessage_X_execSetMessage_Parms SetMessage_Parms;
//	memcpy ( &SetMessage_Parms.InMessage, &InMessage, 0xC );
//
//	this->ProcessEvent ( pFnSetMessage, &SetMessage_Parms, NULL );
//
//	return SetMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PsyNetSendIndividualChat_X.SetMessage
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PsyNetSendIndividualChat_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InMessage                      ( CPF_Parm | CPF_NeedCtorLink )
//
//class URPC_PsyNetSendIndividualChat_X* URPC_PsyNetSendIndividualChat_X::SetMessage ( struct FString InMessage )
//{
//	static UFunction* pFnSetMessage = NULL;
//
//	if ( ! pFnSetMessage )
//		pFnSetMessage = (UFunction*) UObject::GObjObjects()->Data[ 58602 ];
//
//	URPC_PsyNetSendIndividualChat_X_execSetMessage_Parms SetMessage_Parms;
//	memcpy ( &SetMessage_Parms.InMessage, &InMessage, 0xC );
//
//	this->ProcessEvent ( pFnSetMessage, &SetMessage_Parms, NULL );
//
//	return SetMessage_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PsyNetSendIndividualChat_X.SetPlayerID
//// [0x00020002] 
//// Parameters infos:
//// class URPC_PsyNetSendIndividualChat_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FUniqueNetId            InPlayerId                     ( CPF_Parm )
//
//class URPC_PsyNetSendIndividualChat_X* URPC_PsyNetSendIndividualChat_X::SetPlayerID ( struct FUniqueNetId InPlayerId )
//{
//	static UFunction* pFnSetPlayerID = NULL;
//
//	if ( ! pFnSetPlayerID )
//		pFnSetPlayerID = (UFunction*) UObject::GObjObjects()->Data[ 58599 ];
//
//	URPC_PsyNetSendIndividualChat_X_execSetPlayerID_Parms SetPlayerID_Parms;
//	memcpy ( &SetPlayerID_Parms.InPlayerId, &InPlayerId, 0x48 );
//
//	this->ProcessEvent ( pFnSetPlayerID, &SetPlayerID_Parms, NULL );
//
//	return SetPlayerID_Parms.ReturnValue;
//};
//
//// Function ProjectX.UdpLanServer_X.HandleLanQueryMessage
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class UOnlineMessageComponent_X* Component                      ( CPF_Parm | CPF_EditInline )
//// class ULanMessage_HostQuery_X* Query                          ( CPF_Parm )
//
//void UUdpLanServer_X::HandleLanQueryMessage ( class UOnlineMessageComponent_X* Component, class ULanMessage_HostQuery_X* Query )
//{
//	static UFunction* pFnHandleLanQueryMessage = NULL;
//
//	if ( ! pFnHandleLanQueryMessage )
//		pFnHandleLanQueryMessage = (UFunction*) UObject::GObjObjects()->Data[ 58707 ];
//
//	UUdpLanServer_X_execHandleLanQueryMessage_Parms HandleLanQueryMessage_Parms;
//	HandleLanQueryMessage_Parms.Component = Component;
//	HandleLanQueryMessage_Parms.Query = Query;
//
//	this->ProcessEvent ( pFnHandleLanQueryMessage, &HandleLanQueryMessage_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanServer_X.Destroy
//// [0x00020002] 
//// Parameters infos:
//
//void UUdpLanServer_X::Destroy ( )
//{
//	static UFunction* pFnDestroy = NULL;
//
//	if ( ! pFnDestroy )
//		pFnDestroy = (UFunction*) UObject::GObjObjects()->Data[ 58706 ];
//
//	UUdpLanServer_X_execDestroy_Parms Destroy_Parms;
//
//	this->ProcessEvent ( pFnDestroy, &Destroy_Parms, NULL );
//};
//
//// Function ProjectX.UdpLanServer_X.SetServerMetaData
//// [0x00020002] 
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FString                 InMetaData                     ( CPF_Parm | CPF_NeedCtorLink )
//
//class UAsyncTask* UUdpLanServer_X::SetServerMetaData ( struct FString InMetaData )
//{
//	static UFunction* pFnSetServerMetaData = NULL;
//
//	if ( ! pFnSetServerMetaData )
//		pFnSetServerMetaData = (UFunction*) UObject::GObjObjects()->Data[ 58685 ];
//
//	UUdpLanServer_X_execSetServerMetaData_Parms SetServerMetaData_Parms;
//	memcpy ( &SetServerMetaData_Parms.InMetaData, &InMetaData, 0xC );
//
//	this->ProcessEvent ( pFnSetServerMetaData, &SetServerMetaData_Parms, NULL );
//
//	return SetServerMetaData_Parms.ReturnValue;
//};
//
//// Function ProjectX.UdpLanServer_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UUdpLanServer_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58704 ];
//
//	UUdpLanServer_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.__OnlinePlayerStorageQueue_X__MapResultItem.__OnlinePlayerStorageQueue_X__MapResultItem
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FPendingStorage         P                              ( CPF_Parm )
//
//bool U__OnlinePlayerStorageQueue_X__MapResultItem::__OnlinePlayerStorageQueue_X__MapResultItem ( struct FPendingStorage P )
//{
//	static UFunction* pFn__OnlinePlayerStorageQueue_X__MapResultItem = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageQueue_X__MapResultItem )
//		pFn__OnlinePlayerStorageQueue_X__MapResultItem = (UFunction*) UObject::GObjObjects()->Data[ 58782 ];
//
//	U__OnlinePlayerStorageQueue_X__MapResultItem_exec__OnlinePlayerStorageQueue_X__MapResultItem_Parms __OnlinePlayerStorageQueue_X__MapResultItem_Parms;
//	memcpy ( &__OnlinePlayerStorageQueue_X__MapResultItem_Parms.P, &P, 0xC );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__MapResultItem, &__OnlinePlayerStorageQueue_X__MapResultItem_Parms, NULL );
//
//	return __OnlinePlayerStorageQueue_X__MapResultItem_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__Construct
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FString                 _                              ( CPF_Parm | CPF_NeedCtorLink )
//
//void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__Construct ( struct FString _ )
//{
//	static UFunction* pFn__OnlinePlayerStorageQueue_X__Construct = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageQueue_X__Construct )
//		pFn__OnlinePlayerStorageQueue_X__Construct = (UFunction*) UObject::GObjObjects()->Data[ 58983 ];
//
//	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__Construct_Parms __OnlinePlayerStorageQueue_X__Construct_Parms;
//	memcpy ( &__OnlinePlayerStorageQueue_X__Construct_Parms._, &_, 0xC );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__Construct, &__OnlinePlayerStorageQueue_X__Construct_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__SendBatch
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPendingStorage         P                              ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__SendBatch ( struct FPendingStorage P )
//{
//	static UFunction* pFn__OnlinePlayerStorageQueue_X__SendBatch = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageQueue_X__SendBatch )
//		pFn__OnlinePlayerStorageQueue_X__SendBatch = (UFunction*) UObject::GObjObjects()->Data[ 58981 ];
//
//	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__SendBatch_Parms __OnlinePlayerStorageQueue_X__SendBatch_Parms;
//	memcpy ( &__OnlinePlayerStorageQueue_X__SendBatch_Parms.P, &P, 0xC );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__SendBatch, &__OnlinePlayerStorageQueue_X__SendBatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__SendBatch
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_X*                  RPC                            ( CPF_Parm )
//
////void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__SendBatch ( class URPC_X* RPC )
////{
////	static UFunction* pFn__OnlinePlayerStorageQueue_X__SendBatch = NULL;
////
////	if ( ! pFn__OnlinePlayerStorageQueue_X__SendBatch )
////		pFn__OnlinePlayerStorageQueue_X__SendBatch = (UFunction*) UObject::GObjObjects()->Data[ 58979 ];
////
////	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__SendBatch_Parms __OnlinePlayerStorageQueue_X__SendBatch_Parms;
////	__OnlinePlayerStorageQueue_X__SendBatch_Parms.RPC = RPC;
////
////	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__SendBatch, &__OnlinePlayerStorageQueue_X__SendBatch_Parms, NULL );
////};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPendingStorage         P                              ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageSuccess ( struct FPendingStorage P )
//{
//	static UFunction* pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess )
//		pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58977 ];
//
//	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms __OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms;
//	memcpy ( &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms.P, &P, 0xC );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FSetPlayerStorageRequestItem R                              ( CPF_Parm | CPF_NeedCtorLink )
//
////void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageSuccess ( struct FSetPlayerStorageRequestItem R )
////{
////	static UFunction* pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess = NULL;
////
////	if ( ! pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess )
////		pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58975 ];
////
////	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms __OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms;
////	memcpy ( &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms.R, &R, 0x1C );
////
////	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_Parms, NULL );
////};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageError
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FPendingStorage         P                              ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageError ( struct FPendingStorage P )
//{
//	static UFunction* pFn__OnlinePlayerStorageQueue_X__HandleStorageError = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageQueue_X__HandleStorageError )
//		pFn__OnlinePlayerStorageQueue_X__HandleStorageError = (UFunction*) UObject::GObjObjects()->Data[ 58973 ];
//
//	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageError_Parms __OnlinePlayerStorageQueue_X__HandleStorageError_Parms;
//	memcpy ( &__OnlinePlayerStorageQueue_X__HandleStorageError_Parms.P, &P, 0xC );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__HandleStorageError, &__OnlinePlayerStorageQueue_X__HandleStorageError_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageError
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FPendingStorage         P                              ( CPF_Parm )
//
////bool UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageError1 ( struct FPendingStorage P )
////{
////	static UFunction* pFn__OnlinePlayerStorageQueue_X__HandleStorageError = NULL;
////
////	if ( ! pFn__OnlinePlayerStorageQueue_X__HandleStorageError )
////		pFn__OnlinePlayerStorageQueue_X__HandleStorageError = (UFunction*) UObject::GObjObjects()->Data[ 58970 ];
////
////	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageError_Parms __OnlinePlayerStorageQueue_X__HandleStorageError_Parms;
////	memcpy ( &__OnlinePlayerStorageQueue_X__HandleStorageError_Parms.P, &P, 0xC );
////
////	this->ProcessEvent ( pFn__OnlinePlayerStorageQueue_X__HandleStorageError, &__OnlinePlayerStorageQueue_X__HandleStorageError_Parms, NULL );
////
////	return __OnlinePlayerStorageQueue_X__HandleStorageError_Parms.ReturnValue;
////};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.HandleStorageError
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//// TArray< struct FPendingStorage > FilterLocal_314E1B914EC839E1C4CEB4A639DB97DA ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerStorageQueue_X::HandleStorageError ( class UError* Error, TArray< struct FPendingStorage >* FilterLocal_314E1B914EC839E1C4CEB4A639DB97DA )
//{
//	static UFunction* pFnHandleStorageError = NULL;
//
//	if ( ! pFnHandleStorageError )
//		pFnHandleStorageError = (UFunction*) UObject::GObjObjects()->Data[ 58966 ];
//
//	UOnlinePlayerStorageQueue_X_execHandleStorageError_Parms HandleStorageError_Parms;
//	HandleStorageError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleStorageError, &HandleStorageError_Parms, NULL );
//
//	if ( FilterLocal_314E1B914EC839E1C4CEB4A639DB97DA )
//		memcpy ( FilterLocal_314E1B914EC839E1C4CEB4A639DB97DA, &HandleStorageError_Parms.FilterLocal_314E1B914EC839E1C4CEB4A639DB97DA, 0xC );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.MapResultItem
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FPendingStorage         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FSetPlayerStorageResultItem Item                           ( CPF_Parm )
//// struct FPendingStorage         StructInitializer_5E10843C46D57911E1AFBD93EEE33014 ( CPF_Const | CPF_OutParm )
//
//struct FPendingStorage UOnlinePlayerStorageQueue_X::MapResultItem ( struct FSetPlayerStorageResultItem Item, struct FPendingStorage* StructInitializer_5E10843C46D57911E1AFBD93EEE33014 )
//{
//	static UFunction* pFnMapResultItem = NULL;
//
//	if ( ! pFnMapResultItem )
//		pFnMapResultItem = (UFunction*) UObject::GObjObjects()->Data[ 58961 ];
//
//	UOnlinePlayerStorageQueue_X_execMapResultItem_Parms MapResultItem_Parms;
//	memcpy ( &MapResultItem_Parms.Item, &Item, 0xC );
//
//	this->ProcessEvent ( pFnMapResultItem, &MapResultItem_Parms, NULL );
//
//	if ( StructInitializer_5E10843C46D57911E1AFBD93EEE33014 )
//		memcpy ( StructInitializer_5E10843C46D57911E1AFBD93EEE33014, &MapResultItem_Parms.StructInitializer_5E10843C46D57911E1AFBD93EEE33014, 0xC );
//
//	return MapResultItem_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.HandleStorageSuccess
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PlayerStorageSet_X* RPC                            ( CPF_Parm )
//// TArray< struct FPendingStorage > MapLocal_B4904F25422E23A820EDECAC7D6E826F ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerStorageQueue_X::HandleStorageSuccess ( class URPC_PlayerStorageSet_X* RPC, TArray< struct FPendingStorage >* MapLocal_B4904F25422E23A820EDECAC7D6E826F )
//{
//	static UFunction* pFnHandleStorageSuccess = NULL;
//
//	if ( ! pFnHandleStorageSuccess )
//		pFnHandleStorageSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58955 ];
//
//	UOnlinePlayerStorageQueue_X_execHandleStorageSuccess_Parms HandleStorageSuccess_Parms;
//	HandleStorageSuccess_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleStorageSuccess, &HandleStorageSuccess_Parms, NULL );
//
//	if ( MapLocal_B4904F25422E23A820EDECAC7D6E826F )
//		memcpy ( MapLocal_B4904F25422E23A820EDECAC7D6E826F, &HandleStorageSuccess_Parms.MapLocal_B4904F25422E23A820EDECAC7D6E826F, 0xC );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.PartitionStorageRequests
//// [0x00C40003] ( FUNC_Final )
//// Parameters infos:
//// TArray< struct FPendingStorage > OutQueue                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FSetPlayerStorageRequestItem > OutOfDate                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FPendingStorage > UpToDate                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// struct FSetPlayerStorageRequestItem StructInitializer_3C555FC245AFD4F60AA1A0B941E888B8 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerStorageQueue_X::PartitionStorageRequests ( TArray< struct FPendingStorage >* OutQueue, TArray< struct FSetPlayerStorageRequestItem >* OutOfDate, TArray< struct FPendingStorage >* UpToDate, struct FSetPlayerStorageRequestItem* StructInitializer_3C555FC245AFD4F60AA1A0B941E888B8 )
//{
//	static UFunction* pFnPartitionStorageRequests = NULL;
//
//	if ( ! pFnPartitionStorageRequests )
//		pFnPartitionStorageRequests = (UFunction*) UObject::GObjObjects()->Data[ 58936 ];
//
//	UOnlinePlayerStorageQueue_X_execPartitionStorageRequests_Parms PartitionStorageRequests_Parms;
//
//	this->ProcessEvent ( pFnPartitionStorageRequests, &PartitionStorageRequests_Parms, NULL );
//
//	if ( OutQueue )
//		memcpy ( OutQueue, &PartitionStorageRequests_Parms.OutQueue, 0xC );
//
//	if ( OutOfDate )
//		memcpy ( OutOfDate, &PartitionStorageRequests_Parms.OutOfDate, 0xC );
//
//	if ( UpToDate )
//		memcpy ( UpToDate, &PartitionStorageRequests_Parms.UpToDate, 0xC );
//
//	if ( StructInitializer_3C555FC245AFD4F60AA1A0B941E888B8 )
//		memcpy ( StructInitializer_3C555FC245AFD4F60AA1A0B941E888B8, &PartitionStorageRequests_Parms.StructInitializer_3C555FC245AFD4F60AA1A0B941E888B8, 0x1C );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.SendBatch
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerStorageQueue_X::SendBatch ( )
//{
//	static UFunction* pFnSendBatch = NULL;
//
//	if ( ! pFnSendBatch )
//		pFnSendBatch = (UFunction*) UObject::GObjObjects()->Data[ 58922 ];
//
//	UOnlinePlayerStorageQueue_X_execSendBatch_Parms SendBatch_Parms;
//
//	this->ProcessEvent ( pFnSendBatch, &SendBatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.QueueBatch
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//
//void UOnlinePlayerStorageQueue_X::QueueBatch ( )
//{
//	static UFunction* pFnQueueBatch = NULL;
//
//	if ( ! pFnQueueBatch )
//		pFnQueueBatch = (UFunction*) UObject::GObjObjects()->Data[ 58927 ];
//
//	UOnlinePlayerStorageQueue_X_execQueueBatch_Parms QueueBatch_Parms;
//
//	this->ProcessEvent ( pFnQueueBatch, &QueueBatch_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.QueueObject
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UObject*                 DataObj                        ( CPF_Parm )
//// int                            ClientTick                     ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::QueueObject ( class UObject* DataObj, int ClientTick )
//{
//	static UFunction* pFnQueueObject = NULL;
//
//	if ( ! pFnQueueObject )
//		pFnQueueObject = (UFunction*) UObject::GObjObjects()->Data[ 58923 ];
//
//	UOnlinePlayerStorageQueue_X_execQueueObject_Parms QueueObject_Parms;
//	QueueObject_Parms.DataObj = DataObj;
//	QueueObject_Parms.ClientTick = ClientTick;
//
//	this->ProcessEvent ( pFnQueueObject, &QueueObject_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.HandleLocalPlayerLeave
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class ULocalPlayer_X*          OldPlayer                      ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::HandleLocalPlayerLeave ( class ULocalPlayer_X* OldPlayer )
//{
//	static UFunction* pFnHandleLocalPlayerLeave = NULL;
//
//	if ( ! pFnHandleLocalPlayerLeave )
//		pFnHandleLocalPlayerLeave = (UFunction*) UObject::GObjObjects()->Data[ 58920 ];
//
//	UOnlinePlayerStorageQueue_X_execHandleLocalPlayerLeave_Parms HandleLocalPlayerLeave_Parms;
//	HandleLocalPlayerLeave_Parms.OldPlayer = OldPlayer;
//
//	this->ProcessEvent ( pFnHandleLocalPlayerLeave, &HandleLocalPlayerLeave_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UOnlinePlayerStorageQueue_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58919 ];
//
//	UOnlinePlayerStorageQueue_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.EventStorageError
//// [0x00120000] 
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::EventStorageError ( class UError* Error )
//{
//	static UFunction* pFnEventStorageError = NULL;
//
//	if ( ! pFnEventStorageError )
//		pFnEventStorageError = (UFunction*) UObject::GObjObjects()->Data[ 58912 ];
//
//	UOnlinePlayerStorageQueue_X_execEventStorageError_Parms EventStorageError_Parms;
//	EventStorageError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnEventStorageError, &EventStorageError_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageQueue_X.EventStorageSuccess
//// [0x00120000] 
//// Parameters infos:
//// class UObject*                 Data                           ( CPF_Parm )
//// int                            ServerTick                     ( CPF_Parm )
//
//void UOnlinePlayerStorageQueue_X::EventStorageSuccess ( class UObject* Data, int ServerTick )
//{
//	static UFunction* pFnEventStorageSuccess = NULL;
//
//	if ( ! pFnEventStorageSuccess )
//		pFnEventStorageSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58914 ];
//
//	UOnlinePlayerStorageQueue_X_execEventStorageSuccess_Parms EventStorageSuccess_Parms;
//	EventStorageSuccess_Parms.Data = Data;
//	EventStorageSuccess_Parms.ServerTick = ServerTick;
//
//	this->ProcessEvent ( pFnEventStorageSuccess, &EventStorageSuccess_Parms, NULL );
//};
//
//// Function ProjectX.__OnlinePlayerStorageSync_X__PopRequestObject.__OnlinePlayerStorageSync_X__PopRequestObject
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 O                              ( CPF_Parm )
//
//bool U__OnlinePlayerStorageSync_X__PopRequestObject::__OnlinePlayerStorageSync_X__PopRequestObject ( class UObject* O )
//{
//	static UFunction* pFn__OnlinePlayerStorageSync_X__PopRequestObject = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageSync_X__PopRequestObject )
//		pFn__OnlinePlayerStorageSync_X__PopRequestObject = (UFunction*) UObject::GObjObjects()->Data[ 58788 ];
//
//	U__OnlinePlayerStorageSync_X__PopRequestObject_exec__OnlinePlayerStorageSync_X__PopRequestObject_Parms __OnlinePlayerStorageSync_X__PopRequestObject_Parms;
//	__OnlinePlayerStorageSync_X__PopRequestObject_Parms.O = O;
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageSync_X__PopRequestObject, &__OnlinePlayerStorageSync_X__PopRequestObject_Parms, NULL );
//
//	return __OnlinePlayerStorageSync_X__PopRequestObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.__OnlinePlayerStorageSync_X__SyncObjects
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FOnlinePlayerStorageSyncRequest R                              ( CPF_Parm )
//
//class UObject* UOnlinePlayerStorageSync_X::__OnlinePlayerStorageSync_X__SyncObjects ( struct FOnlinePlayerStorageSyncRequest R )
//{
//	static UFunction* pFn__OnlinePlayerStorageSync_X__SyncObjects = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageSync_X__SyncObjects )
//		pFn__OnlinePlayerStorageSync_X__SyncObjects = (UFunction*) UObject::GObjObjects()->Data[ 59055 ];
//
//	UOnlinePlayerStorageSync_X_exec__OnlinePlayerStorageSync_X__SyncObjects_Parms __OnlinePlayerStorageSync_X__SyncObjects_Parms;
//	memcpy ( &__OnlinePlayerStorageSync_X__SyncObjects_Parms.R, &R, 0x8 );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageSync_X__SyncObjects, &__OnlinePlayerStorageSync_X__SyncObjects_Parms, NULL );
//
//	return __OnlinePlayerStorageSync_X__SyncObjects_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.__OnlinePlayerStorageSync_X__HandleSyncSuccess
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// struct FOnlinePlayerStorageSyncResult Result                         ( CPF_Parm )
//
//void UOnlinePlayerStorageSync_X::__OnlinePlayerStorageSync_X__HandleSyncSuccess ( struct FOnlinePlayerStorageSyncResult Result )
//{
//	static UFunction* pFn__OnlinePlayerStorageSync_X__HandleSyncSuccess = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageSync_X__HandleSyncSuccess )
//		pFn__OnlinePlayerStorageSync_X__HandleSyncSuccess = (UFunction*) UObject::GObjObjects()->Data[ 59053 ];
//
//	UOnlinePlayerStorageSync_X_exec__OnlinePlayerStorageSync_X__HandleSyncSuccess_Parms __OnlinePlayerStorageSync_X__HandleSyncSuccess_Parms;
//	memcpy ( &__OnlinePlayerStorageSync_X__HandleSyncSuccess_Parms.Result, &Result, 0x14 );
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageSync_X__HandleSyncSuccess, &__OnlinePlayerStorageSync_X__HandleSyncSuccess_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.__OnlinePlayerStorageSync_X__HandleSyncError
//// [0x40040003] ( FUNC_Final )
//// Parameters infos:
//// class UObject*                 O                              ( CPF_Parm )
//
//void UOnlinePlayerStorageSync_X::__OnlinePlayerStorageSync_X__HandleSyncError ( class UObject* O )
//{
//	static UFunction* pFn__OnlinePlayerStorageSync_X__HandleSyncError = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageSync_X__HandleSyncError )
//		pFn__OnlinePlayerStorageSync_X__HandleSyncError = (UFunction*) UObject::GObjObjects()->Data[ 59051 ];
//
//	UOnlinePlayerStorageSync_X_exec__OnlinePlayerStorageSync_X__HandleSyncError_Parms __OnlinePlayerStorageSync_X__HandleSyncError_Parms;
//	__OnlinePlayerStorageSync_X__HandleSyncError_Parms.O = O;
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageSync_X__HandleSyncError, &__OnlinePlayerStorageSync_X__HandleSyncError_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.HandleSyncError
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  Error                          ( CPF_Parm )
//// TArray< class UObject* >       NewRequestObjects              ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerStorageSync_X::HandleSyncError ( class UError* Error, TArray< class UObject* >* NewRequestObjects )
//{
//	static UFunction* pFnHandleSyncError = NULL;
//
//	if ( ! pFnHandleSyncError )
//		pFnHandleSyncError = (UFunction*) UObject::GObjObjects()->Data[ 58798 ];
//
//	UOnlinePlayerStorageSync_X_execHandleSyncError_Parms HandleSyncError_Parms;
//	HandleSyncError_Parms.Error = Error;
//
//	this->ProcessEvent ( pFnHandleSyncError, &HandleSyncError_Parms, NULL );
//
//	if ( NewRequestObjects )
//		memcpy ( NewRequestObjects, &HandleSyncError_Parms.NewRequestObjects, 0xC );
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.InstanceSyncData
//// [0x00440003] ( FUNC_Final )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 LocalObject                    ( CPF_Parm )
//// TArray< unsigned char >        Bytes                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//
//class UObject* UOnlinePlayerStorageSync_X::InstanceSyncData ( class UObject* LocalObject, TArray< unsigned char >* Bytes )
//{
//	static UFunction* pFnInstanceSyncData = NULL;
//
//	if ( ! pFnInstanceSyncData )
//		pFnInstanceSyncData = (UFunction*) UObject::GObjObjects()->Data[ 59037 ];
//
//	UOnlinePlayerStorageSync_X_execInstanceSyncData_Parms InstanceSyncData_Parms;
//	InstanceSyncData_Parms.LocalObject = LocalObject;
//
//	this->ProcessEvent ( pFnInstanceSyncData, &InstanceSyncData_Parms, NULL );
//
//	if ( Bytes )
//		memcpy ( Bytes, &InstanceSyncData_Parms.Bytes, 0xC );
//
//	return InstanceSyncData_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.PopRequestObject
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Category                       ( CPF_Parm )
//
//class UObject* UOnlinePlayerStorageSync_X::PopRequestObject ( struct FName Category )
//{
//	static UFunction* pFnPopRequestObject = NULL;
//
//	if ( ! pFnPopRequestObject )
//		pFnPopRequestObject = (UFunction*) UObject::GObjObjects()->Data[ 59036 ];
//
//	UOnlinePlayerStorageSync_X_execPopRequestObject_Parms PopRequestObject_Parms;
//	memcpy ( &PopRequestObject_Parms.Category, &Category, 0x8 );
//
//	this->ProcessEvent ( pFnPopRequestObject, &PopRequestObject_Parms, NULL );
//
//	return PopRequestObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.MapResultItem
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FOnlinePlayerStorageSyncResult ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FGetPlayerStorageResultItem Item                           ( CPF_Parm | CPF_NeedCtorLink )
//// struct FOnlinePlayerStorageSyncResult StructInitializer_626069A74CE5387DE1E5199C7CCAFCF9 ( CPF_Const | CPF_OutParm )
//
//struct FOnlinePlayerStorageSyncResult UOnlinePlayerStorageSync_X::MapResultItem ( struct FGetPlayerStorageResultItem Item, struct FOnlinePlayerStorageSyncResult* StructInitializer_626069A74CE5387DE1E5199C7CCAFCF9 )
//{
//	static UFunction* pFnMapResultItem = NULL;
//
//	if ( ! pFnMapResultItem )
//		pFnMapResultItem = (UFunction*) UObject::GObjObjects()->Data[ 59031 ];
//
//	UOnlinePlayerStorageSync_X_execMapResultItem_Parms MapResultItem_Parms;
//	memcpy ( &MapResultItem_Parms.Item, &Item, 0x20 );
//
//	this->ProcessEvent ( pFnMapResultItem, &MapResultItem_Parms, NULL );
//
//	if ( StructInitializer_626069A74CE5387DE1E5199C7CCAFCF9 )
//		memcpy ( StructInitializer_626069A74CE5387DE1E5199C7CCAFCF9, &MapResultItem_Parms.StructInitializer_626069A74CE5387DE1E5199C7CCAFCF9, 0x14 );
//
//	return MapResultItem_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.HandleSyncSuccess
//// [0x20040003] ( FUNC_Final )
//// Parameters infos:
//// class URPC_PlayerStorageGet_X* RPC                            ( CPF_Parm )
//// TArray< struct FOnlinePlayerStorageSyncResult > MapLocal_D38A9BD14773280AC2E99AA1FE6F2566 ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//void UOnlinePlayerStorageSync_X::HandleSyncSuccess ( class URPC_PlayerStorageGet_X* RPC, TArray< struct FOnlinePlayerStorageSyncResult >* MapLocal_D38A9BD14773280AC2E99AA1FE6F2566 )
//{
//	static UFunction* pFnHandleSyncSuccess = NULL;
//
//	if ( ! pFnHandleSyncSuccess )
//		pFnHandleSyncSuccess = (UFunction*) UObject::GObjObjects()->Data[ 59026 ];
//
//	UOnlinePlayerStorageSync_X_execHandleSyncSuccess_Parms HandleSyncSuccess_Parms;
//	HandleSyncSuccess_Parms.RPC = RPC;
//
//	this->ProcessEvent ( pFnHandleSyncSuccess, &HandleSyncSuccess_Parms, NULL );
//
//	if ( MapLocal_D38A9BD14773280AC2E99AA1FE6F2566 )
//		memcpy ( MapLocal_D38A9BD14773280AC2E99AA1FE6F2566, &HandleSyncSuccess_Parms.MapLocal_D38A9BD14773280AC2E99AA1FE6F2566, 0xC );
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.CrcObject
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UObject*                 Data                           ( CPF_Parm )
//
//int UOnlinePlayerStorageSync_X::CrcObject ( class UObject* Data )
//{
//	static UFunction* pFnCrcObject = NULL;
//
//	if ( ! pFnCrcObject )
//		pFnCrcObject = (UFunction*) UObject::GObjObjects()->Data[ 59021 ];
//
//	UOnlinePlayerStorageSync_X_execCrcObject_Parms CrcObject_Parms;
//	CrcObject_Parms.Data = Data;
//
//	this->ProcessEvent ( pFnCrcObject, &CrcObject_Parms, NULL );
//
//	return CrcObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.MapRequestItem
//// [0x00840003] ( FUNC_Final )
//// Parameters infos:
//// struct FGetPlayerStorageRequestItem ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FOnlinePlayerStorageSyncRequest Request                        ( CPF_Parm )
//// struct FGetPlayerStorageRequestItem StructInitializer_CAA0A539446724837046658A2AAC1A65 ( CPF_Const | CPF_OutParm )
//
//struct FGetPlayerStorageRequestItem UOnlinePlayerStorageSync_X::MapRequestItem ( struct FOnlinePlayerStorageSyncRequest Request, struct FGetPlayerStorageRequestItem* StructInitializer_CAA0A539446724837046658A2AAC1A65 )
//{
//	static UFunction* pFnMapRequestItem = NULL;
//
//	if ( ! pFnMapRequestItem )
//		pFnMapRequestItem = (UFunction*) UObject::GObjObjects()->Data[ 59017 ];
//
//	UOnlinePlayerStorageSync_X_execMapRequestItem_Parms MapRequestItem_Parms;
//	memcpy ( &MapRequestItem_Parms.Request, &Request, 0x8 );
//
//	this->ProcessEvent ( pFnMapRequestItem, &MapRequestItem_Parms, NULL );
//
//	if ( StructInitializer_CAA0A539446724837046658A2AAC1A65 )
//		memcpy ( StructInitializer_CAA0A539446724837046658A2AAC1A65, &MapRequestItem_Parms.StructInitializer_CAA0A539446724837046658A2AAC1A65, 0x10 );
//
//	return MapRequestItem_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.SyncObjects
//// [0x00420003] ( FUNC_Final )
//// Parameters infos:
//// class UAsyncTask*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// TArray< struct FOnlinePlayerStorageSyncRequest > Requests                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< class UObject* >       MapLocal_6A5F7ED74AF9B9F8E72B3DA15DA0C66E ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//// TArray< struct FGetPlayerStorageRequestItem > MapLocal_63D190D14837AF77DF7D49801011B52E ( CPF_Const | CPF_OutParm | CPF_NeedCtorLink )
//
//class UAsyncTask* UOnlinePlayerStorageSync_X::SyncObjects ( TArray< struct FOnlinePlayerStorageSyncRequest >* Requests, TArray< class UObject* >* MapLocal_6A5F7ED74AF9B9F8E72B3DA15DA0C66E, TArray< struct FGetPlayerStorageRequestItem >* MapLocal_63D190D14837AF77DF7D49801011B52E )
//{
//	static UFunction* pFnSyncObjects = NULL;
//
//	if ( ! pFnSyncObjects )
//		pFnSyncObjects = (UFunction*) UObject::GObjObjects()->Data[ 58998 ];
//
//	UOnlinePlayerStorageSync_X_execSyncObjects_Parms SyncObjects_Parms;
//
//	this->ProcessEvent ( pFnSyncObjects, &SyncObjects_Parms, NULL );
//
//	if ( Requests )
//		memcpy ( Requests, &SyncObjects_Parms.Requests, 0xC );
//
//	if ( MapLocal_6A5F7ED74AF9B9F8E72B3DA15DA0C66E )
//		memcpy ( MapLocal_6A5F7ED74AF9B9F8E72B3DA15DA0C66E, &SyncObjects_Parms.MapLocal_6A5F7ED74AF9B9F8E72B3DA15DA0C66E, 0xC );
//
//	if ( MapLocal_63D190D14837AF77DF7D49801011B52E )
//		memcpy ( MapLocal_63D190D14837AF77DF7D49801011B52E, &SyncObjects_Parms.MapLocal_63D190D14837AF77DF7D49801011B52E, 0xC );
//
//	return SyncObjects_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageSync_X.EventSyncSuccess
//// [0x00520000] 
//// Parameters infos:
//// struct FOnlinePlayerStorageSyncResult Result                         ( CPF_Const | CPF_Parm | CPF_OutParm )
//
//void UOnlinePlayerStorageSync_X::EventSyncSuccess ( struct FOnlinePlayerStorageSyncResult* Result )
//{
//	static UFunction* pFnEventSyncSuccess = NULL;
//
//	if ( ! pFnEventSyncSuccess )
//		pFnEventSyncSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58996 ];
//
//	UOnlinePlayerStorageSync_X_execEventSyncSuccess_Parms EventSyncSuccess_Parms;
//
//	this->ProcessEvent ( pFnEventSyncSuccess, &EventSyncSuccess_Parms, NULL );
//
//	if ( Result )
//		memcpy ( Result, &EventSyncSuccess_Parms.Result, 0x14 );
//};
//
//// Function ProjectX.__OnlinePlayerStorageSync_X__SyncObjects.__OnlinePlayerStorageSync_X__SyncObjects
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// class UError*                  E                              ( CPF_Parm )
//
//void U__OnlinePlayerStorageSync_X__SyncObjects::__OnlinePlayerStorageSync_X__SyncObjects ( class UError* E )
//{
//	static UFunction* pFn__OnlinePlayerStorageSync_X__SyncObjects = NULL;
//
//	if ( ! pFn__OnlinePlayerStorageSync_X__SyncObjects )
//		pFn__OnlinePlayerStorageSync_X__SyncObjects = (UFunction*) UObject::GObjObjects()->Data[ 58796 ];
//
//	U__OnlinePlayerStorageSync_X__SyncObjects_exec__OnlinePlayerStorageSync_X__SyncObjects_Parms __OnlinePlayerStorageSync_X__SyncObjects_Parms;
//	__OnlinePlayerStorageSync_X__SyncObjects_Parms.E = E;
//
//	this->ProcessEvent ( pFn__OnlinePlayerStorageSync_X__SyncObjects, &__OnlinePlayerStorageSync_X__SyncObjects_Parms, NULL );
//};
//
//// Function ProjectX.DynamicValue_X.PrintDebugInfo
//// [0x00020102] 
//// Parameters infos:
//// class UDebugDrawer*            Drawer                         ( CPF_Parm )
//
//void UDynamicValue_X::PrintDebugInfo ( class UDebugDrawer* Drawer )
//{
//	static UFunction* pFnPrintDebugInfo = NULL;
//
//	if ( ! pFnPrintDebugInfo )
//		pFnPrintDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 58833 ];
//
//	UDynamicValue_X_execPrintDebugInfo_Parms PrintDebugInfo_Parms;
//	PrintDebugInfo_Parms.Drawer = Drawer;
//
//	this->ProcessEvent ( pFnPrintDebugInfo, &PrintDebugInfo_Parms, NULL );
//};
//
//// Function ProjectX.DynamicValue_X.GetDebugValue
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UDynamicValue_X::GetDebugValue ( )
//{
//	static UFunction* pFnGetDebugValue = NULL;
//
//	if ( ! pFnGetDebugValue )
//		pFnGetDebugValue = (UFunction*) UObject::GObjObjects()->Data[ 58831 ];
//
//	UDynamicValue_X_execGetDebugValue_Parms GetDebugValue_Parms;
//
//	this->ProcessEvent ( pFnGetDebugValue, &GetDebugValue_Parms, NULL );
//
//	return GetDebugValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValue_X.GetValue
//// [0x00020002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UDynamicValue_X::GetValue ( )
//{
//	static UFunction* pFnGetValue = NULL;
//
//	if ( ! pFnGetValue )
//		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 58829 ];
//
//	UDynamicValue_X_execGetValue_Parms GetValue_Parms;
//
//	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );
//
//	return GetValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValue_X.Tick
//// [0x00020002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UDynamicValue_X::Tick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58820 ];
//
//	UDynamicValue_X_execTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.DynamicValue_X.RemoveModifier
//// [0x00020002] 
//// Parameters infos:
//// class UDynamicValueModifier_X* Mod                            ( CPF_Parm )
//
//void UDynamicValue_X::RemoveModifier ( class UDynamicValueModifier_X* Mod )
//{
//	static UFunction* pFnRemoveModifier = NULL;
//
//	if ( ! pFnRemoveModifier )
//		pFnRemoveModifier = (UFunction*) UObject::GObjObjects()->Data[ 58818 ];
//
//	UDynamicValue_X_execRemoveModifier_Parms RemoveModifier_Parms;
//	RemoveModifier_Parms.Mod = Mod;
//
//	this->ProcessEvent ( pFnRemoveModifier, &RemoveModifier_Parms, NULL );
//};
//
//// Function ProjectX.DynamicValue_X.AddModifier
//// [0x00020002] 
//// Parameters infos:
//// class UDynamicValueModifier_X* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// class UDynamicValueModifier_X* Mod                            ( CPF_Parm )
//
//class UDynamicValueModifier_X* UDynamicValue_X::AddModifier ( class UDynamicValueModifier_X* Mod )
//{
//	static UFunction* pFnAddModifier = NULL;
//
//	if ( ! pFnAddModifier )
//		pFnAddModifier = (UFunction*) UObject::GObjObjects()->Data[ 58812 ];
//
//	UDynamicValue_X_execAddModifier_Parms AddModifier_Parms;
//	AddModifier_Parms.Mod = Mod;
//
//	this->ProcessEvent ( pFnAddModifier, &AddModifier_Parms, NULL );
//
//	return AddModifier_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValue_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void UDynamicValue_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 58811 ];
//
//	UDynamicValue_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//// Function ProjectX.DynamicValueModifier_X.GetDebugValue
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UDynamicValueModifier_X::GetDebugValue ( )
//{
//	static UFunction* pFnGetDebugValue = NULL;
//
//	if ( ! pFnGetDebugValue )
//		pFnGetDebugValue = (UFunction*) UObject::GObjObjects()->Data[ 58842 ];
//
//	UDynamicValueModifier_X_execGetDebugValue_Parms GetDebugValue_Parms;
//
//	this->ProcessEvent ( pFnGetDebugValue, &GetDebugValue_Parms, NULL );
//
//	return GetDebugValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifier_X.GetDebugString
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UDynamicValueModifier_X::GetDebugString ( )
//{
//	static UFunction* pFnGetDebugString = NULL;
//
//	if ( ! pFnGetDebugString )
//		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 58837 ];
//
//	UDynamicValueModifier_X_execGetDebugString_Parms GetDebugString_Parms;
//
//	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );
//
//	return GetDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifier_X.Expired
//// [0x00020000] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UDynamicValueModifier_X::Expired ( )
//{
//	static UFunction* pFnExpired = NULL;
//
//	if ( ! pFnExpired )
//		pFnExpired = (UFunction*) UObject::GObjObjects()->Data[ 58824 ];
//
//	UDynamicValueModifier_X_execExpired_Parms Expired_Parms;
//
//	this->ProcessEvent ( pFnExpired, &Expired_Parms, NULL );
//
//	return Expired_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifier_X.GetValue
//// [0x00020000] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UDynamicValueModifier_X::GetValue ( )
//{
//	static UFunction* pFnGetValue = NULL;
//
//	if ( ! pFnGetValue )
//		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 58827 ];
//
//	UDynamicValueModifier_X_execGetValue_Parms GetValue_Parms;
//
//	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );
//
//	return GetValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifier_X.Tick
//// [0x00020000] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UDynamicValueModifier_X::Tick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58840 ];
//
//	UDynamicValueModifier_X_execTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.DynamicValueModifierCurve_X.GetDebugValue
//// [0x00080002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UDynamicValueModifierCurve_X::GetDebugValue ( )
//{
//	static UFunction* pFnGetDebugValue = NULL;
//
//	if ( ! pFnGetDebugValue )
//		pFnGetDebugValue = (UFunction*) UObject::GObjObjects()->Data[ 58852 ];
//
//	UDynamicValueModifierCurve_X_execGetDebugValue_Parms GetDebugValue_Parms;
//
//	this->ProcessEvent ( pFnGetDebugValue, &GetDebugValue_Parms, NULL );
//
//	return GetDebugValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifierCurve_X.GetValue
//// [0x00020002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UDynamicValueModifierCurve_X::GetValue ( )
//{
//	static UFunction* pFnGetValue = NULL;
//
//	if ( ! pFnGetValue )
//		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 58850 ];
//
//	UDynamicValueModifierCurve_X_execGetValue_Parms GetValue_Parms;
//
//	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );
//
//	return GetValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifierCurve_X.GetValueDelegate
//// [0x00120000] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UDynamicValueModifierCurve_X::GetValueDelegate ( )
//{
//	static UFunction* pFnGetValueDelegate = NULL;
//
//	if ( ! pFnGetValueDelegate )
//		pFnGetValueDelegate = (UFunction*) UObject::GObjObjects()->Data[ 58847 ];
//
//	UDynamicValueModifierCurve_X_execGetValueDelegate_Parms GetValueDelegate_Parms;
//
//	this->ProcessEvent ( pFnGetValueDelegate, &GetValueDelegate_Parms, NULL );
//
//	return GetValueDelegate_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifierDuration_X.GetDebugString
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString UDynamicValueModifierDuration_X::GetDebugString ( )
//{
//	static UFunction* pFnGetDebugString = NULL;
//
//	if ( ! pFnGetDebugString )
//		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 58866 ];
//
//	UDynamicValueModifierDuration_X_execGetDebugString_Parms GetDebugString_Parms;
//
//	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );
//
//	return GetDebugString_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifierDuration_X.GetValue
//// [0x00020002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float UDynamicValueModifierDuration_X::GetValue ( )
//{
//	static UFunction* pFnGetValue = NULL;
//
//	if ( ! pFnGetValue )
//		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 58864 ];
//
//	UDynamicValueModifierDuration_X_execGetValue_Parms GetValue_Parms;
//
//	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );
//
//	return GetValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifierDuration_X.Expired
//// [0x00020002] 
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool UDynamicValueModifierDuration_X::Expired ( )
//{
//	static UFunction* pFnExpired = NULL;
//
//	if ( ! pFnExpired )
//		pFnExpired = (UFunction*) UObject::GObjObjects()->Data[ 58862 ];
//
//	UDynamicValueModifierDuration_X_execExpired_Parms Expired_Parms;
//
//	this->ProcessEvent ( pFnExpired, &Expired_Parms, NULL );
//
//	return Expired_Parms.ReturnValue;
//};
//
//// Function ProjectX.DynamicValueModifierDuration_X.Tick
//// [0x00020002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void UDynamicValueModifierDuration_X::Tick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58860 ];
//
//	UDynamicValueModifierDuration_X_execTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageManifest_X.GetChecksum
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Category                       ( CPF_Parm )
//
//int UOnlinePlayerStorageManifest_X::GetChecksum ( struct FName Category )
//{
//	static UFunction* pFnGetChecksum = NULL;
//
//	if ( ! pFnGetChecksum )
//		pFnGetChecksum = (UFunction*) UObject::GObjObjects()->Data[ 58903 ];
//
//	UOnlinePlayerStorageManifest_X_execGetChecksum_Parms GetChecksum_Parms;
//	memcpy ( &GetChecksum_Parms.Category, &Category, 0x8 );
//
//	this->ProcessEvent ( pFnGetChecksum, &GetChecksum_Parms, NULL );
//
//	return GetChecksum_Parms.ReturnValue;
//};
//
//// Function ProjectX.OnlinePlayerStorageManifest_X.SetChecksum
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// struct FName                   Category                       ( CPF_Parm )
//// int                            Checksum                       ( CPF_Parm )
//
//void UOnlinePlayerStorageManifest_X::SetChecksum ( struct FName Category, int Checksum )
//{
//	static UFunction* pFnSetChecksum = NULL;
//
//	if ( ! pFnSetChecksum )
//		pFnSetChecksum = (UFunction*) UObject::GObjObjects()->Data[ 58900 ];
//
//	UOnlinePlayerStorageManifest_X_execSetChecksum_Parms SetChecksum_Parms;
//	memcpy ( &SetChecksum_Parms.Category, &Category, 0x8 );
//	SetChecksum_Parms.Checksum = Checksum;
//
//	this->ProcessEvent ( pFnSetChecksum, &SetChecksum_Parms, NULL );
//};
//
//// Function ProjectX.OnlinePlayerStorageManifest_X.GetIndex
//// [0x00040003] ( FUNC_Final )
//// Parameters infos:
//// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//// struct FName                   Category                       ( CPF_Parm )
//
//int UOnlinePlayerStorageManifest_X::GetIndex ( struct FName Category )
//{
//	static UFunction* pFnGetIndex = NULL;
//
//	if ( ! pFnGetIndex )
//		pFnGetIndex = (UFunction*) UObject::GObjObjects()->Data[ 58896 ];
//
//	UOnlinePlayerStorageManifest_X_execGetIndex_Parms GetIndex_Parms;
//	memcpy ( &GetIndex_Parms.Category, &Category, 0x8 );
//
//	this->ProcessEvent ( pFnGetIndex, &GetIndex_Parms, NULL );
//
//	return GetIndex_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PlayerStorageSet_X.GetResponseObject
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UObject* URPC_PlayerStorageSet_X::eventGetResponseObject ( )
//{
//	static UFunction* pFnGetResponseObject = NULL;
//
//	if ( ! pFnGetResponseObject )
//		pFnGetResponseObject = (UFunction*) UObject::GObjObjects()->Data[ 59069 ];
//
//	URPC_PlayerStorageSet_X_eventGetResponseObject_Parms GetResponseObject_Parms;
//
//	this->ProcessEvent ( pFnGetResponseObject, &GetResponseObject_Parms, NULL );
//
//	return GetResponseObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.SaveLock_X.StaticAllowSave
//// [0x00022003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool USaveLock_X::StaticAllowSave ( )
//{
//	static UFunction* pFnStaticAllowSave = NULL;
//
//	if ( ! pFnStaticAllowSave )
//		pFnStaticAllowSave = (UFunction*) UObject::GObjObjects()->Data[ 58933 ];
//
//	USaveLock_X_execStaticAllowSave_Parms StaticAllowSave_Parms;
//
//	this->ProcessEvent ( pFnStaticAllowSave, &StaticAllowSave_Parms, NULL );
//
//	return StaticAllowSave_Parms.ReturnValue;
//};
//
//// Function ProjectX.SaveLock_X.AllowSave
//// [0x00020003] ( FUNC_Final )
//// Parameters infos:
//// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//bool USaveLock_X::AllowSave ( )
//{
//	static UFunction* pFnAllowSave = NULL;
//
//	if ( ! pFnAllowSave )
//		pFnAllowSave = (UFunction*) UObject::GObjObjects()->Data[ 59073 ];
//
//	USaveLock_X_execAllowSave_Parms AllowSave_Parms;
//
//	this->ProcessEvent ( pFnAllowSave, &AllowSave_Parms, NULL );
//
//	return AllowSave_Parms.ReturnValue;
//};
//
//// Function ProjectX.RPC_PlayerStorageGet_X.GetResponseObject
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//class UObject* URPC_PlayerStorageGet_X::eventGetResponseObject ( )
//{
//	static UFunction* pFnGetResponseObject = NULL;
//
//	if ( ! pFnGetResponseObject )
//		pFnGetResponseObject = (UFunction*) UObject::GObjObjects()->Data[ 59065 ];
//
//	URPC_PlayerStorageGet_X_eventGetResponseObject_Parms GetResponseObject_Parms;
//
//	this->ProcessEvent ( pFnGetResponseObject, &GetResponseObject_Parms, NULL );
//
//	return GetResponseObject_Parms.ReturnValue;
//};
//
//// Function ProjectX.SmoothDynamicValue_X.GetDebugValue
//// [0x00020002] 
//// Parameters infos:
//// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
//
//struct FString USmoothDynamicValue_X::GetDebugValue ( )
//{
//	static UFunction* pFnGetDebugValue = NULL;
//
//	if ( ! pFnGetDebugValue )
//		pFnGetDebugValue = (UFunction*) UObject::GObjObjects()->Data[ 59089 ];
//
//	USmoothDynamicValue_X_execGetDebugValue_Parms GetDebugValue_Parms;
//
//	this->ProcessEvent ( pFnGetDebugValue, &GetDebugValue_Parms, NULL );
//
//	return GetDebugValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.SmoothDynamicValue_X.GetValue
//// [0x00020002] 
//// Parameters infos:
//// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
//
//float USmoothDynamicValue_X::GetValue ( )
//{
//	static UFunction* pFnGetValue = NULL;
//
//	if ( ! pFnGetValue )
//		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 59087 ];
//
//	USmoothDynamicValue_X_execGetValue_Parms GetValue_Parms;
//
//	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );
//
//	return GetValue_Parms.ReturnValue;
//};
//
//// Function ProjectX.SmoothDynamicValue_X.Tick
//// [0x00020002] 
//// Parameters infos:
//// float                          DeltaTime                      ( CPF_Parm )
//
//void USmoothDynamicValue_X::Tick ( float DeltaTime )
//{
//	static UFunction* pFnTick = NULL;
//
//	if ( ! pFnTick )
//		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59085 ];
//
//	USmoothDynamicValue_X_execTick_Parms Tick_Parms;
//	Tick_Parms.DeltaTime = DeltaTime;
//
//	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
//};
//
//// Function ProjectX.SmoothDynamicValue_X.Construct
//// [0x00020802] ( FUNC_Event )
//// Parameters infos:
//
//void USmoothDynamicValue_X::eventConstruct ( )
//{
//	static UFunction* pFnConstruct = NULL;
//
//	if ( ! pFnConstruct )
//		pFnConstruct = (UFunction*) UObject::GObjObjects()->Data[ 59084 ];
//
//	USmoothDynamicValue_X_eventConstruct_Parms Construct_Parms;
//
//	this->ProcessEvent ( pFnConstruct, &Construct_Parms, NULL );
//};
//
//
//#ifdef _MSC_VER
//	#pragma pack ( pop )
//#endif